Search.setIndex({"docnames": ["_examples/01_python", "_examples/01_python/01", "_examples/01_python/02", "_examples/01_python/03", "_examples/01_python/04", "_examples/01_python/05", "_examples/02_ghpython", "_examples/02_ghpython/bridge_2d", "_examples/02_ghpython/bridge_3d", "_examples/02_ghpython/dome", "_examples/02_ghpython/jessen", "_examples/02_ghpython/spiral", "api", "api/compas_cem", "api/compas_cem.diagrams", "api/compas_cem.elements", "api/compas_cem.equilibrium", "api/compas_cem.loads", "api/compas_cem.optimization", "api/compas_cem.plotters", "api/compas_cem.supports", "api/compas_cem.viewers", "api/generated/compas_cem.diagrams.FormDiagram", "api/generated/compas_cem.diagrams.FormDiagram.add_edge", "api/generated/compas_cem.diagrams.FormDiagram.add_node", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.clear", "api/generated/compas_cem.diagrams.FormDiagram.complement", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.copy", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings", "api/generated/compas_cem.diagrams.FormDiagram.degree", "api/generated/compas_cem.diagrams.FormDiagram.degree_in", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.degree_out", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge", "api/generated/compas_cem.diagrams.FormDiagram.delete_node", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction", "api/generated/compas_cem.diagrams.FormDiagram.edge_force", "api/generated/compas_cem.diagrams.FormDiagram.edge_length", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.FormDiagram.edge_point", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector", "api/generated/compas_cem.diagrams.FormDiagram.edges", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edges_where", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles", "api/generated/compas_cem.diagrams.FormDiagram.from_data", "api/generated/compas_cem.diagrams.FormDiagram.from_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_json", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.from_lines", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_obj", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.FormDiagram.gkey", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key", "api/generated/compas_cem.diagrams.FormDiagram.has_edge", "api/generated/compas_cem.diagrams.FormDiagram.has_node", "api/generated/compas_cem.diagrams.FormDiagram.index_key", "api/generated/compas_cem.diagrams.FormDiagram.index_uv", "api/generated/compas_cem.diagrams.FormDiagram.is_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support", "api/generated/compas_cem.diagrams.FormDiagram.is_planar", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.is_xy", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey", "api/generated/compas_cem.diagrams.FormDiagram.key_index", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.leaves", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood", "api/generated/compas_cem.diagrams.FormDiagram.neighbors", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.node_exists", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey", "api/generated/compas_cem.diagrams.FormDiagram.node_key", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian", "api/generated/compas_cem.diagrams.FormDiagram.node_load", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.FormDiagram.node_sample", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.nodes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path", "api/generated/compas_cem.diagrams.FormDiagram.smooth", "api/generated/compas_cem.diagrams.FormDiagram.split_edge", "api/generated/compas_cem.diagrams.FormDiagram.summary", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.to_data", "api/generated/compas_cem.diagrams.FormDiagram.to_json", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.to_lines", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.to_obj", "api/generated/compas_cem.diagrams.FormDiagram.to_points", "api/generated/compas_cem.diagrams.FormDiagram.transform", "api/generated/compas_cem.diagrams.FormDiagram.transformed", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.update_dea", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_dna", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.uv_index", "api/generated/compas_cem.diagrams.FormDiagram.validate_data", "api/generated/compas_cem.diagrams.FormDiagram.validate_json", "api/generated/compas_cem.diagrams.TopologyDiagram", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.clear", "api/generated/compas_cem.diagrams.TopologyDiagram.complement", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.copy", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.degree", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector", "api/generated/compas_cem.diagrams.TopologyDiagram.edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_max", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.summary", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.trails", "api/generated/compas_cem.diagrams.TopologyDiagram.transform", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json", "api/generated/compas_cem.elements.DeviationEdge", "api/generated/compas_cem.elements.DeviationEdge.copy", "api/generated/compas_cem.elements.DeviationEdge.from_data", "api/generated/compas_cem.elements.DeviationEdge.from_json", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.from_line", "api/generated/compas_cem.elements.DeviationEdge.to_data", "api/generated/compas_cem.elements.DeviationEdge.to_json", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.validate_data", "api/generated/compas_cem.elements.DeviationEdge.validate_json", "api/generated/compas_cem.elements.Node", "api/generated/compas_cem.elements.Node.copy", "api/generated/compas_cem.elements.Node.from_data", "api/generated/compas_cem.elements.Node.from_json", "api/generated/compas_cem.elements.Node.from_jsonstring", "api/generated/compas_cem.elements.Node.from_point", "api/generated/compas_cem.elements.Node.to_data", "api/generated/compas_cem.elements.Node.to_json", "api/generated/compas_cem.elements.Node.to_jsonstring", "api/generated/compas_cem.elements.Node.validate_data", "api/generated/compas_cem.elements.Node.validate_json", "api/generated/compas_cem.elements.TrailEdge", "api/generated/compas_cem.elements.TrailEdge.copy", "api/generated/compas_cem.elements.TrailEdge.from_data", "api/generated/compas_cem.elements.TrailEdge.from_json", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring", "api/generated/compas_cem.elements.TrailEdge.from_line", "api/generated/compas_cem.elements.TrailEdge.to_data", "api/generated/compas_cem.elements.TrailEdge.to_json", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring", "api/generated/compas_cem.elements.TrailEdge.validate_data", "api/generated/compas_cem.elements.TrailEdge.validate_json", "api/generated/compas_cem.equilibrium.static_equilibrium", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy", "api/generated/compas_cem.loads.NodeLoad", "api/generated/compas_cem.loads.NodeLoad.copy", "api/generated/compas_cem.loads.NodeLoad.from_data", "api/generated/compas_cem.loads.NodeLoad.from_json", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector", "api/generated/compas_cem.loads.NodeLoad.to_data", "api/generated/compas_cem.loads.NodeLoad.to_json", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring", "api/generated/compas_cem.loads.NodeLoad.validate_data", "api/generated/compas_cem.loads.NodeLoad.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json", "api/generated/compas_cem.optimization.LineConstraint", "api/generated/compas_cem.optimization.LineConstraint.copy", "api/generated/compas_cem.optimization.LineConstraint.from_data", "api/generated/compas_cem.optimization.LineConstraint.from_json", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.key", "api/generated/compas_cem.optimization.LineConstraint.penalty", "api/generated/compas_cem.optimization.LineConstraint.reference", "api/generated/compas_cem.optimization.LineConstraint.target", "api/generated/compas_cem.optimization.LineConstraint.to_data", "api/generated/compas_cem.optimization.LineConstraint.to_json", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.validate_data", "api/generated/compas_cem.optimization.LineConstraint.validate_json", "api/generated/compas_cem.optimization.Optimizer", "api/generated/compas_cem.optimization.Optimizer.add_constraint", "api/generated/compas_cem.optimization.Optimizer.add_parameter", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity", "api/generated/compas_cem.optimization.Optimizer.copy", "api/generated/compas_cem.optimization.Optimizer.from_data", "api/generated/compas_cem.optimization.Optimizer.from_json", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring", "api/generated/compas_cem.optimization.Optimizer.gradient_func", "api/generated/compas_cem.optimization.Optimizer.index_parameter", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters", "api/generated/compas_cem.optimization.Optimizer.objective_func", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters", "api/generated/compas_cem.optimization.Optimizer.parameter_index", "api/generated/compas_cem.optimization.Optimizer.remove_constraint", "api/generated/compas_cem.optimization.Optimizer.remove_parameter", "api/generated/compas_cem.optimization.Optimizer.solve_nlopt", "api/generated/compas_cem.optimization.Optimizer.to_data", "api/generated/compas_cem.optimization.Optimizer.to_json", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring", "api/generated/compas_cem.optimization.Optimizer.validate_data", "api/generated/compas_cem.optimization.Optimizer.validate_json", "api/generated/compas_cem.optimization.OriginNodeXParameter", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.key", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeYParameter", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.key", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeZParameter", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.key", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json", "api/generated/compas_cem.optimization.PlaneConstraint", "api/generated/compas_cem.optimization.PlaneConstraint.copy", "api/generated/compas_cem.optimization.PlaneConstraint.from_data", "api/generated/compas_cem.optimization.PlaneConstraint.from_json", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.key", "api/generated/compas_cem.optimization.PlaneConstraint.penalty", "api/generated/compas_cem.optimization.PlaneConstraint.reference", "api/generated/compas_cem.optimization.PlaneConstraint.target", "api/generated/compas_cem.optimization.PlaneConstraint.to_data", "api/generated/compas_cem.optimization.PlaneConstraint.to_json", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json", "api/generated/compas_cem.optimization.PointConstraint", "api/generated/compas_cem.optimization.PointConstraint.copy", "api/generated/compas_cem.optimization.PointConstraint.from_data", "api/generated/compas_cem.optimization.PointConstraint.from_json", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.key", "api/generated/compas_cem.optimization.PointConstraint.penalty", "api/generated/compas_cem.optimization.PointConstraint.reference", "api/generated/compas_cem.optimization.PointConstraint.target", "api/generated/compas_cem.optimization.PointConstraint.to_data", "api/generated/compas_cem.optimization.PointConstraint.to_json", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.validate_data", "api/generated/compas_cem.optimization.PointConstraint.validate_json", "api/generated/compas_cem.optimization.ReactionForceConstraint", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.key", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference", "api/generated/compas_cem.optimization.ReactionForceConstraint.target", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeParameter", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.key", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json", "api/generated/compas_cem.optimization.solve_nlopt_proxy", "api/generated/compas_cem.plotters.FormArtist", "api/generated/compas_cem.plotters.FormArtist.build", "api/generated/compas_cem.plotters.FormArtist.build_as", "api/generated/compas_cem.plotters.FormArtist.clear", "api/generated/compas_cem.plotters.FormArtist.clear_edges", "api/generated/compas_cem.plotters.FormArtist.clear_nodes", "api/generated/compas_cem.plotters.FormArtist.draw", "api/generated/compas_cem.plotters.FormArtist.draw_collection", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels", "api/generated/compas_cem.plotters.FormArtist.draw_edges", "api/generated/compas_cem.plotters.FormArtist.draw_loads", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels", "api/generated/compas_cem.plotters.FormArtist.draw_nodes", "api/generated/compas_cem.plotters.FormArtist.draw_reactions", "api/generated/compas_cem.plotters.FormArtist.redraw", "api/generated/compas_cem.plotters.FormArtist.register", "api/generated/compas_cem.plotters.FormArtist.update_data", "api/generated/compas_cem.plotters.FormArtist.viewbox", "api/generated/compas_cem.plotters.Plotter", "api/generated/compas_cem.plotters.Plotter.add", "api/generated/compas_cem.plotters.Plotter.add_from_list", "api/generated/compas_cem.plotters.Plotter.draw", "api/generated/compas_cem.plotters.Plotter.find", "api/generated/compas_cem.plotters.Plotter.on", "api/generated/compas_cem.plotters.Plotter.pause", "api/generated/compas_cem.plotters.Plotter.redraw", "api/generated/compas_cem.plotters.Plotter.register_listener", "api/generated/compas_cem.plotters.Plotter.save", "api/generated/compas_cem.plotters.Plotter.show", "api/generated/compas_cem.plotters.Plotter.zoom_extents", "api/generated/compas_cem.plotters.TopologyArtist", "api/generated/compas_cem.plotters.TopologyArtist.build", "api/generated/compas_cem.plotters.TopologyArtist.build_as", "api/generated/compas_cem.plotters.TopologyArtist.clear", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes", "api/generated/compas_cem.plotters.TopologyArtist.draw", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes", "api/generated/compas_cem.plotters.TopologyArtist.redraw", "api/generated/compas_cem.plotters.TopologyArtist.register", "api/generated/compas_cem.plotters.TopologyArtist.update_data", "api/generated/compas_cem.plotters.TopologyArtist.viewbox", "api/generated/compas_cem.supports.NodeSupport", "api/generated/compas_cem.supports.NodeSupport.copy", "api/generated/compas_cem.supports.NodeSupport.from_data", "api/generated/compas_cem.supports.NodeSupport.from_json", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring", "api/generated/compas_cem.supports.NodeSupport.from_point", "api/generated/compas_cem.supports.NodeSupport.to_data", "api/generated/compas_cem.supports.NodeSupport.to_json", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring", "api/generated/compas_cem.supports.NodeSupport.validate_data", "api/generated/compas_cem.supports.NodeSupport.validate_json", "changelog", "citing", "examples", "index", "installation", "license"], "filenames": ["_examples/01_python.rst", "_examples/01_python/01.rst", "_examples/01_python/02.rst", "_examples/01_python/03.rst", "_examples/01_python/04.rst", "_examples/01_python/05.rst", "_examples/02_ghpython.rst", "_examples/02_ghpython/bridge_2d.rst", "_examples/02_ghpython/bridge_3d.rst", "_examples/02_ghpython/dome.rst", "_examples/02_ghpython/jessen.rst", "_examples/02_ghpython/spiral.rst", "api.rst", "api/compas_cem.rst", "api/compas_cem.diagrams.rst", "api/compas_cem.elements.rst", "api/compas_cem.equilibrium.rst", "api/compas_cem.loads.rst", "api/compas_cem.optimization.rst", "api/compas_cem.plotters.rst", "api/compas_cem.supports.rst", "api/compas_cem.viewers.rst", "api/generated/compas_cem.diagrams.FormDiagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.clear.rst", "api/generated/compas_cem.diagrams.FormDiagram.complement.rst", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.copy.rst", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.leaves.rst", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_load.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.FormDiagram.smooth.rst", "api/generated/compas_cem.diagrams.FormDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.summary.rst", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_points.rst", "api/generated/compas_cem.diagrams.FormDiagram.transform.rst", "api/generated/compas_cem.diagrams.FormDiagram.transformed.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.clear.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.complement.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.copy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_max.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.summary.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transform.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json.rst", "api/generated/compas_cem.elements.DeviationEdge.rst", "api/generated/compas_cem.elements.DeviationEdge.copy.rst", "api/generated/compas_cem.elements.DeviationEdge.from_data.rst", "api/generated/compas_cem.elements.DeviationEdge.from_json.rst", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.from_line.rst", "api/generated/compas_cem.elements.DeviationEdge.to_data.rst", "api/generated/compas_cem.elements.DeviationEdge.to_json.rst", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_data.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_json.rst", "api/generated/compas_cem.elements.Node.rst", "api/generated/compas_cem.elements.Node.copy.rst", "api/generated/compas_cem.elements.Node.from_data.rst", "api/generated/compas_cem.elements.Node.from_json.rst", "api/generated/compas_cem.elements.Node.from_jsonstring.rst", "api/generated/compas_cem.elements.Node.from_point.rst", "api/generated/compas_cem.elements.Node.to_data.rst", "api/generated/compas_cem.elements.Node.to_json.rst", "api/generated/compas_cem.elements.Node.to_jsonstring.rst", "api/generated/compas_cem.elements.Node.validate_data.rst", "api/generated/compas_cem.elements.Node.validate_json.rst", "api/generated/compas_cem.elements.TrailEdge.rst", "api/generated/compas_cem.elements.TrailEdge.copy.rst", "api/generated/compas_cem.elements.TrailEdge.from_data.rst", "api/generated/compas_cem.elements.TrailEdge.from_json.rst", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.from_line.rst", "api/generated/compas_cem.elements.TrailEdge.to_data.rst", "api/generated/compas_cem.elements.TrailEdge.to_json.rst", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.validate_data.rst", "api/generated/compas_cem.elements.TrailEdge.validate_json.rst", "api/generated/compas_cem.equilibrium.static_equilibrium.rst", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy.rst", "api/generated/compas_cem.loads.NodeLoad.rst", "api/generated/compas_cem.loads.NodeLoad.copy.rst", "api/generated/compas_cem.loads.NodeLoad.from_data.rst", "api/generated/compas_cem.loads.NodeLoad.from_json.rst", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector.rst", "api/generated/compas_cem.loads.NodeLoad.to_data.rst", "api/generated/compas_cem.loads.NodeLoad.to_json.rst", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.validate_data.rst", "api/generated/compas_cem.loads.NodeLoad.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.LineConstraint.rst", "api/generated/compas_cem.optimization.LineConstraint.copy.rst", "api/generated/compas_cem.optimization.LineConstraint.from_data.rst", "api/generated/compas_cem.optimization.LineConstraint.from_json.rst", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.key.rst", "api/generated/compas_cem.optimization.LineConstraint.penalty.rst", "api/generated/compas_cem.optimization.LineConstraint.reference.rst", "api/generated/compas_cem.optimization.LineConstraint.target.rst", "api/generated/compas_cem.optimization.LineConstraint.to_data.rst", "api/generated/compas_cem.optimization.LineConstraint.to_json.rst", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_data.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_json.rst", "api/generated/compas_cem.optimization.Optimizer.rst", "api/generated/compas_cem.optimization.Optimizer.add_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.add_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity.rst", "api/generated/compas_cem.optimization.Optimizer.copy.rst", "api/generated/compas_cem.optimization.Optimizer.from_data.rst", "api/generated/compas_cem.optimization.Optimizer.from_json.rst", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.gradient_func.rst", "api/generated/compas_cem.optimization.Optimizer.index_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.objective_func.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.parameter_index.rst", "api/generated/compas_cem.optimization.Optimizer.remove_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.remove_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.solve_nlopt.rst", "api/generated/compas_cem.optimization.Optimizer.to_data.rst", "api/generated/compas_cem.optimization.Optimizer.to_json.rst", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.validate_data.rst", "api/generated/compas_cem.optimization.Optimizer.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.rst", "api/generated/compas_cem.optimization.PlaneConstraint.copy.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.key.rst", "api/generated/compas_cem.optimization.PlaneConstraint.penalty.rst", "api/generated/compas_cem.optimization.PlaneConstraint.reference.rst", "api/generated/compas_cem.optimization.PlaneConstraint.target.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json.rst", "api/generated/compas_cem.optimization.PointConstraint.rst", "api/generated/compas_cem.optimization.PointConstraint.copy.rst", "api/generated/compas_cem.optimization.PointConstraint.from_data.rst", "api/generated/compas_cem.optimization.PointConstraint.from_json.rst", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.key.rst", "api/generated/compas_cem.optimization.PointConstraint.penalty.rst", "api/generated/compas_cem.optimization.PointConstraint.reference.rst", "api/generated/compas_cem.optimization.PointConstraint.target.rst", "api/generated/compas_cem.optimization.PointConstraint.to_data.rst", "api/generated/compas_cem.optimization.PointConstraint.to_json.rst", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.key.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.target.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.key.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.solve_nlopt_proxy.rst", "api/generated/compas_cem.plotters.FormArtist.rst", "api/generated/compas_cem.plotters.FormArtist.build.rst", "api/generated/compas_cem.plotters.FormArtist.build_as.rst", "api/generated/compas_cem.plotters.FormArtist.clear.rst", "api/generated/compas_cem.plotters.FormArtist.clear_edges.rst", "api/generated/compas_cem.plotters.FormArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw.rst", "api/generated/compas_cem.plotters.FormArtist.draw_collection.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edges.rst", "api/generated/compas_cem.plotters.FormArtist.draw_loads.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw_reactions.rst", "api/generated/compas_cem.plotters.FormArtist.redraw.rst", "api/generated/compas_cem.plotters.FormArtist.register.rst", "api/generated/compas_cem.plotters.FormArtist.update_data.rst", "api/generated/compas_cem.plotters.FormArtist.viewbox.rst", "api/generated/compas_cem.plotters.Plotter.rst", "api/generated/compas_cem.plotters.Plotter.add.rst", "api/generated/compas_cem.plotters.Plotter.add_from_list.rst", "api/generated/compas_cem.plotters.Plotter.draw.rst", "api/generated/compas_cem.plotters.Plotter.find.rst", "api/generated/compas_cem.plotters.Plotter.on.rst", "api/generated/compas_cem.plotters.Plotter.pause.rst", "api/generated/compas_cem.plotters.Plotter.redraw.rst", "api/generated/compas_cem.plotters.Plotter.register_listener.rst", "api/generated/compas_cem.plotters.Plotter.save.rst", "api/generated/compas_cem.plotters.Plotter.show.rst", "api/generated/compas_cem.plotters.Plotter.zoom_extents.rst", "api/generated/compas_cem.plotters.TopologyArtist.rst", "api/generated/compas_cem.plotters.TopologyArtist.build.rst", "api/generated/compas_cem.plotters.TopologyArtist.build_as.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.redraw.rst", "api/generated/compas_cem.plotters.TopologyArtist.register.rst", "api/generated/compas_cem.plotters.TopologyArtist.update_data.rst", "api/generated/compas_cem.plotters.TopologyArtist.viewbox.rst", "api/generated/compas_cem.supports.NodeSupport.rst", "api/generated/compas_cem.supports.NodeSupport.copy.rst", "api/generated/compas_cem.supports.NodeSupport.from_data.rst", "api/generated/compas_cem.supports.NodeSupport.from_json.rst", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.from_point.rst", "api/generated/compas_cem.supports.NodeSupport.to_data.rst", "api/generated/compas_cem.supports.NodeSupport.to_json.rst", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.validate_data.rst", "api/generated/compas_cem.supports.NodeSupport.validate_json.rst", "changelog.rst", "citing.rst", "examples.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["Python", "01. Simple Compression Structure", "02. Braced Tower in 2D", "03. Bridge Optimization in 2D", "04. Tree Structure in 2D", "05. Planar Tensegrity Wheel", "Grasshopper", "A. Bridge in 2D", "B. Tubular Bridge in 3D", "C. Circular Dome", "D. Jessen Tensegrity", "E. Spiral Staircase", "API Reference", "compas_cem", "compas_cem.diagrams", "compas_cem.elements", "compas_cem.equilibrium", "compas_cem.loads", "compas_cem.optimization", "compas_cem.plotters", "compas_cem.supports", "compas_cem.viewers", "FormDiagram", "FormDiagram.add_edge", "FormDiagram.add_node", "FormDiagram.adjacency_matrix", "FormDiagram.clear", "FormDiagram.complement", "FormDiagram.connected_edges", "FormDiagram.connectivity_matrix", "FormDiagram.copy", "FormDiagram.count_crossings", "FormDiagram.degree", "FormDiagram.degree_in", "FormDiagram.degree_matrix", "FormDiagram.degree_out", "FormDiagram.delete_edge", "FormDiagram.delete_node", "FormDiagram.edge_attribute", "FormDiagram.edge_attributes", "FormDiagram.edge_coordinates", "FormDiagram.edge_direction", "FormDiagram.edge_force", "FormDiagram.edge_length", "FormDiagram.edge_length_2", "FormDiagram.edge_midpoint", "FormDiagram.edge_point", "FormDiagram.edge_sample", "FormDiagram.edge_vector", "FormDiagram.edges", "FormDiagram.edges_attribute", "FormDiagram.edges_attributes", "FormDiagram.edges_where", "FormDiagram.edges_where_predicate", "FormDiagram.embed_in_plane", "FormDiagram.find_crossings", "FormDiagram.find_cycles", "FormDiagram.from_data", "FormDiagram.from_edges", "FormDiagram.from_json", "FormDiagram.from_jsonstring", "FormDiagram.from_lines", "FormDiagram.from_networkx", "FormDiagram.from_nodes_and_edges", "FormDiagram.from_obj", "FormDiagram.from_pointcloud", "FormDiagram.from_topology_diagram", "FormDiagram.get_any_edge", "FormDiagram.get_any_edges", "FormDiagram.get_any_node", "FormDiagram.get_any_nodes", "FormDiagram.gkey", "FormDiagram.gkey_key", "FormDiagram.has_edge", "FormDiagram.has_node", "FormDiagram.index_key", "FormDiagram.index_uv", "FormDiagram.is_connected", "FormDiagram.is_crossed", "FormDiagram.is_leaf", "FormDiagram.is_node_connected", "FormDiagram.is_node_loaded", "FormDiagram.is_node_support", "FormDiagram.is_planar", "FormDiagram.is_planar_embedding", "FormDiagram.is_xy", "FormDiagram.key_gkey", "FormDiagram.key_index", "FormDiagram.laplacian_matrix", "FormDiagram.leaves", "FormDiagram.loaded_nodes", "FormDiagram.neighborhood", "FormDiagram.neighbors", "FormDiagram.neighbors_in", "FormDiagram.neighbors_out", "FormDiagram.network_adjacency_matrix", "FormDiagram.network_connectivity_matrix", "FormDiagram.network_degree_matrix", "FormDiagram.network_embed_in_plane", "FormDiagram.network_is_planar", "FormDiagram.network_is_planar_embedding", "FormDiagram.network_laplacian_matrix", "FormDiagram.node_attribute", "FormDiagram.node_attributes", "FormDiagram.node_coordinates", "FormDiagram.node_exists", "FormDiagram.node_gkey", "FormDiagram.node_key", "FormDiagram.node_laplacian", "FormDiagram.node_load", "FormDiagram.node_neighborhood_centroid", "FormDiagram.node_sample", "FormDiagram.node_xyz", "FormDiagram.nodes", "FormDiagram.nodes_attribute", "FormDiagram.nodes_attributes", "FormDiagram.nodes_where", "FormDiagram.nodes_where_predicate", "FormDiagram.number_of_edges", "FormDiagram.number_of_loaded_nodes", "FormDiagram.number_of_nodes", "FormDiagram.number_of_support_nodes", "FormDiagram.reaction_force", "FormDiagram.shortest_path", "FormDiagram.smooth", "FormDiagram.split_edge", "FormDiagram.summary", "FormDiagram.support_nodes", "FormDiagram.to_data", "FormDiagram.to_json", "FormDiagram.to_jsonstring", "FormDiagram.to_lines", "FormDiagram.to_networkx", "FormDiagram.to_nodes_and_edges", "FormDiagram.to_obj", "FormDiagram.to_points", "FormDiagram.transform", "FormDiagram.transformed", "FormDiagram.unset_edge_attribute", "FormDiagram.unset_node_attribute", "FormDiagram.update_dea", "FormDiagram.update_default_edge_attributes", "FormDiagram.update_default_node_attributes", "FormDiagram.update_dna", "FormDiagram.update_node_xyz", "FormDiagram.uv_index", "FormDiagram.validate_data", "FormDiagram.validate_json", "TopologyDiagram", "TopologyDiagram.add_edge", "TopologyDiagram.add_load", "TopologyDiagram.add_node", "TopologyDiagram.add_support", "TopologyDiagram.adjacency_matrix", "TopologyDiagram.auxiliary_trail_edges", "TopologyDiagram.auxiliary_trails", "TopologyDiagram.build_trails", "TopologyDiagram.clear", "TopologyDiagram.complement", "TopologyDiagram.connected_deviation_edges", "TopologyDiagram.connected_edges", "TopologyDiagram.connected_trail_edges", "TopologyDiagram.connectivity_matrix", "TopologyDiagram.copy", "TopologyDiagram.count_crossings", "TopologyDiagram.degree", "TopologyDiagram.degree_in", "TopologyDiagram.degree_matrix", "TopologyDiagram.degree_out", "TopologyDiagram.delete_edge", "TopologyDiagram.delete_node", "TopologyDiagram.deviation_edges", "TopologyDiagram.edge_attribute", "TopologyDiagram.edge_attributes", "TopologyDiagram.edge_coordinates", "TopologyDiagram.edge_direction", "TopologyDiagram.edge_force", "TopologyDiagram.edge_length", "TopologyDiagram.edge_length_2", "TopologyDiagram.edge_midpoint", "TopologyDiagram.edge_point", "TopologyDiagram.edge_sample", "TopologyDiagram.edge_sequence", "TopologyDiagram.edge_vector", "TopologyDiagram.edges", "TopologyDiagram.edges_attribute", "TopologyDiagram.edges_attributes", "TopologyDiagram.edges_where", "TopologyDiagram.edges_where_predicate", "TopologyDiagram.embed_in_plane", "TopologyDiagram.find_crossings", "TopologyDiagram.find_cycles", "TopologyDiagram.from_data", "TopologyDiagram.from_edges", "TopologyDiagram.from_json", "TopologyDiagram.from_jsonstring", "TopologyDiagram.from_lines", "TopologyDiagram.from_networkx", "TopologyDiagram.from_nodes_and_edges", "TopologyDiagram.from_obj", "TopologyDiagram.from_pointcloud", "TopologyDiagram.get_any_edge", "TopologyDiagram.get_any_edges", "TopologyDiagram.get_any_node", "TopologyDiagram.get_any_nodes", "TopologyDiagram.gkey", "TopologyDiagram.gkey_key", "TopologyDiagram.has_edge", "TopologyDiagram.has_node", "TopologyDiagram.index_key", "TopologyDiagram.index_uv", "TopologyDiagram.is_auxiliary_trail_edge", "TopologyDiagram.is_connected", "TopologyDiagram.is_crossed", "TopologyDiagram.is_deviation_edge", "TopologyDiagram.is_leaf", "TopologyDiagram.is_node_connected", "TopologyDiagram.is_node_loaded", "TopologyDiagram.is_node_origin", "TopologyDiagram.is_node_support", "TopologyDiagram.is_planar", "TopologyDiagram.is_planar_embedding", "TopologyDiagram.is_trail_edge", "TopologyDiagram.is_xy", "TopologyDiagram.key_gkey", "TopologyDiagram.key_index", "TopologyDiagram.laplacian_matrix", "TopologyDiagram.leaves", "TopologyDiagram.loaded_nodes", "TopologyDiagram.neighborhood", "TopologyDiagram.neighbors", "TopologyDiagram.neighbors_in", "TopologyDiagram.neighbors_out", "TopologyDiagram.network_adjacency_matrix", "TopologyDiagram.network_connectivity_matrix", "TopologyDiagram.network_degree_matrix", "TopologyDiagram.network_embed_in_plane", "TopologyDiagram.network_is_planar", "TopologyDiagram.network_is_planar_embedding", "TopologyDiagram.network_laplacian_matrix", "TopologyDiagram.node_attribute", "TopologyDiagram.node_attributes", "TopologyDiagram.node_coordinates", "TopologyDiagram.node_exists", "TopologyDiagram.node_gkey", "TopologyDiagram.node_key", "TopologyDiagram.node_laplacian", "TopologyDiagram.node_load", "TopologyDiagram.node_neighborhood_centroid", "TopologyDiagram.node_sample", "TopologyDiagram.node_sequence", "TopologyDiagram.node_xyz", "TopologyDiagram.nodes", "TopologyDiagram.nodes_attribute", "TopologyDiagram.nodes_attributes", "TopologyDiagram.nodes_where", "TopologyDiagram.nodes_where_predicate", "TopologyDiagram.number_of_auxiliary_trails", "TopologyDiagram.number_of_deviation_edges", "TopologyDiagram.number_of_edges", "TopologyDiagram.number_of_loaded_nodes", "TopologyDiagram.number_of_nodes", "TopologyDiagram.number_of_support_nodes", "TopologyDiagram.number_of_trail_edges", "TopologyDiagram.number_of_trails", "TopologyDiagram.origin_nodes", "TopologyDiagram.reaction_force", "TopologyDiagram.sequence_max", "TopologyDiagram.sequences", "TopologyDiagram.shortest_path", "TopologyDiagram.smooth", "TopologyDiagram.split_edge", "TopologyDiagram.summary", "TopologyDiagram.support_nodes", "TopologyDiagram.to_data", "TopologyDiagram.to_json", "TopologyDiagram.to_jsonstring", "TopologyDiagram.to_lines", "TopologyDiagram.to_networkx", "TopologyDiagram.to_nodes_and_edges", "TopologyDiagram.to_obj", "TopologyDiagram.to_points", "TopologyDiagram.trail_edges", "TopologyDiagram.trails", "TopologyDiagram.transform", "TopologyDiagram.transformed", "TopologyDiagram.unset_edge_attribute", "TopologyDiagram.unset_node_attribute", "TopologyDiagram.update_dea", "TopologyDiagram.update_default_edge_attributes", "TopologyDiagram.update_default_node_attributes", "TopologyDiagram.update_dna", "TopologyDiagram.update_node_xyz", "TopologyDiagram.uv_index", "TopologyDiagram.validate_data", "TopologyDiagram.validate_json", "DeviationEdge", "DeviationEdge.copy", "DeviationEdge.from_data", "DeviationEdge.from_json", "DeviationEdge.from_jsonstring", "DeviationEdge.from_line", "DeviationEdge.to_data", "DeviationEdge.to_json", "DeviationEdge.to_jsonstring", "DeviationEdge.validate_data", "DeviationEdge.validate_json", "Node", "Node.copy", "Node.from_data", "Node.from_json", "Node.from_jsonstring", "Node.from_point", "Node.to_data", "Node.to_json", "Node.to_jsonstring", "Node.validate_data", "Node.validate_json", "TrailEdge", "TrailEdge.copy", "TrailEdge.from_data", "TrailEdge.from_json", "TrailEdge.from_jsonstring", "TrailEdge.from_line", "TrailEdge.to_data", "TrailEdge.to_json", "TrailEdge.to_jsonstring", "TrailEdge.validate_data", "TrailEdge.validate_json", "static_equilibrium", "static_equilibrium_numpy", "NodeLoad", "NodeLoad.copy", "NodeLoad.from_data", "NodeLoad.from_json", "NodeLoad.from_jsonstring", "NodeLoad.from_point_and_vector", "NodeLoad.to_data", "NodeLoad.to_json", "NodeLoad.to_jsonstring", "NodeLoad.validate_data", "NodeLoad.validate_json", "DeviationEdgeLengthConstraint", "DeviationEdgeLengthConstraint.copy", "DeviationEdgeLengthConstraint.from_data", "DeviationEdgeLengthConstraint.from_json", "DeviationEdgeLengthConstraint.from_jsonstring", "DeviationEdgeLengthConstraint.key", "DeviationEdgeLengthConstraint.penalty", "DeviationEdgeLengthConstraint.reference", "DeviationEdgeLengthConstraint.target", "DeviationEdgeLengthConstraint.to_data", "DeviationEdgeLengthConstraint.to_json", "DeviationEdgeLengthConstraint.to_jsonstring", "DeviationEdgeLengthConstraint.validate_data", "DeviationEdgeLengthConstraint.validate_json", "DeviationEdgeParameter", "DeviationEdgeParameter.attr_name", "DeviationEdgeParameter.bound_low", "DeviationEdgeParameter.bound_up", "DeviationEdgeParameter.copy", "DeviationEdgeParameter.from_data", "DeviationEdgeParameter.from_json", "DeviationEdgeParameter.from_jsonstring", "DeviationEdgeParameter.key", "DeviationEdgeParameter.start_value", "DeviationEdgeParameter.to_data", "DeviationEdgeParameter.to_json", "DeviationEdgeParameter.to_jsonstring", "DeviationEdgeParameter.validate_data", "DeviationEdgeParameter.validate_json", "LineConstraint", "LineConstraint.copy", "LineConstraint.from_data", "LineConstraint.from_json", "LineConstraint.from_jsonstring", "LineConstraint.key", "LineConstraint.penalty", "LineConstraint.reference", "LineConstraint.target", "LineConstraint.to_data", "LineConstraint.to_json", "LineConstraint.to_jsonstring", "LineConstraint.validate_data", "LineConstraint.validate_json", "Optimizer", "Optimizer.add_constraint", "Optimizer.add_parameter", "Optimizer.check_optimization_sanity", "Optimizer.copy", "Optimizer.from_data", "Optimizer.from_json", "Optimizer.from_jsonstring", "Optimizer.gradient_func", "Optimizer.index_parameter", "Optimizer.number_of_constraints", "Optimizer.number_of_parameters", "Optimizer.objective_func", "Optimizer.optimization_bounds", "Optimizer.optimization_parameters", "Optimizer.parameter_index", "Optimizer.remove_constraint", "Optimizer.remove_parameter", "Optimizer.solve_nlopt", "Optimizer.to_data", "Optimizer.to_json", "Optimizer.to_jsonstring", "Optimizer.validate_data", "Optimizer.validate_json", "OriginNodeXParameter", "OriginNodeXParameter.attr_name", "OriginNodeXParameter.bound_low", "OriginNodeXParameter.bound_up", "OriginNodeXParameter.copy", "OriginNodeXParameter.from_data", "OriginNodeXParameter.from_json", "OriginNodeXParameter.from_jsonstring", "OriginNodeXParameter.key", "OriginNodeXParameter.start_value", "OriginNodeXParameter.to_data", "OriginNodeXParameter.to_json", "OriginNodeXParameter.to_jsonstring", "OriginNodeXParameter.validate_data", "OriginNodeXParameter.validate_json", "OriginNodeYParameter", "OriginNodeYParameter.attr_name", "OriginNodeYParameter.bound_low", "OriginNodeYParameter.bound_up", "OriginNodeYParameter.copy", "OriginNodeYParameter.from_data", "OriginNodeYParameter.from_json", "OriginNodeYParameter.from_jsonstring", "OriginNodeYParameter.key", "OriginNodeYParameter.start_value", "OriginNodeYParameter.to_data", "OriginNodeYParameter.to_json", "OriginNodeYParameter.to_jsonstring", "OriginNodeYParameter.validate_data", "OriginNodeYParameter.validate_json", "OriginNodeZParameter", "OriginNodeZParameter.attr_name", "OriginNodeZParameter.bound_low", "OriginNodeZParameter.bound_up", "OriginNodeZParameter.copy", "OriginNodeZParameter.from_data", "OriginNodeZParameter.from_json", "OriginNodeZParameter.from_jsonstring", "OriginNodeZParameter.key", "OriginNodeZParameter.start_value", "OriginNodeZParameter.to_data", "OriginNodeZParameter.to_json", "OriginNodeZParameter.to_jsonstring", "OriginNodeZParameter.validate_data", "OriginNodeZParameter.validate_json", "PlaneConstraint", "PlaneConstraint.copy", "PlaneConstraint.from_data", "PlaneConstraint.from_json", "PlaneConstraint.from_jsonstring", "PlaneConstraint.key", "PlaneConstraint.penalty", "PlaneConstraint.reference", "PlaneConstraint.target", "PlaneConstraint.to_data", "PlaneConstraint.to_json", "PlaneConstraint.to_jsonstring", "PlaneConstraint.validate_data", "PlaneConstraint.validate_json", "PointConstraint", "PointConstraint.copy", "PointConstraint.from_data", "PointConstraint.from_json", "PointConstraint.from_jsonstring", "PointConstraint.key", "PointConstraint.penalty", "PointConstraint.reference", "PointConstraint.target", "PointConstraint.to_data", "PointConstraint.to_json", "PointConstraint.to_jsonstring", "PointConstraint.validate_data", "PointConstraint.validate_json", "ReactionForceConstraint", "ReactionForceConstraint.copy", "ReactionForceConstraint.from_data", "ReactionForceConstraint.from_json", "ReactionForceConstraint.from_jsonstring", "ReactionForceConstraint.key", "ReactionForceConstraint.penalty", "ReactionForceConstraint.reference", "ReactionForceConstraint.target", "ReactionForceConstraint.to_data", "ReactionForceConstraint.to_json", "ReactionForceConstraint.to_jsonstring", "ReactionForceConstraint.validate_data", "ReactionForceConstraint.validate_json", "TrailEdgeForceConstraint", "TrailEdgeForceConstraint.copy", "TrailEdgeForceConstraint.from_data", "TrailEdgeForceConstraint.from_json", "TrailEdgeForceConstraint.from_jsonstring", "TrailEdgeForceConstraint.key", "TrailEdgeForceConstraint.penalty", "TrailEdgeForceConstraint.reference", "TrailEdgeForceConstraint.target", "TrailEdgeForceConstraint.to_data", "TrailEdgeForceConstraint.to_json", "TrailEdgeForceConstraint.to_jsonstring", "TrailEdgeForceConstraint.validate_data", "TrailEdgeForceConstraint.validate_json", "TrailEdgeParameter", "TrailEdgeParameter.attr_name", "TrailEdgeParameter.bound_low", "TrailEdgeParameter.bound_up", "TrailEdgeParameter.copy", "TrailEdgeParameter.from_data", "TrailEdgeParameter.from_json", "TrailEdgeParameter.from_jsonstring", "TrailEdgeParameter.key", "TrailEdgeParameter.start_value", "TrailEdgeParameter.to_data", "TrailEdgeParameter.to_json", "TrailEdgeParameter.to_jsonstring", "TrailEdgeParameter.validate_data", "TrailEdgeParameter.validate_json", "solve_nlopt_proxy", "FormArtist", "FormArtist.build", "FormArtist.build_as", "FormArtist.clear", "FormArtist.clear_edges", "FormArtist.clear_nodes", "FormArtist.draw", "FormArtist.draw_collection", "FormArtist.draw_edgelabels", "FormArtist.draw_edges", "FormArtist.draw_loads", "FormArtist.draw_nodelabels", "FormArtist.draw_nodes", "FormArtist.draw_reactions", "FormArtist.redraw", "FormArtist.register", "FormArtist.update_data", "FormArtist.viewbox", "Plotter", "Plotter.add", "Plotter.add_from_list", "Plotter.draw", "Plotter.find", "Plotter.on", "Plotter.pause", "Plotter.redraw", "Plotter.register_listener", "Plotter.save", "Plotter.show", "Plotter.zoom_extents", "TopologyArtist", "TopologyArtist.build", "TopologyArtist.build_as", "TopologyArtist.clear", "TopologyArtist.clear_edges", "TopologyArtist.clear_nodes", "TopologyArtist.draw", "TopologyArtist.draw_collection", "TopologyArtist.draw_edgelabels", "TopologyArtist.draw_edges", "TopologyArtist.draw_loads", "TopologyArtist.draw_nodelabels", "TopologyArtist.draw_nodes", "TopologyArtist.redraw", "TopologyArtist.register", "TopologyArtist.update_data", "TopologyArtist.viewbox", "NodeSupport", "NodeSupport.copy", "NodeSupport.from_data", "NodeSupport.from_json", "NodeSupport.from_jsonstring", "NodeSupport.from_point", "NodeSupport.to_data", "NodeSupport.to_json", "NodeSupport.to_jsonstring", "NodeSupport.validate_data", "NodeSupport.validate_json", "Changelog", "Citing", "Examples", "COMPAS CEM", "Installation", "License"], "terms": {"01": [0, 586, 587], "simpl": [0, 586, 587, 588], "compress": [0, 5, 585, 586, 587], "structur": [0, 29, 56, 77, 88, 96, 101, 123, 162, 191, 212, 226, 234, 239, 269, 545, 546, 548, 585, 586, 587, 588], "02": [0, 586, 587], "brace": [0, 586, 587], "tower": [0, 586, 587], "2d": [0, 6, 543, 572, 584, 586, 587], "03": [0, 586, 587], "bridg": [0, 6, 584, 586, 587], "optim": [0, 4, 5, 12, 13, 342, 356, 358, 359, 365, 371, 409, 411, 412, 418, 424, 426, 427, 433, 439, 441, 442, 448, 454, 468, 482, 496, 510, 512, 513, 519, 525, 584, 586, 587], "04": [0, 586, 587], "tree": [0, 586, 587], "05": [0, 586, 587], "planar": [0, 56, 83, 99, 191, 220, 237, 586, 587, 588], "tensegr": [0, 6, 584, 586, 587], "wheel": [0, 586, 587], "from": [1, 2, 3, 4, 5, 25, 27, 29, 34, 36, 37, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 77, 88, 95, 96, 97, 101, 108, 123, 132, 153, 156, 158, 162, 167, 169, 170, 183, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 212, 226, 233, 234, 235, 239, 246, 269, 278, 298, 299, 300, 301, 309, 310, 311, 312, 320, 321, 322, 323, 329, 330, 333, 334, 335, 336, 344, 345, 346, 361, 362, 363, 373, 374, 375, 390, 391, 392, 393, 401, 414, 415, 416, 429, 430, 431, 444, 445, 446, 456, 457, 458, 470, 471, 472, 484, 485, 486, 498, 499, 500, 515, 516, 517, 530, 531, 546, 560, 561, 575, 576, 577, 578, 584, 588, 589], "compa": [1, 2, 3, 4, 5, 27, 77, 158, 212, 545, 546, 584, 585, 586], "geometri": [1, 2, 3, 4, 5, 56, 191, 545, 546, 548], "import": [1, 2, 3, 4, 5, 27, 77, 158, 212, 584, 588], "translat": [1, 2, 3, 4, 5], "compas_cem": [1, 2, 3, 4, 5, 12, 22, 148, 296, 307, 318, 329, 330, 331, 342, 356, 371, 385, 403, 409, 424, 439, 454, 468, 482, 496, 510, 525, 526, 544, 556, 573, 584, 585, 587, 588], "diagram": [1, 2, 3, 4, 5, 12, 13, 22, 56, 66, 119, 121, 148, 155, 156, 191, 257, 258, 260, 262, 263, 264, 268, 283, 329, 330, 347, 376, 385, 403, 459, 473, 487, 501, 525, 526, 532, 535, 536, 538, 539, 556, 562, 565, 568, 578, 584, 587], "topologydiagram": [1, 2, 3, 4, 5, 329, 330, 403, 525, 556, 584], "element": [1, 2, 4, 5, 12, 13, 23, 149, 296, 307, 318, 584, 587], "node": [1, 2, 3, 4, 5, 24, 25, 28, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 48, 53, 58, 63, 65, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 133, 139, 142, 143, 151, 152, 153, 155, 156, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 182, 183, 188, 193, 198, 200, 203, 204, 206, 207, 208, 209, 215, 216, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 260, 261, 262, 265, 266, 269, 270, 271, 273, 279, 283, 287, 290, 291, 329, 330, 331, 347, 371, 376, 409, 410, 411, 412, 417, 418, 424, 425, 426, 427, 432, 433, 439, 440, 441, 442, 447, 448, 454, 459, 468, 473, 482, 487, 501, 529, 531, 532, 536, 537, 538, 559, 561, 562, 566, 567, 568, 573, 578, 584], "trailedg": [1, 2, 4], "deviationedg": [1, 2, 4, 5], "load": [1, 2, 3, 4, 12, 13, 56, 81, 90, 109, 119, 150, 191, 217, 228, 247, 260, 331, 336, 532, 536, 562, 566, 584, 587], "nodeload": [1, 2, 3, 4, 584], "support": [1, 2, 3, 4, 12, 13, 81, 82, 121, 122, 127, 152, 156, 217, 219, 262, 266, 273, 403, 482, 525, 539, 573, 578, 584, 587], "nodesupport": [1, 2, 3, 4, 152, 584], "equilibrium": [1, 2, 3, 4, 5, 12, 13, 329, 330, 585, 587], "static_equilibrium": [1, 2, 3, 4, 5, 584], "plotter": [1, 2, 3, 4, 5, 12, 13, 526, 541, 556, 570, 584, 587], "instanti": [1, 4], "topolog": [1, 2, 3, 4, 5, 66, 119, 121, 148, 155, 156, 257, 258, 260, 262, 263, 264, 283, 329, 330, 358, 359, 365, 393, 397, 403, 411, 412, 418, 426, 427, 433, 441, 442, 448, 512, 513, 519, 525, 556, 562, 565, 568, 584], "add": [1, 2, 3, 4, 5, 23, 24, 149, 151, 152, 386, 387, 546], "add_nod": [1, 2, 4, 5], "0": [1, 2, 3, 4, 5, 46, 124, 125, 180, 270, 271, 307, 331, 342, 371, 454, 468, 482, 496, 553, 588], "1": [1, 2, 3, 4, 5, 27, 46, 47, 67, 68, 69, 70, 88, 91, 101, 108, 111, 125, 158, 180, 181, 201, 202, 203, 204, 226, 229, 239, 246, 249, 271, 331, 342, 371, 454, 468, 482, 496, 552, 553], "2": [1, 2, 3, 4, 5, 53, 117, 188, 256, 552, 553], "5": [1, 2, 3, 4, 5, 46, 124, 125, 180, 270, 271], "3": [1, 2, 4, 5, 65, 67, 68, 69, 70, 200, 201, 202, 203, 204], "edg": [1, 2, 3, 4, 5, 23, 27, 28, 31, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 58, 63, 67, 68, 70, 73, 76, 78, 83, 84, 99, 100, 118, 125, 133, 138, 140, 141, 145, 149, 154, 158, 159, 160, 161, 164, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 190, 193, 198, 201, 202, 204, 207, 210, 211, 213, 214, 220, 221, 222, 237, 238, 258, 259, 263, 271, 279, 282, 286, 288, 289, 293, 296, 301, 318, 323, 342, 347, 356, 357, 358, 359, 364, 365, 376, 459, 473, 487, 496, 501, 510, 511, 512, 513, 518, 519, 529, 530, 532, 534, 535, 559, 560, 562, 564, 565, 584], "add_edg": [1, 2, 4, 5], "length": [1, 2, 4, 43, 44, 125, 177, 178, 271, 318, 342, 510, 584, 587], "forc": [1, 2, 4, 5, 42, 56, 81, 90, 122, 176, 191, 217, 228, 266, 296, 356, 482, 496, 536, 539, 584, 587], "add_support": [1, 2, 3, 4], "add_load": [1, 2, 3, 4], "build": [1, 4, 528, 558, 584, 588], "trail": [1, 2, 3, 4, 5, 23, 149, 152, 154, 155, 156, 161, 171, 211, 222, 257, 263, 264, 265, 282, 318, 496, 510, 584], "automat": [1, 156, 584, 585, 587, 588], "build_trail": [1, 2, 3, 4, 5, 584], "comput": [1, 4, 5, 110, 118, 120, 156, 248, 259, 261, 543, 572, 584], "state": [1, 4, 5, 318], "static": [1, 4, 5, 329, 330, 527, 528, 533, 540, 541, 557, 558, 563, 569, 570, 587], "form": [1, 2, 3, 4, 5, 22, 52, 66, 67, 116, 148, 187, 201, 255, 329, 330, 347, 376, 385, 398, 399, 403, 459, 473, 487, 501, 525, 526, 532, 535, 538, 539, 585, 587, 588], "eta": [1, 2, 4, 5, 329, 330, 393, 397, 403, 525, 584], "1e": [1, 2, 3, 4, 5, 81, 90, 217, 228, 329, 330, 403, 525], "6": [1, 2, 3, 4, 5, 81, 90, 217, 228, 329, 330, 403, 525, 588], "tmax": [1, 2, 4, 5, 329, 330, 393, 397, 403, 525, 584], "100": [1, 2, 3, 4, 5, 124, 270, 329, 330, 403, 525], "verbos": [1, 2, 329, 330], "true": [1, 2, 4, 5, 49, 52, 53, 54, 70, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 98, 99, 100, 101, 113, 116, 117, 129, 130, 154, 171, 184, 187, 188, 189, 204, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 236, 237, 238, 239, 252, 255, 256, 275, 276, 282, 303, 304, 314, 315, 325, 326, 338, 339, 352, 353, 367, 368, 381, 382, 405, 406, 420, 421, 435, 436, 450, 451, 464, 465, 478, 479, 492, 493, 506, 507, 521, 522, 580, 581], "plot": [1, 2, 3, 4, 5, 526, 542, 545, 547, 548, 549, 550, 551, 553, 554, 556, 571], "result": [1, 3, 4, 5, 25, 29, 34, 88, 95, 96, 97, 101, 153, 162, 167, 226, 233, 234, 235, 239], "scene": [1, 2, 3, 4, 5], "nodes": [1, 2, 3, 4, 5], "shift": [1, 4, 5], "transform": [1, 2, 3, 4, 5], "from_vector": [1, 2, 3, 4, 5], "show_edgetext": [1, 4], "edgetext": [1, 4], "show": [1, 2, 3, 4, 5, 588], "content": 1, "zoom_ext": [1, 2, 3, 4, 5], "data": [2, 3, 25, 26, 29, 30, 34, 49, 52, 53, 57, 59, 60, 64, 77, 88, 95, 96, 97, 101, 113, 116, 117, 123, 128, 129, 130, 146, 147, 153, 154, 157, 162, 163, 167, 171, 184, 187, 188, 192, 194, 195, 199, 212, 226, 233, 234, 235, 239, 252, 255, 256, 269, 274, 275, 276, 282, 294, 295, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 360, 361, 362, 363, 366, 367, 368, 369, 370, 372, 373, 374, 375, 377, 378, 380, 381, 382, 383, 384, 385, 389, 390, 391, 392, 404, 405, 406, 407, 408, 413, 414, 415, 416, 419, 420, 421, 422, 423, 428, 429, 430, 431, 434, 435, 436, 437, 438, 443, 444, 445, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 460, 461, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 477, 478, 479, 480, 481, 483, 484, 485, 486, 488, 489, 491, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 505, 506, 507, 508, 509, 514, 515, 516, 517, 520, 521, 522, 523, 524, 541, 542, 545, 546, 548, 570, 571, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 587], "point": [2, 3, 40, 46, 54, 61, 63, 64, 65, 88, 98, 101, 131, 134, 174, 180, 189, 196, 198, 199, 200, 226, 236, 239, 277, 280, 301, 312, 323, 331, 336, 379, 462, 468, 578], "4": [2, 3, 4, 5], "trail_edg": [2, 3, 161], "deviation_edg": [2, 3, 5, 154, 159], "kei": [2, 4, 23, 28, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 55, 63, 72, 74, 75, 76, 79, 80, 81, 82, 86, 87, 90, 91, 92, 93, 94, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 122, 125, 127, 138, 139, 144, 145, 149, 154, 159, 160, 161, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 186, 187, 190, 198, 206, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 222, 224, 225, 228, 229, 230, 231, 232, 240, 241, 242, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 265, 266, 271, 273, 282, 283, 286, 287, 292, 293, 307, 331, 356, 394, 400, 401, 402, 409, 424, 439, 510, 573, 584], "u": [2, 5, 27, 36, 40, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 73, 125, 158, 169, 174, 175, 176, 177, 178, 179, 180, 183, 184, 187, 188, 207, 271, 296, 318], "v": [2, 5, 27, 36, 40, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 73, 125, 158, 169, 174, 175, 176, 177, 178, 179, 180, 183, 184, 187, 188, 207, 271, 296, 318, 588], "deviat": [2, 5, 23, 149, 159, 171, 214, 258, 296, 342, 356, 584], "indirect": 2, "set": [2, 38, 39, 47, 50, 51, 52, 53, 61, 68, 70, 102, 103, 111, 112, 114, 115, 116, 117, 138, 139, 172, 173, 181, 185, 186, 187, 188, 196, 202, 204, 240, 241, 249, 251, 253, 254, 255, 256, 286, 287, 356, 403, 409, 424, 439, 510, 525, 584], "loadscal": [2, 3], "reactionscal": [2, 3], "os": 3, "time": [3, 5, 156, 525, 551, 584, 588], "pointconstraint": 3, "trailedgeparamet": 3, "deviationedgeparamet": [3, 4, 5], "here": [3, 588], "path": [3, 59, 64, 77, 123, 129, 134, 194, 199, 212, 269, 275, 280, 299, 303, 310, 314, 321, 325, 334, 338, 345, 352, 362, 367, 374, 381, 391, 405, 415, 420, 430, 435, 445, 450, 457, 464, 471, 478, 485, 492, 499, 506, 516, 521, 553, 576, 580], "dirnam": 3, "__file__": 3, "IN": [3, 589], "abspath": 3, "join": 3, "03_bridge_2d": 3, "json": [3, 59, 60, 129, 130, 147, 194, 195, 275, 276, 295, 299, 300, 303, 304, 306, 310, 311, 314, 315, 317, 321, 322, 325, 326, 328, 334, 335, 338, 339, 341, 345, 346, 352, 353, 355, 362, 363, 367, 368, 370, 374, 375, 381, 382, 384, 391, 392, 405, 406, 408, 415, 416, 420, 421, 423, 430, 431, 435, 436, 438, 445, 446, 450, 451, 453, 457, 458, 464, 465, 467, 471, 472, 478, 479, 481, 485, 486, 492, 493, 495, 499, 500, 506, 507, 509, 516, 517, 521, 522, 524, 576, 577, 580, 581, 583, 584], "from_json": 3, "appli": [3, 56, 81, 90, 109, 119, 150, 191, 217, 228, 247, 260, 336, 573], "gener": [3, 4, 5, 27, 156, 158, 329, 330, 587], "find": [3, 56, 123, 159, 161, 191, 269, 403, 525, 585, 587, 588], "initi": [3, 358, 359, 365, 411, 412, 418, 426, 427, 433, 441, 442, 448, 512, 513, 519], "opt": [3, 5], "defin": [3, 124, 270, 318, 331, 578], "constraint": [3, 4, 5, 385, 386, 395, 398, 399, 401, 525, 584, 587], "nodes_opt": 3, "target_point": 3, "20": 3, "67": 3, "42": 3, "7": [3, 588], "15": 3, "28": 3, "84": 3, "zip": 3, "add_constraint": [3, 4, 5], "paramet": [3, 4, 5, 22, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 122, 123, 124, 125, 129, 130, 134, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 204, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 266, 269, 270, 271, 275, 276, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 297, 298, 299, 300, 301, 303, 304, 308, 309, 310, 311, 312, 314, 315, 319, 320, 321, 322, 323, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 343, 344, 345, 346, 352, 353, 356, 358, 359, 360, 361, 362, 363, 365, 367, 368, 372, 373, 374, 375, 381, 382, 387, 389, 390, 391, 392, 394, 396, 400, 402, 403, 405, 406, 409, 411, 412, 413, 414, 415, 416, 418, 420, 421, 424, 426, 427, 428, 429, 430, 431, 433, 435, 436, 439, 441, 442, 443, 444, 445, 446, 448, 450, 451, 455, 456, 457, 458, 464, 465, 469, 470, 471, 472, 478, 479, 483, 484, 485, 486, 492, 493, 497, 498, 499, 500, 506, 507, 510, 512, 513, 514, 515, 516, 517, 519, 521, 522, 525, 526, 527, 528, 534, 537, 541, 545, 550, 551, 552, 553, 556, 557, 558, 564, 567, 570, 573, 574, 575, 576, 577, 578, 580, 581, 584], "add_paramet": [3, 4, 5], "bound_low": [3, 356, 409, 424, 439, 510], "bound_up": [3, 356, 409, 424, 439, 510], "10": [3, 4, 5, 585], "record": [3, 549], "start": [3, 5, 40, 41, 43, 45, 46, 48, 61, 123, 131, 156, 174, 175, 177, 179, 180, 183, 196, 265, 269, 277, 586, 588], "form_opt": [3, 4, 5], "solve_nlopt": [3, 4, 5, 584], "algorithm": [3, 5, 31, 55, 56, 78, 164, 190, 191, 213, 329, 330, 403, 525, 584], "slsqp": [3, 4, 403, 525], "iter": [3, 5, 49, 90, 113, 124, 154, 155, 171, 184, 228, 252, 268, 270, 282, 283, 329, 330, 403, 525, 584], "ep": [3, 5, 403, 525], "print": [3, 4, 5, 329, 330], "out": [3, 4, 5, 329, 330, 588, 589], "f": [3, 5], "number_of_paramet": [3, 5], "number_of_constraint": [3, 5], "elaps": [3, 5, 525], "final": [3, 5, 525, 588], "valu": [3, 4, 5, 38, 39, 42, 46, 50, 51, 52, 88, 101, 102, 103, 105, 107, 114, 115, 116, 138, 139, 140, 141, 142, 143, 172, 173, 176, 180, 185, 186, 187, 226, 239, 240, 241, 243, 245, 253, 254, 255, 286, 287, 288, 289, 290, 291, 350, 358, 359, 365, 403, 411, 412, 418, 426, 427, 433, 441, 442, 448, 496, 504, 512, 513, 519, 525, 584], "object": [3, 4, 5, 25, 30, 31, 34, 38, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 78, 83, 84, 85, 95, 97, 98, 99, 100, 124, 128, 129, 130, 134, 146, 147, 150, 152, 153, 163, 164, 167, 172, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 213, 220, 221, 223, 233, 235, 236, 237, 238, 270, 274, 275, 276, 280, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 351, 352, 353, 354, 355, 360, 361, 362, 363, 366, 367, 368, 369, 370, 372, 373, 374, 375, 380, 381, 382, 383, 384, 385, 389, 390, 391, 392, 393, 397, 404, 405, 406, 407, 408, 413, 414, 415, 416, 419, 420, 421, 422, 423, 428, 429, 430, 431, 434, 435, 436, 437, 438, 443, 444, 445, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 463, 464, 465, 466, 467, 469, 470, 471, 472, 477, 478, 479, 480, 481, 483, 484, 485, 486, 491, 492, 493, 494, 495, 497, 498, 499, 500, 505, 506, 507, 508, 509, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 533, 544, 545, 546, 547, 548, 555, 563, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 588], "function": [3, 4, 5, 38, 39, 50, 51, 52, 53, 83, 99, 102, 103, 114, 115, 117, 124, 156, 172, 173, 185, 186, 187, 188, 220, 237, 240, 241, 253, 254, 256, 270, 329, 330, 393, 397, 525, 549], "penalti": [3, 4, 5, 584], "norm": [3, 4, 5, 525], "gradient": [3, 4, 5, 393, 403, 525, 584], "gradient_norm": [3, 4, 5, 584], "figsiz": [3, 4, 5], "16": [3, 4, 5, 588], "9": [3, 4, 5], "t": [3, 4, 5, 46, 125, 152, 180, 271, 588], "40": 3, "target": [3, 342, 348, 371, 377, 454, 460, 468, 474, 475, 482, 488, 496, 502, 584, 587], "x": [3, 5, 409], "y": [3, 5, 424], "z": [3, 85, 223, 439], "size": [3, 47, 91, 111, 181, 229, 249], "facecolor": 3, "90": 3, "math": [4, 5], "sqrt": 4, "trailedgeforceconstraint": [4, 5], "width": 4, "height": 4, "auto": [4, 5], "auxiliari": [4, 5, 154, 155, 156, 211, 257, 283, 584], "auxiliary_trail": [4, 5, 156, 584], "minim": [4, 397], "axiliari": [4, 5], "goal": [4, 386, 401], "auxiliary_trail_edg": [4, 5, 584], "should": [4, 5, 40, 52, 53, 56, 116, 117, 154, 171, 174, 187, 188, 191, 255, 256, 282, 541, 570], "small": 4, "number": [4, 5, 31, 32, 33, 35, 65, 68, 70, 118, 119, 120, 121, 124, 164, 165, 166, 168, 200, 202, 204, 257, 258, 259, 260, 261, 262, 263, 264, 267, 268, 270, 329, 330, 395, 396, 403, 525], "total": [4, 525], "format": [4, 25, 29, 34, 72, 86, 88, 95, 96, 97, 101, 106, 126, 130, 153, 162, 167, 206, 224, 226, 233, 234, 235, 239, 244, 272, 276, 304, 315, 326, 339, 353, 368, 382, 406, 421, 436, 451, 465, 479, 493, 507, 522, 581, 584], "ns": [4, 5], "show_nodetext": 4, "nodetext": 4, "pad": [4, 5, 555], "pi": 5, "co": 5, "sin": 5, "numpi": [5, 330, 588], "np": 5, "util": 5, "pairwis": 5, "creat": [5, 25, 29, 34, 58, 62, 95, 96, 97, 132, 153, 162, 167, 193, 197, 233, 234, 235, 278, 301, 312, 323, 336, 398, 399, 527, 557, 578, 584], "diamet": 5, "num_sid": 5, "onli": [5, 54, 70, 79, 98, 189, 204, 215, 236, 398, 399, 403, 525, 544, 578, 584, 587, 588], "even": 5, "appendix_length": 5, "tension_forc": 5, "compression_forc": 5, "bound": [5, 358, 359, 398, 411, 412, 426, 427, 441, 442, 512, 513, 543, 555, 572], "test": [5, 211, 214, 219, 222], "subdivis": 5, "assert": 5, "remov": [5, 401, 402, 584], "last": [5, 156, 588], "theta": 5, "linspac": 5, "radiu": 5, "i": [5, 145, 293], "enumer": 5, "perimet": 5, "tension": [5, 585, 587], "list": [5, 22, 25, 28, 29, 34, 39, 40, 41, 45, 46, 47, 48, 50, 51, 55, 56, 58, 61, 63, 68, 70, 75, 76, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 101, 103, 104, 108, 109, 110, 111, 114, 115, 122, 123, 124, 131, 133, 135, 145, 148, 153, 155, 159, 160, 161, 162, 167, 173, 174, 175, 179, 180, 181, 183, 185, 186, 190, 191, 193, 196, 198, 202, 204, 209, 210, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 239, 241, 242, 246, 247, 248, 249, 253, 254, 266, 269, 270, 277, 279, 281, 283, 293, 301, 312, 323, 331, 336, 525, 527, 528, 546, 557, 558, 578, 584], "rang": [5, 46, 52, 116, 125, 180, 187, 255, 271], "intern": [5, 329, 330, 587], "ar": [5, 56, 125, 156, 191, 271, 403, 525, 584, 586, 587, 588], "half_num_sid": 5, "int": [5, 31, 32, 33, 35, 47, 65, 68, 70, 75, 76, 81, 82, 87, 90, 91, 109, 111, 118, 119, 120, 121, 122, 124, 127, 139, 145, 159, 161, 164, 165, 166, 168, 181, 200, 202, 204, 209, 210, 217, 218, 219, 225, 228, 229, 247, 249, 250, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 287, 293, 329, 330, 331, 347, 376, 403, 459, 473, 487, 501, 525, 534, 537, 549, 555, 564, 567, 573], "auxiliary_trail_length": [5, 584], "zero": [5, 85, 223], "all": [5, 26, 39, 51, 55, 85, 89, 90, 103, 154, 155, 157, 171, 173, 186, 190, 223, 227, 228, 241, 265, 282, 283, 547, 553, 555, 584, 588, 589], "allow": [5, 588], "chang": [5, 88, 101, 226, 239, 584], "low_bound": 5, "up_bound": 5, "edge_forc": 5, "lbfg": [5, 403, 525], "1000": 5, "45": 5, "A": [6, 22, 27, 31, 39, 50, 51, 52, 54, 55, 61, 63, 64, 65, 72, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 98, 99, 100, 103, 106, 109, 114, 115, 116, 122, 123, 124, 132, 133, 134, 137, 140, 141, 142, 143, 145, 148, 150, 152, 156, 158, 159, 161, 164, 173, 185, 186, 187, 189, 190, 196, 198, 199, 200, 206, 209, 210, 212, 213, 215, 217, 218, 219, 220, 221, 223, 224, 225, 227, 229, 230, 231, 232, 236, 237, 238, 241, 244, 247, 253, 254, 255, 266, 269, 270, 278, 279, 280, 283, 285, 288, 289, 290, 291, 293, 296, 307, 312, 318, 329, 330, 331, 336, 394, 400, 403, 525, 537, 544, 545, 567, 573, 578, 586, 587, 589], "b": [6, 586, 587], "tubular": [6, 586, 587], "3d": [6, 584, 586, 587], "c": [6, 88, 101, 226, 239, 586, 587, 588, 589], "circular": [6, 586, 587], "dome": [6, 584, 586, 587], "d": [6, 88, 101, 226, 239, 585, 586, 587], "jessen": [6, 586, 587], "e": [6, 145, 293, 318, 586, 587], "spiral": [6, 584, 586, 587], "staircas": [6, 584, 586, 587], "download": [7, 8, 9, 10, 11, 588], "rhino": [7, 541, 570, 584, 587, 588], "file": [7, 8, 9, 10, 11, 59, 60, 64, 129, 134, 194, 195, 199, 275, 280, 299, 300, 303, 310, 311, 314, 321, 322, 325, 334, 335, 338, 345, 346, 352, 362, 363, 367, 374, 375, 381, 391, 392, 405, 415, 416, 420, 430, 431, 435, 445, 446, 450, 457, 458, 464, 471, 472, 478, 485, 486, 492, 499, 500, 506, 516, 517, 521, 553, 576, 577, 580, 584, 589], "grasshopp": [7, 8, 9, 10, 11, 541, 570, 584, 586, 587], "viewer": [12, 13, 544, 584, 587], "class": [22, 148, 296, 307, 318, 331, 342, 356, 371, 385, 409, 424, 439, 454, 468, 482, 496, 510, 526, 544, 556, 573, 584], "arg": [22, 148, 312, 350, 476, 490, 504, 544], "kwarg": [22, 52, 116, 148, 187, 255, 296, 301, 307, 312, 318, 323, 331, 350, 385, 476, 490, 504, 526, 527, 528, 544, 545, 546, 553, 556, 557, 558, 573], "sourc": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 364, 365, 366, 367, 368, 369, 370, 371, 372, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 579, 580, 581, 582, 583, 587], "base": [22, 66, 148, 296, 307, 318, 331, 342, 356, 371, 385, 403, 409, 424, 439, 454, 468, 482, 496, 510, 525, 526, 544, 556, 573, 584], "The": [22, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 86, 90, 91, 92, 93, 94, 102, 103, 104, 106, 108, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 146, 147, 148, 154, 155, 156, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 206, 207, 208, 211, 214, 215, 216, 217, 222, 224, 228, 229, 230, 231, 232, 240, 241, 242, 244, 246, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 282, 283, 284, 285, 286, 287, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 389, 390, 391, 392, 393, 395, 396, 397, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 541, 550, 552, 556, 557, 558, 570, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589], "heart": [22, 148], "life": [22, 148], "argument": [22, 52, 124, 140, 141, 142, 143, 148, 187, 270, 288, 289, 290, 291, 301, 312, 323, 527, 528, 557, 558, 584], "dict": [22, 39, 49, 51, 52, 53, 57, 63, 72, 75, 76, 86, 87, 103, 106, 113, 115, 116, 117, 128, 130, 138, 139, 140, 141, 142, 143, 145, 146, 148, 154, 171, 173, 184, 186, 187, 188, 192, 198, 206, 209, 210, 224, 225, 241, 244, 252, 254, 255, 256, 274, 276, 282, 286, 287, 288, 289, 290, 291, 293, 294, 298, 301, 302, 304, 305, 309, 312, 313, 315, 316, 320, 323, 324, 326, 327, 333, 337, 339, 340, 344, 351, 353, 354, 361, 366, 368, 369, 373, 380, 382, 383, 390, 404, 406, 407, 414, 419, 421, 422, 429, 434, 436, 437, 444, 449, 451, 452, 456, 463, 465, 466, 470, 477, 479, 480, 484, 491, 493, 494, 498, 505, 507, 508, 515, 520, 522, 523, 527, 528, 534, 537, 557, 558, 564, 567, 575, 579, 581, 582], "keyword": [22, 148, 301, 312, 323, 527, 528, 557, 558], "return": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 355, 360, 361, 362, 363, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 389, 390, 391, 392, 403, 404, 405, 406, 407, 408, 413, 414, 415, 416, 419, 420, 421, 422, 423, 428, 429, 430, 431, 434, 435, 436, 437, 438, 443, 444, 445, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 491, 492, 493, 494, 495, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 514, 515, 516, 517, 520, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 534, 537, 540, 541, 542, 543, 545, 552, 557, 558, 559, 560, 561, 564, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584], "method": [22, 148, 296, 307, 318, 331, 342, 356, 371, 385, 403, 409, 424, 439, 454, 468, 482, 496, 510, 525, 526, 533, 544, 549, 556, 563, 573, 584], "inherit": [22, 148, 296, 307, 318, 331, 342, 356, 371, 385, 409, 424, 439, 454, 468, 482, 496, 510, 526, 544, 556, 573], "an": [23, 30, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 53, 56, 57, 59, 60, 64, 83, 99, 102, 114, 115, 119, 121, 128, 129, 130, 134, 138, 149, 155, 156, 163, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 186, 188, 191, 192, 194, 195, 199, 211, 214, 218, 220, 222, 237, 240, 253, 254, 260, 262, 274, 275, 276, 280, 283, 286, 297, 298, 299, 300, 301, 302, 303, 304, 308, 309, 310, 311, 313, 314, 315, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 332, 333, 334, 335, 337, 338, 339, 343, 344, 345, 346, 347, 351, 352, 353, 356, 360, 361, 362, 363, 366, 367, 368, 372, 373, 374, 375, 376, 380, 381, 382, 385, 389, 390, 391, 392, 402, 403, 404, 405, 406, 409, 413, 414, 415, 416, 419, 420, 421, 424, 428, 429, 430, 431, 434, 435, 436, 439, 443, 444, 445, 446, 449, 450, 451, 455, 456, 457, 458, 459, 463, 464, 465, 469, 470, 471, 472, 473, 477, 478, 479, 483, 484, 485, 486, 487, 491, 492, 493, 497, 498, 499, 500, 501, 505, 506, 507, 510, 514, 515, 516, 517, 520, 521, 522, 526, 527, 528, 533, 534, 541, 553, 556, 557, 558, 563, 564, 570, 574, 575, 576, 577, 579, 580, 581, 584, 587, 588, 589], "tupl": [23, 28, 38, 39, 42, 44, 47, 49, 50, 51, 52, 53, 55, 58, 61, 63, 67, 68, 76, 113, 116, 117, 131, 133, 138, 145, 149, 154, 160, 171, 172, 173, 176, 178, 181, 182, 184, 185, 186, 187, 188, 190, 193, 196, 198, 201, 202, 210, 211, 214, 222, 252, 255, 256, 277, 279, 282, 286, 293, 301, 312, 323, 347, 376, 459, 473, 487, 501, 534, 543, 564, 572, 584], "doubl": [24, 151, 588], "rtype": [25, 29, 34, 88, 95, 96, 97, 101, 153, 162, 167, 226, 233, 234, 235, 239], "arrai": [25, 29, 34, 87, 88, 95, 96, 97, 101, 145, 153, 162, 167, 225, 226, 233, 234, 235, 239, 293, 398, 399], "adjac": [25, 95, 153, 233], "matrix": [25, 29, 34, 88, 95, 96, 97, 101, 153, 162, 167, 226, 233, 234, 235, 239], "network": [25, 26, 27, 29, 31, 34, 36, 49, 54, 55, 56, 61, 63, 64, 65, 73, 74, 77, 78, 83, 84, 85, 88, 89, 95, 96, 97, 98, 99, 100, 101, 113, 123, 124, 131, 133, 134, 135, 136, 137, 153, 157, 158, 162, 164, 167, 169, 184, 189, 190, 191, 196, 198, 199, 200, 207, 208, 212, 213, 220, 221, 223, 226, 227, 233, 234, 235, 236, 237, 238, 239, 252, 269, 270, 277, 279, 280, 281, 284, 285, 529, 545, 548, 559], "datastructur": [25, 27, 29, 34, 77, 88, 95, 96, 97, 101, 153, 158, 162, 167, 212, 226, 233, 234, 235, 239], "obj": [25, 27, 34, 38, 50, 64, 77, 95, 97, 102, 114, 134, 153, 158, 167, 172, 185, 199, 212, 233, 235, 240, 253, 280], "get": [25, 27, 34, 38, 39, 42, 44, 47, 50, 51, 52, 53, 67, 68, 69, 70, 71, 77, 95, 97, 102, 103, 107, 109, 111, 112, 114, 115, 116, 117, 122, 153, 158, 167, 172, 173, 176, 178, 181, 182, 185, 186, 187, 188, 201, 202, 203, 204, 205, 212, 233, 235, 240, 241, 245, 247, 249, 250, 251, 253, 254, 255, 256, 266, 475, 586], "liter": [25, 29, 34, 88, 95, 96, 97, 101, 153, 162, 167, 226, 233, 234, 235, 239, 541, 570], "csc": [25, 29, 34, 88, 95, 96, 97, 101, 153, 162, 167, 226, 233, 234, 235, 239], "csr": [25, 29, 34, 88, 95, 96, 97, 101, 153, 162, 167, 226, 233, 234, 235, 239], "coo": [25, 29, 34, 88, 95, 96, 97, 101, 153, 162, 167, 226, 233, 234, 235, 239], "option": [25, 29, 30, 34, 38, 39, 40, 46, 47, 49, 50, 51, 52, 53, 54, 56, 61, 64, 65, 70, 72, 73, 86, 88, 91, 95, 96, 97, 98, 101, 102, 103, 104, 106, 111, 113, 114, 115, 116, 117, 124, 125, 129, 130, 140, 141, 142, 143, 153, 162, 163, 167, 172, 173, 174, 180, 181, 184, 185, 186, 187, 188, 189, 191, 196, 199, 200, 204, 206, 207, 224, 226, 229, 233, 234, 235, 236, 239, 240, 241, 242, 244, 249, 252, 253, 254, 255, 256, 270, 271, 275, 276, 288, 289, 290, 291, 297, 303, 304, 308, 314, 315, 319, 325, 326, 329, 330, 332, 338, 339, 343, 352, 353, 360, 367, 368, 372, 381, 382, 389, 403, 405, 406, 413, 420, 421, 428, 435, 436, 443, 450, 451, 455, 464, 465, 469, 478, 479, 483, 492, 493, 497, 506, 507, 514, 521, 522, 525, 527, 528, 534, 537, 541, 545, 547, 549, 551, 553, 555, 557, 558, 564, 567, 570, 574, 580, 581, 588], "array_lik": [25, 29, 34, 88, 95, 96, 97, 101, 153, 162, 167, 226, 233, 234, 235, 239], "construct": [25, 29, 34, 57, 59, 60, 61, 63, 64, 65, 66, 88, 95, 96, 97, 101, 153, 162, 167, 192, 194, 195, 196, 198, 199, 200, 226, 233, 234, 235, 239, 298, 299, 300, 309, 310, 311, 320, 321, 322, 333, 334, 335, 344, 345, 346, 361, 362, 363, 373, 374, 375, 390, 391, 392, 414, 415, 416, 429, 430, 431, 444, 445, 446, 456, 457, 458, 470, 471, 472, 484, 485, 486, 498, 499, 500, 515, 516, 517, 575, 576, 577], "none": [26, 27, 30, 36, 37, 38, 39, 50, 51, 52, 54, 56, 61, 64, 72, 86, 98, 102, 103, 106, 112, 114, 115, 116, 124, 129, 134, 136, 138, 140, 141, 142, 143, 157, 158, 163, 169, 170, 172, 173, 185, 186, 187, 189, 191, 196, 199, 206, 224, 236, 240, 241, 244, 251, 253, 254, 255, 270, 275, 280, 284, 286, 288, 289, 290, 291, 297, 303, 307, 308, 314, 318, 319, 325, 329, 330, 332, 338, 342, 343, 352, 356, 360, 367, 371, 372, 381, 389, 403, 405, 409, 413, 420, 424, 428, 435, 439, 443, 450, 454, 455, 464, 468, 469, 478, 482, 483, 492, 496, 497, 506, 510, 514, 521, 525, 529, 530, 531, 534, 537, 540, 541, 542, 545, 547, 549, 550, 551, 552, 553, 554, 555, 559, 560, 561, 564, 567, 569, 570, 571, 574, 580, 584], "cl": [27, 30, 158, 163, 297, 308, 319, 332, 343, 360, 372, 389, 413, 428, 443, 455, 469, 483, 497, 514, 574], "graph": [27, 37, 58, 62, 118, 120, 126, 132, 156, 158, 170, 193, 197, 259, 261, 272, 278], "g": [27, 158, 318], "h": [27, 158], "same": [27, 56, 158, 191, 587], "vertic": [27, 56, 77, 85, 158, 191, 212, 223], "whose": [27, 158, 578], "consist": [27, 158, 544], "present": [27, 73, 74, 158, 207, 208], "refer": [27, 158, 403, 525, 552, 553, 587, 588], "wolfram": [27, 158], "mathworld": [27, 158], "avail": [27, 83, 99, 155, 158, 220, 237, 588], "http": [27, 83, 99, 158, 220, 237, 552, 553, 585], "com": [27, 158], "graphcompl": [27, 158], "html": [27, 158, 552, 553], "exampl": [27, 36, 37, 53, 56, 77, 117, 158, 169, 170, 188, 191, 212, 256, 584, 587], "network_compl": [27, 158], "from_obj": [27, 77, 158, 212], "line": [27, 54, 56, 61, 64, 77, 83, 98, 99, 131, 158, 189, 191, 196, 199, 212, 220, 236, 237, 277, 301, 323, 371, 588], "ani": [27, 39, 49, 50, 51, 52, 53, 56, 103, 113, 114, 115, 116, 117, 140, 141, 142, 143, 158, 173, 184, 185, 186, 187, 188, 191, 241, 252, 253, 254, 255, 256, 283, 288, 289, 290, 291, 527, 528, 557, 558, 587, 589], "has_edg": [27, 158], "direct": [27, 41, 46, 56, 62, 73, 158, 175, 180, 191, 197, 207, 331, 584], "fals": [27, 49, 52, 53, 54, 70, 73, 74, 77, 78, 79, 80, 81, 82, 83, 85, 88, 98, 99, 101, 113, 116, 117, 129, 130, 154, 156, 158, 171, 184, 187, 188, 189, 204, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 236, 237, 239, 252, 255, 256, 275, 276, 282, 303, 304, 314, 315, 325, 326, 329, 330, 338, 339, 352, 353, 367, 368, 381, 382, 405, 406, 420, 421, 435, 436, 450, 451, 464, 465, 478, 479, 492, 493, 506, 507, 521, 522, 549, 580, 581, 584], "connect": [28, 29, 61, 64, 65, 70, 77, 80, 96, 159, 160, 161, 162, 196, 199, 200, 204, 212, 216, 234, 588, 589], "hashabl": [28, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 63, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 86, 87, 89, 91, 92, 93, 94, 98, 102, 103, 104, 106, 108, 110, 111, 113, 114, 115, 116, 117, 123, 125, 133, 138, 145, 160, 165, 166, 168, 169, 170, 172, 173, 174, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 193, 198, 201, 202, 203, 204, 206, 207, 208, 209, 210, 215, 216, 224, 225, 227, 229, 230, 231, 232, 236, 240, 241, 242, 244, 246, 248, 249, 252, 253, 254, 255, 256, 269, 271, 279, 286, 293], "identifi": [28, 32, 33, 35, 36, 37, 38, 39, 47, 49, 50, 51, 52, 53, 55, 58, 67, 68, 69, 70, 73, 74, 79, 80, 87, 89, 91, 92, 93, 94, 102, 103, 104, 108, 110, 111, 113, 114, 115, 116, 117, 123, 138, 139, 160, 165, 166, 168, 169, 170, 172, 173, 181, 184, 185, 186, 187, 188, 190, 193, 201, 202, 203, 204, 207, 208, 215, 216, 225, 227, 229, 230, 231, 232, 240, 241, 242, 246, 248, 249, 252, 253, 254, 255, 256, 269, 286, 287, 584], "make": [30, 156, 163, 297, 308, 319, 332, 342, 343, 360, 372, 389, 413, 428, 443, 455, 469, 482, 483, 496, 497, 514, 574, 588], "independ": [30, 137, 163, 285, 297, 308, 319, 332, 343, 360, 372, 389, 413, 428, 443, 455, 469, 483, 497, 514, 574], "type": [30, 56, 57, 59, 60, 122, 163, 191, 192, 194, 195, 266, 297, 298, 299, 300, 308, 309, 310, 311, 319, 320, 321, 322, 332, 333, 334, 335, 343, 344, 345, 346, 360, 361, 362, 363, 372, 373, 374, 375, 389, 390, 391, 392, 413, 414, 415, 416, 428, 429, 430, 431, 443, 444, 445, 446, 455, 456, 457, 458, 469, 470, 471, 472, 483, 484, 485, 486, 497, 498, 499, 500, 514, 515, 516, 517, 527, 528, 541, 545, 557, 558, 570, 574, 575, 576, 577, 584, 588], "default": [30, 81, 90, 138, 139, 140, 141, 142, 143, 154, 163, 171, 217, 228, 282, 286, 287, 288, 289, 290, 291, 297, 308, 319, 329, 330, 332, 343, 360, 372, 389, 403, 413, 428, 443, 455, 469, 483, 497, 514, 525, 574, 584], "current": [30, 88, 101, 163, 226, 239, 297, 308, 319, 332, 343, 348, 360, 372, 377, 389, 413, 428, 443, 455, 460, 469, 474, 483, 488, 497, 502, 514, 530, 531, 543, 560, 561, 572, 574], "thi": [30, 31, 55, 56, 57, 59, 60, 78, 83, 99, 156, 163, 164, 190, 191, 192, 194, 195, 213, 220, 237, 283, 297, 298, 299, 300, 308, 309, 310, 311, 319, 320, 321, 322, 329, 330, 332, 333, 334, 335, 343, 344, 345, 346, 358, 359, 360, 361, 362, 363, 372, 373, 374, 375, 389, 390, 391, 392, 403, 411, 412, 413, 414, 415, 416, 426, 427, 428, 429, 430, 431, 441, 442, 443, 444, 445, 446, 455, 456, 457, 458, 469, 470, 471, 472, 483, 484, 485, 486, 497, 498, 499, 500, 512, 513, 514, 515, 516, 517, 525, 544, 574, 575, 576, 577, 584, 588, 589], "count": [31, 164], "cross": [31, 55, 78, 83, 84, 99, 100, 164, 190, 213, 220, 221, 237, 238, 566], "pair": [31, 38, 39, 52, 55, 58, 61, 67, 72, 75, 76, 78, 86, 87, 103, 106, 116, 131, 133, 145, 164, 172, 173, 187, 190, 193, 196, 201, 206, 209, 210, 213, 224, 225, 241, 244, 255, 277, 279, 293, 527, 541, 557, 570], "note": [31, 55, 56, 77, 78, 79, 83, 88, 99, 101, 136, 137, 138, 139, 152, 155, 156, 164, 190, 191, 212, 213, 215, 220, 226, 237, 239, 283, 284, 285, 286, 287, 318, 358, 359, 411, 412, 426, 427, 441, 442, 512, 513, 552, 553, 578, 585], "assum": [31, 55, 78, 164, 190, 213, 588], "li": [31, 55, 78, 85, 164, 190, 213, 223], "xy": [31, 55, 78, 85, 164, 190, 213, 223], "plane": [31, 54, 55, 78, 83, 84, 85, 98, 99, 100, 164, 189, 190, 213, 220, 221, 223, 236, 237, 238, 318, 454, 584], "neighbor": [32, 33, 35, 56, 79, 93, 94, 110, 124, 125, 165, 166, 168, 191, 215, 231, 232, 248, 270, 271], "numer": [33, 166, 403, 525, 587], "incom": [33, 93, 166, 231], "degre": [34, 65, 97, 167, 200, 235], "outgo": [35, 94, 168, 232], "delet": [36, 37, 169, 170, 584], "first": [36, 73, 125, 156, 169, 207, 271, 403, 525, 584, 588], "second": [36, 73, 125, 169, 207, 271, 550, 551], "name": [38, 39, 50, 51, 52, 102, 103, 114, 115, 116, 138, 139, 140, 141, 142, 143, 172, 173, 185, 186, 187, 240, 241, 253, 254, 255, 286, 287, 288, 289, 290, 291, 357, 403, 410, 425, 440, 511, 525, 588], "attribut": [38, 39, 49, 50, 51, 52, 53, 102, 103, 113, 114, 115, 116, 117, 138, 139, 140, 141, 142, 143, 154, 171, 172, 173, 184, 185, 186, 187, 188, 240, 241, 252, 253, 254, 255, 256, 282, 286, 287, 288, 289, 290, 291, 357, 410, 425, 440, 511, 584], "str": [38, 39, 40, 49, 50, 51, 52, 53, 60, 61, 64, 72, 86, 102, 103, 104, 106, 113, 114, 115, 116, 117, 125, 126, 130, 138, 139, 140, 141, 142, 143, 147, 172, 173, 174, 184, 185, 186, 187, 188, 195, 196, 199, 206, 224, 240, 241, 242, 244, 252, 253, 254, 255, 256, 271, 272, 276, 286, 287, 288, 289, 290, 291, 295, 300, 304, 306, 311, 315, 317, 322, 326, 328, 335, 339, 341, 346, 353, 355, 363, 368, 370, 375, 382, 384, 392, 403, 406, 408, 416, 421, 423, 431, 436, 438, 446, 451, 453, 458, 465, 467, 472, 479, 481, 486, 493, 495, 500, 507, 509, 517, 522, 524, 525, 527, 528, 534, 537, 549, 553, 557, 558, 564, 567, 577, 581, 583], "when": [38, 102, 172, 240, 584, 588], "us": [38, 39, 50, 51, 53, 54, 56, 61, 64, 67, 68, 69, 70, 72, 83, 86, 88, 98, 99, 101, 102, 103, 106, 114, 115, 117, 172, 173, 185, 186, 188, 189, 191, 196, 199, 201, 202, 203, 204, 206, 220, 224, 226, 236, 237, 239, 240, 241, 244, 253, 254, 256, 330, 403, 525, 527, 542, 545, 557, 571, 584, 585, 586, 587, 588, 589], "setter": [38, 39, 50, 51, 102, 103, 114, 115, 172, 173, 185, 186, 240, 241, 253, 254, 584], "rais": [38, 39, 50, 51, 54, 83, 98, 99, 102, 103, 114, 115, 124, 125, 138, 139, 146, 147, 172, 173, 185, 186, 189, 220, 236, 237, 240, 241, 253, 254, 270, 271, 286, 287, 294, 295, 305, 306, 316, 317, 327, 328, 340, 341, 354, 355, 369, 370, 383, 384, 407, 408, 422, 423, 437, 438, 452, 453, 466, 467, 480, 481, 494, 495, 508, 509, 523, 524, 582, 583, 584], "keyerror": [38, 39, 50, 51, 102, 103, 114, 115, 138, 139, 172, 173, 185, 186, 240, 241, 253, 254, 286, 287], "If": [38, 39, 46, 49, 50, 51, 52, 53, 54, 70, 73, 83, 88, 98, 99, 101, 102, 103, 113, 114, 115, 116, 117, 124, 125, 129, 130, 138, 139, 159, 161, 172, 173, 180, 184, 185, 186, 187, 188, 189, 204, 207, 220, 226, 236, 237, 239, 240, 241, 252, 253, 254, 255, 256, 270, 271, 275, 276, 286, 287, 303, 304, 314, 315, 318, 325, 326, 329, 330, 338, 339, 352, 353, 367, 368, 381, 382, 403, 405, 406, 420, 421, 435, 436, 450, 451, 464, 465, 478, 479, 492, 493, 506, 507, 521, 522, 525, 580, 581, 585, 586, 588], "doe": [38, 39, 50, 51, 102, 103, 114, 115, 138, 139, 172, 173, 185, 186, 240, 241, 253, 254, 286, 287, 587], "exist": [38, 39, 50, 51, 77, 83, 99, 102, 103, 114, 115, 138, 139, 172, 173, 185, 186, 212, 220, 237, 240, 241, 253, 254, 283, 286, 287, 544, 584], "multipl": [39, 50, 51, 103, 114, 115, 173, 185, 186, 241, 253, 254, 385, 546], "empti": [39, 51, 103, 159, 161, 173, 186, 241], "dictionari": [39, 57, 63, 72, 75, 76, 86, 87, 103, 106, 140, 141, 142, 143, 145, 173, 192, 198, 206, 209, 210, 224, 225, 241, 244, 288, 289, 290, 291, 293, 298, 309, 320, 333, 344, 361, 373, 390, 394, 400, 414, 429, 444, 456, 470, 484, 498, 515, 575, 584], "correspond": [39, 51, 72, 76, 86, 87, 103, 106, 115, 145, 173, 186, 206, 210, 224, 225, 241, 244, 254, 293, 527, 541, 557, 570], "provid": [39, 52, 57, 115, 124, 173, 187, 192, 254, 270, 298, 309, 320, 333, 344, 361, 373, 390, 414, 429, 444, 456, 470, 484, 498, 515, 527, 557, 575, 587, 589], "ax": [40, 104, 174, 242, 542, 571, 584], "xyz": [40, 45, 46, 71, 88, 101, 104, 109, 112, 133, 144, 174, 179, 180, 205, 226, 239, 242, 247, 251, 279, 292, 301, 307, 312, 323, 331, 336, 371, 454, 468, 578], "coordin": [40, 45, 46, 61, 63, 85, 104, 110, 112, 131, 133, 135, 174, 179, 180, 196, 198, 223, 242, 248, 251, 277, 279, 281, 301, 312, 323, 336, 409, 424, 439, 543, 572, 578], "end": [40, 41, 43, 45, 46, 48, 61, 123, 131, 152, 174, 175, 177, 179, 180, 183, 196, 269, 277, 301, 323], "along": [40, 46, 125, 174, 180, 271], "which": [40, 52, 53, 56, 116, 117, 174, 187, 188, 191, 255, 256, 541, 570], "includ": [40, 174, 283, 547, 584, 589], "float": [40, 41, 42, 43, 44, 45, 46, 48, 61, 63, 72, 81, 86, 90, 104, 106, 108, 110, 124, 125, 131, 133, 135, 174, 175, 176, 177, 178, 179, 180, 183, 196, 198, 206, 217, 224, 228, 242, 244, 246, 248, 270, 271, 277, 279, 281, 329, 330, 331, 336, 348, 350, 377, 403, 460, 474, 488, 502, 504, 525, 543, 547, 550, 551, 572, 578], "vector": [41, 46, 48, 88, 101, 108, 109, 122, 175, 180, 183, 226, 239, 246, 247, 266, 331, 336, 377, 460, 474, 476, 482, 488, 490], "locat": [45, 46, 179, 180], "midpoint": [45, 179], "outsid": [46, 56, 180, 191], "lie": [46, 180], "random": [47, 65, 67, 68, 69, 70, 111, 181, 200, 201, 202, 203, 204, 249], "sampl": [47, 111, 181, 249], "over": [49, 90, 113, 154, 155, 171, 184, 228, 252, 268, 282, 283], "bool": [49, 52, 53, 54, 70, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 98, 99, 100, 101, 113, 116, 117, 129, 130, 154, 156, 171, 184, 187, 188, 189, 204, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 236, 237, 238, 239, 252, 255, 256, 275, 276, 282, 303, 304, 314, 315, 325, 326, 329, 330, 338, 339, 352, 353, 367, 368, 381, 382, 405, 406, 420, 421, 435, 436, 450, 451, 464, 465, 478, 479, 492, 493, 506, 507, 521, 522, 549, 580, 581], "yield": [49, 52, 53, 90, 113, 116, 117, 127, 154, 155, 171, 184, 187, 188, 228, 252, 255, 256, 265, 267, 268, 273, 282, 283], "addit": [49, 52, 53, 83, 99, 113, 116, 117, 140, 141, 142, 143, 184, 187, 188, 220, 237, 252, 255, 256, 288, 289, 290, 291, 312], "next": [49, 52, 53, 90, 113, 116, 117, 127, 154, 155, 171, 184, 187, 188, 228, 252, 255, 256, 265, 268, 273, 282, 283, 329, 330, 587, 588], "its": [49, 52, 53, 108, 116, 117, 124, 125, 128, 146, 147, 184, 187, 188, 246, 255, 256, 270, 271, 274, 294, 295, 302, 305, 306, 312, 313, 316, 317, 324, 327, 328, 337, 340, 341, 351, 354, 355, 366, 369, 370, 380, 383, 384, 388, 404, 407, 408, 419, 422, 423, 434, 437, 438, 449, 452, 453, 463, 466, 467, 477, 480, 481, 491, 494, 495, 505, 508, 509, 520, 523, 524, 579, 582, 583], "attr": [49, 52, 53, 113, 184, 187, 188, 252], "contain": [50, 51, 57, 59, 60, 64, 73, 115, 129, 185, 186, 192, 194, 195, 199, 207, 254, 275, 298, 299, 300, 303, 309, 310, 311, 314, 320, 321, 322, 325, 333, 334, 335, 338, 344, 345, 346, 352, 361, 362, 363, 367, 373, 374, 375, 381, 390, 391, 392, 405, 414, 415, 416, 420, 429, 430, 431, 435, 444, 445, 446, 450, 456, 457, 458, 464, 470, 471, 472, 478, 484, 485, 486, 492, 498, 499, 500, 506, 515, 516, 517, 521, 575, 576, 577, 580], "per": [50, 51, 65, 115, 185, 186, 200, 254, 398, 399, 525], "request": [50, 51, 103, 185, 186, 241], "condit": [52, 53, 116, 117, 187, 188, 255, 256, 589], "certain": [52, 53, 72, 86, 106, 116, 117, 187, 188, 206, 224, 244, 255, 256], "can": [52, 83, 99, 116, 187, 220, 237, 255, 584, 588], "min": [52, 116, 187, 255], "max": [52, 116, 187, 255], "predic": [53, 117, 188, 256], "lambda": [53, 117, 188, 256], "callabl": [53, 117, 124, 188, 256, 270, 549, 552], "you": [53, 117, 188, 256, 585, 586, 587, 588], "want": [53, 117, 188, 256, 588], "evalu": [53, 117, 188, 256], "take": [53, 56, 117, 188, 191, 256, 399], "fix": [54, 98, 124, 152, 189, 236, 270, 584], "straightlin": [54, 98, 189, 236], "emb": [54, 98, 189, 236], "two": [54, 55, 77, 98, 123, 155, 156, 189, 190, 212, 236, 269, 301, 323, 588], "straight": [54, 56, 83, 98, 99, 189, 191, 220, 236, 237], "embed": [54, 56, 83, 84, 98, 99, 100, 189, 191, 220, 221, 236, 237, 238], "wa": [54, 98, 189, 236, 584, 588], "success": [54, 98, 189, 236], "otherwis": [54, 73, 77, 78, 81, 82, 83, 84, 85, 98, 99, 100, 189, 207, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 236, 237, 238, 578, 589], "importerror": [54, 83, 98, 99, 189, 220, 236, 237], "networkx": [54, 62, 98, 132, 189, 197, 236, 278], "instal": [54, 83, 98, 99, 189, 220, 236, 237, 584, 587], "each": [55, 56, 114, 133, 190, 191, 253, 279], "repres": [55, 61, 133, 190, 196, 279], "vertex": [55, 56, 67, 76, 145, 190, 191, 201, 210, 293], "breakpoint": [56, 191], "face": [56, 191], "break": [56, 191], "found": [56, 191], "primarili": [56, 191], "up": [56, 86, 106, 191, 224, 244, 588], "between": [56, 65, 123, 191, 200, 269, 348, 377, 460, 474, 488, 502], "specif": [56, 73, 74, 80, 191, 207, 208, 216, 588], "For": [56, 191, 527, 528, 552, 553, 557, 558], "applic": [56, 191], "involv": [56, 191], "dual": [56, 191], "where": [56, 119, 127, 191, 260, 273, 336, 573, 578], "extern": [56, 191], "reaction": [56, 122, 191, 266, 482, 539, 584, 587], "input": [56, 191, 584], "essenti": [56, 191], "wall": [56, 191], "follow": [56, 191, 403, 525, 588, 589], "maze": [56, 191], "solv": [56, 191, 403, 525, 587, 588], "It": [56, 83, 99, 191, 220, 237], "reli": [56, 191], "repes": [56, 191], "determin": [56, 191], "order": [56, 156, 191, 283, 399], "around": [56, 191], "alwai": [56, 191], "turn": [56, 191], "classmethod": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 192, 193, 194, 195, 196, 197, 198, 199, 200, 298, 299, 300, 301, 309, 310, 311, 312, 320, 321, 322, 323, 333, 334, 335, 336, 344, 345, 346, 361, 362, 363, 373, 374, 375, 390, 391, 392, 414, 415, 416, 429, 430, 431, 444, 445, 446, 456, 457, 458, 470, 471, 472, 484, 485, 486, 498, 499, 500, 515, 516, 517, 575, 576, 577, 578], "instanc": [57, 58, 59, 60, 62, 132, 192, 193, 194, 195, 197, 278, 298, 299, 300, 309, 310, 311, 320, 321, 322, 333, 334, 335, 344, 345, 346, 361, 362, 363, 373, 374, 375, 390, 391, 392, 414, 415, 416, 429, 430, 431, 444, 445, 446, 456, 457, 458, 470, 471, 472, 484, 485, 486, 498, 499, 500, 515, 516, 517, 575, 576, 577], "ha": [57, 59, 60, 78, 79, 127, 192, 194, 195, 213, 215, 273, 298, 299, 300, 309, 310, 311, 320, 321, 322, 333, 334, 335, 344, 345, 346, 361, 362, 363, 373, 374, 375, 390, 391, 392, 414, 415, 416, 429, 430, 431, 444, 445, 446, 456, 457, 458, 470, 471, 472, 484, 485, 486, 498, 499, 500, 515, 516, 517, 575, 576, 577, 578, 588], "correct": [57, 59, 60, 192, 194, 195, 298, 299, 300, 309, 310, 311, 320, 321, 322, 333, 334, 335, 344, 345, 346, 361, 362, 363, 373, 374, 375, 390, 391, 392, 414, 415, 416, 429, 430, 431, 444, 445, 446, 456, 457, 458, 470, 471, 472, 484, 485, 486, 498, 499, 500, 515, 516, 517, 575, 576, 577], "schema": [57, 59, 60, 128, 146, 147, 192, 194, 195, 274, 294, 295, 298, 299, 300, 302, 305, 306, 309, 310, 311, 313, 316, 317, 320, 321, 322, 324, 327, 328, 333, 334, 335, 337, 340, 341, 344, 345, 346, 351, 354, 355, 361, 362, 363, 366, 369, 370, 373, 374, 375, 380, 383, 384, 390, 391, 392, 404, 407, 408, 414, 415, 416, 419, 422, 423, 429, 430, 431, 434, 437, 438, 444, 445, 446, 449, 452, 453, 456, 457, 458, 463, 466, 467, 470, 471, 472, 477, 480, 481, 484, 485, 486, 491, 494, 495, 498, 499, 500, 505, 508, 509, 515, 516, 517, 520, 523, 524, 575, 576, 577, 579, 582, 583], "new": [58, 62, 132, 193, 197, 278, 588], "inform": [58, 193, 552], "about": [58, 193, 586], "filepath": [59, 64, 129, 134, 194, 199, 275, 280, 299, 303, 310, 314, 321, 325, 334, 338, 345, 352, 362, 367, 374, 381, 391, 405, 415, 420, 430, 435, 445, 450, 457, 464, 471, 478, 485, 492, 499, 506, 516, 521, 553, 576, 580], "serial": [59, 60, 129, 130, 194, 195, 275, 276, 299, 300, 303, 304, 310, 311, 314, 315, 321, 322, 325, 326, 334, 335, 338, 339, 345, 346, 352, 353, 362, 363, 367, 368, 374, 375, 381, 382, 391, 392, 405, 406, 415, 416, 420, 421, 430, 431, 435, 436, 445, 446, 450, 451, 457, 458, 464, 465, 471, 472, 478, 479, 485, 486, 492, 493, 499, 500, 506, 507, 516, 517, 521, 522, 576, 577, 580, 581, 584], "string": [59, 60, 64, 72, 86, 106, 129, 130, 134, 194, 195, 199, 206, 224, 244, 275, 276, 280, 299, 300, 303, 304, 310, 311, 314, 315, 321, 322, 325, 326, 334, 335, 338, 339, 345, 346, 352, 353, 362, 363, 367, 368, 374, 375, 381, 382, 391, 392, 405, 406, 415, 416, 420, 421, 430, 431, 435, 436, 445, 446, 450, 451, 457, 458, 464, 465, 471, 472, 478, 479, 485, 486, 492, 493, 499, 500, 506, 507, 516, 517, 521, 522, 576, 577, 580, 581], "like": [59, 64, 129, 134, 194, 199, 275, 280, 299, 303, 310, 314, 321, 325, 334, 338, 345, 352, 362, 367, 374, 381, 391, 405, 415, 420, 430, 435, 445, 450, 457, 464, 471, 478, 485, 492, 499, 506, 516, 521, 576, 580, 587, 588], "url": [59, 64, 194, 199, 299, 310, 321, 334, 345, 362, 374, 391, 415, 430, 445, 457, 471, 485, 499, 516, 576, 585], "precis": [61, 64, 72, 86, 106, 196, 199, 206, 224, 244], "geometr": [61, 64, 72, 86, 106, 196, 199, 206, 224, 244, 545], "map": [61, 64, 72, 75, 76, 86, 87, 106, 145, 196, 199, 206, 209, 210, 224, 225, 244, 293, 394, 400, 527, 534, 537, 557, 564, 567], "digraph": [62, 132, 197, 278], "specifi": [63, 72, 86, 106, 198, 206, 224, 244, 550, 584], "hshabl": [63, 198], "cloud": [65, 200], "pointcloud": [65, 200], "deprec": [67, 68, 69, 70, 201, 202, 203, 204, 584], "sinc": [67, 68, 69, 70, 201, 202, 203, 204], "version": [67, 68, 69, 70, 201, 202, 203, 204, 584, 588], "13": [67, 68, 69, 70, 201, 202, 203, 204], "edge_sampl": [67, 68, 201, 202], "instead": [67, 68, 69, 70, 137, 201, 202, 203, 204, 285, 584, 588], "n": [68, 70, 111, 202, 204, 249, 588], "node_sampl": [69, 70, 203, 204], "exclude_leav": [70, 204], "exclud": [70, 204], "leav": [70, 204], "one": [70, 78, 79, 204, 213, 215, 329, 330, 398, 399, 587, 588], "verifi": [73, 74, 77, 78, 79, 80, 84, 85, 100, 207, 208, 212, 213, 215, 216, 221, 223, 238, 388], "taken": [73, 207], "account": [73, 207], "indic": [75, 133, 209, 279, 394, 400, 588], "index": [75, 76, 87, 145, 209, 210, 225, 293], "uv": [76, 145, 210, 293], "everi": [77, 124, 156, 212, 270, 329, 330], "them": [77, 212], "network_is_connect": [77, 212], "least": [78, 155, 213, 403, 525], "leaf": [79, 215], "min_forc": [81, 90, 217, 228], "06": [81, 90, 217, 228, 329, 330, 403, 525], "check": [81, 82, 83, 99, 105, 217, 218, 220, 237, 243, 584], "larg": [81, 90, 217, 228], "enough": [81, 90, 217, 228], "minimum": [81, 90, 217, 228], "magnitud": [81, 90, 217, 228, 331], "consid": [81, 90, 217, 228], "flag": [81, 82, 156, 211, 214, 217, 218, 219, 222, 329, 330, 584, 588], "packag": [83, 99, 220, 237], "drawn": [83, 99, 220, 237], "without": [83, 84, 99, 100, 220, 221, 237, 238, 589], "shown": [83, 99, 220, 237], "furthermor": [83, 99, 220, 237], "python": [83, 99, 220, 237, 586, 587, 588], "bind": [83, 99, 220, 237], "suit": [83, 99, 220, 237], "anaconda": [83, 99, 220, 237, 588], "org": [83, 99, 220, 237, 552, 553, 585], "conda": [83, 99, 220, 237], "forg": [83, 99, 220, 237, 588], "fase": [84, 100, 221, 238], "normal": [88, 101, 226, 239], "laplacian": [88, 101, 108, 226, 239, 246], "entri": [88, 101, 226, 239, 398, 399], "diagon": [88, 101, 226, 239], "l": [88, 101, 226, 239], "dot": [88, 101, 226, 239], "centroid": [88, 101, 108, 110, 124, 226, 239, 246, 248, 270], "therefor": [88, 101, 226, 239], "By": [88, 101, 226, 239], "sign": [88, 101, 226, 239, 318, 584], "dsiplac": [88, 101, 226, 239], "could": [88, 101, 226, 239], "more": [88, 101, 226, 239, 403, 525, 552], "natur": [88, 101, 226, 239], "wai": [88, 101, 226, 239, 588], "ring": [91, 108, 229, 246], "compon": [104, 109, 242, 247, 584, 588], "neighborhood": [108, 246], "load_vector": [109, 247], "match": [116, 117, 255, 256, 482, 527, 528, 557, 558, 578], "assign": [121, 127, 250, 262, 273, 573, 578], "residu": [122, 266], "shortest": [123, 269], "lead": [123, 269], "kmax": [124, 270], "damp": [124, 270], "callback": [124, 270, 329, 330, 549], "callback_arg": [124, 270], "move": [124, 270, 403, 525, 587], "free": [124, 270, 584, 589], "mesh": [124, 270, 545, 548], "maximum": [124, 270, 329, 330, 403, 525], "factor": [124, 270], "user": [124, 270, 552, 584, 588], "execut": [124, 270], "after": [124, 270], "pass": [124, 270, 588], "except": [124, 125, 147, 270, 271, 295, 306, 317, 328, 341, 355, 370, 384, 408, 423, 438, 453, 467, 481, 495, 509, 524, 583], "split": [125, 271, 584], "insert": [125, 271], "posit": [125, 271, 329, 330, 331, 336, 371, 454, 468, 578], "valueerror": [125, 271], "been": [127, 273, 588], "convert": [128, 274, 302, 313, 324, 337, 351, 366, 380, 404, 419, 434, 449, 463, 477, 491, 505, 520, 579, 584], "nativ": [128, 274, 302, 313, 324, 337, 351, 366, 380, 404, 419, 434, 449, 463, 477, 491, 505, 520, 579, 587], "represent": [128, 129, 130, 147, 274, 275, 276, 295, 302, 303, 304, 306, 313, 314, 315, 317, 324, 325, 326, 328, 337, 338, 339, 341, 351, 352, 353, 355, 366, 367, 368, 370, 380, 381, 382, 384, 404, 405, 406, 408, 419, 420, 421, 423, 434, 435, 436, 438, 449, 450, 451, 453, 463, 464, 465, 467, 477, 478, 479, 481, 491, 492, 493, 495, 505, 506, 507, 509, 520, 521, 522, 524, 579, 580, 581, 583], "describ": [128, 274, 301, 302, 312, 313, 323, 324, 337, 351, 366, 380, 404, 419, 434, 449, 463, 477, 491, 505, 520, 579], "pretti": [129, 130, 275, 276, 303, 304, 314, 315, 325, 326, 338, 339, 352, 353, 367, 368, 381, 382, 405, 406, 420, 421, 435, 436, 450, 451, 464, 465, 478, 479, 492, 493, 506, 507, 521, 522, 580, 581], "human": [129, 275, 303, 314, 325, 338, 352, 367, 381, 405, 420, 435, 450, 464, 478, 492, 506, 521, 580], "readabl": [129, 275, 303, 314, 325, 338, 352, 367, 381, 405, 420, 435, 450, 464, 478, 492, 506, 521, 580], "s": [130, 146, 147, 276, 294, 295, 301, 304, 305, 306, 315, 316, 317, 323, 326, 327, 328, 339, 340, 341, 353, 354, 355, 358, 359, 368, 369, 370, 382, 383, 384, 406, 407, 408, 411, 412, 421, 422, 423, 426, 427, 436, 437, 438, 441, 442, 451, 452, 453, 465, 466, 467, 479, 480, 481, 493, 494, 495, 507, 508, 509, 512, 513, 522, 523, 524, 581, 582, 583, 588], "newli": [132, 278], "write": [134, 280], "modifi": [136, 137, 144, 284, 285, 292, 385, 589], "place": [136, 284], "copi": [137, 285, 589], "origin": [137, 156, 218, 265, 285, 409, 424, 439], "unset": [138, 139, 286, 287], "implicitli": [138, 139, 286, 287], "back": [138, 139, 286, 287], "store": [138, 139, 286, 287], "attr_dict": [140, 141, 142, 143, 288, 289, 290, 291], "kwattr": [140, 141, 142, 143, 288, 289, 290, 291], "updat": [140, 141, 142, 143, 288, 289, 290, 291, 542, 551, 571, 584], "compil": [140, 141, 142, 143, 288, 289, 290, 291], "remain": [140, 141, 142, 143, 288, 289, 290, 291], "valid": [146, 147, 294, 295, 305, 306, 316, 317, 327, 328, 340, 341, 354, 355, 369, 370, 383, 384, 407, 408, 422, 423, 437, 438, 452, 453, 466, 467, 480, 481, 494, 495, 508, 509, 523, 524, 582, 583], "against": [146, 147, 294, 295, 305, 306, 316, 317, 327, 328, 329, 330, 340, 341, 354, 355, 369, 370, 383, 384, 407, 408, 422, 423, 437, 438, 452, 453, 466, 467, 475, 480, 481, 494, 495, 508, 509, 523, 524, 582, 583], "schemaerror": [146, 294, 305, 316, 327, 340, 354, 369, 383, 407, 422, 437, 452, 466, 480, 494, 508, 523, 582], "jsonschema": [147, 295, 306, 317, 328, 341, 355, 370, 384, 408, 423, 438, 453, 467, 481, 495, 509, 524, 583], "validationerror": [147, 295, 306, 317, 328, 341, 355, 370, 384, 408, 423, 438, 453, 467, 481, 495, 509, 524, 583], "veri": 148, "mark": [152, 329, 330], "continu": [152, 588], "thei": [152, 584, 588], "aren": 152, "simultan": [154, 171, 282, 587], "process": 156, "travers": 156, "begin": 156, "sequenc": [156, 182, 250, 267, 283], "characterist": 156, "append": 156, "unassign": 156, "part": [156, 588], "previou": 156, "recalcul": 156, "call": [156, 584, 588], "attach": [159, 161], "given": [182, 528, 558], "whether": [211, 214, 222, 589], "k": 250, "largest": 267, "extra": [301, 312, 323, 584], "overrid": 318, "absolut": [318, 358, 359, 411, 412, 426, 427, 441, 442, 512, 513], "howev": [318, 587], "combinatori": [318, 585, 587], "preserv": 318, "todo": 318, "addexplicit": 318, "signatur": [318, 584], "constructor": 318, "run": [329, 330, 403, 525, 587, 588], "distanc": [329, 330, 348, 377, 460, 474, 488, 502], "threshold": [329, 330, 403, 525], "converg": [329, 330, 403, 525], "compar": [329, 330, 475], "sum": [329, 330], "hit": [329, 330, 403, 525, 588], "befor": [329, 330, 588], "consum": [329, 330], "calcul": [329, 330, 358, 359, 393, 411, 412, 426, 427, 441, 442, 512, 513, 584], "stop": [329, 330, 403, 525], "earli": [329, 330, 403, 525], "oper": [329, 330, 587], "formdiagram": [329, 330, 403, 525, 526, 578], "weight": [342, 371, 454, 468, 482, 496], "floatconstraint": [342, 496, 584], "reach": [342, 496], "error": [348, 377, 460, 474, 488, 502, 584, 588], "squar": [348, 377, 403, 460, 474, 488, 502, 525], "differ": [348, 377, 460, 474, 488, 502, 587], "edgeparamet": [356, 510], "parametr": [357, 410, 425, 440, 511], "lower": [358, 411, 426, 441, 512], "minu": [358, 411, 426, 441, 512], "upper": [359, 412, 427, 442, 513], "plu": [359, 412, 427, 442, 513], "vectorconstraint": [371, 454, 468, 482, 584], "pull": [371, 454, 468], "rai": 371, "meet": [385, 587], "problem": [387, 388, 403, 525, 587, 588], "sane": 388, "mind": 388, "ad": [395, 584], "grad_func": 397, "paremet": 399, "care": 399, "keep": [399, 584, 588], "nlopt": [403, 525, 584], "local": [403, 525], "sequenti": [403, 525], "program": [403, 525, 588], "low": [403, 525], "storag": [403, 525], "broyden": [403, 525], "fletcher": [403, 525], "goldfarb": [403, 525], "shanno": [403, 525], "auglag": [403, 525], "augment": [403, 525], "lagrangian": [403, 525], "mma": [403, 525], "asymptot": [403, 525], "tnewton": [403, 525], "precondit": [403, 525], "truncat": [403, 525], "newton": [403, 525], "document": [403, 525, 584, 588, 589], "detail": [403, 525], "theoret": [403, 525], "underpin": [403, 525], "ignor": [403, 525, 584], "until": [403, 525], "exhaust": [403, 525], "cem": [403, 525, 585, 586], "nodeparamet": [409, 424, 439], "constrain": [525, 585, 587, 588], "task": 525, "through": [525, 588], "proxi": 525, "server": 525, "hyperspac": 525, "tunnel": 525, "grad_norm": 525, "cummul": 525, "durat": [525, 550], "millisecond": 525, "statu": 525, "item": [526, 527, 528, 541, 545, 546, 548, 556, 557, 558, 570], "networkartist": [526, 556], "artist": [526, 527, 528, 541, 545, 556, 557, 558, 570, 584], "draw": [526, 533, 534, 535, 536, 537, 538, 539, 545, 556, 563, 564, 565, 566, 567, 568, 584], "form_diagram": 526, "collect": [527, 528, 533, 557, 558, 563, 588], "relev": [527, 528, 557, 558], "see": [527, 528, 552, 553, 557, 558], "accord": [527, 557], "item_artist": [527, 557], "regist": [527, 552, 557], "artist_typ": [528, 541, 558, 570], "clear": [530, 531, 560, 561], "canva": [530, 531, 560, 561, 588], "label": [532, 534, 537, 562, 564, 567], "entir": [533, 563], "text": [534, 537, 564, 567], "select": [534, 537, 564, 567], "act": 536, "view": [540, 543, 555, 569, 572], "item_typ": [541, 570], "context": [541, 570], "compat": [541, 570, 584], "blender": [541, 570, 587], "visual": [541, 542, 570, 571, 588], "limit": [542, 571, 588, 589], "corner": [543, 572], "box": [543, 555, 572], "thin": 544, "wrapper": 544, "compas_plott": 544, "api": [544, 552, 553, 587], "union": [545, 548], "primit": [545, 548], "plotterartist": [545, 546, 548], "paus": [547, 551], "interv": [549, 550], "frame": [549, 584, 587], "dpi": 549, "150": 549, "decor": 549, "dynam": 549, "dure": 550, "amount": 551, "listen": 552, "pick": 552, "event": [552, 589], "handler": 552, "doc": 552, "mpl_connect": 552, "handl": 552, "matplotlib": [552, 553], "backend_bases_api": 552, "backend_bas": 552, "figurecanvasbas": 552, "event_handl": 552, "full": [553, 584], "overview": 553, "configur": 553, "pyplot_api": 553, "pyplot": 553, "savefig": 553, "displai": [554, 584], "zoom": 555, "topology_diagram": 556, "inscrib": 566, "circl": 566, "node_support": 573, "notabl": 584, "project": [584, 585], "adher": 584, "semant": 584, "implement": 584, "diagramobject": 584, "topologydiagramobject": 584, "formdiagramobject": 584, "proxyserv": 584, "gh": [584, 588], "acceler": 584, "__str__": 584, "constrainedformfind": 584, "nlopt_statu": 584, "better": 584, "interpret": 584, "ghpython": [584, 588], "bug": 584, "registr": 584, "creation": 584, "caus": 584, "old": 584, "compas_rhino": [584, 588], "rhinoplan": 584, "from_geometri": 584, "from_rhino_point_and_vector": 584, "from_rhino_point": 584, "from_rhino_lin": 584, "ghdata": 584, "jenssen": 584, "tube": 584, "is_node_support": 584, "renam": 584, "search": 584, "topologyartist": 584, "formartist": 584, "via": [584, 587], "plugin": [584, 587], "global": [584, 587], "color": 584, "dark": 584, "blue": 584, "grai": 584, "mechan": 584, "compli": 584, "topologyplott": 584, "formplott": 584, "serializ": 584, "pin": 584, "depend": [584, 587, 588], "8": 584, "due": 584, "networkplott": 584, "green": 584, "light": 584, "assembl": 584, "ghplugin": 584, "wrap": 584, "edgesearch": 584, "output": 584, "drop": [584, 588], "ld": 584, "subscript": 584, "skip": 584, "assembletopologydiagram": 584, "draw_arrow": 584, "_draw_load": 584, "_draw_load_arrow": 584, "arrow": 584, "export": 584, "draw_trail": 584, "topologyartistcompon": 584, "number_of_trail_edg": 584, "number_of_deviation_edg": 584, "__repr__": 584, "edge_kei": 584, "node_kei": 584, "replac": [584, 588], "noderesult": 584, "wit": 584, "supportnoderesult": 584, "merg": [584, 589], "access": 584, "expos": 584, "hard": 584, "code": [584, 585, 587, 588], "ghcompon": 584, "to_compa": 584, "planeconstraint": 584, "formfind": 584, "eps_min": 584, "equilibrium_st": 584, "equilibrium_state_numpi": 584, "draw_seg": 584, "scheme": 584, "draw_edg": 584, "tight": 584, "autoscal": 584, "save": 584, "overcrop": 584, "imag": 584, "custom": 584, "form_plotter_proxi": 584, "topology_plotter_proxi": 584, "polygon": 584, "static_equilibrium_numpi": 584, "took": 584, "temporari": 584, "patch": 584, "deviationedgelengthconstraint": 584, "autograd": 584, "is_auxiliary_trail_edg": 584, "filter": 584, "number_of_auxiliary_trail": 584, "properti": 584, "auxiliary_trail_vector": 584, "under": 584, "anyth": 584, "longer": [584, 588], "reflect": 584, "immut": 584, "children": 584, "refactor": 584, "folder": 584, "nodemixin": 584, "node_xyz": 584, "rhino_instal": 584, "streamlin": 584, "symlink": 584, "src": 584, "ghuser": [584, 588], "gitignor": 584, "uninstal": [584, 588], "tag": 584, "regex": 584, "bumpvers": 584, "cfg": 584, "md": 584, "rst": 584, "research": 585, "pleas": [585, 588], "our": [585, 587, 588], "paper": 585, "preprint": 585, "misc": 585, "pastrana_constrainedformfinding_2021": 585, "titl": 585, "differenti": [585, 587], "pastrana": [585, 587, 589], "rafael": [585, 587, 589], "ohlbrock": [585, 587], "patrick": 585, "ol": [585, 587], "acunto": [585, 587], "pierluigi": [585, 587], "parascho": [585, 587], "stefana": [585, 587], "year": 585, "2021": [585, 589], "arxiv": 585, "ab": 585, "2111": 585, "02607": 585, "eprint": 585, "archiveprefix": 585, "And": 585, "repositori": 585, "softwar": [585, 587, 589], "model": [585, 587, 588], "framework": [585, 587], "doi": 585, "5281": 585, "zenodo": 585, "5705740": 585, "arpastrana": 585, "github": 585, "io": 585, "_cem": 585, "arpj": 585, "princeton": [585, 587], "arch": 585, "ethz": 585, "ch": 585, "oleohlbrock": 585, "pierluigidacunto": 585, "tum": 585, "de": 585, "edu": 585, "stefanaparascho": 585, "excit": 586, "mai": [586, 588], "help": 586, "approach": 587, "spatial": 587, "bar": 587, "subject": [587, 589], "combin": 587, "design": 587, "encapsul": 587, "open": 587, "tool": [587, 588], "enabl": 587, "formul": 587, "solut": 587, "plain": 587, "mix": 587, "explor": 587, "wider": 587, "spectrum": 587, "typolog": 587, "space": 587, "go": [587, 588], "beyond": 587, "convent": 587, "catalog": 587, "shell": 587, "cabl": 587, "net": 587, "effici": 587, "priori": 587, "best": 587, "fit": [587, 589], "shape": 587, "restrain": 587, "control": 587, "usabl": 587, "across": 587, "system": 587, "window": [587, 588], "maco": [587, 588], "linux": [587, 588], "perhap": 587, "dai": [587, 588], "also": 587, "metavers": 587, "cad": 587, "work": [587, 588], "necessari": 587, "interfac": 587, "seamlessli": 587, "insid": 587, "popular": 587, "environ": 587, "As": [587, 588], "extens": [587, 588], "offer": 587, "integr": 587, "exchang": 587, "other": [587, 588, 589], "ecosystem": 587, "those": [587, 588], "slider": 587, "person": [587, 589], "worri": 587, "ship": 587, "too": 587, "precook": 587, "readili": 587, "engin": [587, 588], "your": 587, "spaghetti": 587, "pipelin": 587, "develop": 587, "endors": 587, "introduct": 587, "changelog": 587, "cite": 587, "licens": 587, "four": 588, "step": 588, "we": 588, "have": 588, "machin": 588, "command": 588, "prompt": 588, "termin": 588, "chose": 588, "spacecowboi": 588, "prefer": 588, "bubbl": 588, "isol": 588, "In": 588, "word": 588, "what": 588, "happen": 588, "stai": 588, "requir": 588, "recommend": 588, "consult": 588, "encount": 588, "being": 588, "abl": 588, "microsoft": 588, "miss": 588, "fail": 588, "saniti": 588, "known": 588, "issu": 588, "page": 588, "instruct": 588, "how": 588, "liner": 588, "To": 588, "everyth": 588, "enter": 588, "celebr": 588, "There": 588, "complex": 588, "easier": 588, "do": [588, 589], "few": 588, "mous": 588, "click": 588, "hundr": 588, "bit": 588, "familiar": 588, "addition": 588, "close": 588, "three": 588, "sure": 588, "proceed": 588, "case": 588, "older": 588, "m": 588, "compani": 588, "let": 588, "compas_ghpython": 588, "were": 588, "wonder": 588, "launch": 588, "onto": 588, "send": 588, "pictur": 588, "onc": 588, "forget": 588, "who": 588, "don": 588, "know": 588, "consequ": 588, "alreadi": 588, "NOT": [588, 589], "past": 588, "latest": 588, "upgrad": 588, "altern": 588, "switch": 588, "had": 588, "mit": 589, "copyright": 589, "2020": 589, "permiss": 589, "herebi": 589, "grant": 589, "charg": 589, "obtain": 589, "associ": 589, "deal": 589, "restrict": 589, "right": 589, "publish": 589, "distribut": 589, "sublicens": 589, "sell": 589, "permit": 589, "whom": 589, "furnish": 589, "so": 589, "abov": 589, "notic": 589, "shall": 589, "substanti": 589, "portion": 589, "THE": 589, "IS": 589, "AS": 589, "warranti": 589, "OF": 589, "kind": 589, "express": 589, "OR": 589, "impli": 589, "BUT": 589, "TO": 589, "merchant": 589, "FOR": 589, "particular": 589, "purpos": 589, "AND": 589, "noninfring": 589, "NO": 589, "author": 589, "holder": 589, "BE": 589, "liabl": 589, "claim": 589, "damag": 589, "liabil": 589, "action": 589, "contract": 589, "tort": 589, "aris": 589, "WITH": 589}, "objects": {"": [[13, 0, 0, "-", "compas_cem"]], "compas_cem": [[14, 0, 0, "-", "diagrams"], [15, 0, 0, "-", "elements"], [16, 0, 0, "-", "equilibrium"], [17, 0, 0, "-", "loads"], [18, 0, 0, "-", "optimization"], [19, 0, 0, "-", "plotters"], [20, 0, 0, "-", "supports"], [21, 0, 0, "-", "viewers"]], "compas_cem.diagrams": [[22, 1, 1, "", "FormDiagram"], [148, 1, 1, "", "TopologyDiagram"]], "compas_cem.diagrams.FormDiagram": [[23, 2, 1, "", "add_edge"], [24, 2, 1, "", "add_node"], [25, 2, 1, "", "adjacency_matrix"], [26, 2, 1, "", "clear"], [27, 2, 1, "", "complement"], [28, 2, 1, "", "connected_edges"], [29, 2, 1, "", "connectivity_matrix"], [30, 2, 1, "", "copy"], [31, 2, 1, "", "count_crossings"], [32, 2, 1, "", "degree"], [33, 2, 1, "", "degree_in"], [34, 2, 1, "", "degree_matrix"], [35, 2, 1, "", "degree_out"], [36, 2, 1, "", "delete_edge"], [37, 2, 1, "", "delete_node"], [38, 2, 1, "", "edge_attribute"], [39, 2, 1, "", "edge_attributes"], [40, 2, 1, "", "edge_coordinates"], [41, 2, 1, "", "edge_direction"], [42, 2, 1, "", "edge_force"], [43, 2, 1, "", "edge_length"], [44, 2, 1, "", "edge_length_2"], [45, 2, 1, "", "edge_midpoint"], [46, 2, 1, "", "edge_point"], [47, 2, 1, "", "edge_sample"], [48, 2, 1, "", "edge_vector"], [49, 2, 1, "", "edges"], [50, 2, 1, "", "edges_attribute"], [51, 2, 1, "", "edges_attributes"], [52, 2, 1, "", "edges_where"], [53, 2, 1, "", "edges_where_predicate"], [54, 2, 1, "", "embed_in_plane"], [55, 2, 1, "", "find_crossings"], [56, 2, 1, "", "find_cycles"], [57, 2, 1, "", "from_data"], [58, 2, 1, "", "from_edges"], [59, 2, 1, "", "from_json"], [60, 2, 1, "", "from_jsonstring"], [61, 2, 1, "", "from_lines"], [62, 2, 1, "", "from_networkx"], [63, 2, 1, "", "from_nodes_and_edges"], [64, 2, 1, "", "from_obj"], [65, 2, 1, "", "from_pointcloud"], [66, 2, 1, "", "from_topology_diagram"], [67, 2, 1, "", "get_any_edge"], [68, 2, 1, "", "get_any_edges"], [69, 2, 1, "", "get_any_node"], [70, 2, 1, "", "get_any_nodes"], [71, 2, 1, "", "gkey"], [72, 2, 1, "", "gkey_key"], [73, 2, 1, "", "has_edge"], [74, 2, 1, "", "has_node"], [75, 2, 1, "", "index_key"], [76, 2, 1, "", "index_uv"], [77, 2, 1, "", "is_connected"], [78, 2, 1, "", "is_crossed"], [79, 2, 1, "", "is_leaf"], [80, 2, 1, "", "is_node_connected"], [81, 2, 1, "", "is_node_loaded"], [82, 2, 1, "", "is_node_support"], [83, 2, 1, "", "is_planar"], [84, 2, 1, "", "is_planar_embedding"], [85, 2, 1, "", "is_xy"], [86, 2, 1, "", "key_gkey"], [87, 2, 1, "", "key_index"], [88, 2, 1, "", "laplacian_matrix"], [89, 2, 1, "", "leaves"], [90, 2, 1, "", "loaded_nodes"], [91, 2, 1, "", "neighborhood"], [92, 2, 1, "", "neighbors"], [93, 2, 1, "", "neighbors_in"], [94, 2, 1, "", "neighbors_out"], [95, 2, 1, "", "network_adjacency_matrix"], [96, 2, 1, "", "network_connectivity_matrix"], [97, 2, 1, "", "network_degree_matrix"], [98, 2, 1, "", "network_embed_in_plane"], [99, 2, 1, "", "network_is_planar"], [100, 2, 1, "", "network_is_planar_embedding"], [101, 2, 1, "", "network_laplacian_matrix"], [102, 2, 1, "", "node_attribute"], [103, 2, 1, "", "node_attributes"], [104, 2, 1, "", "node_coordinates"], [105, 2, 1, "", "node_exists"], [106, 2, 1, "", "node_gkey"], [107, 2, 1, "", "node_key"], [108, 2, 1, "", "node_laplacian"], [109, 2, 1, "", "node_load"], [110, 2, 1, "", "node_neighborhood_centroid"], [111, 2, 1, "", "node_sample"], [112, 2, 1, "", "node_xyz"], [113, 2, 1, "", "nodes"], [114, 2, 1, "", "nodes_attribute"], [115, 2, 1, "", "nodes_attributes"], [116, 2, 1, "", "nodes_where"], [117, 2, 1, "", "nodes_where_predicate"], [118, 2, 1, "", "number_of_edges"], [119, 2, 1, "", "number_of_loaded_nodes"], [120, 2, 1, "", "number_of_nodes"], [121, 2, 1, "", "number_of_support_nodes"], [122, 2, 1, "", "reaction_force"], [123, 2, 1, "", "shortest_path"], [124, 2, 1, "", "smooth"], [125, 2, 1, "", "split_edge"], [126, 2, 1, "", "summary"], [127, 2, 1, "", "support_nodes"], [128, 2, 1, "", "to_data"], [129, 2, 1, "", "to_json"], [130, 2, 1, "", "to_jsonstring"], [131, 2, 1, "", "to_lines"], [132, 2, 1, "", "to_networkx"], [133, 2, 1, "", "to_nodes_and_edges"], [134, 2, 1, "", "to_obj"], [135, 2, 1, "", "to_points"], [136, 2, 1, "", "transform"], [137, 2, 1, "", "transformed"], [138, 2, 1, "", "unset_edge_attribute"], [139, 2, 1, "", "unset_node_attribute"], [140, 2, 1, "", "update_dea"], [141, 2, 1, "", "update_default_edge_attributes"], [142, 2, 1, "", "update_default_node_attributes"], [143, 2, 1, "", "update_dna"], [144, 2, 1, "", "update_node_xyz"], [145, 2, 1, "", "uv_index"], [146, 2, 1, "", "validate_data"], [147, 2, 1, "", "validate_json"]], "compas_cem.diagrams.TopologyDiagram": [[149, 2, 1, "", "add_edge"], [150, 2, 1, "", "add_load"], [151, 2, 1, "", "add_node"], [152, 2, 1, "", "add_support"], [153, 2, 1, "", "adjacency_matrix"], [154, 2, 1, "", "auxiliary_trail_edges"], [155, 2, 1, "", "auxiliary_trails"], [156, 2, 1, "", "build_trails"], [157, 2, 1, "", "clear"], [158, 2, 1, "", "complement"], [159, 2, 1, "", "connected_deviation_edges"], [160, 2, 1, "", "connected_edges"], [161, 2, 1, "", "connected_trail_edges"], [162, 2, 1, "", "connectivity_matrix"], [163, 2, 1, "", "copy"], [164, 2, 1, "", "count_crossings"], [165, 2, 1, "", "degree"], [166, 2, 1, "", "degree_in"], [167, 2, 1, "", "degree_matrix"], [168, 2, 1, "", "degree_out"], [169, 2, 1, "", "delete_edge"], [170, 2, 1, "", "delete_node"], [171, 2, 1, "", "deviation_edges"], [172, 2, 1, "", "edge_attribute"], [173, 2, 1, "", "edge_attributes"], [174, 2, 1, "", "edge_coordinates"], [175, 2, 1, "", "edge_direction"], [176, 2, 1, "", "edge_force"], [177, 2, 1, "", "edge_length"], [178, 2, 1, "", "edge_length_2"], [179, 2, 1, "", "edge_midpoint"], [180, 2, 1, "", "edge_point"], [181, 2, 1, "", "edge_sample"], [182, 2, 1, "", "edge_sequence"], [183, 2, 1, "", "edge_vector"], [184, 2, 1, "", "edges"], [185, 2, 1, "", "edges_attribute"], [186, 2, 1, "", "edges_attributes"], [187, 2, 1, "", "edges_where"], [188, 2, 1, "", "edges_where_predicate"], [189, 2, 1, "", "embed_in_plane"], [190, 2, 1, "", "find_crossings"], [191, 2, 1, "", "find_cycles"], [192, 2, 1, "", "from_data"], [193, 2, 1, "", "from_edges"], [194, 2, 1, "", "from_json"], [195, 2, 1, "", "from_jsonstring"], [196, 2, 1, "", "from_lines"], [197, 2, 1, "", "from_networkx"], [198, 2, 1, "", "from_nodes_and_edges"], [199, 2, 1, "", "from_obj"], [200, 2, 1, "", "from_pointcloud"], [201, 2, 1, "", "get_any_edge"], [202, 2, 1, "", "get_any_edges"], [203, 2, 1, "", "get_any_node"], [204, 2, 1, "", "get_any_nodes"], [205, 2, 1, "", "gkey"], [206, 2, 1, "", "gkey_key"], [207, 2, 1, "", "has_edge"], [208, 2, 1, "", "has_node"], [209, 2, 1, "", "index_key"], [210, 2, 1, "", "index_uv"], [211, 2, 1, "", "is_auxiliary_trail_edge"], [212, 2, 1, "", "is_connected"], [213, 2, 1, "", "is_crossed"], [214, 2, 1, "", "is_deviation_edge"], [215, 2, 1, "", "is_leaf"], [216, 2, 1, "", "is_node_connected"], [217, 2, 1, "", "is_node_loaded"], [218, 2, 1, "", "is_node_origin"], [219, 2, 1, "", "is_node_support"], [220, 2, 1, "", "is_planar"], [221, 2, 1, "", "is_planar_embedding"], [222, 2, 1, "", "is_trail_edge"], [223, 2, 1, "", "is_xy"], [224, 2, 1, "", "key_gkey"], [225, 2, 1, "", "key_index"], [226, 2, 1, "", "laplacian_matrix"], [227, 2, 1, "", "leaves"], [228, 2, 1, "", "loaded_nodes"], [229, 2, 1, "", "neighborhood"], [230, 2, 1, "", "neighbors"], [231, 2, 1, "", "neighbors_in"], [232, 2, 1, "", "neighbors_out"], [233, 2, 1, "", "network_adjacency_matrix"], [234, 2, 1, "", "network_connectivity_matrix"], [235, 2, 1, "", "network_degree_matrix"], [236, 2, 1, "", "network_embed_in_plane"], [237, 2, 1, "", "network_is_planar"], [238, 2, 1, "", "network_is_planar_embedding"], [239, 2, 1, "", "network_laplacian_matrix"], [240, 2, 1, "", "node_attribute"], [241, 2, 1, "", "node_attributes"], [242, 2, 1, "", "node_coordinates"], [243, 2, 1, "", "node_exists"], [244, 2, 1, "", "node_gkey"], [245, 2, 1, "", "node_key"], [246, 2, 1, "", "node_laplacian"], [247, 2, 1, "", "node_load"], [248, 2, 1, "", "node_neighborhood_centroid"], [249, 2, 1, "", "node_sample"], [250, 2, 1, "", "node_sequence"], [251, 2, 1, "", "node_xyz"], [252, 2, 1, "", "nodes"], [253, 2, 1, "", "nodes_attribute"], [254, 2, 1, "", "nodes_attributes"], [255, 2, 1, "", "nodes_where"], [256, 2, 1, "", "nodes_where_predicate"], [257, 2, 1, "", "number_of_auxiliary_trails"], [258, 2, 1, "", "number_of_deviation_edges"], [259, 2, 1, "", "number_of_edges"], [260, 2, 1, "", "number_of_loaded_nodes"], [261, 2, 1, "", "number_of_nodes"], [262, 2, 1, "", "number_of_support_nodes"], [263, 2, 1, "", "number_of_trail_edges"], [264, 2, 1, "", "number_of_trails"], [265, 2, 1, "", "origin_nodes"], [266, 2, 1, "", "reaction_force"], [267, 2, 1, "", "sequence_max"], [268, 2, 1, "", "sequences"], [269, 2, 1, "", "shortest_path"], [270, 2, 1, "", "smooth"], [271, 2, 1, "", "split_edge"], [272, 2, 1, "", "summary"], [273, 2, 1, "", "support_nodes"], [274, 2, 1, "", "to_data"], [275, 2, 1, "", "to_json"], [276, 2, 1, "", "to_jsonstring"], [277, 2, 1, "", "to_lines"], [278, 2, 1, "", "to_networkx"], [279, 2, 1, "", "to_nodes_and_edges"], [280, 2, 1, "", "to_obj"], [281, 2, 1, "", "to_points"], [282, 2, 1, "", "trail_edges"], [283, 2, 1, "", "trails"], [284, 2, 1, "", "transform"], [285, 2, 1, "", "transformed"], [286, 2, 1, "", "unset_edge_attribute"], [287, 2, 1, "", "unset_node_attribute"], [288, 2, 1, "", "update_dea"], [289, 2, 1, "", "update_default_edge_attributes"], [290, 2, 1, "", "update_default_node_attributes"], [291, 2, 1, "", "update_dna"], [292, 2, 1, "", "update_node_xyz"], [293, 2, 1, "", "uv_index"], [294, 2, 1, "", "validate_data"], [295, 2, 1, "", "validate_json"]], "compas_cem.elements": [[296, 1, 1, "", "DeviationEdge"], [307, 1, 1, "", "Node"], [318, 1, 1, "", "TrailEdge"]], "compas_cem.elements.DeviationEdge": [[297, 2, 1, "", "copy"], [298, 2, 1, "", "from_data"], [299, 2, 1, "", "from_json"], [300, 2, 1, "", "from_jsonstring"], [301, 2, 1, "", "from_line"], [302, 2, 1, "", "to_data"], [303, 2, 1, "", "to_json"], [304, 2, 1, "", "to_jsonstring"], [305, 2, 1, "", "validate_data"], [306, 2, 1, "", "validate_json"]], "compas_cem.elements.Node": [[308, 2, 1, "", "copy"], [309, 2, 1, "", "from_data"], [310, 2, 1, "", "from_json"], [311, 2, 1, "", "from_jsonstring"], [312, 2, 1, "", "from_point"], [313, 2, 1, "", "to_data"], [314, 2, 1, "", "to_json"], [315, 2, 1, "", "to_jsonstring"], [316, 2, 1, "", "validate_data"], [317, 2, 1, "", "validate_json"]], "compas_cem.elements.TrailEdge": [[319, 2, 1, "", "copy"], [320, 2, 1, "", "from_data"], [321, 2, 1, "", "from_json"], [322, 2, 1, "", "from_jsonstring"], [323, 2, 1, "", "from_line"], [324, 2, 1, "", "to_data"], [325, 2, 1, "", "to_json"], [326, 2, 1, "", "to_jsonstring"], [327, 2, 1, "", "validate_data"], [328, 2, 1, "", "validate_json"]], "compas_cem.equilibrium": [[329, 3, 1, "", "static_equilibrium"], [330, 3, 1, "", "static_equilibrium_numpy"]], "compas_cem.loads": [[331, 1, 1, "", "NodeLoad"]], "compas_cem.loads.NodeLoad": [[332, 2, 1, "", "copy"], [333, 2, 1, "", "from_data"], [334, 2, 1, "", "from_json"], [335, 2, 1, "", "from_jsonstring"], [336, 2, 1, "", "from_point_and_vector"], [337, 2, 1, "", "to_data"], [338, 2, 1, "", "to_json"], [339, 2, 1, "", "to_jsonstring"], [340, 2, 1, "", "validate_data"], [341, 2, 1, "", "validate_json"]], "compas_cem.optimization": [[342, 1, 1, "", "DeviationEdgeLengthConstraint"], [356, 1, 1, "", "DeviationEdgeParameter"], [371, 1, 1, "", "LineConstraint"], [385, 1, 1, "", "Optimizer"], [409, 1, 1, "", "OriginNodeXParameter"], [424, 1, 1, "", "OriginNodeYParameter"], [439, 1, 1, "", "OriginNodeZParameter"], [454, 1, 1, "", "PlaneConstraint"], [468, 1, 1, "", "PointConstraint"], [482, 1, 1, "", "ReactionForceConstraint"], [496, 1, 1, "", "TrailEdgeForceConstraint"], [510, 1, 1, "", "TrailEdgeParameter"], [525, 3, 1, "", "solve_nlopt_proxy"]], "compas_cem.optimization.DeviationEdgeLengthConstraint": [[343, 2, 1, "", "copy"], [344, 2, 1, "", "from_data"], [345, 2, 1, "", "from_json"], [346, 2, 1, "", "from_jsonstring"], [347, 2, 1, "", "key"], [348, 2, 1, "", "penalty"], [349, 2, 1, "", "reference"], [350, 2, 1, "", "target"], [351, 2, 1, "", "to_data"], [352, 2, 1, "", "to_json"], [353, 2, 1, "", "to_jsonstring"], [354, 2, 1, "", "validate_data"], [355, 2, 1, "", "validate_json"]], "compas_cem.optimization.DeviationEdgeParameter": [[357, 2, 1, "", "attr_name"], [358, 2, 1, "", "bound_low"], [359, 2, 1, "", "bound_up"], [360, 2, 1, "", "copy"], [361, 2, 1, "", "from_data"], [362, 2, 1, "", "from_json"], [363, 2, 1, "", "from_jsonstring"], [364, 2, 1, "", "key"], [365, 2, 1, "", "start_value"], [366, 2, 1, "", "to_data"], [367, 2, 1, "", "to_json"], [368, 2, 1, "", "to_jsonstring"], [369, 2, 1, "", "validate_data"], [370, 2, 1, "", "validate_json"]], "compas_cem.optimization.LineConstraint": [[372, 2, 1, "", "copy"], [373, 2, 1, "", "from_data"], [374, 2, 1, "", "from_json"], [375, 2, 1, "", "from_jsonstring"], [376, 2, 1, "", "key"], [377, 2, 1, "", "penalty"], [378, 2, 1, "", "reference"], [379, 2, 1, "", "target"], [380, 2, 1, "", "to_data"], [381, 2, 1, "", "to_json"], [382, 2, 1, "", "to_jsonstring"], [383, 2, 1, "", "validate_data"], [384, 2, 1, "", "validate_json"]], "compas_cem.optimization.Optimizer": [[386, 2, 1, "", "add_constraint"], [387, 2, 1, "", "add_parameter"], [388, 2, 1, "", "check_optimization_sanity"], [389, 2, 1, "", "copy"], [390, 2, 1, "", "from_data"], [391, 2, 1, "", "from_json"], [392, 2, 1, "", "from_jsonstring"], [393, 2, 1, "", "gradient_func"], [394, 2, 1, "", "index_parameter"], [395, 2, 1, "", "number_of_constraints"], [396, 2, 1, "", "number_of_parameters"], [397, 2, 1, "", "objective_func"], [398, 2, 1, "", "optimization_bounds"], [399, 2, 1, "", "optimization_parameters"], [400, 2, 1, "", "parameter_index"], [401, 2, 1, "", "remove_constraint"], [402, 2, 1, "", "remove_parameter"], [403, 2, 1, "", "solve_nlopt"], [404, 2, 1, "", "to_data"], [405, 2, 1, "", "to_json"], [406, 2, 1, "", "to_jsonstring"], [407, 2, 1, "", "validate_data"], [408, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeXParameter": [[410, 2, 1, "", "attr_name"], [411, 2, 1, "", "bound_low"], [412, 2, 1, "", "bound_up"], [413, 2, 1, "", "copy"], [414, 2, 1, "", "from_data"], [415, 2, 1, "", "from_json"], [416, 2, 1, "", "from_jsonstring"], [417, 2, 1, "", "key"], [418, 2, 1, "", "start_value"], [419, 2, 1, "", "to_data"], [420, 2, 1, "", "to_json"], [421, 2, 1, "", "to_jsonstring"], [422, 2, 1, "", "validate_data"], [423, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeYParameter": [[425, 2, 1, "", "attr_name"], [426, 2, 1, "", "bound_low"], [427, 2, 1, "", "bound_up"], [428, 2, 1, "", "copy"], [429, 2, 1, "", "from_data"], [430, 2, 1, "", "from_json"], [431, 2, 1, "", "from_jsonstring"], [432, 2, 1, "", "key"], [433, 2, 1, "", "start_value"], [434, 2, 1, "", "to_data"], [435, 2, 1, "", "to_json"], [436, 2, 1, "", "to_jsonstring"], [437, 2, 1, "", "validate_data"], [438, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeZParameter": [[440, 2, 1, "", "attr_name"], [441, 2, 1, "", "bound_low"], [442, 2, 1, "", "bound_up"], [443, 2, 1, "", "copy"], [444, 2, 1, "", "from_data"], [445, 2, 1, "", "from_json"], [446, 2, 1, "", "from_jsonstring"], [447, 2, 1, "", "key"], [448, 2, 1, "", "start_value"], [449, 2, 1, "", "to_data"], [450, 2, 1, "", "to_json"], [451, 2, 1, "", "to_jsonstring"], [452, 2, 1, "", "validate_data"], [453, 2, 1, "", "validate_json"]], "compas_cem.optimization.PlaneConstraint": [[455, 2, 1, "", "copy"], [456, 2, 1, "", "from_data"], [457, 2, 1, "", "from_json"], [458, 2, 1, "", "from_jsonstring"], [459, 2, 1, "", "key"], [460, 2, 1, "", "penalty"], [461, 2, 1, "", "reference"], [462, 2, 1, "", "target"], [463, 2, 1, "", "to_data"], [464, 2, 1, "", "to_json"], [465, 2, 1, "", "to_jsonstring"], [466, 2, 1, "", "validate_data"], [467, 2, 1, "", "validate_json"]], "compas_cem.optimization.PointConstraint": [[469, 2, 1, "", "copy"], [470, 2, 1, "", "from_data"], [471, 2, 1, "", "from_json"], [472, 2, 1, "", "from_jsonstring"], [473, 2, 1, "", "key"], [474, 2, 1, "", "penalty"], [475, 2, 1, "", "reference"], [476, 2, 1, "", "target"], [477, 2, 1, "", "to_data"], [478, 2, 1, "", "to_json"], [479, 2, 1, "", "to_jsonstring"], [480, 2, 1, "", "validate_data"], [481, 2, 1, "", "validate_json"]], "compas_cem.optimization.ReactionForceConstraint": [[483, 2, 1, "", "copy"], [484, 2, 1, "", "from_data"], [485, 2, 1, "", "from_json"], [486, 2, 1, "", "from_jsonstring"], [487, 2, 1, "", "key"], [488, 2, 1, "", "penalty"], [489, 2, 1, "", "reference"], [490, 2, 1, "", "target"], [491, 2, 1, "", "to_data"], [492, 2, 1, "", "to_json"], [493, 2, 1, "", "to_jsonstring"], [494, 2, 1, "", "validate_data"], [495, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeForceConstraint": [[497, 2, 1, "", "copy"], [498, 2, 1, "", "from_data"], [499, 2, 1, "", "from_json"], [500, 2, 1, "", "from_jsonstring"], [501, 2, 1, "", "key"], [502, 2, 1, "", "penalty"], [503, 2, 1, "", "reference"], [504, 2, 1, "", "target"], [505, 2, 1, "", "to_data"], [506, 2, 1, "", "to_json"], [507, 2, 1, "", "to_jsonstring"], [508, 2, 1, "", "validate_data"], [509, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeParameter": [[511, 2, 1, "", "attr_name"], [512, 2, 1, "", "bound_low"], [513, 2, 1, "", "bound_up"], [514, 2, 1, "", "copy"], [515, 2, 1, "", "from_data"], [516, 2, 1, "", "from_json"], [517, 2, 1, "", "from_jsonstring"], [518, 2, 1, "", "key"], [519, 2, 1, "", "start_value"], [520, 2, 1, "", "to_data"], [521, 2, 1, "", "to_json"], [522, 2, 1, "", "to_jsonstring"], [523, 2, 1, "", "validate_data"], [524, 2, 1, "", "validate_json"]], "compas_cem.plotters": [[526, 1, 1, "", "FormArtist"], [544, 1, 1, "", "Plotter"], [556, 1, 1, "", "TopologyArtist"]], "compas_cem.plotters.FormArtist": [[527, 2, 1, "", "build"], [528, 2, 1, "", "build_as"], [529, 2, 1, "", "clear"], [530, 2, 1, "", "clear_edges"], [531, 2, 1, "", "clear_nodes"], [532, 2, 1, "", "draw"], [533, 2, 1, "", "draw_collection"], [534, 2, 1, "", "draw_edgelabels"], [535, 2, 1, "", "draw_edges"], [536, 2, 1, "", "draw_loads"], [537, 2, 1, "", "draw_nodelabels"], [538, 2, 1, "", "draw_nodes"], [539, 2, 1, "", "draw_reactions"], [540, 2, 1, "", "redraw"], [541, 2, 1, "", "register"], [542, 2, 1, "", "update_data"], [543, 2, 1, "", "viewbox"]], "compas_cem.plotters.Plotter": [[545, 2, 1, "", "add"], [546, 2, 1, "", "add_from_list"], [547, 2, 1, "", "draw"], [548, 2, 1, "", "find"], [549, 2, 1, "", "on"], [550, 2, 1, "", "pause"], [551, 2, 1, "", "redraw"], [552, 2, 1, "", "register_listener"], [553, 2, 1, "", "save"], [554, 2, 1, "", "show"], [555, 2, 1, "", "zoom_extents"]], "compas_cem.plotters.TopologyArtist": [[557, 2, 1, "", "build"], [558, 2, 1, "", "build_as"], [559, 2, 1, "", "clear"], [560, 2, 1, "", "clear_edges"], [561, 2, 1, "", "clear_nodes"], [562, 2, 1, "", "draw"], [563, 2, 1, "", "draw_collection"], [564, 2, 1, "", "draw_edgelabels"], [565, 2, 1, "", "draw_edges"], [566, 2, 1, "", "draw_loads"], [567, 2, 1, "", "draw_nodelabels"], [568, 2, 1, "", "draw_nodes"], [569, 2, 1, "", "redraw"], [570, 2, 1, "", "register"], [571, 2, 1, "", "update_data"], [572, 2, 1, "", "viewbox"]], "compas_cem.supports": [[573, 1, 1, "", "NodeSupport"]], "compas_cem.supports.NodeSupport": [[574, 2, 1, "", "copy"], [575, 2, 1, "", "from_data"], [576, 2, 1, "", "from_json"], [577, 2, 1, "", "from_jsonstring"], [578, 2, 1, "", "from_point"], [579, 2, 1, "", "to_data"], [580, 2, 1, "", "to_json"], [581, 2, 1, "", "to_jsonstring"], [582, 2, 1, "", "validate_data"], [583, 2, 1, "", "validate_json"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"python": 0, "01": 1, "simpl": 1, "compress": 1, "structur": [1, 4], "02": 2, "brace": 2, "tower": 2, "2d": [2, 3, 4, 7], "03": 3, "bridg": [3, 7, 8], "optim": [3, 18, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408], "04": 4, "tree": 4, "05": 5, "planar": 5, "tensegr": [5, 10], "wheel": 5, "grasshopp": [6, 588], "A": 7, "b": 8, "tubular": 8, "3d": 8, "c": 9, "circular": 9, "dome": 9, "d": 10, "jessen": 10, "e": 11, "spiral": 11, "staircas": 11, "api": 12, "refer": [12, 349, 378, 461, 475, 489, 503], "compas_cem": [13, 14, 15, 16, 17, 18, 19, 20, 21], "diagram": 14, "element": 15, "edg": [15, 49, 184], "node": [15, 113, 252, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "equilibrium": 16, "load": 17, "constraint": 18, "paramet": 18, "plotter": [19, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555], "artist": 19, "support": 20, "viewer": 21, "visual": 21, "object": 21, "formdiagram": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "add_edg": [23, 149], "add_nod": [24, 151], "adjacency_matrix": [25, 153], "clear": [26, 157, 529, 559], "complement": [27, 158], "connected_edg": [28, 160], "connectivity_matrix": [29, 162], "copi": [30, 163, 297, 308, 319, 332, 343, 360, 372, 389, 413, 428, 443, 455, 469, 483, 497, 514, 574], "count_cross": [31, 164], "degre": [32, 165], "degree_in": [33, 166], "degree_matrix": [34, 167], "degree_out": [35, 168], "delete_edg": [36, 169], "delete_nod": [37, 170], "edge_attribut": [38, 39, 172, 173], "edge_coordin": [40, 174], "edge_direct": [41, 175], "edge_forc": [42, 176], "edge_length": [43, 177], "edge_length_2": [44, 178], "edge_midpoint": [45, 179], "edge_point": [46, 180], "edge_sampl": [47, 181], "edge_vector": [48, 183], "edges_attribut": [50, 51, 185, 186], "edges_wher": [52, 187], "edges_where_pred": [53, 188], "embed_in_plan": [54, 189], "find_cross": [55, 190], "find_cycl": [56, 191], "from_data": [57, 192, 298, 309, 320, 333, 344, 361, 373, 390, 414, 429, 444, 456, 470, 484, 498, 515, 575], "from_edg": [58, 193], "from_json": [59, 194, 299, 310, 321, 334, 345, 362, 374, 391, 415, 430, 445, 457, 471, 485, 499, 516, 576], "from_jsonstr": [60, 195, 300, 311, 322, 335, 346, 363, 375, 392, 416, 431, 446, 458, 472, 486, 500, 517, 577], "from_lin": [61, 196, 301, 323], "from_networkx": [62, 197], "from_nodes_and_edg": [63, 198], "from_obj": [64, 199], "from_pointcloud": [65, 200], "from_topology_diagram": 66, "get_any_edg": [67, 68, 201, 202], "get_any_nod": [69, 70, 203, 204], "gkei": [71, 205], "gkey_kei": [72, 206], "has_edg": [73, 207], "has_nod": [74, 208], "index_kei": [75, 209], "index_uv": [76, 210], "is_connect": [77, 212], "is_cross": [78, 213], "is_leaf": [79, 215], "is_node_connect": [80, 216], "is_node_load": [81, 217], "is_node_support": [82, 219], "is_planar": [83, 220], "is_planar_embed": [84, 221], "is_xi": [85, 223], "key_gkei": [86, 224], "key_index": [87, 225], "laplacian_matrix": [88, 226], "leav": [89, 227], "loaded_nod": [90, 228], "neighborhood": [91, 229], "neighbor": [92, 230], "neighbors_in": [93, 231], "neighbors_out": [94, 232], "network_adjacency_matrix": [95, 233], "network_connectivity_matrix": [96, 234], "network_degree_matrix": [97, 235], "network_embed_in_plan": [98, 236], "network_is_planar": [99, 237], "network_is_planar_embed": [100, 238], "network_laplacian_matrix": [101, 239], "node_attribut": [102, 103, 240, 241], "node_coordin": [104, 242], "node_exist": [105, 243], "node_gkei": [106, 244], "node_kei": [107, 245], "node_laplacian": [108, 246], "node_load": [109, 247], "node_neighborhood_centroid": [110, 248], "node_sampl": [111, 249], "node_xyz": [112, 251], "nodes_attribut": [114, 115, 253, 254], "nodes_wher": [116, 255], "nodes_where_pred": [117, 256], "number_of_edg": [118, 259], "number_of_loaded_nod": [119, 260], "number_of_nod": [120, 261], "number_of_support_nod": [121, 262], "reaction_forc": [122, 266], "shortest_path": [123, 269], "smooth": [124, 270], "split_edg": [125, 271], "summari": [126, 272], "support_nod": [127, 273], "to_data": [128, 274, 302, 313, 324, 337, 351, 366, 380, 404, 419, 434, 449, 463, 477, 491, 505, 520, 579], "to_json": [129, 275, 303, 314, 325, 338, 352, 367, 381, 405, 420, 435, 450, 464, 478, 492, 506, 521, 580], "to_jsonstr": [130, 276, 304, 315, 326, 339, 353, 368, 382, 406, 421, 436, 451, 465, 479, 493, 507, 522, 581], "to_lin": [131, 277], "to_networkx": [132, 278], "to_nodes_and_edg": [133, 279], "to_obj": [134, 280], "to_point": [135, 281], "transform": [136, 137, 284, 285], "unset_edge_attribut": [138, 286], "unset_node_attribut": [139, 287], "update_dea": [140, 288], "update_default_edge_attribut": [141, 289], "update_default_node_attribut": [142, 290], "update_dna": [143, 291], "update_node_xyz": [144, 292], "uv_index": [145, 293], "validate_data": [146, 294, 305, 316, 327, 340, 354, 369, 383, 407, 422, 437, 452, 466, 480, 494, 508, 523, 582], "validate_json": [147, 295, 306, 317, 328, 341, 355, 370, 384, 408, 423, 438, 453, 467, 481, 495, 509, 524, 583], "topologydiagram": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295], "add_load": 150, "add_support": 152, "auxiliary_trail_edg": 154, "auxiliary_trail": 155, "build_trail": 156, "connected_deviation_edg": 159, "connected_trail_edg": 161, "deviation_edg": 171, "edge_sequ": 182, "is_auxiliary_trail_edg": 211, "is_deviation_edg": 214, "is_node_origin": 218, "is_trail_edg": 222, "node_sequ": 250, "number_of_auxiliary_trail": 257, "number_of_deviation_edg": 258, "number_of_trail_edg": 263, "number_of_trail": 264, "origin_nod": 265, "sequence_max": 267, "sequenc": 268, "trail_edg": 282, "trail": 283, "deviationedg": [296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "from_point": [312, 578], "trailedg": [318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "static_equilibrium": 329, "static_equilibrium_numpi": 330, "nodeload": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341], "from_point_and_vector": 336, "deviationedgelengthconstraint": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], "kei": [347, 364, 376, 417, 432, 447, 459, 473, 487, 501, 518], "penalti": [348, 377, 460, 474, 488, 502], "target": [350, 379, 462, 476, 490, 504], "deviationedgeparamet": [356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "attr_nam": [357, 410, 425, 440, 511], "bound_low": [358, 411, 426, 441, 512], "bound_up": [359, 412, 427, 442, 513], "start_valu": [365, 418, 433, 448, 519], "lineconstraint": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "add_constraint": 386, "add_paramet": 387, "check_optimization_san": 388, "gradient_func": 393, "index_paramet": 394, "number_of_constraint": 395, "number_of_paramet": 396, "objective_func": 397, "optimization_bound": 398, "optimization_paramet": 399, "parameter_index": 400, "remove_constraint": 401, "remove_paramet": 402, "solve_nlopt": 403, "originnodexparamet": [409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423], "originnodeyparamet": [424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "originnodezparamet": [439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "planeconstraint": [454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "pointconstraint": [468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "reactionforceconstraint": [482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "trailedgeforceconstraint": [496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509], "trailedgeparamet": [510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524], "solve_nlopt_proxi": 525, "formartist": [526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "build": [527, 557], "build_a": [528, 558], "clear_edg": [530, 560], "clear_nod": [531, 561], "draw": [532, 547, 562], "draw_collect": [533, 563], "draw_edgelabel": [534, 564], "draw_edg": [535, 565], "draw_load": [536, 566], "draw_nodelabel": [537, 567], "draw_nod": [538, 568], "draw_react": 539, "redraw": [540, 551, 569], "regist": [541, 570], "update_data": [542, 571], "viewbox": [543, 572], "add": 545, "add_from_list": 546, "find": 548, "paus": 550, "register_listen": 552, "save": 553, "show": 554, "zoom_ext": 555, "topologyartist": [556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572], "nodesupport": [573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583], "changelog": 584, "0": 584, "5": 584, "4": [584, 588], "1": [584, 588], "2": [584, 588], "15": 584, "14": 584, "13": 584, "12": 584, "11": 584, "9": 584, "6": 584, "3": [584, 588], "cite": 585, "author": 585, "exampl": 586, "compa": [587, 588], "cem": [587, 588], "main": 587, "featur": 587, "credit": 587, "tabl": 587, "content": 587, "instal": 588, "creat": 588, "virtual": 588, "environ": 588, "activ": 588, "via": 588, "conda": 588, "pip": 588, "plugin": 588, "remov": 588, "ani": 588, "leftov": 588, "link": 588, "check": 588, "your": 588, "updat": 588, "licens": 589}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})