Search.setIndex({"docnames": ["_examples/01_python", "_examples/01_python/01", "_examples/01_python/02", "_examples/01_python/03", "_examples/01_python/04", "_examples/01_python/05", "_examples/02_ghpython", "_examples/02_ghpython/bridge_2d", "_examples/02_ghpython/bridge_3d", "_examples/02_ghpython/dome", "_examples/02_ghpython/jessen", "_examples/02_ghpython/spiral", "api", "api/compas_cem", "api/compas_cem.diagrams", "api/compas_cem.elements", "api/compas_cem.equilibrium", "api/compas_cem.loads", "api/compas_cem.optimization", "api/compas_cem.plotters", "api/compas_cem.supports", "api/compas_cem.viewers", "api/generated/compas_cem.diagrams.FormDiagram", "api/generated/compas_cem.diagrams.FormDiagram.ToString", "api/generated/compas_cem.diagrams.FormDiagram.add_edge", "api/generated/compas_cem.diagrams.FormDiagram.add_node", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.clear", "api/generated/compas_cem.diagrams.FormDiagram.complement", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.copy", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings", "api/generated/compas_cem.diagrams.FormDiagram.degree", "api/generated/compas_cem.diagrams.FormDiagram.degree_in", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.degree_out", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge", "api/generated/compas_cem.diagrams.FormDiagram.delete_node", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction", "api/generated/compas_cem.diagrams.FormDiagram.edge_force", "api/generated/compas_cem.diagrams.FormDiagram.edge_length", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.FormDiagram.edge_point", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector", "api/generated/compas_cem.diagrams.FormDiagram.edges", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edges_where", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles", "api/generated/compas_cem.diagrams.FormDiagram.from_data", "api/generated/compas_cem.diagrams.FormDiagram.from_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_json", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.from_lines", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_obj", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.FormDiagram.gkey", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key", "api/generated/compas_cem.diagrams.FormDiagram.has_edge", "api/generated/compas_cem.diagrams.FormDiagram.has_node", "api/generated/compas_cem.diagrams.FormDiagram.index_key", "api/generated/compas_cem.diagrams.FormDiagram.index_uv", "api/generated/compas_cem.diagrams.FormDiagram.is_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed", "api/generated/compas_cem.diagrams.FormDiagram.is_edge_supported", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support", "api/generated/compas_cem.diagrams.FormDiagram.is_planar", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.is_xy", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey", "api/generated/compas_cem.diagrams.FormDiagram.key_index", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.leaves", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood", "api/generated/compas_cem.diagrams.FormDiagram.neighbors", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.node_exists", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey", "api/generated/compas_cem.diagrams.FormDiagram.node_key", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian", "api/generated/compas_cem.diagrams.FormDiagram.node_load", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.FormDiagram.node_sample", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.nodes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force", "api/generated/compas_cem.diagrams.FormDiagram.sha256", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path", "api/generated/compas_cem.diagrams.FormDiagram.smooth", "api/generated/compas_cem.diagrams.FormDiagram.split_edge", "api/generated/compas_cem.diagrams.FormDiagram.summary", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.to_data", "api/generated/compas_cem.diagrams.FormDiagram.to_json", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.to_lines", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.to_obj", "api/generated/compas_cem.diagrams.FormDiagram.to_points", "api/generated/compas_cem.diagrams.FormDiagram.transform", "api/generated/compas_cem.diagrams.FormDiagram.transformed", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.update_dea", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_dna", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.uv_index", "api/generated/compas_cem.diagrams.FormDiagram.validate_data", "api/generated/compas_cem.diagrams.FormDiagram.validate_json", "api/generated/compas_cem.diagrams.TopologyDiagram", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.clear", "api/generated/compas_cem.diagrams.TopologyDiagram.complement", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.copy", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.degree", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector", "api/generated/compas_cem.diagrams.TopologyDiagram.edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_edge_supported", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_max", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.sha256", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.summary", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.trails", "api/generated/compas_cem.diagrams.TopologyDiagram.transform", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json", "api/generated/compas_cem.elements.DeviationEdge", "api/generated/compas_cem.elements.DeviationEdge.ToString", "api/generated/compas_cem.elements.DeviationEdge.copy", "api/generated/compas_cem.elements.DeviationEdge.from_data", "api/generated/compas_cem.elements.DeviationEdge.from_json", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.from_line", "api/generated/compas_cem.elements.DeviationEdge.sha256", "api/generated/compas_cem.elements.DeviationEdge.to_data", "api/generated/compas_cem.elements.DeviationEdge.to_json", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.validate_data", "api/generated/compas_cem.elements.DeviationEdge.validate_json", "api/generated/compas_cem.elements.Node", "api/generated/compas_cem.elements.Node.ToString", "api/generated/compas_cem.elements.Node.copy", "api/generated/compas_cem.elements.Node.from_data", "api/generated/compas_cem.elements.Node.from_json", "api/generated/compas_cem.elements.Node.from_jsonstring", "api/generated/compas_cem.elements.Node.from_point", "api/generated/compas_cem.elements.Node.sha256", "api/generated/compas_cem.elements.Node.to_data", "api/generated/compas_cem.elements.Node.to_json", "api/generated/compas_cem.elements.Node.to_jsonstring", "api/generated/compas_cem.elements.Node.validate_data", "api/generated/compas_cem.elements.Node.validate_json", "api/generated/compas_cem.elements.TrailEdge", "api/generated/compas_cem.elements.TrailEdge.ToString", "api/generated/compas_cem.elements.TrailEdge.copy", "api/generated/compas_cem.elements.TrailEdge.from_data", "api/generated/compas_cem.elements.TrailEdge.from_json", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring", "api/generated/compas_cem.elements.TrailEdge.from_line", "api/generated/compas_cem.elements.TrailEdge.sha256", "api/generated/compas_cem.elements.TrailEdge.to_data", "api/generated/compas_cem.elements.TrailEdge.to_json", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring", "api/generated/compas_cem.elements.TrailEdge.validate_data", "api/generated/compas_cem.elements.TrailEdge.validate_json", "api/generated/compas_cem.equilibrium.static_equilibrium", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy", "api/generated/compas_cem.loads.NodeLoad", "api/generated/compas_cem.loads.NodeLoad.ToString", "api/generated/compas_cem.loads.NodeLoad.copy", "api/generated/compas_cem.loads.NodeLoad.from_data", "api/generated/compas_cem.loads.NodeLoad.from_json", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector", "api/generated/compas_cem.loads.NodeLoad.sha256", "api/generated/compas_cem.loads.NodeLoad.to_data", "api/generated/compas_cem.loads.NodeLoad.to_json", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring", "api/generated/compas_cem.loads.NodeLoad.validate_data", "api/generated/compas_cem.loads.NodeLoad.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.sha256", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key", "api/generated/compas_cem.optimization.DeviationEdgeParameter.sha256", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json", "api/generated/compas_cem.optimization.LineConstraint", "api/generated/compas_cem.optimization.LineConstraint.ToString", "api/generated/compas_cem.optimization.LineConstraint.copy", "api/generated/compas_cem.optimization.LineConstraint.from_data", "api/generated/compas_cem.optimization.LineConstraint.from_json", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.key", "api/generated/compas_cem.optimization.LineConstraint.penalty", "api/generated/compas_cem.optimization.LineConstraint.reference", "api/generated/compas_cem.optimization.LineConstraint.sha256", "api/generated/compas_cem.optimization.LineConstraint.target", "api/generated/compas_cem.optimization.LineConstraint.to_data", "api/generated/compas_cem.optimization.LineConstraint.to_json", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.validate_data", "api/generated/compas_cem.optimization.LineConstraint.validate_json", "api/generated/compas_cem.optimization.Optimizer", "api/generated/compas_cem.optimization.Optimizer.ToString", "api/generated/compas_cem.optimization.Optimizer.add_constraint", "api/generated/compas_cem.optimization.Optimizer.add_parameter", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity", "api/generated/compas_cem.optimization.Optimizer.copy", "api/generated/compas_cem.optimization.Optimizer.from_data", "api/generated/compas_cem.optimization.Optimizer.from_json", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring", "api/generated/compas_cem.optimization.Optimizer.gradient_func", "api/generated/compas_cem.optimization.Optimizer.index_parameter", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters", "api/generated/compas_cem.optimization.Optimizer.objective_func", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters", "api/generated/compas_cem.optimization.Optimizer.parameter_index", "api/generated/compas_cem.optimization.Optimizer.remove_constraint", "api/generated/compas_cem.optimization.Optimizer.remove_parameter", "api/generated/compas_cem.optimization.Optimizer.sha256", "api/generated/compas_cem.optimization.Optimizer.solve", "api/generated/compas_cem.optimization.Optimizer.to_data", "api/generated/compas_cem.optimization.Optimizer.to_json", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring", "api/generated/compas_cem.optimization.Optimizer.validate_data", "api/generated/compas_cem.optimization.Optimizer.validate_json", "api/generated/compas_cem.optimization.OriginNodeXParameter", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.key", "api/generated/compas_cem.optimization.OriginNodeXParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeYParameter", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.key", "api/generated/compas_cem.optimization.OriginNodeYParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeZParameter", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.key", "api/generated/compas_cem.optimization.OriginNodeZParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json", "api/generated/compas_cem.optimization.PlaneConstraint", "api/generated/compas_cem.optimization.PlaneConstraint.ToString", "api/generated/compas_cem.optimization.PlaneConstraint.copy", "api/generated/compas_cem.optimization.PlaneConstraint.from_data", "api/generated/compas_cem.optimization.PlaneConstraint.from_json", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.key", "api/generated/compas_cem.optimization.PlaneConstraint.penalty", "api/generated/compas_cem.optimization.PlaneConstraint.reference", "api/generated/compas_cem.optimization.PlaneConstraint.sha256", "api/generated/compas_cem.optimization.PlaneConstraint.target", "api/generated/compas_cem.optimization.PlaneConstraint.to_data", "api/generated/compas_cem.optimization.PlaneConstraint.to_json", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json", "api/generated/compas_cem.optimization.PointConstraint", "api/generated/compas_cem.optimization.PointConstraint.ToString", "api/generated/compas_cem.optimization.PointConstraint.copy", "api/generated/compas_cem.optimization.PointConstraint.from_data", "api/generated/compas_cem.optimization.PointConstraint.from_json", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.key", "api/generated/compas_cem.optimization.PointConstraint.penalty", "api/generated/compas_cem.optimization.PointConstraint.reference", "api/generated/compas_cem.optimization.PointConstraint.sha256", "api/generated/compas_cem.optimization.PointConstraint.target", "api/generated/compas_cem.optimization.PointConstraint.to_data", "api/generated/compas_cem.optimization.PointConstraint.to_json", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.validate_data", "api/generated/compas_cem.optimization.PointConstraint.validate_json", "api/generated/compas_cem.optimization.ReactionForceConstraint", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.key", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference", "api/generated/compas_cem.optimization.ReactionForceConstraint.sha256", "api/generated/compas_cem.optimization.ReactionForceConstraint.target", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.sha256", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeParameter", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.key", "api/generated/compas_cem.optimization.TrailEdgeParameter.sha256", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json", "api/generated/compas_cem.optimization.solve_proxy", "api/generated/compas_cem.plotters.FormArtist", "api/generated/compas_cem.plotters.FormArtist.build", "api/generated/compas_cem.plotters.FormArtist.build_as", "api/generated/compas_cem.plotters.FormArtist.clear", "api/generated/compas_cem.plotters.FormArtist.clear_edges", "api/generated/compas_cem.plotters.FormArtist.clear_nodes", "api/generated/compas_cem.plotters.FormArtist.draw", "api/generated/compas_cem.plotters.FormArtist.draw_collection", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels", "api/generated/compas_cem.plotters.FormArtist.draw_edges", "api/generated/compas_cem.plotters.FormArtist.draw_loads", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels", "api/generated/compas_cem.plotters.FormArtist.draw_nodes", "api/generated/compas_cem.plotters.FormArtist.draw_reactions", "api/generated/compas_cem.plotters.FormArtist.redraw", "api/generated/compas_cem.plotters.FormArtist.register", "api/generated/compas_cem.plotters.FormArtist.update_data", "api/generated/compas_cem.plotters.FormArtist.viewbox", "api/generated/compas_cem.plotters.Plotter", "api/generated/compas_cem.plotters.Plotter.add", "api/generated/compas_cem.plotters.Plotter.add_from_list", "api/generated/compas_cem.plotters.Plotter.draw", "api/generated/compas_cem.plotters.Plotter.find", "api/generated/compas_cem.plotters.Plotter.on", "api/generated/compas_cem.plotters.Plotter.pause", "api/generated/compas_cem.plotters.Plotter.redraw", "api/generated/compas_cem.plotters.Plotter.register_listener", "api/generated/compas_cem.plotters.Plotter.save", "api/generated/compas_cem.plotters.Plotter.show", "api/generated/compas_cem.plotters.Plotter.zoom_extents", "api/generated/compas_cem.plotters.TopologyArtist", "api/generated/compas_cem.plotters.TopologyArtist.build", "api/generated/compas_cem.plotters.TopologyArtist.build_as", "api/generated/compas_cem.plotters.TopologyArtist.clear", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes", "api/generated/compas_cem.plotters.TopologyArtist.draw", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes", "api/generated/compas_cem.plotters.TopologyArtist.redraw", "api/generated/compas_cem.plotters.TopologyArtist.register", "api/generated/compas_cem.plotters.TopologyArtist.update_data", "api/generated/compas_cem.plotters.TopologyArtist.viewbox", "api/generated/compas_cem.supports.NodeSupport", "api/generated/compas_cem.supports.NodeSupport.ToString", "api/generated/compas_cem.supports.NodeSupport.copy", "api/generated/compas_cem.supports.NodeSupport.from_data", "api/generated/compas_cem.supports.NodeSupport.from_json", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring", "api/generated/compas_cem.supports.NodeSupport.from_point", "api/generated/compas_cem.supports.NodeSupport.sha256", "api/generated/compas_cem.supports.NodeSupport.to_data", "api/generated/compas_cem.supports.NodeSupport.to_json", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring", "api/generated/compas_cem.supports.NodeSupport.validate_data", "api/generated/compas_cem.supports.NodeSupport.validate_json", "changelog", "citing", "examples", "index", "installation", "license"], "filenames": ["_examples/01_python.rst", "_examples/01_python/01.rst", "_examples/01_python/02.rst", "_examples/01_python/03.rst", "_examples/01_python/04.rst", "_examples/01_python/05.rst", "_examples/02_ghpython.rst", "_examples/02_ghpython/bridge_2d.rst", "_examples/02_ghpython/bridge_3d.rst", "_examples/02_ghpython/dome.rst", "_examples/02_ghpython/jessen.rst", "_examples/02_ghpython/spiral.rst", "api.rst", "api/compas_cem.rst", "api/compas_cem.diagrams.rst", "api/compas_cem.elements.rst", "api/compas_cem.equilibrium.rst", "api/compas_cem.loads.rst", "api/compas_cem.optimization.rst", "api/compas_cem.plotters.rst", "api/compas_cem.supports.rst", "api/compas_cem.viewers.rst", "api/generated/compas_cem.diagrams.FormDiagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.ToString.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.clear.rst", "api/generated/compas_cem.diagrams.FormDiagram.complement.rst", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.copy.rst", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_edge_supported.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.leaves.rst", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_load.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.sha256.rst", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.FormDiagram.smooth.rst", "api/generated/compas_cem.diagrams.FormDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.summary.rst", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_points.rst", "api/generated/compas_cem.diagrams.FormDiagram.transform.rst", "api/generated/compas_cem.diagrams.FormDiagram.transformed.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.clear.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.complement.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.copy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_edge_supported.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_max.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sha256.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.summary.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transform.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json.rst", "api/generated/compas_cem.elements.DeviationEdge.rst", "api/generated/compas_cem.elements.DeviationEdge.ToString.rst", "api/generated/compas_cem.elements.DeviationEdge.copy.rst", "api/generated/compas_cem.elements.DeviationEdge.from_data.rst", "api/generated/compas_cem.elements.DeviationEdge.from_json.rst", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.from_line.rst", "api/generated/compas_cem.elements.DeviationEdge.sha256.rst", "api/generated/compas_cem.elements.DeviationEdge.to_data.rst", "api/generated/compas_cem.elements.DeviationEdge.to_json.rst", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_data.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_json.rst", "api/generated/compas_cem.elements.Node.rst", "api/generated/compas_cem.elements.Node.ToString.rst", "api/generated/compas_cem.elements.Node.copy.rst", "api/generated/compas_cem.elements.Node.from_data.rst", "api/generated/compas_cem.elements.Node.from_json.rst", "api/generated/compas_cem.elements.Node.from_jsonstring.rst", "api/generated/compas_cem.elements.Node.from_point.rst", "api/generated/compas_cem.elements.Node.sha256.rst", "api/generated/compas_cem.elements.Node.to_data.rst", "api/generated/compas_cem.elements.Node.to_json.rst", "api/generated/compas_cem.elements.Node.to_jsonstring.rst", "api/generated/compas_cem.elements.Node.validate_data.rst", "api/generated/compas_cem.elements.Node.validate_json.rst", "api/generated/compas_cem.elements.TrailEdge.rst", "api/generated/compas_cem.elements.TrailEdge.ToString.rst", "api/generated/compas_cem.elements.TrailEdge.copy.rst", "api/generated/compas_cem.elements.TrailEdge.from_data.rst", "api/generated/compas_cem.elements.TrailEdge.from_json.rst", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.from_line.rst", "api/generated/compas_cem.elements.TrailEdge.sha256.rst", "api/generated/compas_cem.elements.TrailEdge.to_data.rst", "api/generated/compas_cem.elements.TrailEdge.to_json.rst", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.validate_data.rst", "api/generated/compas_cem.elements.TrailEdge.validate_json.rst", "api/generated/compas_cem.equilibrium.static_equilibrium.rst", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy.rst", "api/generated/compas_cem.loads.NodeLoad.rst", "api/generated/compas_cem.loads.NodeLoad.ToString.rst", "api/generated/compas_cem.loads.NodeLoad.copy.rst", "api/generated/compas_cem.loads.NodeLoad.from_data.rst", "api/generated/compas_cem.loads.NodeLoad.from_json.rst", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector.rst", "api/generated/compas_cem.loads.NodeLoad.sha256.rst", "api/generated/compas_cem.loads.NodeLoad.to_data.rst", "api/generated/compas_cem.loads.NodeLoad.to_json.rst", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.validate_data.rst", "api/generated/compas_cem.loads.NodeLoad.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.sha256.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.sha256.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.LineConstraint.rst", "api/generated/compas_cem.optimization.LineConstraint.ToString.rst", "api/generated/compas_cem.optimization.LineConstraint.copy.rst", "api/generated/compas_cem.optimization.LineConstraint.from_data.rst", "api/generated/compas_cem.optimization.LineConstraint.from_json.rst", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.key.rst", "api/generated/compas_cem.optimization.LineConstraint.penalty.rst", "api/generated/compas_cem.optimization.LineConstraint.reference.rst", "api/generated/compas_cem.optimization.LineConstraint.sha256.rst", "api/generated/compas_cem.optimization.LineConstraint.target.rst", "api/generated/compas_cem.optimization.LineConstraint.to_data.rst", "api/generated/compas_cem.optimization.LineConstraint.to_json.rst", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_data.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_json.rst", "api/generated/compas_cem.optimization.Optimizer.rst", "api/generated/compas_cem.optimization.Optimizer.ToString.rst", "api/generated/compas_cem.optimization.Optimizer.add_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.add_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity.rst", "api/generated/compas_cem.optimization.Optimizer.copy.rst", "api/generated/compas_cem.optimization.Optimizer.from_data.rst", "api/generated/compas_cem.optimization.Optimizer.from_json.rst", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.gradient_func.rst", "api/generated/compas_cem.optimization.Optimizer.index_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.objective_func.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.parameter_index.rst", "api/generated/compas_cem.optimization.Optimizer.remove_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.remove_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.sha256.rst", "api/generated/compas_cem.optimization.Optimizer.solve.rst", "api/generated/compas_cem.optimization.Optimizer.to_data.rst", "api/generated/compas_cem.optimization.Optimizer.to_json.rst", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.validate_data.rst", "api/generated/compas_cem.optimization.Optimizer.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.rst", "api/generated/compas_cem.optimization.PlaneConstraint.ToString.rst", "api/generated/compas_cem.optimization.PlaneConstraint.copy.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.key.rst", "api/generated/compas_cem.optimization.PlaneConstraint.penalty.rst", "api/generated/compas_cem.optimization.PlaneConstraint.reference.rst", "api/generated/compas_cem.optimization.PlaneConstraint.sha256.rst", "api/generated/compas_cem.optimization.PlaneConstraint.target.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json.rst", "api/generated/compas_cem.optimization.PointConstraint.rst", "api/generated/compas_cem.optimization.PointConstraint.ToString.rst", "api/generated/compas_cem.optimization.PointConstraint.copy.rst", "api/generated/compas_cem.optimization.PointConstraint.from_data.rst", "api/generated/compas_cem.optimization.PointConstraint.from_json.rst", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.key.rst", "api/generated/compas_cem.optimization.PointConstraint.penalty.rst", "api/generated/compas_cem.optimization.PointConstraint.reference.rst", "api/generated/compas_cem.optimization.PointConstraint.sha256.rst", "api/generated/compas_cem.optimization.PointConstraint.target.rst", "api/generated/compas_cem.optimization.PointConstraint.to_data.rst", "api/generated/compas_cem.optimization.PointConstraint.to_json.rst", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.key.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.sha256.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.target.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.sha256.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.key.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.sha256.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.solve_proxy.rst", "api/generated/compas_cem.plotters.FormArtist.rst", "api/generated/compas_cem.plotters.FormArtist.build.rst", "api/generated/compas_cem.plotters.FormArtist.build_as.rst", "api/generated/compas_cem.plotters.FormArtist.clear.rst", "api/generated/compas_cem.plotters.FormArtist.clear_edges.rst", "api/generated/compas_cem.plotters.FormArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw.rst", "api/generated/compas_cem.plotters.FormArtist.draw_collection.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edges.rst", "api/generated/compas_cem.plotters.FormArtist.draw_loads.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw_reactions.rst", "api/generated/compas_cem.plotters.FormArtist.redraw.rst", "api/generated/compas_cem.plotters.FormArtist.register.rst", "api/generated/compas_cem.plotters.FormArtist.update_data.rst", "api/generated/compas_cem.plotters.FormArtist.viewbox.rst", "api/generated/compas_cem.plotters.Plotter.rst", "api/generated/compas_cem.plotters.Plotter.add.rst", "api/generated/compas_cem.plotters.Plotter.add_from_list.rst", "api/generated/compas_cem.plotters.Plotter.draw.rst", "api/generated/compas_cem.plotters.Plotter.find.rst", "api/generated/compas_cem.plotters.Plotter.on.rst", "api/generated/compas_cem.plotters.Plotter.pause.rst", "api/generated/compas_cem.plotters.Plotter.redraw.rst", "api/generated/compas_cem.plotters.Plotter.register_listener.rst", "api/generated/compas_cem.plotters.Plotter.save.rst", "api/generated/compas_cem.plotters.Plotter.show.rst", "api/generated/compas_cem.plotters.Plotter.zoom_extents.rst", "api/generated/compas_cem.plotters.TopologyArtist.rst", "api/generated/compas_cem.plotters.TopologyArtist.build.rst", "api/generated/compas_cem.plotters.TopologyArtist.build_as.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.redraw.rst", "api/generated/compas_cem.plotters.TopologyArtist.register.rst", "api/generated/compas_cem.plotters.TopologyArtist.update_data.rst", "api/generated/compas_cem.plotters.TopologyArtist.viewbox.rst", "api/generated/compas_cem.supports.NodeSupport.rst", "api/generated/compas_cem.supports.NodeSupport.ToString.rst", "api/generated/compas_cem.supports.NodeSupport.copy.rst", "api/generated/compas_cem.supports.NodeSupport.from_data.rst", "api/generated/compas_cem.supports.NodeSupport.from_json.rst", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.from_point.rst", "api/generated/compas_cem.supports.NodeSupport.sha256.rst", "api/generated/compas_cem.supports.NodeSupport.to_data.rst", "api/generated/compas_cem.supports.NodeSupport.to_json.rst", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.validate_data.rst", "api/generated/compas_cem.supports.NodeSupport.validate_json.rst", "changelog.rst", "citing.rst", "examples.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["Python", "01. Simple Compression Structure", "02. Braced Tower in 2D", "03. Bridge Optimization in 2D", "04. Tree Structure in 2D", "05. Planar Tensegrity Wheel", "Grasshopper", "A. Bridge in 2D", "B. Tubular Bridge in 3D", "C. Circular Dome", "D. Jessen Tensegrity", "E. Spiral Staircase", "API Reference", "compas_cem", "compas_cem.diagrams", "compas_cem.elements", "compas_cem.equilibrium", "compas_cem.loads", "compas_cem.optimization", "compas_cem.plotters", "compas_cem.supports", "compas_cem.viewers", "FormDiagram", "FormDiagram.ToString", "FormDiagram.add_edge", "FormDiagram.add_node", "FormDiagram.adjacency_matrix", "FormDiagram.clear", "FormDiagram.complement", "FormDiagram.connected_edges", "FormDiagram.connectivity_matrix", "FormDiagram.copy", "FormDiagram.count_crossings", "FormDiagram.degree", "FormDiagram.degree_in", "FormDiagram.degree_matrix", "FormDiagram.degree_out", "FormDiagram.delete_edge", "FormDiagram.delete_node", "FormDiagram.edge_attribute", "FormDiagram.edge_attributes", "FormDiagram.edge_coordinates", "FormDiagram.edge_direction", "FormDiagram.edge_force", "FormDiagram.edge_length", "FormDiagram.edge_length_2", "FormDiagram.edge_midpoint", "FormDiagram.edge_point", "FormDiagram.edge_sample", "FormDiagram.edge_vector", "FormDiagram.edges", "FormDiagram.edges_attribute", "FormDiagram.edges_attributes", "FormDiagram.edges_where", "FormDiagram.edges_where_predicate", "FormDiagram.embed_in_plane", "FormDiagram.find_crossings", "FormDiagram.find_cycles", "FormDiagram.from_data", "FormDiagram.from_edges", "FormDiagram.from_json", "FormDiagram.from_jsonstring", "FormDiagram.from_lines", "FormDiagram.from_networkx", "FormDiagram.from_nodes_and_edges", "FormDiagram.from_obj", "FormDiagram.from_pointcloud", "FormDiagram.from_topology_diagram", "FormDiagram.get_any_edge", "FormDiagram.get_any_edges", "FormDiagram.get_any_node", "FormDiagram.get_any_nodes", "FormDiagram.gkey", "FormDiagram.gkey_key", "FormDiagram.has_edge", "FormDiagram.has_node", "FormDiagram.index_key", "FormDiagram.index_uv", "FormDiagram.is_connected", "FormDiagram.is_crossed", "FormDiagram.is_edge_supported", "FormDiagram.is_leaf", "FormDiagram.is_node_connected", "FormDiagram.is_node_loaded", "FormDiagram.is_node_support", "FormDiagram.is_planar", "FormDiagram.is_planar_embedding", "FormDiagram.is_xy", "FormDiagram.key_gkey", "FormDiagram.key_index", "FormDiagram.laplacian_matrix", "FormDiagram.leaves", "FormDiagram.loaded_nodes", "FormDiagram.neighborhood", "FormDiagram.neighbors", "FormDiagram.neighbors_in", "FormDiagram.neighbors_out", "FormDiagram.network_adjacency_matrix", "FormDiagram.network_connectivity_matrix", "FormDiagram.network_degree_matrix", "FormDiagram.network_embed_in_plane", "FormDiagram.network_is_planar", "FormDiagram.network_is_planar_embedding", "FormDiagram.network_laplacian_matrix", "FormDiagram.node_attribute", "FormDiagram.node_attributes", "FormDiagram.node_coordinates", "FormDiagram.node_exists", "FormDiagram.node_gkey", "FormDiagram.node_key", "FormDiagram.node_laplacian", "FormDiagram.node_load", "FormDiagram.node_neighborhood_centroid", "FormDiagram.node_sample", "FormDiagram.node_xyz", "FormDiagram.nodes", "FormDiagram.nodes_attribute", "FormDiagram.nodes_attributes", "FormDiagram.nodes_where", "FormDiagram.nodes_where_predicate", "FormDiagram.number_of_edges", "FormDiagram.number_of_loaded_nodes", "FormDiagram.number_of_nodes", "FormDiagram.number_of_support_nodes", "FormDiagram.reaction_force", "FormDiagram.sha256", "FormDiagram.shortest_path", "FormDiagram.smooth", "FormDiagram.split_edge", "FormDiagram.summary", "FormDiagram.support_nodes", "FormDiagram.to_data", "FormDiagram.to_json", "FormDiagram.to_jsonstring", "FormDiagram.to_lines", "FormDiagram.to_networkx", "FormDiagram.to_nodes_and_edges", "FormDiagram.to_obj", "FormDiagram.to_points", "FormDiagram.transform", "FormDiagram.transformed", "FormDiagram.unset_edge_attribute", "FormDiagram.unset_node_attribute", "FormDiagram.update_dea", "FormDiagram.update_default_edge_attributes", "FormDiagram.update_default_node_attributes", "FormDiagram.update_dna", "FormDiagram.update_node_xyz", "FormDiagram.uv_index", "FormDiagram.validate_data", "FormDiagram.validate_json", "TopologyDiagram", "TopologyDiagram.ToString", "TopologyDiagram.add_edge", "TopologyDiagram.add_load", "TopologyDiagram.add_node", "TopologyDiagram.add_support", "TopologyDiagram.adjacency_matrix", "TopologyDiagram.auxiliary_trail_edges", "TopologyDiagram.auxiliary_trails", "TopologyDiagram.build_trails", "TopologyDiagram.clear", "TopologyDiagram.complement", "TopologyDiagram.connected_deviation_edges", "TopologyDiagram.connected_edges", "TopologyDiagram.connected_trail_edges", "TopologyDiagram.connectivity_matrix", "TopologyDiagram.copy", "TopologyDiagram.count_crossings", "TopologyDiagram.degree", "TopologyDiagram.degree_in", "TopologyDiagram.degree_matrix", "TopologyDiagram.degree_out", "TopologyDiagram.delete_edge", "TopologyDiagram.delete_node", "TopologyDiagram.deviation_edges", "TopologyDiagram.edge_attribute", "TopologyDiagram.edge_attributes", "TopologyDiagram.edge_coordinates", "TopologyDiagram.edge_direction", "TopologyDiagram.edge_force", "TopologyDiagram.edge_length", "TopologyDiagram.edge_length_2", "TopologyDiagram.edge_midpoint", "TopologyDiagram.edge_point", "TopologyDiagram.edge_sample", "TopologyDiagram.edge_sequence", "TopologyDiagram.edge_vector", "TopologyDiagram.edges", "TopologyDiagram.edges_attribute", "TopologyDiagram.edges_attributes", "TopologyDiagram.edges_where", "TopologyDiagram.edges_where_predicate", "TopologyDiagram.embed_in_plane", "TopologyDiagram.find_crossings", "TopologyDiagram.find_cycles", "TopologyDiagram.from_data", "TopologyDiagram.from_edges", "TopologyDiagram.from_json", "TopologyDiagram.from_jsonstring", "TopologyDiagram.from_lines", "TopologyDiagram.from_networkx", "TopologyDiagram.from_nodes_and_edges", "TopologyDiagram.from_obj", "TopologyDiagram.from_pointcloud", "TopologyDiagram.get_any_edge", "TopologyDiagram.get_any_edges", "TopologyDiagram.get_any_node", "TopologyDiagram.get_any_nodes", "TopologyDiagram.gkey", "TopologyDiagram.gkey_key", "TopologyDiagram.has_edge", "TopologyDiagram.has_node", "TopologyDiagram.index_key", "TopologyDiagram.index_uv", "TopologyDiagram.is_auxiliary_trail_edge", "TopologyDiagram.is_connected", "TopologyDiagram.is_crossed", "TopologyDiagram.is_deviation_edge", "TopologyDiagram.is_edge_supported", "TopologyDiagram.is_leaf", "TopologyDiagram.is_node_connected", "TopologyDiagram.is_node_loaded", "TopologyDiagram.is_node_origin", "TopologyDiagram.is_node_support", "TopologyDiagram.is_planar", "TopologyDiagram.is_planar_embedding", "TopologyDiagram.is_trail_edge", "TopologyDiagram.is_xy", "TopologyDiagram.key_gkey", "TopologyDiagram.key_index", "TopologyDiagram.laplacian_matrix", "TopologyDiagram.leaves", "TopologyDiagram.loaded_nodes", "TopologyDiagram.neighborhood", "TopologyDiagram.neighbors", "TopologyDiagram.neighbors_in", "TopologyDiagram.neighbors_out", "TopologyDiagram.network_adjacency_matrix", "TopologyDiagram.network_connectivity_matrix", "TopologyDiagram.network_degree_matrix", "TopologyDiagram.network_embed_in_plane", "TopologyDiagram.network_is_planar", "TopologyDiagram.network_is_planar_embedding", "TopologyDiagram.network_laplacian_matrix", "TopologyDiagram.node_attribute", "TopologyDiagram.node_attributes", "TopologyDiagram.node_coordinates", "TopologyDiagram.node_exists", "TopologyDiagram.node_gkey", "TopologyDiagram.node_key", "TopologyDiagram.node_laplacian", "TopologyDiagram.node_load", "TopologyDiagram.node_neighborhood_centroid", "TopologyDiagram.node_sample", "TopologyDiagram.node_sequence", "TopologyDiagram.node_xyz", "TopologyDiagram.nodes", "TopologyDiagram.nodes_attribute", "TopologyDiagram.nodes_attributes", "TopologyDiagram.nodes_where", "TopologyDiagram.nodes_where_predicate", "TopologyDiagram.number_of_auxiliary_trails", "TopologyDiagram.number_of_deviation_edges", "TopologyDiagram.number_of_edges", "TopologyDiagram.number_of_loaded_nodes", "TopologyDiagram.number_of_nodes", "TopologyDiagram.number_of_support_nodes", "TopologyDiagram.number_of_trail_edges", "TopologyDiagram.number_of_trails", "TopologyDiagram.origin_nodes", "TopologyDiagram.reaction_force", "TopologyDiagram.sequence_max", "TopologyDiagram.sequences", "TopologyDiagram.sha256", "TopologyDiagram.shortest_path", "TopologyDiagram.smooth", "TopologyDiagram.split_edge", "TopologyDiagram.summary", "TopologyDiagram.support_nodes", "TopologyDiagram.to_data", "TopologyDiagram.to_json", "TopologyDiagram.to_jsonstring", "TopologyDiagram.to_lines", "TopologyDiagram.to_networkx", "TopologyDiagram.to_nodes_and_edges", "TopologyDiagram.to_obj", "TopologyDiagram.to_points", "TopologyDiagram.trail_edges", "TopologyDiagram.trails", "TopologyDiagram.transform", "TopologyDiagram.transformed", "TopologyDiagram.unset_edge_attribute", "TopologyDiagram.unset_node_attribute", "TopologyDiagram.update_dea", "TopologyDiagram.update_default_edge_attributes", "TopologyDiagram.update_default_node_attributes", "TopologyDiagram.update_dna", "TopologyDiagram.update_node_xyz", "TopologyDiagram.uv_index", "TopologyDiagram.validate_data", "TopologyDiagram.validate_json", "DeviationEdge", "DeviationEdge.ToString", "DeviationEdge.copy", "DeviationEdge.from_data", "DeviationEdge.from_json", "DeviationEdge.from_jsonstring", "DeviationEdge.from_line", "DeviationEdge.sha256", "DeviationEdge.to_data", "DeviationEdge.to_json", "DeviationEdge.to_jsonstring", "DeviationEdge.validate_data", "DeviationEdge.validate_json", "Node", "Node.ToString", "Node.copy", "Node.from_data", "Node.from_json", "Node.from_jsonstring", "Node.from_point", "Node.sha256", "Node.to_data", "Node.to_json", "Node.to_jsonstring", "Node.validate_data", "Node.validate_json", "TrailEdge", "TrailEdge.ToString", "TrailEdge.copy", "TrailEdge.from_data", "TrailEdge.from_json", "TrailEdge.from_jsonstring", "TrailEdge.from_line", "TrailEdge.sha256", "TrailEdge.to_data", "TrailEdge.to_json", "TrailEdge.to_jsonstring", "TrailEdge.validate_data", "TrailEdge.validate_json", "static_equilibrium", "static_equilibrium_numpy", "NodeLoad", "NodeLoad.ToString", "NodeLoad.copy", "NodeLoad.from_data", "NodeLoad.from_json", "NodeLoad.from_jsonstring", "NodeLoad.from_point_and_vector", "NodeLoad.sha256", "NodeLoad.to_data", "NodeLoad.to_json", "NodeLoad.to_jsonstring", "NodeLoad.validate_data", "NodeLoad.validate_json", "DeviationEdgeLengthConstraint", "DeviationEdgeLengthConstraint.ToString", "DeviationEdgeLengthConstraint.copy", "DeviationEdgeLengthConstraint.from_data", "DeviationEdgeLengthConstraint.from_json", "DeviationEdgeLengthConstraint.from_jsonstring", "DeviationEdgeLengthConstraint.key", "DeviationEdgeLengthConstraint.penalty", "DeviationEdgeLengthConstraint.reference", "DeviationEdgeLengthConstraint.sha256", "DeviationEdgeLengthConstraint.target", "DeviationEdgeLengthConstraint.to_data", "DeviationEdgeLengthConstraint.to_json", "DeviationEdgeLengthConstraint.to_jsonstring", "DeviationEdgeLengthConstraint.validate_data", "DeviationEdgeLengthConstraint.validate_json", "DeviationEdgeParameter", "DeviationEdgeParameter.ToString", "DeviationEdgeParameter.attr_name", "DeviationEdgeParameter.bound_low", "DeviationEdgeParameter.bound_up", "DeviationEdgeParameter.copy", "DeviationEdgeParameter.from_data", "DeviationEdgeParameter.from_json", "DeviationEdgeParameter.from_jsonstring", "DeviationEdgeParameter.key", "DeviationEdgeParameter.sha256", "DeviationEdgeParameter.start_value", "DeviationEdgeParameter.to_data", "DeviationEdgeParameter.to_json", "DeviationEdgeParameter.to_jsonstring", "DeviationEdgeParameter.validate_data", "DeviationEdgeParameter.validate_json", "LineConstraint", "LineConstraint.ToString", "LineConstraint.copy", "LineConstraint.from_data", "LineConstraint.from_json", "LineConstraint.from_jsonstring", "LineConstraint.key", "LineConstraint.penalty", "LineConstraint.reference", "LineConstraint.sha256", "LineConstraint.target", "LineConstraint.to_data", "LineConstraint.to_json", "LineConstraint.to_jsonstring", "LineConstraint.validate_data", "LineConstraint.validate_json", "Optimizer", "Optimizer.ToString", "Optimizer.add_constraint", "Optimizer.add_parameter", "Optimizer.check_optimization_sanity", "Optimizer.copy", "Optimizer.from_data", "Optimizer.from_json", "Optimizer.from_jsonstring", "Optimizer.gradient_func", "Optimizer.index_parameter", "Optimizer.number_of_constraints", "Optimizer.number_of_parameters", "Optimizer.objective_func", "Optimizer.optimization_bounds", "Optimizer.optimization_parameters", "Optimizer.parameter_index", "Optimizer.remove_constraint", "Optimizer.remove_parameter", "Optimizer.sha256", "Optimizer.solve", "Optimizer.to_data", "Optimizer.to_json", "Optimizer.to_jsonstring", "Optimizer.validate_data", "Optimizer.validate_json", "OriginNodeXParameter", "OriginNodeXParameter.ToString", "OriginNodeXParameter.attr_name", "OriginNodeXParameter.bound_low", "OriginNodeXParameter.bound_up", "OriginNodeXParameter.copy", "OriginNodeXParameter.from_data", "OriginNodeXParameter.from_json", "OriginNodeXParameter.from_jsonstring", "OriginNodeXParameter.key", "OriginNodeXParameter.sha256", "OriginNodeXParameter.start_value", "OriginNodeXParameter.to_data", "OriginNodeXParameter.to_json", "OriginNodeXParameter.to_jsonstring", "OriginNodeXParameter.validate_data", "OriginNodeXParameter.validate_json", "OriginNodeYParameter", "OriginNodeYParameter.ToString", "OriginNodeYParameter.attr_name", "OriginNodeYParameter.bound_low", "OriginNodeYParameter.bound_up", "OriginNodeYParameter.copy", "OriginNodeYParameter.from_data", "OriginNodeYParameter.from_json", "OriginNodeYParameter.from_jsonstring", "OriginNodeYParameter.key", "OriginNodeYParameter.sha256", "OriginNodeYParameter.start_value", "OriginNodeYParameter.to_data", "OriginNodeYParameter.to_json", "OriginNodeYParameter.to_jsonstring", "OriginNodeYParameter.validate_data", "OriginNodeYParameter.validate_json", "OriginNodeZParameter", "OriginNodeZParameter.ToString", "OriginNodeZParameter.attr_name", "OriginNodeZParameter.bound_low", "OriginNodeZParameter.bound_up", "OriginNodeZParameter.copy", "OriginNodeZParameter.from_data", "OriginNodeZParameter.from_json", "OriginNodeZParameter.from_jsonstring", "OriginNodeZParameter.key", "OriginNodeZParameter.sha256", "OriginNodeZParameter.start_value", "OriginNodeZParameter.to_data", "OriginNodeZParameter.to_json", "OriginNodeZParameter.to_jsonstring", "OriginNodeZParameter.validate_data", "OriginNodeZParameter.validate_json", "PlaneConstraint", "PlaneConstraint.ToString", "PlaneConstraint.copy", "PlaneConstraint.from_data", "PlaneConstraint.from_json", "PlaneConstraint.from_jsonstring", "PlaneConstraint.key", "PlaneConstraint.penalty", "PlaneConstraint.reference", "PlaneConstraint.sha256", "PlaneConstraint.target", "PlaneConstraint.to_data", "PlaneConstraint.to_json", "PlaneConstraint.to_jsonstring", "PlaneConstraint.validate_data", "PlaneConstraint.validate_json", "PointConstraint", "PointConstraint.ToString", "PointConstraint.copy", "PointConstraint.from_data", "PointConstraint.from_json", "PointConstraint.from_jsonstring", "PointConstraint.key", "PointConstraint.penalty", "PointConstraint.reference", "PointConstraint.sha256", "PointConstraint.target", "PointConstraint.to_data", "PointConstraint.to_json", "PointConstraint.to_jsonstring", "PointConstraint.validate_data", "PointConstraint.validate_json", "ReactionForceConstraint", "ReactionForceConstraint.ToString", "ReactionForceConstraint.copy", "ReactionForceConstraint.from_data", "ReactionForceConstraint.from_json", "ReactionForceConstraint.from_jsonstring", "ReactionForceConstraint.key", "ReactionForceConstraint.penalty", "ReactionForceConstraint.reference", "ReactionForceConstraint.sha256", "ReactionForceConstraint.target", "ReactionForceConstraint.to_data", "ReactionForceConstraint.to_json", "ReactionForceConstraint.to_jsonstring", "ReactionForceConstraint.validate_data", "ReactionForceConstraint.validate_json", "TrailEdgeForceConstraint", "TrailEdgeForceConstraint.ToString", "TrailEdgeForceConstraint.copy", "TrailEdgeForceConstraint.from_data", "TrailEdgeForceConstraint.from_json", "TrailEdgeForceConstraint.from_jsonstring", "TrailEdgeForceConstraint.key", "TrailEdgeForceConstraint.penalty", "TrailEdgeForceConstraint.reference", "TrailEdgeForceConstraint.sha256", "TrailEdgeForceConstraint.target", "TrailEdgeForceConstraint.to_data", "TrailEdgeForceConstraint.to_json", "TrailEdgeForceConstraint.to_jsonstring", "TrailEdgeForceConstraint.validate_data", "TrailEdgeForceConstraint.validate_json", "TrailEdgeParameter", "TrailEdgeParameter.ToString", "TrailEdgeParameter.attr_name", "TrailEdgeParameter.bound_low", "TrailEdgeParameter.bound_up", "TrailEdgeParameter.copy", "TrailEdgeParameter.from_data", "TrailEdgeParameter.from_json", "TrailEdgeParameter.from_jsonstring", "TrailEdgeParameter.key", "TrailEdgeParameter.sha256", "TrailEdgeParameter.start_value", "TrailEdgeParameter.to_data", "TrailEdgeParameter.to_json", "TrailEdgeParameter.to_jsonstring", "TrailEdgeParameter.validate_data", "TrailEdgeParameter.validate_json", "solve_proxy", "FormArtist", "FormArtist.build", "FormArtist.build_as", "FormArtist.clear", "FormArtist.clear_edges", "FormArtist.clear_nodes", "FormArtist.draw", "FormArtist.draw_collection", "FormArtist.draw_edgelabels", "FormArtist.draw_edges", "FormArtist.draw_loads", "FormArtist.draw_nodelabels", "FormArtist.draw_nodes", "FormArtist.draw_reactions", "FormArtist.redraw", "FormArtist.register", "FormArtist.update_data", "FormArtist.viewbox", "Plotter", "Plotter.add", "Plotter.add_from_list", "Plotter.draw", "Plotter.find", "Plotter.on", "Plotter.pause", "Plotter.redraw", "Plotter.register_listener", "Plotter.save", "Plotter.show", "Plotter.zoom_extents", "TopologyArtist", "TopologyArtist.build", "TopologyArtist.build_as", "TopologyArtist.clear", "TopologyArtist.clear_edges", "TopologyArtist.clear_nodes", "TopologyArtist.draw", "TopologyArtist.draw_collection", "TopologyArtist.draw_edgelabels", "TopologyArtist.draw_edges", "TopologyArtist.draw_loads", "TopologyArtist.draw_nodelabels", "TopologyArtist.draw_nodes", "TopologyArtist.redraw", "TopologyArtist.register", "TopologyArtist.update_data", "TopologyArtist.viewbox", "NodeSupport", "NodeSupport.ToString", "NodeSupport.copy", "NodeSupport.from_data", "NodeSupport.from_json", "NodeSupport.from_jsonstring", "NodeSupport.from_point", "NodeSupport.sha256", "NodeSupport.to_data", "NodeSupport.to_json", "NodeSupport.to_jsonstring", "NodeSupport.validate_data", "NodeSupport.validate_json", "Changelog", "Citing", "Examples", "COMPAS CEM", "Installation", "License"], "terms": {"01": [0, 626, 627], "simpl": [0, 626, 627, 628], "compress": [0, 5, 625, 626, 627], "structur": [0, 30, 57, 78, 90, 98, 103, 126, 166, 195, 216, 231, 239, 244, 275, 583, 584, 586, 625, 626, 627, 628], "02": [0, 626, 627], "brace": [0, 626, 627], "tower": [0, 626, 627], "2d": [0, 6, 581, 610, 624, 626, 627], "03": [0, 626, 627], "bridg": [0, 6, 624, 626, 627], "optim": [0, 4, 5, 12, 13, 356, 372, 375, 376, 383, 389, 431, 434, 435, 442, 448, 451, 452, 459, 465, 468, 469, 476, 482, 498, 514, 530, 546, 549, 550, 557, 563, 624, 626, 627], "04": [0, 626, 627], "tree": [0, 626, 627], "05": [0, 626, 627], "planar": [0, 57, 85, 101, 195, 225, 242, 626, 627, 628], "tensegr": [0, 6, 624, 626, 627], "wheel": [0, 626, 627], "from": [1, 2, 3, 4, 5, 26, 28, 30, 35, 37, 38, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 78, 90, 97, 98, 99, 103, 110, 125, 126, 135, 157, 160, 162, 166, 171, 173, 174, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 216, 231, 238, 239, 240, 244, 251, 274, 275, 284, 305, 306, 307, 308, 309, 318, 319, 320, 321, 322, 331, 332, 333, 334, 335, 341, 342, 346, 347, 348, 349, 350, 359, 360, 361, 365, 378, 379, 380, 382, 392, 393, 394, 398, 411, 412, 413, 414, 422, 424, 437, 438, 439, 441, 454, 455, 456, 458, 471, 472, 473, 475, 485, 486, 487, 491, 501, 502, 503, 507, 517, 518, 519, 523, 533, 534, 535, 539, 552, 553, 554, 556, 568, 569, 584, 598, 599, 614, 615, 616, 617, 618, 624, 628, 629], "compa": [1, 2, 3, 4, 5, 28, 78, 125, 162, 216, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 583, 584, 618, 624, 625, 626], "geometri": [1, 2, 3, 4, 5, 57, 195, 583, 584, 586], "import": [1, 2, 3, 4, 5, 28, 78, 125, 162, 216, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618, 624, 628], "translat": [1, 2, 3, 4, 5], "compas_cem": [1, 2, 3, 4, 5, 12, 22, 151, 302, 315, 328, 341, 342, 343, 356, 372, 389, 405, 425, 431, 448, 465, 482, 498, 514, 530, 546, 563, 564, 582, 594, 611, 624, 625, 627, 628], "diagram": [1, 2, 3, 4, 5, 12, 13, 22, 57, 67, 121, 123, 151, 159, 160, 195, 262, 263, 265, 267, 268, 269, 273, 289, 341, 342, 362, 374, 381, 395, 405, 425, 433, 440, 450, 457, 467, 474, 488, 504, 520, 536, 548, 555, 563, 564, 570, 573, 574, 576, 577, 594, 600, 603, 606, 617, 624, 627], "topologydiagram": [1, 2, 3, 4, 5, 341, 342, 425, 563, 594, 624], "element": [1, 2, 4, 5, 12, 13, 24, 153, 302, 315, 328, 624, 627], "node": [1, 2, 3, 4, 5, 25, 26, 29, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 49, 54, 59, 64, 66, 70, 71, 73, 74, 75, 76, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 130, 136, 142, 145, 146, 155, 156, 157, 159, 160, 163, 164, 165, 169, 170, 171, 172, 173, 174, 176, 178, 179, 181, 183, 184, 186, 187, 192, 197, 202, 204, 207, 208, 210, 211, 212, 213, 219, 220, 221, 222, 223, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 265, 266, 267, 270, 271, 275, 276, 277, 279, 285, 289, 293, 296, 297, 341, 342, 343, 362, 389, 395, 431, 442, 448, 459, 465, 476, 482, 488, 498, 504, 514, 520, 536, 567, 569, 570, 574, 575, 576, 597, 599, 600, 604, 605, 606, 611, 617, 624], "trailedg": [1, 2, 4], "deviationedg": [1, 2, 4, 5], "load": [1, 2, 3, 4, 12, 13, 57, 83, 92, 111, 121, 154, 195, 222, 233, 252, 265, 343, 349, 570, 574, 600, 604, 624, 627], "nodeload": [1, 2, 3, 4, 624], "support": [1, 2, 3, 4, 12, 13, 80, 83, 84, 123, 124, 130, 156, 160, 219, 222, 224, 267, 271, 279, 425, 514, 563, 577, 611, 617, 624, 627], "nodesupport": [1, 2, 3, 4, 156, 624], "equilibrium": [1, 2, 3, 4, 5, 12, 13, 341, 342, 624, 625, 627], "static_equilibrium": [1, 2, 3, 4, 5, 624], "plotter": [1, 2, 3, 4, 5, 12, 13, 564, 579, 594, 608, 624, 627], "instanti": [1, 4, 375, 376, 434, 435, 451, 452, 468, 469, 549, 550], "topologi": [1, 2, 3, 4, 5, 67, 121, 123, 151, 159, 160, 262, 263, 265, 267, 268, 269, 289, 341, 342, 375, 376, 383, 414, 418, 425, 434, 435, 442, 451, 452, 459, 468, 469, 476, 549, 550, 557, 563, 594, 600, 603, 606, 624], "add": [1, 2, 3, 4, 5, 24, 25, 153, 155, 156, 407, 408, 584], "add_nod": [1, 2, 4, 5], "0": [1, 2, 3, 4, 5, 47, 125, 127, 128, 184, 274, 276, 277, 309, 315, 322, 335, 343, 350, 356, 365, 382, 389, 398, 424, 441, 458, 475, 482, 491, 498, 507, 514, 523, 530, 539, 556, 591, 618, 628], "1": [1, 2, 3, 4, 5, 28, 47, 48, 68, 69, 70, 71, 90, 93, 103, 110, 113, 125, 128, 162, 184, 185, 205, 206, 207, 208, 231, 234, 244, 251, 254, 274, 277, 309, 322, 335, 343, 350, 356, 365, 382, 389, 398, 424, 441, 458, 475, 482, 491, 498, 507, 514, 523, 530, 539, 556, 590, 591, 618], "2": [1, 2, 3, 4, 5, 54, 119, 192, 261, 590, 591], "5": [1, 2, 3, 4, 5, 47, 127, 128, 184, 276, 277], "3": [1, 2, 4, 5, 66, 68, 69, 70, 71, 204, 205, 206, 207, 208, 425], "edg": [1, 2, 3, 4, 5, 24, 28, 29, 32, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 64, 68, 69, 71, 74, 77, 79, 80, 85, 86, 101, 102, 120, 128, 136, 141, 143, 144, 148, 153, 158, 162, 163, 164, 165, 168, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 197, 202, 205, 206, 208, 211, 214, 215, 217, 218, 219, 225, 226, 227, 242, 243, 263, 264, 268, 277, 285, 288, 292, 294, 295, 299, 302, 308, 328, 334, 356, 362, 372, 376, 383, 395, 435, 452, 469, 488, 504, 520, 530, 536, 546, 550, 557, 567, 568, 570, 572, 573, 597, 598, 600, 602, 603, 624], "add_edg": [1, 2, 4, 5], "length": [1, 2, 4, 44, 45, 128, 181, 182, 277, 328, 356, 546, 624, 627], "forc": [1, 2, 4, 5, 43, 57, 83, 92, 124, 180, 195, 222, 233, 271, 302, 372, 514, 530, 574, 577, 624, 627], "add_support": [1, 2, 3, 4], "add_load": [1, 2, 3, 4], "build": [1, 4, 566, 596, 624, 628], "trail": [1, 2, 3, 4, 5, 24, 153, 156, 158, 159, 160, 165, 175, 215, 227, 262, 268, 269, 270, 288, 328, 530, 546, 624], "automat": [1, 160, 425, 624, 625, 627, 628], "build_trail": [1, 2, 3, 4, 5, 624], "comput": [1, 4, 5, 112, 120, 122, 125, 160, 253, 264, 266, 274, 309, 322, 335, 350, 365, 382, 398, 424, 425, 441, 458, 475, 491, 507, 523, 539, 556, 581, 610, 618, 624], "state": [1, 4, 5, 328], "static": [1, 4, 5, 341, 342, 565, 566, 571, 578, 579, 595, 596, 601, 607, 608, 627], "form": [1, 2, 3, 4, 5, 22, 53, 67, 68, 118, 151, 191, 205, 260, 341, 342, 362, 395, 405, 419, 420, 425, 488, 504, 520, 536, 563, 564, 570, 573, 576, 577, 625, 627, 628], "eta": [1, 2, 4, 5, 341, 342, 414, 418, 425, 563, 624], "1e": [1, 2, 3, 4, 5, 83, 92, 222, 233, 341, 342, 425, 563], "6": [1, 2, 3, 4, 5, 83, 92, 222, 233, 341, 342, 425, 563, 628], "tmax": [1, 2, 4, 5, 341, 342, 414, 418, 425, 563, 624], "100": [1, 2, 3, 4, 5, 127, 276, 341, 342, 425, 563], "verbos": [1, 2, 3, 4, 5, 341, 342, 425], "true": [1, 2, 3, 4, 5, 50, 53, 54, 55, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 100, 101, 102, 103, 115, 118, 119, 125, 132, 133, 158, 175, 188, 191, 192, 193, 208, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 241, 242, 243, 244, 257, 260, 261, 274, 281, 282, 288, 309, 311, 312, 322, 324, 325, 335, 337, 338, 350, 352, 353, 365, 368, 369, 382, 385, 386, 398, 401, 402, 424, 425, 427, 428, 441, 444, 445, 458, 461, 462, 475, 478, 479, 491, 494, 495, 507, 510, 511, 523, 526, 527, 539, 542, 543, 556, 559, 560, 618, 620, 621], "plot": [1, 2, 3, 4, 5, 564, 580, 583, 585, 586, 587, 588, 589, 591, 592, 594, 609], "result": [1, 4, 5, 26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 231, 238, 239, 240, 244], "scene": [1, 2, 3, 4, 5], "nodes": [1, 2, 3, 4, 5], "shift": [1, 4, 5], "transform": [1, 2, 3, 4, 5], "from_vector": [1, 2, 3, 4, 5], "show_edgetext": [1, 4], "edgetext": [1, 4], "show": [1, 2, 3, 4, 5, 628], "content": 1, "zoom_ext": [1, 2, 3, 4, 5], "data": [2, 3, 26, 27, 30, 31, 35, 50, 53, 54, 58, 60, 61, 65, 78, 90, 97, 98, 99, 103, 115, 118, 119, 125, 126, 131, 132, 133, 149, 150, 157, 158, 161, 166, 167, 171, 175, 188, 191, 192, 196, 198, 199, 203, 216, 231, 238, 239, 240, 244, 257, 260, 261, 274, 275, 280, 281, 282, 288, 300, 301, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 343, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 363, 364, 365, 367, 368, 369, 370, 371, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 391, 392, 393, 394, 396, 397, 398, 400, 401, 402, 403, 404, 405, 410, 411, 412, 413, 424, 426, 427, 428, 429, 430, 436, 437, 438, 439, 441, 443, 444, 445, 446, 447, 453, 454, 455, 456, 458, 460, 461, 462, 463, 464, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 484, 485, 486, 487, 489, 490, 491, 493, 494, 495, 496, 497, 500, 501, 502, 503, 505, 506, 507, 509, 510, 511, 512, 513, 516, 517, 518, 519, 521, 522, 523, 525, 526, 527, 528, 529, 532, 533, 534, 535, 537, 538, 539, 541, 542, 543, 544, 545, 551, 552, 553, 554, 556, 558, 559, 560, 561, 562, 579, 580, 583, 584, 586, 608, 609, 611, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 627], "point": [2, 3, 41, 47, 55, 62, 64, 65, 66, 90, 100, 103, 134, 137, 178, 184, 193, 200, 202, 203, 204, 231, 241, 244, 283, 286, 308, 321, 334, 343, 349, 399, 492, 498, 617], "4": [2, 3, 4, 5], "trail_edg": [2, 3, 165], "deviation_edg": [2, 3, 5, 158, 163], "kei": [2, 4, 24, 29, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 56, 64, 73, 75, 76, 77, 80, 81, 82, 83, 84, 88, 89, 92, 93, 94, 95, 96, 104, 105, 106, 108, 110, 111, 112, 114, 115, 116, 117, 118, 124, 128, 130, 141, 142, 147, 148, 153, 158, 163, 164, 165, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 194, 202, 210, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 227, 229, 230, 233, 234, 235, 236, 237, 245, 246, 247, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 270, 271, 277, 279, 288, 289, 292, 293, 298, 299, 315, 343, 372, 415, 421, 422, 423, 431, 448, 465, 546, 611, 624], "u": [2, 5, 28, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 74, 128, 162, 173, 178, 179, 180, 181, 182, 183, 184, 187, 188, 191, 192, 211, 277, 302, 328], "v": [2, 5, 28, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 74, 128, 162, 173, 178, 179, 180, 181, 182, 183, 184, 187, 188, 191, 192, 211, 277, 302, 328, 628], "deviat": [2, 5, 24, 153, 163, 175, 218, 263, 302, 356, 372, 624], "indirect": 2, "set": [2, 39, 40, 48, 51, 52, 53, 54, 62, 69, 71, 104, 105, 113, 114, 116, 117, 118, 119, 141, 142, 176, 177, 185, 189, 190, 191, 192, 200, 206, 208, 245, 246, 254, 256, 258, 259, 260, 261, 292, 293, 372, 375, 376, 431, 434, 435, 448, 451, 452, 465, 468, 469, 546, 549, 550, 563, 624], "loadscal": [2, 3], "reactionscal": [2, 3], "o": 3, "time": [3, 5, 160, 563, 589, 624, 628], "pointconstraint": 3, "trailedgeparamet": 3, "deviationedgeparamet": [3, 4, 5], "here": [3, 628], "path": [3, 60, 65, 78, 126, 132, 137, 198, 203, 216, 275, 281, 286, 306, 311, 319, 324, 332, 337, 347, 352, 360, 368, 379, 385, 393, 401, 412, 427, 438, 444, 455, 461, 472, 478, 486, 494, 502, 510, 518, 526, 534, 542, 553, 559, 591, 615, 620], "dirnam": 3, "__file__": 3, "IN": [3, 629], "abspath": 3, "join": 3, "03_bridge_2d": 3, "json": [3, 60, 61, 132, 133, 150, 198, 199, 281, 282, 301, 306, 307, 311, 312, 314, 319, 320, 324, 325, 327, 332, 333, 337, 338, 340, 347, 348, 352, 353, 355, 360, 361, 368, 369, 371, 379, 380, 385, 386, 388, 393, 394, 401, 402, 404, 412, 413, 427, 428, 430, 438, 439, 444, 445, 447, 455, 456, 461, 462, 464, 472, 473, 478, 479, 481, 486, 487, 494, 495, 497, 502, 503, 510, 511, 513, 518, 519, 526, 527, 529, 534, 535, 542, 543, 545, 553, 554, 559, 560, 562, 615, 616, 620, 621, 623, 624], "from_json": 3, "appli": [3, 57, 83, 92, 111, 121, 154, 195, 222, 233, 252, 265, 349, 611], "gener": [3, 4, 5, 28, 160, 162, 341, 342, 627], "find": [3, 57, 126, 163, 165, 195, 275, 425, 563, 625, 627, 628], "initi": [3, 383, 442, 459, 476, 557], "opt": [3, 5], "defin": [3, 127, 134, 276, 283, 328, 343, 617], "constraint": [3, 4, 5, 405, 407, 416, 419, 420, 422, 563, 624, 627], "nodes_opt": 3, "target_point": 3, "20": 3, "67": 3, "42": 3, "7": [3, 628], "15": 3, "28": 3, "84": 3, "zip": 3, "add_constraint": [3, 4, 5], "paramet": [3, 4, 5, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 154, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 271, 274, 275, 276, 277, 281, 282, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 304, 305, 306, 307, 308, 309, 311, 312, 317, 318, 319, 320, 321, 322, 324, 325, 330, 331, 332, 333, 334, 335, 337, 338, 341, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 358, 359, 360, 361, 365, 368, 369, 372, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 391, 392, 393, 394, 398, 401, 402, 408, 410, 411, 412, 413, 415, 417, 421, 423, 424, 425, 427, 428, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 448, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 465, 468, 469, 470, 471, 472, 473, 474, 475, 476, 478, 479, 484, 485, 486, 487, 491, 494, 495, 500, 501, 502, 503, 507, 510, 511, 516, 517, 518, 519, 523, 526, 527, 532, 533, 534, 535, 539, 542, 543, 546, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 563, 564, 565, 566, 572, 575, 579, 583, 588, 589, 590, 591, 593, 594, 595, 596, 602, 605, 608, 611, 613, 614, 615, 616, 617, 618, 620, 621, 624], "add_paramet": [3, 4, 5], "bound_low": [3, 372, 431, 448, 465, 546], "bound_up": [3, 372, 431, 448, 465, 546], "10": [3, 4, 5, 625], "form_opt": [3, 4, 5], "solv": [3, 4, 5, 57, 195, 563, 624, 627, 628], "algorithm": [3, 5, 32, 56, 57, 79, 125, 168, 194, 195, 217, 274, 309, 322, 335, 341, 342, 350, 365, 382, 398, 424, 425, 441, 458, 475, 491, 507, 523, 539, 556, 563, 618, 624], "slsqp": [3, 4, 425, 563], "iter": [3, 4, 50, 92, 115, 127, 158, 159, 175, 188, 233, 257, 273, 276, 288, 289, 341, 342, 425, 563, 624], "ep": [3, 4, 425, 563], "figsiz": [3, 4, 5], "16": [3, 4, 5, 628], "9": [3, 4, 5], "t": [3, 4, 5, 47, 128, 156, 184, 277, 628], "40": 3, "target": [3, 356, 363, 389, 396, 482, 489, 498, 505, 506, 514, 521, 530, 537, 624, 627], "x": [3, 5, 431], "y": [3, 5, 448], "z": [3, 87, 125, 228, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 465, 475, 491, 507, 523, 539, 556, 618], "size": [3, 48, 93, 113, 185, 234, 254, 425, 624], "facecolor": 3, "90": 3, "math": [4, 5], "sqrt": 4, "trailedgeforceconstraint": [4, 5], "width": [4, 624], "height": 4, "auto": [4, 5], "auxiliari": [4, 5, 158, 159, 160, 215, 262, 289, 624], "auxiliary_trail": [4, 5, 160, 624], "minim": [4, 418], "axiliari": [4, 5], "goal": [4, 407, 422], "auxiliary_trail_edg": [4, 5, 624], "n": [4, 5, 69, 71, 113, 206, 208, 254, 628], "show_nodetext": 4, "nodetext": 4, "pad": [4, 5, 593], "pi": 5, "co": 5, "sin": 5, "numpi": [5, 342, 628], "np": 5, "util": 5, "pairwis": 5, "creat": [5, 26, 30, 35, 59, 63, 97, 98, 99, 135, 157, 166, 171, 197, 201, 238, 239, 240, 284, 308, 321, 334, 349, 419, 420, 565, 595, 617, 624], "diamet": 5, "num_sid": 5, "128": 5, "onli": [5, 55, 71, 81, 100, 193, 208, 220, 241, 419, 420, 425, 563, 582, 617, 624, 627, 628], "even": 5, "number": [5, 32, 33, 34, 36, 66, 69, 71, 120, 121, 122, 123, 127, 168, 169, 170, 172, 204, 206, 208, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 276, 341, 342, 416, 417, 425, 563], "appendix_length": 5, "tension_forc": 5, "compression_forc": 5, "bound": [5, 375, 376, 419, 434, 435, 451, 452, 468, 469, 549, 550, 581, 593, 610], "grad_method": 5, "ad": [5, 416, 425, 624], "test": [5, 215, 218, 224, 227], "subdivis": 5, "i": [5, 28, 39, 40, 47, 50, 51, 52, 53, 54, 55, 57, 62, 65, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 90, 100, 101, 102, 103, 104, 105, 115, 116, 117, 118, 119, 121, 127, 128, 139, 140, 148, 159, 160, 162, 163, 165, 176, 177, 184, 188, 189, 190, 191, 192, 193, 195, 200, 203, 211, 212, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 241, 242, 243, 244, 245, 246, 255, 257, 258, 259, 260, 261, 265, 276, 277, 289, 290, 291, 299, 328, 341, 342, 375, 376, 409, 425, 434, 435, 451, 452, 468, 469, 549, 550, 563, 565, 595, 624, 627, 628, 629], "assert": 5, "remov": [5, 422, 423, 624], "last": [5, 160, 628], "theta": 5, "linspac": 5, "radiu": 5, "enumer": 5, "perimet": 5, "tension": [5, 625, 627], "list": [5, 22, 26, 29, 30, 35, 40, 41, 42, 46, 47, 48, 49, 51, 52, 56, 57, 59, 62, 64, 69, 71, 76, 77, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 103, 105, 106, 110, 111, 112, 113, 116, 117, 124, 126, 127, 134, 136, 138, 148, 151, 157, 159, 163, 164, 165, 166, 171, 177, 178, 179, 183, 184, 185, 187, 189, 190, 194, 195, 197, 200, 202, 206, 208, 213, 214, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 244, 246, 247, 251, 252, 253, 254, 258, 259, 271, 275, 276, 283, 285, 287, 289, 299, 308, 321, 334, 343, 349, 563, 565, 566, 584, 595, 596, 617, 624], "rang": [5, 47, 53, 118, 128, 184, 191, 260, 277], "intern": [5, 341, 342, 627], "ar": [5, 23, 57, 128, 152, 160, 195, 277, 303, 316, 329, 344, 357, 373, 390, 406, 425, 432, 449, 466, 483, 499, 515, 531, 547, 563, 612, 624, 626, 627, 628], "half_num_sid": 5, "int": [5, 32, 33, 34, 36, 48, 66, 69, 71, 76, 77, 83, 84, 89, 92, 93, 111, 113, 120, 121, 122, 123, 124, 127, 130, 142, 148, 163, 165, 168, 169, 170, 172, 185, 204, 206, 208, 213, 214, 222, 223, 224, 230, 233, 234, 252, 254, 255, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 279, 293, 299, 341, 342, 343, 362, 395, 425, 488, 504, 520, 536, 563, 572, 575, 587, 593, 602, 605, 611], "auxiliary_trail_length": [5, 624], "should": [5, 41, 53, 54, 57, 118, 119, 158, 175, 178, 191, 192, 195, 260, 261, 288, 579, 608], "zero": [5, 87, 228], "all": [5, 27, 40, 52, 56, 87, 91, 92, 105, 158, 159, 161, 175, 177, 190, 194, 228, 232, 233, 246, 270, 288, 289, 585, 591, 593, 624, 628, 629], "allow": [5, 628], "chang": [5, 90, 103, 231, 244, 624], "lbfg": [5, 425, 563], "grad": [5, 425], "45": 5, "A": [6, 22, 28, 32, 40, 51, 52, 53, 55, 56, 62, 64, 65, 66, 73, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 100, 101, 102, 105, 108, 111, 116, 117, 118, 124, 126, 127, 134, 135, 136, 137, 138, 140, 143, 144, 145, 146, 148, 151, 154, 156, 160, 162, 163, 165, 168, 177, 189, 190, 191, 193, 194, 200, 202, 203, 204, 210, 213, 214, 216, 217, 220, 222, 223, 224, 225, 226, 228, 229, 230, 232, 234, 235, 236, 237, 241, 242, 243, 246, 249, 252, 258, 259, 260, 271, 275, 276, 283, 284, 285, 286, 287, 289, 291, 294, 295, 296, 297, 299, 302, 315, 321, 328, 341, 342, 343, 349, 415, 421, 425, 563, 575, 582, 583, 605, 611, 617, 626, 627, 629], "b": [6, 626, 627], "tubular": [6, 626, 627], "3d": [6, 624, 626, 627], "c": [6, 90, 103, 231, 244, 626, 627, 628, 629], "circular": [6, 626, 627], "dome": [6, 624, 626, 627], "d": [6, 90, 103, 231, 244, 625, 626, 627], "jessen": [6, 626, 627], "e": [6, 148, 299, 328, 626, 627], "spiral": [6, 624, 626, 627], "staircas": [6, 624, 626, 627], "download": [7, 8, 9, 10, 11, 628], "rhino": [7, 23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 579, 608, 612, 624, 627, 628], "file": [7, 8, 9, 10, 11, 60, 61, 65, 132, 137, 198, 199, 203, 281, 286, 306, 307, 311, 319, 320, 324, 332, 333, 337, 347, 348, 352, 360, 361, 368, 379, 380, 385, 393, 394, 401, 412, 413, 427, 438, 439, 444, 455, 456, 461, 472, 473, 478, 486, 487, 494, 502, 503, 510, 518, 519, 526, 534, 535, 542, 553, 554, 559, 591, 615, 616, 620, 624, 629], "grasshopp": [7, 8, 9, 10, 11, 23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 579, 608, 612, 624, 626, 627], "viewer": [12, 13, 582, 624, 627], "class": [22, 23, 151, 152, 302, 303, 315, 316, 328, 329, 343, 344, 356, 357, 372, 373, 389, 390, 405, 406, 431, 432, 448, 449, 465, 466, 482, 483, 498, 499, 514, 515, 530, 531, 546, 547, 564, 582, 594, 611, 612, 624], "arg": [22, 151, 321, 366, 508, 524, 540, 582], "kwarg": [22, 53, 118, 151, 191, 260, 302, 308, 315, 321, 328, 334, 343, 366, 405, 508, 524, 540, 564, 565, 566, 582, 583, 584, 591, 594, 595, 596, 611], "sourc": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 330, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 618, 619, 620, 621, 622, 623, 627], "base": [22, 67, 151, 302, 315, 328, 343, 356, 372, 389, 405, 425, 431, 448, 465, 482, 498, 514, 530, 546, 563, 564, 582, 594, 611, 624], "The": [22, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 73, 74, 75, 81, 82, 83, 88, 92, 93, 94, 95, 96, 104, 105, 106, 108, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 141, 142, 149, 150, 151, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 218, 220, 221, 222, 227, 229, 233, 234, 235, 236, 237, 245, 246, 247, 249, 251, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 288, 289, 290, 291, 292, 293, 300, 301, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 343, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 400, 401, 402, 403, 404, 410, 411, 412, 413, 414, 416, 417, 418, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 493, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 540, 541, 542, 543, 544, 545, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 579, 588, 590, 594, 595, 596, 608, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629], "heart": [22, 151], "life": [22, 151], "argument": [22, 53, 127, 143, 144, 145, 146, 151, 191, 276, 294, 295, 296, 297, 308, 321, 334, 565, 566, 595, 596, 624], "dict": [22, 40, 50, 52, 53, 54, 58, 64, 73, 76, 77, 88, 89, 105, 108, 115, 117, 118, 119, 131, 133, 141, 142, 143, 144, 145, 146, 148, 149, 151, 158, 175, 177, 188, 190, 191, 192, 196, 202, 210, 213, 214, 229, 230, 246, 249, 257, 259, 260, 261, 280, 282, 288, 292, 293, 294, 295, 296, 297, 299, 300, 305, 308, 310, 312, 313, 318, 321, 323, 325, 326, 331, 334, 336, 338, 339, 346, 351, 353, 354, 359, 367, 369, 370, 378, 384, 386, 387, 392, 400, 402, 403, 411, 426, 428, 429, 437, 443, 445, 446, 454, 460, 462, 463, 471, 477, 479, 480, 485, 493, 495, 496, 501, 509, 511, 512, 517, 525, 527, 528, 533, 541, 543, 544, 552, 558, 560, 561, 565, 566, 572, 575, 595, 596, 602, 605, 614, 619, 621, 622], "keyword": [22, 151, 308, 321, 334, 565, 566, 595, 596], "return": [22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 153, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 294, 295, 296, 297, 299, 300, 301, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 365, 367, 368, 369, 370, 371, 375, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 410, 411, 412, 413, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 438, 439, 441, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 458, 460, 461, 462, 463, 464, 468, 469, 470, 471, 472, 473, 475, 477, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 497, 500, 501, 502, 503, 504, 505, 507, 509, 510, 511, 512, 513, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 539, 541, 542, 543, 544, 545, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 561, 562, 563, 565, 566, 567, 568, 569, 572, 575, 578, 579, 580, 581, 583, 590, 595, 596, 597, 598, 599, 602, 605, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624], "method": [22, 23, 151, 152, 302, 303, 315, 316, 328, 329, 343, 344, 356, 357, 372, 373, 389, 390, 405, 406, 425, 431, 432, 448, 449, 465, 466, 482, 483, 498, 499, 514, 515, 530, 531, 546, 547, 563, 564, 571, 582, 587, 594, 601, 611, 612, 624], "inherit": [22, 151, 302, 315, 328, 343, 356, 372, 389, 405, 431, 448, 465, 482, 498, 514, 530, 546, 564, 582, 594, 611], "convert": [23, 131, 152, 280, 303, 310, 316, 323, 329, 336, 344, 351, 357, 367, 373, 384, 390, 400, 406, 426, 432, 443, 449, 460, 466, 477, 483, 493, 499, 509, 515, 525, 531, 541, 547, 558, 612, 619, 624], "instanc": [23, 58, 59, 60, 61, 63, 135, 152, 196, 197, 198, 199, 201, 284, 303, 305, 306, 307, 316, 318, 319, 320, 329, 331, 332, 333, 344, 346, 347, 348, 357, 359, 360, 361, 373, 378, 379, 380, 390, 392, 393, 394, 406, 411, 412, 413, 432, 437, 438, 439, 449, 454, 455, 456, 466, 471, 472, 473, 483, 485, 486, 487, 499, 501, 502, 503, 515, 517, 518, 519, 531, 533, 534, 535, 547, 552, 553, 554, 612, 614, 615, 616], "string": [23, 60, 61, 65, 73, 88, 108, 132, 133, 137, 152, 198, 199, 203, 210, 229, 249, 281, 282, 286, 303, 306, 307, 311, 312, 316, 319, 320, 324, 325, 329, 332, 333, 337, 338, 344, 347, 348, 352, 353, 357, 360, 361, 368, 369, 373, 379, 380, 385, 386, 390, 393, 394, 401, 402, 406, 412, 413, 427, 428, 432, 438, 439, 444, 445, 449, 455, 456, 461, 462, 466, 472, 473, 478, 479, 483, 486, 487, 494, 495, 499, 502, 503, 510, 511, 515, 518, 519, 526, 527, 531, 534, 535, 542, 543, 547, 553, 554, 559, 560, 612, 615, 616, 620, 621], "thi": [23, 31, 32, 56, 57, 58, 60, 61, 79, 85, 101, 152, 160, 167, 168, 194, 195, 196, 198, 199, 217, 225, 242, 289, 303, 304, 305, 306, 307, 316, 317, 318, 319, 320, 329, 330, 331, 332, 333, 341, 342, 344, 345, 346, 347, 348, 357, 358, 359, 360, 361, 373, 375, 376, 377, 378, 379, 380, 390, 391, 392, 393, 394, 406, 410, 411, 412, 413, 425, 432, 434, 435, 436, 437, 438, 439, 449, 451, 452, 453, 454, 455, 456, 466, 468, 469, 470, 471, 472, 473, 483, 484, 485, 486, 487, 499, 500, 501, 502, 503, 515, 516, 517, 518, 519, 531, 532, 533, 534, 535, 547, 549, 550, 551, 552, 553, 554, 563, 582, 612, 613, 614, 615, 616, 624, 628, 629], "exist": [23, 39, 40, 51, 52, 78, 85, 101, 104, 105, 116, 117, 141, 142, 152, 176, 177, 189, 190, 216, 225, 242, 245, 246, 258, 259, 289, 292, 293, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 582, 612, 624], "net": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612, 627], "compat": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 579, 608, 612, 624], "when": [23, 39, 104, 152, 176, 245, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612, 624, 628], "us": [23, 39, 40, 51, 52, 54, 55, 57, 62, 65, 68, 69, 70, 71, 73, 85, 88, 90, 100, 101, 103, 104, 105, 108, 116, 117, 119, 125, 152, 176, 177, 189, 190, 192, 193, 195, 200, 203, 205, 206, 207, 208, 210, 225, 229, 231, 241, 242, 244, 245, 246, 249, 258, 259, 261, 274, 303, 309, 316, 322, 329, 335, 342, 344, 350, 357, 365, 373, 382, 390, 398, 406, 424, 425, 432, 441, 449, 458, 466, 475, 483, 491, 499, 507, 515, 523, 531, 539, 547, 556, 563, 565, 580, 583, 595, 609, 612, 618, 624, 625, 626, 627, 628, 629], "ironpython": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "implicit": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "convers": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "usual": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "take": [23, 54, 57, 119, 152, 192, 195, 261, 303, 316, 329, 344, 357, 373, 390, 406, 420, 432, 449, 466, 483, 499, 515, 531, 547, 612], "place": [23, 139, 152, 290, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "cpython": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "kick": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "its": [23, 50, 53, 54, 110, 118, 119, 127, 128, 131, 149, 150, 152, 188, 191, 192, 251, 260, 261, 276, 277, 280, 300, 301, 303, 310, 313, 314, 316, 321, 323, 326, 327, 329, 336, 339, 340, 344, 351, 354, 355, 357, 367, 370, 371, 373, 384, 387, 388, 390, 400, 403, 404, 406, 409, 426, 429, 430, 432, 443, 446, 447, 449, 460, 463, 464, 466, 477, 480, 481, 483, 493, 496, 497, 499, 509, 512, 513, 515, 525, 528, 529, 531, 541, 544, 545, 547, 558, 561, 562, 612, 619, 622, 623], "default": [23, 31, 83, 92, 141, 142, 143, 144, 145, 146, 152, 158, 167, 175, 222, 233, 288, 292, 293, 294, 295, 296, 297, 303, 304, 316, 317, 329, 330, 341, 342, 344, 345, 357, 358, 373, 377, 390, 391, 406, 410, 425, 432, 436, 449, 453, 466, 470, 483, 484, 499, 500, 515, 516, 531, 532, 547, 551, 563, 612, 613, 624], "print": [23, 152, 303, 316, 329, 341, 342, 344, 357, 373, 390, 406, 425, 432, 449, 466, 483, 499, 515, 531, 547, 612], "self": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "gettyp": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "fullnam": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "similar": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "overrid": [23, 152, 303, 316, 328, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "object": [23, 26, 31, 32, 35, 39, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 79, 85, 86, 87, 97, 99, 100, 101, 102, 127, 131, 132, 133, 137, 149, 150, 152, 154, 156, 157, 167, 168, 171, 176, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 217, 225, 226, 228, 238, 240, 241, 242, 243, 276, 280, 281, 282, 286, 300, 301, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 357, 358, 359, 360, 361, 367, 368, 369, 370, 371, 373, 377, 378, 379, 380, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 400, 401, 402, 403, 404, 405, 406, 410, 411, 412, 413, 414, 418, 425, 426, 427, 428, 429, 430, 432, 436, 437, 438, 439, 443, 444, 445, 446, 447, 449, 453, 454, 455, 456, 460, 461, 462, 463, 464, 466, 470, 471, 472, 473, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 541, 542, 543, 544, 545, 547, 551, 552, 553, 554, 558, 559, 560, 561, 562, 563, 571, 582, 583, 584, 585, 586, 593, 601, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 628], "fix": [23, 55, 100, 127, 152, 156, 193, 241, 276, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612, 624], "make": [23, 31, 152, 160, 167, 303, 304, 316, 317, 329, 330, 344, 345, 356, 357, 358, 373, 377, 390, 391, 406, 410, 432, 436, 449, 453, 466, 470, 483, 484, 499, 500, 514, 515, 516, 530, 531, 532, 547, 551, 612, 613, 628], "displai": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 592, 612, 624], "proper": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "represent": [23, 131, 132, 133, 150, 152, 280, 281, 282, 301, 303, 310, 311, 312, 314, 316, 323, 324, 325, 327, 329, 336, 337, 338, 340, 344, 351, 352, 353, 355, 357, 367, 368, 369, 371, 373, 384, 385, 386, 388, 390, 400, 401, 402, 404, 406, 426, 427, 428, 430, 432, 443, 444, 445, 447, 449, 460, 461, 462, 464, 466, 477, 478, 479, 481, 483, 493, 494, 495, 497, 499, 509, 510, 511, 513, 515, 525, 526, 527, 529, 531, 541, 542, 543, 545, 547, 558, 559, 560, 562, 612, 619, 620, 621, 623], "connect": [23, 29, 30, 62, 65, 66, 71, 78, 82, 98, 152, 163, 164, 165, 166, 200, 203, 204, 208, 216, 221, 239, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612, 628, 629], "panel": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "other": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612, 627, 628, 629], "type": [23, 31, 57, 58, 60, 61, 124, 152, 167, 195, 196, 198, 199, 271, 303, 304, 305, 306, 307, 316, 317, 318, 319, 320, 329, 330, 331, 332, 333, 344, 345, 346, 347, 348, 357, 358, 359, 360, 361, 373, 377, 378, 379, 380, 390, 391, 392, 393, 394, 406, 410, 411, 412, 413, 432, 436, 437, 438, 439, 449, 453, 454, 455, 456, 466, 470, 471, 472, 473, 483, 484, 485, 486, 487, 499, 500, 501, 502, 503, 515, 516, 517, 518, 519, 531, 532, 533, 534, 535, 547, 551, 552, 553, 554, 565, 566, 579, 583, 595, 596, 608, 612, 613, 614, 615, 616, 624, 628], "output": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 425, 432, 449, 466, 483, 499, 515, 531, 547, 612, 624], "an": [24, 31, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 57, 58, 60, 61, 65, 80, 85, 101, 104, 116, 117, 121, 123, 131, 132, 133, 137, 141, 153, 159, 160, 167, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 192, 195, 196, 198, 199, 203, 215, 218, 219, 223, 225, 227, 242, 245, 258, 259, 265, 267, 280, 281, 282, 286, 289, 292, 304, 305, 306, 307, 308, 310, 311, 312, 317, 318, 319, 320, 323, 324, 325, 330, 331, 332, 333, 334, 336, 337, 338, 341, 342, 345, 346, 347, 348, 351, 352, 353, 358, 359, 360, 361, 362, 367, 368, 369, 372, 377, 378, 379, 380, 384, 385, 386, 391, 392, 393, 394, 395, 400, 401, 402, 405, 410, 411, 412, 413, 423, 426, 427, 428, 431, 436, 437, 438, 439, 443, 444, 445, 448, 453, 454, 455, 456, 460, 461, 462, 465, 470, 471, 472, 473, 477, 478, 479, 484, 485, 486, 487, 488, 493, 494, 495, 500, 501, 502, 503, 504, 509, 510, 511, 516, 517, 518, 519, 520, 525, 526, 527, 532, 533, 534, 535, 536, 541, 542, 543, 546, 551, 552, 553, 554, 558, 559, 560, 564, 565, 566, 571, 572, 579, 591, 594, 595, 596, 601, 602, 608, 613, 614, 615, 616, 619, 620, 621, 624, 627, 628, 629], "tupl": [24, 29, 39, 40, 43, 45, 48, 50, 51, 52, 53, 54, 56, 59, 62, 64, 68, 69, 77, 80, 115, 118, 119, 134, 136, 141, 148, 153, 158, 164, 175, 176, 177, 180, 182, 185, 186, 188, 189, 190, 191, 192, 194, 197, 200, 202, 205, 206, 214, 215, 218, 219, 227, 257, 260, 261, 283, 285, 288, 292, 299, 308, 321, 334, 362, 395, 488, 504, 520, 536, 572, 581, 602, 610, 624], "doubl": [25, 155, 628], "rtype": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 231, 238, 239, 240, 244], "arrai": [26, 30, 35, 89, 90, 97, 98, 99, 103, 148, 157, 166, 171, 230, 231, 238, 239, 240, 244, 299, 419, 420], "adjac": [26, 97, 157, 238], "matrix": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 231, 238, 239, 240, 244], "network": [26, 27, 28, 30, 32, 35, 37, 50, 55, 56, 57, 62, 64, 65, 66, 74, 75, 78, 79, 85, 86, 87, 90, 91, 97, 98, 99, 100, 101, 102, 103, 115, 126, 127, 134, 136, 137, 138, 139, 140, 157, 161, 162, 166, 168, 171, 173, 188, 193, 194, 195, 200, 202, 203, 204, 211, 212, 216, 217, 225, 226, 228, 231, 232, 238, 239, 240, 241, 242, 243, 244, 257, 275, 276, 283, 285, 286, 287, 290, 291, 567, 583, 586, 597], "datastructur": [26, 28, 30, 35, 78, 90, 97, 98, 99, 103, 125, 157, 162, 166, 171, 216, 231, 238, 239, 240, 244, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "obj": [26, 28, 35, 39, 51, 65, 78, 97, 99, 104, 116, 125, 137, 157, 162, 171, 176, 189, 203, 216, 238, 240, 245, 258, 274, 286, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "get": [26, 28, 35, 39, 40, 43, 45, 48, 51, 52, 53, 54, 68, 69, 70, 71, 72, 78, 97, 99, 104, 105, 109, 111, 113, 114, 116, 117, 118, 119, 124, 125, 157, 162, 171, 176, 177, 180, 182, 185, 186, 189, 190, 191, 192, 205, 206, 207, 208, 209, 216, 238, 240, 245, 246, 250, 252, 254, 255, 256, 258, 259, 260, 261, 271, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 506, 507, 523, 539, 556, 618, 626], "liter": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 231, 238, 239, 240, 244, 579, 608], "csc": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 231, 238, 239, 240, 244], "csr": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 231, 238, 239, 240, 244], "coo": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 231, 238, 239, 240, 244], "option": [26, 30, 31, 35, 39, 40, 41, 47, 48, 50, 51, 52, 53, 54, 55, 57, 62, 65, 66, 71, 73, 74, 88, 90, 93, 97, 98, 99, 100, 103, 104, 105, 106, 108, 113, 115, 116, 117, 118, 119, 125, 127, 128, 132, 133, 143, 144, 145, 146, 157, 166, 167, 171, 176, 177, 178, 184, 185, 188, 189, 190, 191, 192, 193, 195, 200, 203, 204, 208, 210, 211, 229, 231, 234, 238, 239, 240, 241, 244, 245, 246, 247, 249, 254, 257, 258, 259, 260, 261, 274, 276, 277, 281, 282, 294, 295, 296, 297, 304, 309, 311, 312, 317, 322, 324, 325, 330, 335, 337, 338, 341, 342, 345, 350, 352, 353, 358, 365, 368, 369, 377, 382, 385, 386, 391, 398, 401, 402, 410, 424, 425, 427, 428, 436, 441, 444, 445, 453, 458, 461, 462, 470, 475, 478, 479, 484, 491, 494, 495, 500, 507, 510, 511, 516, 523, 526, 527, 532, 539, 542, 543, 551, 556, 559, 560, 563, 565, 566, 572, 575, 579, 583, 585, 587, 589, 591, 593, 595, 596, 602, 605, 608, 613, 618, 620, 621, 628], "format": [26, 30, 35, 73, 88, 90, 97, 98, 99, 103, 108, 125, 129, 133, 157, 166, 171, 210, 229, 231, 238, 239, 240, 244, 249, 274, 278, 282, 309, 312, 322, 325, 335, 338, 350, 353, 365, 369, 382, 386, 398, 402, 424, 428, 441, 445, 458, 462, 475, 479, 491, 495, 507, 511, 523, 527, 539, 543, 556, 560, 618, 621, 624], "array_lik": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 231, 238, 239, 240, 244], "construct": [26, 30, 35, 58, 60, 61, 62, 64, 65, 66, 67, 90, 97, 98, 99, 103, 157, 166, 171, 196, 198, 199, 200, 202, 203, 204, 231, 238, 239, 240, 244, 305, 306, 307, 318, 319, 320, 331, 332, 333, 346, 347, 348, 359, 360, 361, 378, 379, 380, 392, 393, 394, 411, 412, 413, 437, 438, 439, 454, 455, 456, 471, 472, 473, 485, 486, 487, 501, 502, 503, 517, 518, 519, 533, 534, 535, 552, 553, 554, 614, 615, 616], "none": [27, 28, 31, 37, 38, 39, 40, 51, 52, 53, 55, 57, 62, 65, 73, 88, 100, 104, 105, 108, 114, 116, 117, 118, 127, 132, 137, 139, 141, 143, 144, 145, 146, 161, 162, 167, 173, 174, 176, 177, 189, 190, 191, 193, 195, 200, 203, 210, 229, 241, 245, 246, 249, 256, 258, 259, 260, 276, 281, 286, 290, 292, 294, 295, 296, 297, 304, 311, 315, 317, 324, 328, 330, 337, 341, 342, 345, 352, 356, 358, 368, 372, 375, 376, 377, 385, 389, 391, 401, 410, 427, 431, 434, 435, 436, 444, 448, 451, 452, 453, 461, 465, 468, 469, 470, 478, 482, 484, 494, 498, 500, 510, 514, 516, 526, 530, 532, 542, 546, 549, 550, 551, 559, 563, 567, 568, 569, 572, 575, 578, 579, 580, 583, 585, 587, 588, 589, 590, 591, 592, 593, 597, 598, 599, 602, 605, 607, 608, 609, 613, 620, 624], "cl": [28, 31, 162, 167, 304, 317, 330, 345, 358, 377, 391, 410, 436, 453, 470, 484, 500, 516, 532, 551, 613], "graph": [28, 38, 59, 63, 120, 122, 129, 135, 160, 162, 174, 197, 201, 264, 266, 278, 284], "g": [28, 162, 328], "h": [28, 162], "same": [28, 57, 162, 195, 627], "vertic": [28, 57, 78, 87, 138, 162, 195, 216, 228, 287], "whose": [28, 162, 617], "consist": [28, 162, 582], "present": [28, 74, 75, 162, 211, 212], "refer": [28, 162, 425, 563, 590, 591, 627, 628], "wolfram": [28, 162], "mathworld": [28, 162], "avail": [28, 85, 101, 159, 162, 225, 242, 425, 628], "http": [28, 85, 101, 162, 225, 242, 590, 591, 625], "com": [28, 162], "graphcompl": [28, 162], "html": [28, 162, 590, 591], "exampl": [28, 37, 38, 54, 57, 78, 119, 125, 162, 173, 174, 192, 195, 216, 261, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618, 624, 627], "network_compl": [28, 162], "from_obj": [28, 78, 125, 162, 216, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "line": [28, 55, 57, 62, 65, 78, 85, 100, 101, 134, 162, 193, 195, 200, 203, 216, 225, 241, 242, 283, 308, 334, 389, 628], "ani": [28, 40, 50, 51, 52, 53, 54, 57, 80, 105, 115, 116, 117, 118, 119, 143, 144, 145, 146, 162, 177, 188, 189, 190, 191, 192, 195, 219, 246, 257, 258, 259, 260, 261, 289, 294, 295, 296, 297, 565, 566, 595, 596, 627, 629], "has_edg": [28, 162], "direct": [28, 42, 47, 57, 63, 74, 162, 179, 184, 195, 201, 211, 343, 624], "fals": [28, 50, 53, 54, 55, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 100, 101, 103, 115, 118, 119, 125, 132, 133, 158, 160, 162, 175, 188, 191, 192, 193, 208, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 231, 241, 242, 244, 257, 260, 261, 274, 281, 282, 288, 309, 311, 312, 322, 324, 325, 335, 337, 338, 341, 342, 350, 352, 353, 365, 368, 369, 382, 385, 386, 398, 401, 402, 424, 425, 427, 428, 441, 444, 445, 458, 461, 462, 475, 478, 479, 491, 494, 495, 507, 510, 511, 523, 526, 527, 539, 542, 543, 556, 559, 560, 587, 618, 620, 621, 624], "hashabl": [29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 81, 82, 88, 89, 91, 93, 94, 95, 96, 100, 104, 105, 106, 108, 110, 112, 113, 115, 116, 117, 118, 119, 126, 128, 136, 141, 148, 164, 169, 170, 172, 173, 174, 176, 177, 178, 179, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 197, 202, 205, 206, 207, 208, 210, 211, 212, 213, 214, 220, 221, 229, 230, 232, 234, 235, 236, 237, 241, 245, 246, 247, 249, 251, 253, 254, 257, 258, 259, 260, 261, 275, 277, 285, 292, 299], "identifi": [29, 33, 34, 36, 37, 38, 39, 40, 48, 50, 51, 52, 53, 54, 56, 59, 68, 69, 70, 71, 74, 75, 81, 82, 89, 91, 93, 94, 95, 96, 104, 105, 106, 110, 112, 113, 115, 116, 117, 118, 119, 126, 141, 142, 164, 169, 170, 172, 173, 174, 176, 177, 185, 188, 189, 190, 191, 192, 194, 197, 205, 206, 207, 208, 211, 212, 220, 221, 230, 232, 234, 235, 236, 237, 245, 246, 247, 251, 253, 254, 257, 258, 259, 260, 261, 275, 292, 293, 624], "independ": [31, 140, 167, 291, 304, 317, 330, 345, 358, 377, 391, 410, 436, 453, 470, 484, 500, 516, 532, 551, 613], "current": [31, 90, 103, 167, 231, 244, 304, 317, 330, 345, 358, 363, 377, 391, 396, 410, 425, 436, 453, 470, 484, 489, 500, 505, 516, 521, 532, 537, 551, 568, 569, 581, 598, 599, 610, 613], "count": [32, 168], "cross": [32, 56, 79, 85, 86, 101, 102, 168, 194, 217, 225, 226, 242, 243, 604], "pair": [32, 39, 40, 53, 56, 59, 62, 68, 73, 76, 77, 79, 88, 89, 105, 108, 118, 134, 136, 148, 168, 176, 177, 191, 194, 197, 200, 205, 210, 213, 214, 217, 229, 230, 246, 249, 260, 283, 285, 299, 565, 579, 595, 608], "note": [32, 56, 57, 78, 79, 81, 85, 90, 101, 103, 139, 140, 141, 142, 156, 159, 160, 168, 194, 195, 216, 217, 220, 225, 231, 242, 244, 289, 290, 291, 292, 293, 328, 375, 376, 434, 435, 451, 452, 468, 469, 549, 550, 590, 591, 617, 625], "assum": [32, 56, 79, 168, 194, 217, 628], "li": [32, 56, 79, 87, 168, 194, 217, 228], "xy": [32, 56, 79, 87, 168, 194, 217, 228], "plane": [32, 55, 56, 79, 85, 86, 87, 100, 101, 102, 168, 193, 194, 217, 225, 226, 228, 241, 242, 243, 328, 482, 624], "neighbor": [33, 34, 36, 57, 81, 95, 96, 112, 127, 128, 169, 170, 172, 195, 220, 236, 237, 253, 276, 277], "numer": [34, 170, 425, 563, 627], "incom": [34, 95, 170, 236], "degre": [35, 66, 99, 171, 204, 240], "outgo": [36, 96, 172, 237], "delet": [37, 38, 173, 174, 624], "first": [37, 74, 128, 160, 173, 211, 277, 425, 563, 624, 628], "second": [37, 74, 128, 173, 211, 277, 588, 589], "name": [39, 40, 51, 52, 53, 104, 105, 116, 117, 118, 141, 142, 143, 144, 145, 146, 176, 177, 189, 190, 191, 245, 246, 258, 259, 260, 292, 293, 294, 295, 296, 297, 374, 425, 433, 450, 467, 548, 563, 628], "valu": [39, 40, 43, 47, 51, 52, 53, 90, 103, 104, 105, 107, 109, 116, 117, 118, 141, 142, 143, 144, 145, 146, 176, 177, 180, 184, 189, 190, 191, 231, 244, 245, 246, 248, 250, 258, 259, 260, 292, 293, 294, 295, 296, 297, 366, 375, 376, 383, 425, 434, 435, 442, 451, 452, 459, 468, 469, 476, 530, 540, 549, 550, 557, 563, 624], "attribut": [39, 40, 50, 51, 52, 53, 54, 104, 105, 115, 116, 117, 118, 119, 141, 142, 143, 144, 145, 146, 158, 175, 176, 177, 188, 189, 190, 191, 192, 245, 246, 257, 258, 259, 260, 261, 288, 292, 293, 294, 295, 296, 297, 374, 433, 450, 467, 548, 624], "str": [39, 40, 41, 50, 51, 52, 53, 54, 61, 62, 65, 73, 88, 104, 105, 106, 108, 115, 116, 117, 118, 119, 125, 128, 129, 133, 141, 142, 143, 144, 145, 146, 150, 176, 177, 178, 188, 189, 190, 191, 192, 199, 200, 203, 210, 229, 245, 246, 247, 249, 257, 258, 259, 260, 261, 274, 277, 278, 282, 292, 293, 294, 295, 296, 297, 301, 307, 309, 312, 314, 320, 322, 325, 327, 333, 335, 338, 340, 348, 350, 353, 355, 361, 365, 369, 371, 380, 382, 386, 388, 394, 398, 402, 404, 413, 424, 425, 428, 430, 439, 441, 445, 447, 456, 458, 462, 464, 473, 475, 479, 481, 487, 491, 495, 497, 503, 507, 511, 513, 519, 523, 527, 529, 535, 539, 543, 545, 554, 556, 560, 562, 563, 565, 566, 572, 575, 587, 591, 595, 596, 602, 605, 616, 618, 621, 623], "function": [39, 40, 51, 52, 53, 54, 85, 101, 104, 105, 116, 117, 119, 127, 160, 176, 177, 189, 190, 191, 192, 225, 242, 245, 246, 258, 259, 261, 276, 341, 342, 414, 418, 425, 563, 587], "setter": [39, 40, 51, 52, 104, 105, 116, 117, 176, 177, 189, 190, 245, 246, 258, 259, 624], "rais": [39, 40, 51, 52, 55, 85, 100, 101, 104, 105, 116, 117, 127, 128, 141, 142, 149, 150, 176, 177, 189, 190, 193, 225, 241, 242, 245, 246, 258, 259, 276, 277, 292, 293, 300, 301, 313, 314, 326, 327, 339, 340, 354, 355, 370, 371, 387, 388, 403, 404, 429, 430, 446, 447, 463, 464, 480, 481, 496, 497, 512, 513, 528, 529, 544, 545, 561, 562, 622, 623, 624], "keyerror": [39, 40, 51, 52, 104, 105, 116, 117, 141, 142, 176, 177, 189, 190, 245, 246, 258, 259, 292, 293], "If": [39, 40, 47, 50, 51, 52, 53, 54, 55, 71, 74, 85, 90, 100, 101, 103, 104, 105, 115, 116, 117, 118, 119, 125, 127, 128, 132, 133, 141, 142, 163, 165, 176, 177, 184, 188, 189, 190, 191, 192, 193, 208, 211, 225, 231, 241, 242, 244, 245, 246, 257, 258, 259, 260, 261, 274, 276, 277, 281, 282, 292, 293, 309, 311, 312, 322, 324, 325, 328, 335, 337, 338, 341, 342, 350, 352, 353, 365, 368, 369, 375, 376, 382, 385, 386, 398, 401, 402, 424, 425, 427, 428, 434, 435, 441, 444, 445, 451, 452, 458, 461, 462, 468, 469, 475, 478, 479, 491, 494, 495, 507, 510, 511, 523, 526, 527, 539, 542, 543, 549, 550, 556, 559, 560, 563, 618, 620, 621, 625, 626, 628], "doe": [39, 40, 51, 52, 104, 105, 116, 117, 141, 142, 176, 177, 189, 190, 245, 246, 258, 259, 292, 293, 627], "multipl": [40, 51, 52, 105, 116, 117, 177, 189, 190, 246, 258, 259, 405, 584], "empti": [40, 52, 105, 163, 165, 177, 190, 246], "dictionari": [40, 58, 64, 73, 76, 77, 88, 89, 105, 108, 143, 144, 145, 146, 148, 177, 196, 202, 210, 213, 214, 229, 230, 246, 249, 294, 295, 296, 297, 299, 305, 318, 331, 346, 359, 378, 392, 411, 415, 421, 437, 454, 471, 485, 501, 517, 533, 552, 614, 624], "correspond": [40, 52, 73, 77, 88, 89, 105, 108, 117, 148, 177, 190, 210, 214, 229, 230, 246, 249, 259, 299, 565, 579, 595, 608], "provid": [40, 53, 58, 117, 127, 177, 191, 196, 259, 276, 305, 318, 331, 346, 359, 378, 392, 411, 437, 454, 471, 485, 501, 517, 533, 552, 565, 595, 614, 627, 629], "ax": [41, 106, 178, 247, 580, 609, 624], "xyz": [41, 46, 47, 72, 90, 103, 106, 111, 114, 136, 147, 178, 183, 184, 209, 231, 244, 247, 252, 256, 285, 298, 308, 315, 321, 334, 343, 349, 389, 482, 498, 617], "coordin": [41, 46, 47, 62, 64, 87, 106, 112, 114, 134, 136, 138, 178, 183, 184, 200, 202, 228, 247, 253, 256, 283, 285, 287, 308, 321, 334, 349, 431, 448, 465, 581, 610, 617], "start": [41, 42, 44, 46, 47, 49, 62, 126, 134, 160, 178, 179, 181, 183, 184, 187, 200, 270, 275, 283, 375, 376, 434, 435, 451, 452, 468, 469, 549, 550, 626, 628], "end": [41, 42, 44, 46, 47, 49, 62, 126, 134, 156, 178, 179, 181, 183, 184, 187, 200, 275, 283, 308, 334], "along": [41, 47, 128, 178, 184, 277], "which": [41, 53, 54, 57, 118, 119, 178, 191, 192, 195, 260, 261, 579, 608], "includ": [41, 178, 289, 585, 624, 629], "float": [41, 42, 43, 44, 45, 46, 47, 49, 62, 64, 73, 83, 88, 92, 106, 108, 110, 112, 127, 128, 134, 136, 138, 178, 179, 180, 181, 182, 183, 184, 187, 200, 202, 210, 222, 229, 233, 247, 249, 251, 253, 276, 277, 283, 285, 287, 341, 342, 343, 349, 363, 366, 375, 376, 396, 425, 434, 435, 451, 452, 468, 469, 489, 505, 521, 537, 540, 549, 550, 563, 581, 585, 588, 589, 610, 617], "vector": [42, 47, 49, 90, 103, 110, 111, 124, 179, 184, 187, 231, 244, 251, 252, 271, 343, 349, 396, 489, 505, 508, 514, 521, 524], "locat": [46, 47, 183, 184], "midpoint": [46, 183], "outsid": [47, 57, 184, 195], "lie": [47, 184], "random": [48, 66, 68, 69, 70, 71, 113, 185, 204, 205, 206, 207, 208, 254], "sampl": [48, 113, 185, 254], "over": [50, 92, 115, 158, 159, 175, 188, 233, 257, 273, 288, 289], "bool": [50, 53, 54, 55, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 100, 101, 102, 103, 115, 118, 119, 125, 132, 133, 158, 160, 175, 188, 191, 192, 193, 208, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 241, 242, 243, 244, 257, 260, 261, 274, 281, 282, 288, 309, 311, 312, 322, 324, 325, 335, 337, 338, 341, 342, 350, 352, 353, 365, 368, 369, 382, 385, 386, 398, 401, 402, 424, 425, 427, 428, 441, 444, 445, 458, 461, 462, 475, 478, 479, 491, 494, 495, 507, 510, 511, 523, 526, 527, 539, 542, 543, 556, 559, 560, 587, 618, 620, 621], "yield": [50, 53, 54, 92, 115, 118, 119, 130, 158, 159, 175, 188, 191, 192, 233, 257, 260, 261, 270, 272, 273, 279, 288, 289], "addit": [50, 53, 54, 85, 101, 115, 118, 119, 143, 144, 145, 146, 188, 191, 192, 225, 242, 257, 260, 261, 294, 295, 296, 297, 321], "next": [50, 53, 54, 92, 115, 118, 119, 130, 158, 159, 175, 188, 191, 192, 233, 257, 260, 261, 270, 273, 279, 288, 289, 341, 342, 627, 628], "attr": [50, 53, 54, 115, 188, 191, 192, 257], "contain": [51, 52, 58, 60, 61, 65, 74, 117, 132, 189, 190, 196, 198, 199, 203, 211, 259, 281, 305, 306, 307, 311, 318, 319, 320, 324, 331, 332, 333, 337, 346, 347, 348, 352, 359, 360, 361, 368, 378, 379, 380, 385, 392, 393, 394, 401, 411, 412, 413, 427, 437, 438, 439, 444, 454, 455, 456, 461, 471, 472, 473, 478, 485, 486, 487, 494, 501, 502, 503, 510, 517, 518, 519, 526, 533, 534, 535, 542, 552, 553, 554, 559, 614, 615, 616, 620], "per": [51, 52, 66, 117, 189, 190, 204, 259, 419, 420, 563], "request": [51, 52, 105, 189, 190, 246], "condit": [53, 54, 118, 119, 191, 192, 260, 261, 629], "certain": [53, 54, 73, 88, 108, 118, 119, 191, 192, 210, 229, 249, 260, 261], "can": [53, 85, 101, 118, 191, 225, 242, 260, 624, 628], "min": [53, 118, 191, 260], "max": [53, 118, 191, 260], "predic": [54, 119, 192, 261], "lambda": [54, 119, 192, 261], "callabl": [54, 119, 127, 192, 261, 276, 587, 590], "you": [54, 119, 192, 261, 625, 626, 627, 628], "want": [54, 119, 192, 261, 628], "evalu": [54, 119, 192, 261], "straightlin": [55, 100, 193, 241], "emb": [55, 100, 193, 241], "two": [55, 56, 78, 100, 126, 159, 160, 193, 194, 216, 241, 275, 308, 334, 628], "straight": [55, 57, 85, 100, 101, 193, 195, 225, 241, 242], "embed": [55, 57, 85, 86, 100, 101, 102, 193, 195, 225, 226, 241, 242, 243], "wa": [55, 100, 193, 241, 624, 628], "success": [55, 100, 193, 241], "otherwis": [55, 74, 78, 79, 80, 83, 84, 85, 86, 87, 100, 101, 102, 193, 211, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 241, 242, 243, 375, 376, 425, 434, 435, 451, 452, 468, 469, 549, 550, 617, 629], "importerror": [55, 85, 100, 101, 193, 225, 241, 242], "networkx": [55, 63, 100, 135, 193, 201, 241, 284], "instal": [55, 85, 100, 101, 193, 225, 241, 242, 624, 627], "each": [56, 57, 116, 134, 136, 194, 195, 258, 283, 285], "repres": [56, 62, 136, 194, 200, 285], "vertex": [56, 57, 68, 77, 148, 194, 195, 205, 214, 299], "breakpoint": [57, 195], "face": [57, 125, 195, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "break": [57, 195], "found": [57, 195, 563], "primarili": [57, 195], "up": [57, 88, 108, 195, 229, 249, 628], "between": [57, 66, 126, 195, 204, 275, 363, 396, 489, 505, 521, 537], "specif": [57, 74, 75, 82, 195, 211, 212, 221, 628], "For": [57, 195, 565, 566, 590, 591, 595, 596], "applic": [57, 195], "involv": [57, 195], "dual": [57, 195], "where": [57, 121, 130, 195, 265, 279, 349, 611, 617, 624], "extern": [57, 195], "reaction": [57, 124, 195, 271, 514, 577, 624, 627], "input": [57, 195, 624], "essenti": [57, 195], "wall": [57, 195], "follow": [57, 195, 425, 563, 628, 629], "maze": [57, 195], "It": [57, 85, 101, 195, 225, 242, 425], "reli": [57, 195], "repes": [57, 195], "determin": [57, 195], "order": [57, 160, 195, 289, 420], "around": [57, 195, 593], "alwai": [57, 195], "turn": [57, 195], "classmethod": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 196, 197, 198, 199, 200, 201, 202, 203, 204, 305, 306, 307, 308, 318, 319, 320, 321, 331, 332, 333, 334, 346, 347, 348, 349, 359, 360, 361, 378, 379, 380, 392, 393, 394, 411, 412, 413, 437, 438, 439, 454, 455, 456, 471, 472, 473, 485, 486, 487, 501, 502, 503, 517, 518, 519, 533, 534, 535, 552, 553, 554, 614, 615, 616, 617], "ha": [58, 60, 61, 79, 81, 130, 196, 198, 199, 217, 220, 279, 305, 306, 307, 318, 319, 320, 331, 332, 333, 346, 347, 348, 359, 360, 361, 378, 379, 380, 392, 393, 394, 411, 412, 413, 437, 438, 439, 454, 455, 456, 471, 472, 473, 485, 486, 487, 501, 502, 503, 517, 518, 519, 533, 534, 535, 552, 553, 554, 614, 615, 616, 617, 624, 628], "correct": [58, 60, 61, 196, 198, 199, 305, 306, 307, 318, 319, 320, 331, 332, 333, 346, 347, 348, 359, 360, 361, 378, 379, 380, 392, 393, 394, 411, 412, 413, 437, 438, 439, 454, 455, 456, 471, 472, 473, 485, 486, 487, 501, 502, 503, 517, 518, 519, 533, 534, 535, 552, 553, 554, 614, 615, 616], "schema": [58, 60, 61, 131, 149, 150, 196, 198, 199, 280, 300, 301, 305, 306, 307, 310, 313, 314, 318, 319, 320, 323, 326, 327, 331, 332, 333, 336, 339, 340, 346, 347, 348, 351, 354, 355, 359, 360, 361, 367, 370, 371, 378, 379, 380, 384, 387, 388, 392, 393, 394, 400, 403, 404, 411, 412, 413, 426, 429, 430, 437, 438, 439, 443, 446, 447, 454, 455, 456, 460, 463, 464, 471, 472, 473, 477, 480, 481, 485, 486, 487, 493, 496, 497, 501, 502, 503, 509, 512, 513, 517, 518, 519, 525, 528, 529, 533, 534, 535, 541, 544, 545, 552, 553, 554, 558, 561, 562, 614, 615, 616, 619, 622, 623], "new": [59, 63, 135, 197, 201, 284, 628], "inform": [59, 197, 590], "about": [59, 197, 626], "filepath": [60, 65, 132, 137, 198, 203, 281, 286, 306, 311, 319, 324, 332, 337, 347, 352, 360, 368, 379, 385, 393, 401, 412, 427, 438, 444, 455, 461, 472, 478, 486, 494, 502, 510, 518, 526, 534, 542, 553, 559, 591, 615, 620], "serial": [60, 61, 132, 133, 198, 199, 281, 282, 306, 307, 311, 312, 319, 320, 324, 325, 332, 333, 337, 338, 347, 348, 352, 353, 360, 361, 368, 369, 379, 380, 385, 386, 393, 394, 401, 402, 412, 413, 427, 428, 438, 439, 444, 445, 455, 456, 461, 462, 472, 473, 478, 479, 486, 487, 494, 495, 502, 503, 510, 511, 518, 519, 526, 527, 534, 535, 542, 543, 553, 554, 559, 560, 615, 616, 620, 621, 624], "like": [60, 65, 132, 137, 198, 203, 281, 286, 306, 311, 319, 324, 332, 337, 347, 352, 360, 368, 379, 385, 393, 401, 412, 427, 438, 444, 455, 461, 472, 478, 486, 494, 502, 510, 518, 526, 534, 542, 553, 559, 615, 620, 627, 628], "url": [60, 65, 198, 203, 306, 319, 332, 347, 360, 379, 393, 412, 438, 455, 472, 486, 502, 518, 534, 553, 615, 625], "precis": [62, 65, 73, 88, 108, 200, 203, 210, 229, 249], "geometr": [62, 65, 73, 88, 108, 200, 203, 210, 229, 249, 583], "map": [62, 65, 73, 76, 77, 88, 89, 108, 148, 200, 203, 210, 213, 214, 229, 230, 249, 299, 415, 421, 565, 572, 575, 595, 602, 605], "digraph": [63, 135, 201, 284], "specifi": [64, 73, 88, 108, 202, 210, 229, 249, 588, 624], "hshabl": [64, 202], "cloud": [66, 204], "pointcloud": [66, 204], "deprec": [68, 69, 70, 71, 205, 206, 207, 208, 624], "sinc": [68, 69, 70, 71, 205, 206, 207, 208], "version": [68, 69, 70, 71, 125, 205, 206, 207, 208, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618, 624, 628], "13": [68, 69, 70, 71, 205, 206, 207, 208], "edge_sampl": [68, 69, 205, 206], "instead": [68, 69, 70, 71, 140, 205, 206, 207, 208, 291, 624, 628], "node_sampl": [70, 71, 207, 208], "exclude_leav": [71, 208], "exclud": [71, 208], "leav": [71, 208], "one": [71, 79, 81, 208, 217, 220, 341, 342, 419, 420, 627, 628], "verifi": [74, 75, 78, 79, 81, 82, 86, 87, 102, 211, 212, 216, 217, 220, 221, 226, 228, 243, 409], "taken": [74, 211], "account": [74, 211], "indic": [76, 136, 213, 285, 415, 421, 628], "index": [76, 77, 89, 148, 213, 214, 230, 299], "uv": [77, 148, 214, 299], "everi": [78, 127, 160, 216, 276, 341, 342], "them": [78, 216], "network_is_connect": [78, 216], "least": [79, 159, 217, 425, 563], "check": [80, 83, 84, 85, 101, 107, 219, 222, 223, 225, 242, 248, 624], "flag": [80, 83, 84, 160, 215, 218, 219, 222, 223, 224, 227, 341, 342, 425, 624, 628], "leaf": [81, 220], "min_forc": [83, 92, 222, 233], "06": [83, 92, 222, 233, 341, 342, 425, 563], "larg": [83, 92, 222, 233], "enough": [83, 92, 222, 233], "minimum": [83, 92, 222, 233], "magnitud": [83, 92, 222, 233, 343], "consid": [83, 92, 222, 233], "packag": [85, 101, 225, 242], "drawn": [85, 101, 225, 242], "without": [85, 86, 101, 102, 225, 226, 242, 243, 629], "shown": [85, 101, 225, 242], "furthermor": [85, 101, 225, 242], "python": [85, 101, 225, 242, 626, 627, 628], "bind": [85, 101, 225, 242], "suit": [85, 101, 225, 242], "anaconda": [85, 101, 225, 242, 628], "org": [85, 101, 225, 242, 590, 591, 625], "conda": [85, 101, 225, 242], "forg": [85, 101, 225, 242, 628], "fase": [86, 102, 226, 243], "normal": [90, 103, 231, 244], "laplacian": [90, 103, 110, 231, 244, 251], "entri": [90, 103, 231, 244, 419, 420], "diagon": [90, 103, 231, 244], "l": [90, 103, 231, 244], "dot": [90, 103, 231, 244], "centroid": [90, 103, 110, 112, 127, 231, 244, 251, 253, 276], "therefor": [90, 103, 231, 244], "By": [90, 103, 231, 244], "sign": [90, 103, 231, 244, 328, 624], "dsiplac": [90, 103, 231, 244], "could": [90, 103, 231, 244], "more": [90, 103, 231, 244, 425, 563, 590], "natur": [90, 103, 231, 244], "wai": [90, 103, 231, 244, 628], "ring": [93, 110, 234, 251], "compon": [106, 111, 247, 252, 624, 628], "neighborhood": [110, 251], "load_vector": [111, 252], "match": [118, 119, 260, 261, 514, 565, 566, 595, 596, 617], "assign": [123, 130, 255, 267, 279, 611, 617], "residu": [124, 271, 624], "as_str": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "hash": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "comparison": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "dure": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 588, 618], "control": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618, 627], "digest": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "hexadecim": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "rather": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "than": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "byte": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "mesh": [125, 127, 274, 276, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 583, 586, 618], "v1": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "v2": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "vertex_attribut": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "vertex_sampl": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "v3": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "shortest": [126, 275], "lead": [126, 275], "kmax": [127, 276], "damp": [127, 276], "callback": [127, 276, 341, 342, 587], "callback_arg": [127, 276], "move": [127, 276, 425, 563, 627], "free": [127, 276, 624, 629], "maximum": [127, 276, 341, 342, 425, 563], "factor": [127, 276], "user": [127, 276, 590, 624, 628], "execut": [127, 276], "after": [127, 276], "pass": [127, 276, 628], "except": [127, 128, 150, 276, 277, 301, 314, 327, 340, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 562, 623], "split": [128, 277, 624], "insert": [128, 277], "posit": [128, 277, 341, 342, 343, 349, 389, 482, 498, 617], "valueerror": [128, 277], "been": [130, 279, 628], "nativ": [131, 280, 310, 323, 336, 351, 367, 384, 400, 426, 443, 460, 477, 493, 509, 525, 541, 558, 619, 627], "describ": [131, 280, 308, 310, 321, 323, 334, 336, 351, 367, 384, 400, 426, 443, 460, 477, 493, 509, 525, 541, 558, 619], "pretti": [132, 133, 281, 282, 311, 312, 324, 325, 337, 338, 352, 353, 368, 369, 385, 386, 401, 402, 427, 428, 444, 445, 461, 462, 478, 479, 494, 495, 510, 511, 526, 527, 542, 543, 559, 560, 620, 621], "human": [132, 281, 311, 324, 337, 352, 368, 385, 401, 427, 444, 461, 478, 494, 510, 526, 542, 559, 620], "readabl": [132, 281, 311, 324, 337, 352, 368, 385, 401, 427, 444, 461, 478, 494, 510, 526, 542, 559, 620], "": [133, 149, 150, 282, 300, 301, 308, 312, 313, 314, 325, 326, 327, 334, 338, 339, 340, 353, 354, 355, 369, 370, 371, 386, 387, 388, 402, 403, 404, 428, 429, 430, 445, 446, 447, 462, 463, 464, 479, 480, 481, 495, 496, 497, 511, 512, 513, 527, 528, 529, 543, 544, 545, 560, 561, 562, 621, 622, 623, 628], "newli": [135, 284], "write": [137, 286], "modifi": [139, 140, 147, 290, 291, 298, 405, 629], "copi": [140, 291, 629], "origin": [140, 160, 223, 270, 291, 431, 448, 465], "unset": [141, 142, 292, 293], "implicitli": [141, 142, 292, 293], "back": [141, 142, 292, 293], "store": [141, 142, 292, 293], "attr_dict": [143, 144, 145, 146, 294, 295, 296, 297], "kwattr": [143, 144, 145, 146, 294, 295, 296, 297], "updat": [143, 144, 145, 146, 294, 295, 296, 297, 580, 589, 609, 624], "compil": [143, 144, 145, 146, 294, 295, 296, 297], "remain": [143, 144, 145, 146, 294, 295, 296, 297], "valid": [149, 150, 300, 301, 313, 314, 326, 327, 339, 340, 354, 355, 370, 371, 387, 388, 403, 404, 429, 430, 446, 447, 463, 464, 480, 481, 496, 497, 512, 513, 528, 529, 544, 545, 561, 562, 622, 623], "against": [149, 150, 300, 301, 313, 314, 326, 327, 339, 340, 341, 342, 354, 355, 370, 371, 387, 388, 403, 404, 429, 430, 446, 447, 463, 464, 480, 481, 496, 497, 506, 512, 513, 528, 529, 544, 545, 561, 562, 622, 623], "schemaerror": [149, 300, 313, 326, 339, 354, 370, 387, 403, 429, 446, 463, 480, 496, 512, 528, 544, 561, 622], "jsonschema": [150, 301, 314, 327, 340, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 562, 623], "validationerror": [150, 301, 314, 327, 340, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 562, 623], "veri": 151, "mark": [156, 341, 342], "continu": [156, 628], "thei": [156, 624, 628], "aren": 156, "simultan": [158, 175, 288, 627], "process": [160, 425], "travers": 160, "begin": 160, "sequenc": [160, 186, 255, 272, 289], "characterist": 160, "append": 160, "unassign": 160, "part": [160, 628], "previou": 160, "recalcul": 160, "call": [160, 624, 628], "attach": [163, 165], "given": [186, 566, 596], "whether": [215, 218, 227, 629], "k": 255, "largest": 272, "extra": [308, 321, 334, 593, 624], "absolut": [328, 375, 376, 434, 435, 451, 452, 468, 469, 549, 550], "howev": [328, 627], "combinatori": [328, 625, 627], "preserv": 328, "todo": 328, "addexplicit": 328, "signatur": [328, 624], "constructor": 328, "run": [341, 342, 425, 563, 627, 628], "distanc": [341, 342, 363, 396, 489, 505, 521, 537], "threshold": [341, 342, 425, 563], "converg": [341, 342, 425, 563, 624], "compar": [341, 342, 506], "sum": [341, 342], "hit": [341, 342, 425, 563, 628], "befor": [341, 342, 628], "consum": [341, 342], "calcul": [341, 342, 375, 376, 414, 425, 434, 435, 451, 452, 468, 469, 549, 550, 624], "stop": [341, 342, 425, 563], "earli": [341, 342, 425, 563], "out": [341, 342, 628, 629], "oper": [341, 342, 627], "formdiagram": [341, 342, 425, 563, 564, 617], "weight": [356, 389, 482, 498, 514, 530], "floatconstraint": [356, 530, 624], "reach": [356, 530], "error": [363, 396, 489, 505, 521, 537, 624, 628], "squar": [363, 396, 425, 489, 505, 521, 537, 563], "differ": [363, 396, 425, 489, 505, 521, 537, 624, 627], "edgeparamet": [372, 546], "parametr": [374, 433, 450, 467, 548], "lower": [375, 434, 451, 468, 549], "minu": [375, 434, 451, 468, 549], "inf": [375, 376, 434, 435, 451, 452, 468, 469, 549, 550], "upper": [376, 435, 452, 469, 550], "plu": [376, 435, 452, 469, 550], "vectorconstraint": [389, 482, 498, 514, 624], "pull": [389, 482, 498], "rai": 389, "meet": [405, 627], "problem": [408, 409, 425, 563, 627, 628], "sane": 409, "mind": 409, "grad_f": 414, "step_siz": [414, 425], "gradient": [414, 425, 563, 624], "grad_func": 418, "paremet": 420, "care": 420, "keep": [420, 624, 628], "kappa": [425, 624], "08": 425, "constrain": [425, 563, 625, 627, 628], "differenti": [425, 625, 627], "local": [425, 563], "sequenti": [425, 563], "program": [425, 563, 628], "low": [425, 563], "storag": [425, 563], "broyden": [425, 563], "fletcher": [425, 563], "goldfarb": [425, 563], "shanno": [425, 563], "mma": [425, 563], "asymptot": [425, 563], "tnewton": [425, 563], "precondit": [425, 563], "truncat": [425, 563], "newton": [425, 563], "auglag": [425, 563], "augment": [425, 563], "lagrangian": [425, 563], "var": [425, 624], "limit": [425, 580, 609, 628, 629], "memori": 425, "variabl": 425, "metric": 425, "nlopt": [425, 563, 624], "document": [425, 563, 624, 628, 629], "detail": [425, 563], "theoret": [425, 563], "underpin": [425, 563], "fd": 425, "finit": [425, 624], "norm": [425, 563], "8": [425, 624], "step": [425, 628], "via": [425, 624, 627], "becom": 425, "activ": 425, "ignor": [425, 563, 624], "cem": [425, 563, 624, 625, 626], "statist": 425, "nodeparamet": [431, 448, 465], "task": 563, "through": [563, 628], "proxi": 563, "server": 563, "hyperspac": 563, "tunnel": 563, "until": 563, "exhaust": 563, "final": [563, 628], "grad_norm": 563, "cummul": 563, "elaps": 563, "durat": [563, 588], "total": 563, "millisecond": 563, "statu": 563, "item": [564, 565, 566, 579, 583, 584, 586, 594, 595, 596, 608], "networkartist": [564, 594], "artist": [564, 565, 566, 579, 583, 594, 595, 596, 608, 624], "draw": [564, 571, 572, 573, 574, 575, 576, 577, 583, 594, 601, 602, 603, 604, 605, 606, 624], "form_diagram": 564, "collect": [565, 566, 571, 595, 596, 601, 628], "relev": [565, 566, 595, 596], "see": [565, 566, 590, 591, 595, 596], "accord": [565, 595], "item_artist": [565, 595], "regist": [565, 590, 595], "artist_typ": [566, 579, 596, 608], "clear": [568, 569, 598, 599], "canva": [568, 569, 598, 599, 628], "label": [570, 572, 575, 600, 602, 605], "entir": [571, 601], "text": [572, 575, 602, 605], "select": [572, 575, 602, 605], "act": 574, "view": [578, 581, 593, 607, 610], "item_typ": [579, 608], "context": [579, 608], "blender": [579, 608, 627], "visual": [579, 580, 608, 609, 628], "corner": [581, 610], "box": [581, 593, 610], "thin": 582, "wrapper": 582, "compas_plott": 582, "api": [582, 590, 591, 627], "union": [583, 586], "primit": [583, 586], "plotterartist": [583, 584, 586], "paus": [585, 589], "interv": [587, 588], "frame": [587, 624, 627], "record": 587, "dpi": 587, "150": 587, "decor": 587, "dynam": 587, "amount": 589, "listen": 590, "pick": 590, "event": [590, 629], "handler": 590, "doc": 590, "mpl_connect": 590, "handl": 590, "matplotlib": [590, 591], "backend_bases_api": 590, "backend_bas": 590, "figurecanvasbas": 590, "event_handl": 590, "full": [591, 624], "overview": 591, "configur": 591, "pyplot_api": 591, "pyplot": 591, "savefig": 591, "zoom": 593, "topology_diagram": 594, "inscrib": 604, "circl": 604, "node_support": 611, "notabl": 624, "project": [624, 625], "adher": 624, "semant": 624, "constrainedformfind": 624, "gh": [624, 628], "topologyartist": 624, "formartist": 624, "treshold": 624, "implement": 624, "is_edge_support": 624, "folder": 624, "prefix": 624, "compascem": 624, "renam": 624, "solve_nlopt": 624, "refactor": 624, "intersect": 624, "static_equilibrium_numpi": 624, "bug": 624, "equilibrium_st": 624, "undefin": 624, "solve_nlopt_proxi": 624, "diagramobject": 624, "topologydiagramobject": 624, "formdiagramobject": 624, "proxyserv": 624, "acceler": 624, "__str__": 624, "nlopt_statu": 624, "better": 624, "interpret": 624, "ghpython": [624, 628], "registr": 624, "creation": 624, "caus": 624, "old": 624, "compas_rhino": [624, 628], "rhinoplan": 624, "from_geometri": 624, "from_rhino_point_and_vector": 624, "from_rhino_point": 624, "from_rhino_lin": 624, "ghdata": 624, "jenssen": 624, "tube": 624, "is_node_support": 624, "search": 624, "plugin": [624, 627], "global": [624, 627], "color": 624, "dark": 624, "blue": 624, "grai": 624, "mechan": 624, "compli": 624, "topologyplott": 624, "formplott": 624, "serializ": 624, "pin": 624, "depend": [624, 627, 628], "due": 624, "networkplott": 624, "green": 624, "light": 624, "assembl": 624, "ghplugin": 624, "wrap": 624, "edgesearch": 624, "drop": [624, 628], "ld": 624, "subscript": 624, "skip": 624, "assembletopologydiagram": 624, "draw_arrow": 624, "_draw_load": 624, "_draw_load_arrow": 624, "arrow": 624, "export": 624, "draw_trail": 624, "topologyartistcompon": 624, "number_of_trail_edg": 624, "number_of_deviation_edg": 624, "__repr__": 624, "edge_kei": 624, "node_kei": 624, "replac": [624, 628], "noderesult": 624, "wit": 624, "supportnoderesult": 624, "merg": [624, 629], "access": 624, "gradient_norm": 624, "expos": 624, "hard": 624, "code": [624, 625, 627, 628], "ghcompon": 624, "to_compa": 624, "planeconstraint": 624, "formfind": 624, "eps_min": 624, "equilibrium_state_numpi": 624, "draw_seg": 624, "scheme": 624, "draw_edg": 624, "tight": 624, "autoscal": 624, "save": 624, "overcrop": 624, "imag": 624, "custom": 624, "form_plotter_proxi": 624, "topology_plotter_proxi": 624, "polygon": 624, "took": 624, "temporari": 624, "patch": 624, "deviationedgelengthconstraint": 624, "autograd": 624, "is_auxiliary_trail_edg": 624, "filter": 624, "number_of_auxiliary_trail": 624, "properti": 624, "auxiliary_trail_vector": 624, "under": 624, "anyth": 624, "longer": [624, 628], "reflect": 624, "immut": 624, "children": 624, "penalti": 624, "nodemixin": 624, "node_xyz": 624, "rhino_instal": 624, "streamlin": 624, "symlink": 624, "src": 624, "ghuser": [624, 628], "gitignor": 624, "uninstal": [624, 628], "tag": 624, "regex": 624, "bumpvers": 624, "cfg": 624, "md": 624, "rst": 624, "research": 625, "pleas": [625, 628], "our": [625, 627, 628], "paper": 625, "preprint": 625, "misc": 625, "pastrana_constrainedformfinding_2021": 625, "titl": 625, "pastrana": [625, 627, 629], "rafael": [625, 627, 629], "ohlbrock": [625, 627], "patrick": 625, "ol": [625, 627], "acunto": [625, 627], "pierluigi": [625, 627], "parascho": [625, 627], "stefana": [625, 627], "year": 625, "2021": [625, 629], "arxiv": 625, "ab": 625, "2111": 625, "02607": 625, "eprint": 625, "archiveprefix": 625, "And": 625, "repositori": 625, "softwar": [625, 627, 629], "model": [625, 627, 628], "framework": [625, 627], "doi": 625, "5281": 625, "zenodo": 625, "5705740": 625, "arpastrana": 625, "github": 625, "io": 625, "_cem": 625, "arpj": 625, "princeton": [625, 627], "arch": 625, "ethz": 625, "ch": 625, "oleohlbrock": 625, "pierluigidacunto": 625, "tum": 625, "de": 625, "edu": 625, "stefanaparascho": 625, "excit": 626, "mai": [626, 628], "help": 626, "approach": 627, "spatial": 627, "bar": 627, "subject": [627, 629], "combin": 627, "design": 627, "encapsul": 627, "open": 627, "tool": [627, 628], "enabl": 627, "formul": 627, "solut": 627, "plain": 627, "mix": 627, "explor": 627, "wider": 627, "spectrum": 627, "typologi": 627, "space": 627, "go": [627, 628], "beyond": 627, "convent": 627, "catalog": 627, "shell": 627, "cabl": 627, "effici": 627, "priori": 627, "best": 627, "fit": [627, 629], "shape": 627, "restrain": 627, "usabl": 627, "across": 627, "system": 627, "window": [627, 628], "maco": [627, 628], "linux": [627, 628], "perhap": 627, "dai": [627, 628], "also": 627, "metavers": 627, "cad": 627, "work": [627, 628], "necessari": 627, "interfac": 627, "seamlessli": 627, "insid": 627, "popular": 627, "environ": 627, "As": [627, 628], "extens": [627, 628], "offer": 627, "integr": 627, "exchang": 627, "ecosystem": 627, "those": [627, 628], "slider": 627, "person": [627, 629], "worri": 627, "ship": 627, "too": 627, "precook": 627, "readili": 627, "engin": [627, 628], "your": 627, "spaghetti": 627, "pipelin": 627, "develop": 627, "endors": 627, "introduct": 627, "changelog": 627, "cite": 627, "licens": 627, "four": 628, "we": 628, "have": 628, "machin": 628, "command": 628, "prompt": 628, "termin": 628, "chose": 628, "spacecowboi": 628, "prefer": 628, "bubbl": 628, "isol": 628, "In": 628, "word": 628, "what": 628, "happen": 628, "stai": 628, "requir": 628, "recommend": 628, "consult": 628, "encount": 628, "being": 628, "abl": 628, "microsoft": 628, "miss": 628, "fail": 628, "saniti": 628, "known": 628, "issu": 628, "page": 628, "instruct": 628, "how": 628, "liner": 628, "To": 628, "everyth": 628, "enter": 628, "celebr": 628, "There": 628, "complex": 628, "easier": 628, "do": [628, 629], "few": 628, "mous": 628, "click": 628, "hundr": 628, "bit": 628, "familiar": 628, "addition": 628, "close": 628, "three": 628, "sure": 628, "proceed": 628, "case": 628, "older": 628, "m": 628, "compani": 628, "let": 628, "compas_ghpython": 628, "were": 628, "wonder": 628, "launch": 628, "onto": 628, "send": 628, "pictur": 628, "onc": 628, "forget": 628, "who": 628, "don": 628, "know": 628, "consequ": 628, "alreadi": 628, "NOT": [628, 629], "past": 628, "latest": 628, "upgrad": 628, "altern": 628, "switch": 628, "had": 628, "mit": 629, "copyright": 629, "2020": 629, "permiss": 629, "herebi": 629, "grant": 629, "charg": 629, "obtain": 629, "associ": 629, "deal": 629, "restrict": 629, "right": 629, "publish": 629, "distribut": 629, "sublicens": 629, "sell": 629, "permit": 629, "whom": 629, "furnish": 629, "so": 629, "abov": 629, "notic": 629, "shall": 629, "substanti": 629, "portion": 629, "THE": 629, "AS": 629, "warranti": 629, "OF": 629, "kind": 629, "express": 629, "OR": 629, "impli": 629, "BUT": 629, "TO": 629, "merchant": 629, "FOR": 629, "particular": 629, "purpos": 629, "AND": 629, "noninfring": 629, "NO": 629, "author": 629, "holder": 629, "BE": 629, "liabl": 629, "claim": 629, "damag": 629, "liabil": 629, "action": 629, "contract": 629, "tort": 629, "aris": 629, "WITH": 629}, "objects": {"": [[13, 0, 0, "-", "compas_cem"]], "compas_cem": [[14, 0, 0, "-", "diagrams"], [15, 0, 0, "-", "elements"], [16, 0, 0, "-", "equilibrium"], [17, 0, 0, "-", "loads"], [18, 0, 0, "-", "optimization"], [19, 0, 0, "-", "plotters"], [20, 0, 0, "-", "supports"], [21, 0, 0, "-", "viewers"]], "compas_cem.diagrams": [[22, 1, 1, "", "FormDiagram"], [151, 1, 1, "", "TopologyDiagram"]], "compas_cem.diagrams.FormDiagram": [[23, 2, 1, "", "ToString"], [24, 2, 1, "", "add_edge"], [25, 2, 1, "", "add_node"], [26, 2, 1, "", "adjacency_matrix"], [27, 2, 1, "", "clear"], [28, 2, 1, "", "complement"], [29, 2, 1, "", "connected_edges"], [30, 2, 1, "", "connectivity_matrix"], [31, 2, 1, "", "copy"], [32, 2, 1, "", "count_crossings"], [33, 2, 1, "", "degree"], [34, 2, 1, "", "degree_in"], [35, 2, 1, "", "degree_matrix"], [36, 2, 1, "", "degree_out"], [37, 2, 1, "", "delete_edge"], [38, 2, 1, "", "delete_node"], [39, 2, 1, "", "edge_attribute"], [40, 2, 1, "", "edge_attributes"], [41, 2, 1, "", "edge_coordinates"], [42, 2, 1, "", "edge_direction"], [43, 2, 1, "", "edge_force"], [44, 2, 1, "", "edge_length"], [45, 2, 1, "", "edge_length_2"], [46, 2, 1, "", "edge_midpoint"], [47, 2, 1, "", "edge_point"], [48, 2, 1, "", "edge_sample"], [49, 2, 1, "", "edge_vector"], [50, 2, 1, "", "edges"], [51, 2, 1, "", "edges_attribute"], [52, 2, 1, "", "edges_attributes"], [53, 2, 1, "", "edges_where"], [54, 2, 1, "", "edges_where_predicate"], [55, 2, 1, "", "embed_in_plane"], [56, 2, 1, "", "find_crossings"], [57, 2, 1, "", "find_cycles"], [58, 2, 1, "", "from_data"], [59, 2, 1, "", "from_edges"], [60, 2, 1, "", "from_json"], [61, 2, 1, "", "from_jsonstring"], [62, 2, 1, "", "from_lines"], [63, 2, 1, "", "from_networkx"], [64, 2, 1, "", "from_nodes_and_edges"], [65, 2, 1, "", "from_obj"], [66, 2, 1, "", "from_pointcloud"], [67, 2, 1, "", "from_topology_diagram"], [68, 2, 1, "", "get_any_edge"], [69, 2, 1, "", "get_any_edges"], [70, 2, 1, "", "get_any_node"], [71, 2, 1, "", "get_any_nodes"], [72, 2, 1, "", "gkey"], [73, 2, 1, "", "gkey_key"], [74, 2, 1, "", "has_edge"], [75, 2, 1, "", "has_node"], [76, 2, 1, "", "index_key"], [77, 2, 1, "", "index_uv"], [78, 2, 1, "", "is_connected"], [79, 2, 1, "", "is_crossed"], [80, 2, 1, "", "is_edge_supported"], [81, 2, 1, "", "is_leaf"], [82, 2, 1, "", "is_node_connected"], [83, 2, 1, "", "is_node_loaded"], [84, 2, 1, "", "is_node_support"], [85, 2, 1, "", "is_planar"], [86, 2, 1, "", "is_planar_embedding"], [87, 2, 1, "", "is_xy"], [88, 2, 1, "", "key_gkey"], [89, 2, 1, "", "key_index"], [90, 2, 1, "", "laplacian_matrix"], [91, 2, 1, "", "leaves"], [92, 2, 1, "", "loaded_nodes"], [93, 2, 1, "", "neighborhood"], [94, 2, 1, "", "neighbors"], [95, 2, 1, "", "neighbors_in"], [96, 2, 1, "", "neighbors_out"], [97, 2, 1, "", "network_adjacency_matrix"], [98, 2, 1, "", "network_connectivity_matrix"], [99, 2, 1, "", "network_degree_matrix"], [100, 2, 1, "", "network_embed_in_plane"], [101, 2, 1, "", "network_is_planar"], [102, 2, 1, "", "network_is_planar_embedding"], [103, 2, 1, "", "network_laplacian_matrix"], [104, 2, 1, "", "node_attribute"], [105, 2, 1, "", "node_attributes"], [106, 2, 1, "", "node_coordinates"], [107, 2, 1, "", "node_exists"], [108, 2, 1, "", "node_gkey"], [109, 2, 1, "", "node_key"], [110, 2, 1, "", "node_laplacian"], [111, 2, 1, "", "node_load"], [112, 2, 1, "", "node_neighborhood_centroid"], [113, 2, 1, "", "node_sample"], [114, 2, 1, "", "node_xyz"], [115, 2, 1, "", "nodes"], [116, 2, 1, "", "nodes_attribute"], [117, 2, 1, "", "nodes_attributes"], [118, 2, 1, "", "nodes_where"], [119, 2, 1, "", "nodes_where_predicate"], [120, 2, 1, "", "number_of_edges"], [121, 2, 1, "", "number_of_loaded_nodes"], [122, 2, 1, "", "number_of_nodes"], [123, 2, 1, "", "number_of_support_nodes"], [124, 2, 1, "", "reaction_force"], [125, 2, 1, "", "sha256"], [126, 2, 1, "", "shortest_path"], [127, 2, 1, "", "smooth"], [128, 2, 1, "", "split_edge"], [129, 2, 1, "", "summary"], [130, 2, 1, "", "support_nodes"], [131, 2, 1, "", "to_data"], [132, 2, 1, "", "to_json"], [133, 2, 1, "", "to_jsonstring"], [134, 2, 1, "", "to_lines"], [135, 2, 1, "", "to_networkx"], [136, 2, 1, "", "to_nodes_and_edges"], [137, 2, 1, "", "to_obj"], [138, 2, 1, "", "to_points"], [139, 2, 1, "", "transform"], [140, 2, 1, "", "transformed"], [141, 2, 1, "", "unset_edge_attribute"], [142, 2, 1, "", "unset_node_attribute"], [143, 2, 1, "", "update_dea"], [144, 2, 1, "", "update_default_edge_attributes"], [145, 2, 1, "", "update_default_node_attributes"], [146, 2, 1, "", "update_dna"], [147, 2, 1, "", "update_node_xyz"], [148, 2, 1, "", "uv_index"], [149, 2, 1, "", "validate_data"], [150, 2, 1, "", "validate_json"]], "compas_cem.diagrams.TopologyDiagram": [[152, 2, 1, "", "ToString"], [153, 2, 1, "", "add_edge"], [154, 2, 1, "", "add_load"], [155, 2, 1, "", "add_node"], [156, 2, 1, "", "add_support"], [157, 2, 1, "", "adjacency_matrix"], [158, 2, 1, "", "auxiliary_trail_edges"], [159, 2, 1, "", "auxiliary_trails"], [160, 2, 1, "", "build_trails"], [161, 2, 1, "", "clear"], [162, 2, 1, "", "complement"], [163, 2, 1, "", "connected_deviation_edges"], [164, 2, 1, "", "connected_edges"], [165, 2, 1, "", "connected_trail_edges"], [166, 2, 1, "", "connectivity_matrix"], [167, 2, 1, "", "copy"], [168, 2, 1, "", "count_crossings"], [169, 2, 1, "", "degree"], [170, 2, 1, "", "degree_in"], [171, 2, 1, "", "degree_matrix"], [172, 2, 1, "", "degree_out"], [173, 2, 1, "", "delete_edge"], [174, 2, 1, "", "delete_node"], [175, 2, 1, "", "deviation_edges"], [176, 2, 1, "", "edge_attribute"], [177, 2, 1, "", "edge_attributes"], [178, 2, 1, "", "edge_coordinates"], [179, 2, 1, "", "edge_direction"], [180, 2, 1, "", "edge_force"], [181, 2, 1, "", "edge_length"], [182, 2, 1, "", "edge_length_2"], [183, 2, 1, "", "edge_midpoint"], [184, 2, 1, "", "edge_point"], [185, 2, 1, "", "edge_sample"], [186, 2, 1, "", "edge_sequence"], [187, 2, 1, "", "edge_vector"], [188, 2, 1, "", "edges"], [189, 2, 1, "", "edges_attribute"], [190, 2, 1, "", "edges_attributes"], [191, 2, 1, "", "edges_where"], [192, 2, 1, "", "edges_where_predicate"], [193, 2, 1, "", "embed_in_plane"], [194, 2, 1, "", "find_crossings"], [195, 2, 1, "", "find_cycles"], [196, 2, 1, "", "from_data"], [197, 2, 1, "", "from_edges"], [198, 2, 1, "", "from_json"], [199, 2, 1, "", "from_jsonstring"], [200, 2, 1, "", "from_lines"], [201, 2, 1, "", "from_networkx"], [202, 2, 1, "", "from_nodes_and_edges"], [203, 2, 1, "", "from_obj"], [204, 2, 1, "", "from_pointcloud"], [205, 2, 1, "", "get_any_edge"], [206, 2, 1, "", "get_any_edges"], [207, 2, 1, "", "get_any_node"], [208, 2, 1, "", "get_any_nodes"], [209, 2, 1, "", "gkey"], [210, 2, 1, "", "gkey_key"], [211, 2, 1, "", "has_edge"], [212, 2, 1, "", "has_node"], [213, 2, 1, "", "index_key"], [214, 2, 1, "", "index_uv"], [215, 2, 1, "", "is_auxiliary_trail_edge"], [216, 2, 1, "", "is_connected"], [217, 2, 1, "", "is_crossed"], [218, 2, 1, "", "is_deviation_edge"], [219, 2, 1, "", "is_edge_supported"], [220, 2, 1, "", "is_leaf"], [221, 2, 1, "", "is_node_connected"], [222, 2, 1, "", "is_node_loaded"], [223, 2, 1, "", "is_node_origin"], [224, 2, 1, "", "is_node_support"], [225, 2, 1, "", "is_planar"], [226, 2, 1, "", "is_planar_embedding"], [227, 2, 1, "", "is_trail_edge"], [228, 2, 1, "", "is_xy"], [229, 2, 1, "", "key_gkey"], [230, 2, 1, "", "key_index"], [231, 2, 1, "", "laplacian_matrix"], [232, 2, 1, "", "leaves"], [233, 2, 1, "", "loaded_nodes"], [234, 2, 1, "", "neighborhood"], [235, 2, 1, "", "neighbors"], [236, 2, 1, "", "neighbors_in"], [237, 2, 1, "", "neighbors_out"], [238, 2, 1, "", "network_adjacency_matrix"], [239, 2, 1, "", "network_connectivity_matrix"], [240, 2, 1, "", "network_degree_matrix"], [241, 2, 1, "", "network_embed_in_plane"], [242, 2, 1, "", "network_is_planar"], [243, 2, 1, "", "network_is_planar_embedding"], [244, 2, 1, "", "network_laplacian_matrix"], [245, 2, 1, "", "node_attribute"], [246, 2, 1, "", "node_attributes"], [247, 2, 1, "", "node_coordinates"], [248, 2, 1, "", "node_exists"], [249, 2, 1, "", "node_gkey"], [250, 2, 1, "", "node_key"], [251, 2, 1, "", "node_laplacian"], [252, 2, 1, "", "node_load"], [253, 2, 1, "", "node_neighborhood_centroid"], [254, 2, 1, "", "node_sample"], [255, 2, 1, "", "node_sequence"], [256, 2, 1, "", "node_xyz"], [257, 2, 1, "", "nodes"], [258, 2, 1, "", "nodes_attribute"], [259, 2, 1, "", "nodes_attributes"], [260, 2, 1, "", "nodes_where"], [261, 2, 1, "", "nodes_where_predicate"], [262, 2, 1, "", "number_of_auxiliary_trails"], [263, 2, 1, "", "number_of_deviation_edges"], [264, 2, 1, "", "number_of_edges"], [265, 2, 1, "", "number_of_loaded_nodes"], [266, 2, 1, "", "number_of_nodes"], [267, 2, 1, "", "number_of_support_nodes"], [268, 2, 1, "", "number_of_trail_edges"], [269, 2, 1, "", "number_of_trails"], [270, 2, 1, "", "origin_nodes"], [271, 2, 1, "", "reaction_force"], [272, 2, 1, "", "sequence_max"], [273, 2, 1, "", "sequences"], [274, 2, 1, "", "sha256"], [275, 2, 1, "", "shortest_path"], [276, 2, 1, "", "smooth"], [277, 2, 1, "", "split_edge"], [278, 2, 1, "", "summary"], [279, 2, 1, "", "support_nodes"], [280, 2, 1, "", "to_data"], [281, 2, 1, "", "to_json"], [282, 2, 1, "", "to_jsonstring"], [283, 2, 1, "", "to_lines"], [284, 2, 1, "", "to_networkx"], [285, 2, 1, "", "to_nodes_and_edges"], [286, 2, 1, "", "to_obj"], [287, 2, 1, "", "to_points"], [288, 2, 1, "", "trail_edges"], [289, 2, 1, "", "trails"], [290, 2, 1, "", "transform"], [291, 2, 1, "", "transformed"], [292, 2, 1, "", "unset_edge_attribute"], [293, 2, 1, "", "unset_node_attribute"], [294, 2, 1, "", "update_dea"], [295, 2, 1, "", "update_default_edge_attributes"], [296, 2, 1, "", "update_default_node_attributes"], [297, 2, 1, "", "update_dna"], [298, 2, 1, "", "update_node_xyz"], [299, 2, 1, "", "uv_index"], [300, 2, 1, "", "validate_data"], [301, 2, 1, "", "validate_json"]], "compas_cem.elements": [[302, 1, 1, "", "DeviationEdge"], [315, 1, 1, "", "Node"], [328, 1, 1, "", "TrailEdge"]], "compas_cem.elements.DeviationEdge": [[303, 2, 1, "", "ToString"], [304, 2, 1, "", "copy"], [305, 2, 1, "", "from_data"], [306, 2, 1, "", "from_json"], [307, 2, 1, "", "from_jsonstring"], [308, 2, 1, "", "from_line"], [309, 2, 1, "", "sha256"], [310, 2, 1, "", "to_data"], [311, 2, 1, "", "to_json"], [312, 2, 1, "", "to_jsonstring"], [313, 2, 1, "", "validate_data"], [314, 2, 1, "", "validate_json"]], "compas_cem.elements.Node": [[316, 2, 1, "", "ToString"], [317, 2, 1, "", "copy"], [318, 2, 1, "", "from_data"], [319, 2, 1, "", "from_json"], [320, 2, 1, "", "from_jsonstring"], [321, 2, 1, "", "from_point"], [322, 2, 1, "", "sha256"], [323, 2, 1, "", "to_data"], [324, 2, 1, "", "to_json"], [325, 2, 1, "", "to_jsonstring"], [326, 2, 1, "", "validate_data"], [327, 2, 1, "", "validate_json"]], "compas_cem.elements.TrailEdge": [[329, 2, 1, "", "ToString"], [330, 2, 1, "", "copy"], [331, 2, 1, "", "from_data"], [332, 2, 1, "", "from_json"], [333, 2, 1, "", "from_jsonstring"], [334, 2, 1, "", "from_line"], [335, 2, 1, "", "sha256"], [336, 2, 1, "", "to_data"], [337, 2, 1, "", "to_json"], [338, 2, 1, "", "to_jsonstring"], [339, 2, 1, "", "validate_data"], [340, 2, 1, "", "validate_json"]], "compas_cem.equilibrium": [[341, 3, 1, "", "static_equilibrium"], [342, 3, 1, "", "static_equilibrium_numpy"]], "compas_cem.loads": [[343, 1, 1, "", "NodeLoad"]], "compas_cem.loads.NodeLoad": [[344, 2, 1, "", "ToString"], [345, 2, 1, "", "copy"], [346, 2, 1, "", "from_data"], [347, 2, 1, "", "from_json"], [348, 2, 1, "", "from_jsonstring"], [349, 2, 1, "", "from_point_and_vector"], [350, 2, 1, "", "sha256"], [351, 2, 1, "", "to_data"], [352, 2, 1, "", "to_json"], [353, 2, 1, "", "to_jsonstring"], [354, 2, 1, "", "validate_data"], [355, 2, 1, "", "validate_json"]], "compas_cem.optimization": [[356, 1, 1, "", "DeviationEdgeLengthConstraint"], [372, 1, 1, "", "DeviationEdgeParameter"], [389, 1, 1, "", "LineConstraint"], [405, 1, 1, "", "Optimizer"], [431, 1, 1, "", "OriginNodeXParameter"], [448, 1, 1, "", "OriginNodeYParameter"], [465, 1, 1, "", "OriginNodeZParameter"], [482, 1, 1, "", "PlaneConstraint"], [498, 1, 1, "", "PointConstraint"], [514, 1, 1, "", "ReactionForceConstraint"], [530, 1, 1, "", "TrailEdgeForceConstraint"], [546, 1, 1, "", "TrailEdgeParameter"], [563, 3, 1, "", "solve_proxy"]], "compas_cem.optimization.DeviationEdgeLengthConstraint": [[357, 2, 1, "", "ToString"], [358, 2, 1, "", "copy"], [359, 2, 1, "", "from_data"], [360, 2, 1, "", "from_json"], [361, 2, 1, "", "from_jsonstring"], [362, 2, 1, "", "key"], [363, 2, 1, "", "penalty"], [364, 2, 1, "", "reference"], [365, 2, 1, "", "sha256"], [366, 2, 1, "", "target"], [367, 2, 1, "", "to_data"], [368, 2, 1, "", "to_json"], [369, 2, 1, "", "to_jsonstring"], [370, 2, 1, "", "validate_data"], [371, 2, 1, "", "validate_json"]], "compas_cem.optimization.DeviationEdgeParameter": [[373, 2, 1, "", "ToString"], [374, 2, 1, "", "attr_name"], [375, 2, 1, "", "bound_low"], [376, 2, 1, "", "bound_up"], [377, 2, 1, "", "copy"], [378, 2, 1, "", "from_data"], [379, 2, 1, "", "from_json"], [380, 2, 1, "", "from_jsonstring"], [381, 2, 1, "", "key"], [382, 2, 1, "", "sha256"], [383, 2, 1, "", "start_value"], [384, 2, 1, "", "to_data"], [385, 2, 1, "", "to_json"], [386, 2, 1, "", "to_jsonstring"], [387, 2, 1, "", "validate_data"], [388, 2, 1, "", "validate_json"]], "compas_cem.optimization.LineConstraint": [[390, 2, 1, "", "ToString"], [391, 2, 1, "", "copy"], [392, 2, 1, "", "from_data"], [393, 2, 1, "", "from_json"], [394, 2, 1, "", "from_jsonstring"], [395, 2, 1, "", "key"], [396, 2, 1, "", "penalty"], [397, 2, 1, "", "reference"], [398, 2, 1, "", "sha256"], [399, 2, 1, "", "target"], [400, 2, 1, "", "to_data"], [401, 2, 1, "", "to_json"], [402, 2, 1, "", "to_jsonstring"], [403, 2, 1, "", "validate_data"], [404, 2, 1, "", "validate_json"]], "compas_cem.optimization.Optimizer": [[406, 2, 1, "", "ToString"], [407, 2, 1, "", "add_constraint"], [408, 2, 1, "", "add_parameter"], [409, 2, 1, "", "check_optimization_sanity"], [410, 2, 1, "", "copy"], [411, 2, 1, "", "from_data"], [412, 2, 1, "", "from_json"], [413, 2, 1, "", "from_jsonstring"], [414, 2, 1, "", "gradient_func"], [415, 2, 1, "", "index_parameter"], [416, 2, 1, "", "number_of_constraints"], [417, 2, 1, "", "number_of_parameters"], [418, 2, 1, "", "objective_func"], [419, 2, 1, "", "optimization_bounds"], [420, 2, 1, "", "optimization_parameters"], [421, 2, 1, "", "parameter_index"], [422, 2, 1, "", "remove_constraint"], [423, 2, 1, "", "remove_parameter"], [424, 2, 1, "", "sha256"], [425, 2, 1, "", "solve"], [426, 2, 1, "", "to_data"], [427, 2, 1, "", "to_json"], [428, 2, 1, "", "to_jsonstring"], [429, 2, 1, "", "validate_data"], [430, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeXParameter": [[432, 2, 1, "", "ToString"], [433, 2, 1, "", "attr_name"], [434, 2, 1, "", "bound_low"], [435, 2, 1, "", "bound_up"], [436, 2, 1, "", "copy"], [437, 2, 1, "", "from_data"], [438, 2, 1, "", "from_json"], [439, 2, 1, "", "from_jsonstring"], [440, 2, 1, "", "key"], [441, 2, 1, "", "sha256"], [442, 2, 1, "", "start_value"], [443, 2, 1, "", "to_data"], [444, 2, 1, "", "to_json"], [445, 2, 1, "", "to_jsonstring"], [446, 2, 1, "", "validate_data"], [447, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeYParameter": [[449, 2, 1, "", "ToString"], [450, 2, 1, "", "attr_name"], [451, 2, 1, "", "bound_low"], [452, 2, 1, "", "bound_up"], [453, 2, 1, "", "copy"], [454, 2, 1, "", "from_data"], [455, 2, 1, "", "from_json"], [456, 2, 1, "", "from_jsonstring"], [457, 2, 1, "", "key"], [458, 2, 1, "", "sha256"], [459, 2, 1, "", "start_value"], [460, 2, 1, "", "to_data"], [461, 2, 1, "", "to_json"], [462, 2, 1, "", "to_jsonstring"], [463, 2, 1, "", "validate_data"], [464, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeZParameter": [[466, 2, 1, "", "ToString"], [467, 2, 1, "", "attr_name"], [468, 2, 1, "", "bound_low"], [469, 2, 1, "", "bound_up"], [470, 2, 1, "", "copy"], [471, 2, 1, "", "from_data"], [472, 2, 1, "", "from_json"], [473, 2, 1, "", "from_jsonstring"], [474, 2, 1, "", "key"], [475, 2, 1, "", "sha256"], [476, 2, 1, "", "start_value"], [477, 2, 1, "", "to_data"], [478, 2, 1, "", "to_json"], [479, 2, 1, "", "to_jsonstring"], [480, 2, 1, "", "validate_data"], [481, 2, 1, "", "validate_json"]], "compas_cem.optimization.PlaneConstraint": [[483, 2, 1, "", "ToString"], [484, 2, 1, "", "copy"], [485, 2, 1, "", "from_data"], [486, 2, 1, "", "from_json"], [487, 2, 1, "", "from_jsonstring"], [488, 2, 1, "", "key"], [489, 2, 1, "", "penalty"], [490, 2, 1, "", "reference"], [491, 2, 1, "", "sha256"], [492, 2, 1, "", "target"], [493, 2, 1, "", "to_data"], [494, 2, 1, "", "to_json"], [495, 2, 1, "", "to_jsonstring"], [496, 2, 1, "", "validate_data"], [497, 2, 1, "", "validate_json"]], "compas_cem.optimization.PointConstraint": [[499, 2, 1, "", "ToString"], [500, 2, 1, "", "copy"], [501, 2, 1, "", "from_data"], [502, 2, 1, "", "from_json"], [503, 2, 1, "", "from_jsonstring"], [504, 2, 1, "", "key"], [505, 2, 1, "", "penalty"], [506, 2, 1, "", "reference"], [507, 2, 1, "", "sha256"], [508, 2, 1, "", "target"], [509, 2, 1, "", "to_data"], [510, 2, 1, "", "to_json"], [511, 2, 1, "", "to_jsonstring"], [512, 2, 1, "", "validate_data"], [513, 2, 1, "", "validate_json"]], "compas_cem.optimization.ReactionForceConstraint": [[515, 2, 1, "", "ToString"], [516, 2, 1, "", "copy"], [517, 2, 1, "", "from_data"], [518, 2, 1, "", "from_json"], [519, 2, 1, "", "from_jsonstring"], [520, 2, 1, "", "key"], [521, 2, 1, "", "penalty"], [522, 2, 1, "", "reference"], [523, 2, 1, "", "sha256"], [524, 2, 1, "", "target"], [525, 2, 1, "", "to_data"], [526, 2, 1, "", "to_json"], [527, 2, 1, "", "to_jsonstring"], [528, 2, 1, "", "validate_data"], [529, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeForceConstraint": [[531, 2, 1, "", "ToString"], [532, 2, 1, "", "copy"], [533, 2, 1, "", "from_data"], [534, 2, 1, "", "from_json"], [535, 2, 1, "", "from_jsonstring"], [536, 2, 1, "", "key"], [537, 2, 1, "", "penalty"], [538, 2, 1, "", "reference"], [539, 2, 1, "", "sha256"], [540, 2, 1, "", "target"], [541, 2, 1, "", "to_data"], [542, 2, 1, "", "to_json"], [543, 2, 1, "", "to_jsonstring"], [544, 2, 1, "", "validate_data"], [545, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeParameter": [[547, 2, 1, "", "ToString"], [548, 2, 1, "", "attr_name"], [549, 2, 1, "", "bound_low"], [550, 2, 1, "", "bound_up"], [551, 2, 1, "", "copy"], [552, 2, 1, "", "from_data"], [553, 2, 1, "", "from_json"], [554, 2, 1, "", "from_jsonstring"], [555, 2, 1, "", "key"], [556, 2, 1, "", "sha256"], [557, 2, 1, "", "start_value"], [558, 2, 1, "", "to_data"], [559, 2, 1, "", "to_json"], [560, 2, 1, "", "to_jsonstring"], [561, 2, 1, "", "validate_data"], [562, 2, 1, "", "validate_json"]], "compas_cem.plotters": [[564, 1, 1, "", "FormArtist"], [582, 1, 1, "", "Plotter"], [594, 1, 1, "", "TopologyArtist"]], "compas_cem.plotters.FormArtist": [[565, 2, 1, "", "build"], [566, 2, 1, "", "build_as"], [567, 2, 1, "", "clear"], [568, 2, 1, "", "clear_edges"], [569, 2, 1, "", "clear_nodes"], [570, 2, 1, "", "draw"], [571, 2, 1, "", "draw_collection"], [572, 2, 1, "", "draw_edgelabels"], [573, 2, 1, "", "draw_edges"], [574, 2, 1, "", "draw_loads"], [575, 2, 1, "", "draw_nodelabels"], [576, 2, 1, "", "draw_nodes"], [577, 2, 1, "", "draw_reactions"], [578, 2, 1, "", "redraw"], [579, 2, 1, "", "register"], [580, 2, 1, "", "update_data"], [581, 2, 1, "", "viewbox"]], "compas_cem.plotters.Plotter": [[583, 2, 1, "", "add"], [584, 2, 1, "", "add_from_list"], [585, 2, 1, "", "draw"], [586, 2, 1, "", "find"], [587, 2, 1, "", "on"], [588, 2, 1, "", "pause"], [589, 2, 1, "", "redraw"], [590, 2, 1, "", "register_listener"], [591, 2, 1, "", "save"], [592, 2, 1, "", "show"], [593, 2, 1, "", "zoom_extents"]], "compas_cem.plotters.TopologyArtist": [[595, 2, 1, "", "build"], [596, 2, 1, "", "build_as"], [597, 2, 1, "", "clear"], [598, 2, 1, "", "clear_edges"], [599, 2, 1, "", "clear_nodes"], [600, 2, 1, "", "draw"], [601, 2, 1, "", "draw_collection"], [602, 2, 1, "", "draw_edgelabels"], [603, 2, 1, "", "draw_edges"], [604, 2, 1, "", "draw_loads"], [605, 2, 1, "", "draw_nodelabels"], [606, 2, 1, "", "draw_nodes"], [607, 2, 1, "", "redraw"], [608, 2, 1, "", "register"], [609, 2, 1, "", "update_data"], [610, 2, 1, "", "viewbox"]], "compas_cem.supports": [[611, 1, 1, "", "NodeSupport"]], "compas_cem.supports.NodeSupport": [[612, 2, 1, "", "ToString"], [613, 2, 1, "", "copy"], [614, 2, 1, "", "from_data"], [615, 2, 1, "", "from_json"], [616, 2, 1, "", "from_jsonstring"], [617, 2, 1, "", "from_point"], [618, 2, 1, "", "sha256"], [619, 2, 1, "", "to_data"], [620, 2, 1, "", "to_json"], [621, 2, 1, "", "to_jsonstring"], [622, 2, 1, "", "validate_data"], [623, 2, 1, "", "validate_json"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"python": 0, "01": 1, "simpl": 1, "compress": 1, "structur": [1, 4], "02": 2, "brace": 2, "tower": 2, "2d": [2, 3, 4, 7], "03": 3, "bridg": [3, 7, 8], "optim": [3, 18, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], "04": 4, "tree": 4, "05": 5, "planar": 5, "tensegr": [5, 10], "wheel": 5, "grasshopp": [6, 628], "A": 7, "b": 8, "tubular": 8, "3d": 8, "c": 9, "circular": 9, "dome": 9, "d": 10, "jessen": 10, "e": 11, "spiral": 11, "staircas": 11, "api": 12, "refer": [12, 364, 397, 490, 506, 522, 538], "compas_cem": [13, 14, 15, 16, 17, 18, 19, 20, 21], "diagram": 14, "element": 15, "edg": [15, 50, 188], "node": [15, 115, 257, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327], "equilibrium": 16, "load": 17, "constraint": 18, "paramet": 18, "plotter": [19, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593], "artist": 19, "support": 20, "viewer": 21, "visual": 21, "object": 21, "formdiagram": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "tostr": [23, 152, 303, 316, 329, 344, 357, 373, 390, 406, 432, 449, 466, 483, 499, 515, 531, 547, 612], "add_edg": [24, 153], "add_nod": [25, 155], "adjacency_matrix": [26, 157], "clear": [27, 161, 567, 597], "complement": [28, 162], "connected_edg": [29, 164], "connectivity_matrix": [30, 166], "copi": [31, 167, 304, 317, 330, 345, 358, 377, 391, 410, 436, 453, 470, 484, 500, 516, 532, 551, 613], "count_cross": [32, 168], "degre": [33, 169], "degree_in": [34, 170], "degree_matrix": [35, 171], "degree_out": [36, 172], "delete_edg": [37, 173], "delete_nod": [38, 174], "edge_attribut": [39, 40, 176, 177], "edge_coordin": [41, 178], "edge_direct": [42, 179], "edge_forc": [43, 180], "edge_length": [44, 181], "edge_length_2": [45, 182], "edge_midpoint": [46, 183], "edge_point": [47, 184], "edge_sampl": [48, 185], "edge_vector": [49, 187], "edges_attribut": [51, 52, 189, 190], "edges_wher": [53, 191], "edges_where_pred": [54, 192], "embed_in_plan": [55, 193], "find_cross": [56, 194], "find_cycl": [57, 195], "from_data": [58, 196, 305, 318, 331, 346, 359, 378, 392, 411, 437, 454, 471, 485, 501, 517, 533, 552, 614], "from_edg": [59, 197], "from_json": [60, 198, 306, 319, 332, 347, 360, 379, 393, 412, 438, 455, 472, 486, 502, 518, 534, 553, 615], "from_jsonstr": [61, 199, 307, 320, 333, 348, 361, 380, 394, 413, 439, 456, 473, 487, 503, 519, 535, 554, 616], "from_lin": [62, 200, 308, 334], "from_networkx": [63, 201], "from_nodes_and_edg": [64, 202], "from_obj": [65, 203], "from_pointcloud": [66, 204], "from_topology_diagram": 67, "get_any_edg": [68, 69, 205, 206], "get_any_nod": [70, 71, 207, 208], "gkei": [72, 209], "gkey_kei": [73, 210], "has_edg": [74, 211], "has_nod": [75, 212], "index_kei": [76, 213], "index_uv": [77, 214], "is_connect": [78, 216], "is_cross": [79, 217], "is_edge_support": [80, 219], "is_leaf": [81, 220], "is_node_connect": [82, 221], "is_node_load": [83, 222], "is_node_support": [84, 224], "is_planar": [85, 225], "is_planar_embed": [86, 226], "is_xi": [87, 228], "key_gkei": [88, 229], "key_index": [89, 230], "laplacian_matrix": [90, 231], "leav": [91, 232], "loaded_nod": [92, 233], "neighborhood": [93, 234], "neighbor": [94, 235], "neighbors_in": [95, 236], "neighbors_out": [96, 237], "network_adjacency_matrix": [97, 238], "network_connectivity_matrix": [98, 239], "network_degree_matrix": [99, 240], "network_embed_in_plan": [100, 241], "network_is_planar": [101, 242], "network_is_planar_embed": [102, 243], "network_laplacian_matrix": [103, 244], "node_attribut": [104, 105, 245, 246], "node_coordin": [106, 247], "node_exist": [107, 248], "node_gkei": [108, 249], "node_kei": [109, 250], "node_laplacian": [110, 251], "node_load": [111, 252], "node_neighborhood_centroid": [112, 253], "node_sampl": [113, 254], "node_xyz": [114, 256], "nodes_attribut": [116, 117, 258, 259], "nodes_wher": [118, 260], "nodes_where_pred": [119, 261], "number_of_edg": [120, 264], "number_of_loaded_nod": [121, 265], "number_of_nod": [122, 266], "number_of_support_nod": [123, 267], "reaction_forc": [124, 271], "sha256": [125, 274, 309, 322, 335, 350, 365, 382, 398, 424, 441, 458, 475, 491, 507, 523, 539, 556, 618], "shortest_path": [126, 275], "smooth": [127, 276], "split_edg": [128, 277], "summari": [129, 278], "support_nod": [130, 279], "to_data": [131, 280, 310, 323, 336, 351, 367, 384, 400, 426, 443, 460, 477, 493, 509, 525, 541, 558, 619], "to_json": [132, 281, 311, 324, 337, 352, 368, 385, 401, 427, 444, 461, 478, 494, 510, 526, 542, 559, 620], "to_jsonstr": [133, 282, 312, 325, 338, 353, 369, 386, 402, 428, 445, 462, 479, 495, 511, 527, 543, 560, 621], "to_lin": [134, 283], "to_networkx": [135, 284], "to_nodes_and_edg": [136, 285], "to_obj": [137, 286], "to_point": [138, 287], "transform": [139, 140, 290, 291], "unset_edge_attribut": [141, 292], "unset_node_attribut": [142, 293], "update_dea": [143, 294], "update_default_edge_attribut": [144, 295], "update_default_node_attribut": [145, 296], "update_dna": [146, 297], "update_node_xyz": [147, 298], "uv_index": [148, 299], "validate_data": [149, 300, 313, 326, 339, 354, 370, 387, 403, 429, 446, 463, 480, 496, 512, 528, 544, 561, 622], "validate_json": [150, 301, 314, 327, 340, 355, 371, 388, 404, 430, 447, 464, 481, 497, 513, 529, 545, 562, 623], "topologydiagram": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301], "add_load": 154, "add_support": 156, "auxiliary_trail_edg": 158, "auxiliary_trail": 159, "build_trail": 160, "connected_deviation_edg": 163, "connected_trail_edg": 165, "deviation_edg": 175, "edge_sequ": 186, "is_auxiliary_trail_edg": 215, "is_deviation_edg": 218, "is_node_origin": 223, "is_trail_edg": 227, "node_sequ": 255, "number_of_auxiliary_trail": 262, "number_of_deviation_edg": 263, "number_of_trail_edg": 268, "number_of_trail": 269, "origin_nod": 270, "sequence_max": 272, "sequenc": 273, "trail_edg": 288, "trail": 289, "deviationedg": [302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "from_point": [321, 617], "trailedg": [328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "static_equilibrium": 341, "static_equilibrium_numpi": 342, "nodeload": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], "from_point_and_vector": 349, "deviationedgelengthconstraint": [356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371], "kei": [362, 381, 395, 440, 457, 474, 488, 504, 520, 536, 555], "penalti": [363, 396, 489, 505, 521, 537], "target": [366, 399, 492, 508, 524, 540], "deviationedgeparamet": [372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388], "attr_nam": [374, 433, 450, 467, 548], "bound_low": [375, 434, 451, 468, 549], "bound_up": [376, 435, 452, 469, 550], "start_valu": [383, 442, 459, 476, 557], "lineconstraint": [389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "add_constraint": 407, "add_paramet": 408, "check_optimization_san": 409, "gradient_func": 414, "index_paramet": 415, "number_of_constraint": 416, "number_of_paramet": 417, "objective_func": 418, "optimization_bound": 419, "optimization_paramet": 420, "parameter_index": 421, "remove_constraint": 422, "remove_paramet": 423, "solv": 425, "originnodexparamet": [431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447], "originnodeyparamet": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464], "originnodezparamet": [465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481], "planeconstraint": [482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497], "pointconstraint": [498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513], "reactionforceconstraint": [514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "trailedgeforceconstraint": [530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545], "trailedgeparamet": [546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562], "solve_proxi": 563, "formartist": [564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581], "build": [565, 595], "build_a": [566, 596], "clear_edg": [568, 598], "clear_nod": [569, 599], "draw": [570, 585, 600], "draw_collect": [571, 601], "draw_edgelabel": [572, 602], "draw_edg": [573, 603], "draw_load": [574, 604], "draw_nodelabel": [575, 605], "draw_nod": [576, 606], "draw_react": 577, "redraw": [578, 589, 607], "regist": [579, 608], "update_data": [580, 609], "viewbox": [581, 610], "add": 583, "add_from_list": 584, "find": 586, "paus": 588, "register_listen": 590, "save": 591, "show": 592, "zoom_ext": 593, "topologyartist": [594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610], "nodesupport": [611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623], "changelog": 624, "0": 624, "6": 624, "5": 624, "4": [624, 628], "1": [624, 628], "2": [624, 628], "15": 624, "14": 624, "13": 624, "12": 624, "11": 624, "9": 624, "3": [624, 628], "cite": 625, "author": 625, "exampl": 626, "compa": [627, 628], "cem": [627, 628], "main": 627, "featur": 627, "credit": 627, "tabl": 627, "content": 627, "instal": 628, "creat": 628, "virtual": 628, "environ": 628, "activ": 628, "via": 628, "conda": 628, "pip": 628, "plugin": 628, "remov": 628, "ani": 628, "leftov": 628, "link": 628, "check": 628, "your": 628, "updat": 628, "licens": 629}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})