Search.setIndex({"docnames": ["_examples/01_python", "_examples/01_python/01", "_examples/01_python/02", "_examples/01_python/03", "_examples/01_python/04", "_examples/01_python/05", "_examples/02_ghpython", "_examples/02_ghpython/bridge_2d", "_examples/02_ghpython/bridge_3d", "_examples/02_ghpython/dome", "_examples/02_ghpython/jessen", "_examples/02_ghpython/spiral", "api", "api/compas_cem", "api/compas_cem.diagrams", "api/compas_cem.elements", "api/compas_cem.equilibrium", "api/compas_cem.loads", "api/compas_cem.optimization", "api/compas_cem.plotters", "api/compas_cem.supports", "api/compas_cem.viewers", "api/generated/compas_cem.diagrams.FormDiagram", "api/generated/compas_cem.diagrams.FormDiagram.ToString", "api/generated/compas_cem.diagrams.FormDiagram.add_edge", "api/generated/compas_cem.diagrams.FormDiagram.add_node", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.clear", "api/generated/compas_cem.diagrams.FormDiagram.complement", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.copy", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings", "api/generated/compas_cem.diagrams.FormDiagram.degree", "api/generated/compas_cem.diagrams.FormDiagram.degree_in", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.degree_out", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge", "api/generated/compas_cem.diagrams.FormDiagram.delete_node", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction", "api/generated/compas_cem.diagrams.FormDiagram.edge_force", "api/generated/compas_cem.diagrams.FormDiagram.edge_length", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.FormDiagram.edge_point", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector", "api/generated/compas_cem.diagrams.FormDiagram.edges", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edges_where", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles", "api/generated/compas_cem.diagrams.FormDiagram.from_data", "api/generated/compas_cem.diagrams.FormDiagram.from_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_json", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.from_lines", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_obj", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.FormDiagram.gkey", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key", "api/generated/compas_cem.diagrams.FormDiagram.has_edge", "api/generated/compas_cem.diagrams.FormDiagram.has_node", "api/generated/compas_cem.diagrams.FormDiagram.index_key", "api/generated/compas_cem.diagrams.FormDiagram.index_uv", "api/generated/compas_cem.diagrams.FormDiagram.is_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed", "api/generated/compas_cem.diagrams.FormDiagram.is_edge_supported", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support", "api/generated/compas_cem.diagrams.FormDiagram.is_planar", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.is_xy", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey", "api/generated/compas_cem.diagrams.FormDiagram.key_index", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.leaves", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood", "api/generated/compas_cem.diagrams.FormDiagram.neighbors", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.node_exists", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey", "api/generated/compas_cem.diagrams.FormDiagram.node_key", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian", "api/generated/compas_cem.diagrams.FormDiagram.node_load", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.FormDiagram.node_sample", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.nodes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force", "api/generated/compas_cem.diagrams.FormDiagram.sha256", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path", "api/generated/compas_cem.diagrams.FormDiagram.smooth", "api/generated/compas_cem.diagrams.FormDiagram.split_edge", "api/generated/compas_cem.diagrams.FormDiagram.summary", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.to_data", "api/generated/compas_cem.diagrams.FormDiagram.to_json", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.to_lines", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.to_obj", "api/generated/compas_cem.diagrams.FormDiagram.to_points", "api/generated/compas_cem.diagrams.FormDiagram.transform", "api/generated/compas_cem.diagrams.FormDiagram.transformed", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.update_dea", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_dna", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.uv_index", "api/generated/compas_cem.diagrams.FormDiagram.validate_data", "api/generated/compas_cem.diagrams.FormDiagram.validate_json", "api/generated/compas_cem.diagrams.TopologyDiagram", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.clear", "api/generated/compas_cem.diagrams.TopologyDiagram.complement", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.copy", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.degree", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector", "api/generated/compas_cem.diagrams.TopologyDiagram.edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node", "api/generated/compas_cem.diagrams.TopologyDiagram.has_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_direct_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_edge_supported", "api/generated/compas_cem.diagrams.TopologyDiagram.is_indirect_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_max", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.sha256", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.summary", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.trails", "api/generated/compas_cem.diagrams.TopologyDiagram.transform", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json", "api/generated/compas_cem.elements.DeviationEdge", "api/generated/compas_cem.elements.DeviationEdge.ToString", "api/generated/compas_cem.elements.DeviationEdge.copy", "api/generated/compas_cem.elements.DeviationEdge.from_data", "api/generated/compas_cem.elements.DeviationEdge.from_json", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.from_line", "api/generated/compas_cem.elements.DeviationEdge.sha256", "api/generated/compas_cem.elements.DeviationEdge.to_data", "api/generated/compas_cem.elements.DeviationEdge.to_json", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.validate_data", "api/generated/compas_cem.elements.DeviationEdge.validate_json", "api/generated/compas_cem.elements.Node", "api/generated/compas_cem.elements.Node.ToString", "api/generated/compas_cem.elements.Node.copy", "api/generated/compas_cem.elements.Node.from_data", "api/generated/compas_cem.elements.Node.from_json", "api/generated/compas_cem.elements.Node.from_jsonstring", "api/generated/compas_cem.elements.Node.from_point", "api/generated/compas_cem.elements.Node.sha256", "api/generated/compas_cem.elements.Node.to_data", "api/generated/compas_cem.elements.Node.to_json", "api/generated/compas_cem.elements.Node.to_jsonstring", "api/generated/compas_cem.elements.Node.validate_data", "api/generated/compas_cem.elements.Node.validate_json", "api/generated/compas_cem.elements.TrailEdge", "api/generated/compas_cem.elements.TrailEdge.ToString", "api/generated/compas_cem.elements.TrailEdge.copy", "api/generated/compas_cem.elements.TrailEdge.from_data", "api/generated/compas_cem.elements.TrailEdge.from_json", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring", "api/generated/compas_cem.elements.TrailEdge.from_line", "api/generated/compas_cem.elements.TrailEdge.sha256", "api/generated/compas_cem.elements.TrailEdge.to_data", "api/generated/compas_cem.elements.TrailEdge.to_json", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring", "api/generated/compas_cem.elements.TrailEdge.validate_data", "api/generated/compas_cem.elements.TrailEdge.validate_json", "api/generated/compas_cem.equilibrium.static_equilibrium", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy", "api/generated/compas_cem.loads.NodeLoad", "api/generated/compas_cem.loads.NodeLoad.ToString", "api/generated/compas_cem.loads.NodeLoad.copy", "api/generated/compas_cem.loads.NodeLoad.from_data", "api/generated/compas_cem.loads.NodeLoad.from_json", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector", "api/generated/compas_cem.loads.NodeLoad.sha256", "api/generated/compas_cem.loads.NodeLoad.to_data", "api/generated/compas_cem.loads.NodeLoad.to_json", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring", "api/generated/compas_cem.loads.NodeLoad.validate_data", "api/generated/compas_cem.loads.NodeLoad.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.sha256", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key", "api/generated/compas_cem.optimization.DeviationEdgeParameter.sha256", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json", "api/generated/compas_cem.optimization.LineConstraint", "api/generated/compas_cem.optimization.LineConstraint.ToString", "api/generated/compas_cem.optimization.LineConstraint.copy", "api/generated/compas_cem.optimization.LineConstraint.from_data", "api/generated/compas_cem.optimization.LineConstraint.from_json", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.key", "api/generated/compas_cem.optimization.LineConstraint.penalty", "api/generated/compas_cem.optimization.LineConstraint.reference", "api/generated/compas_cem.optimization.LineConstraint.sha256", "api/generated/compas_cem.optimization.LineConstraint.target", "api/generated/compas_cem.optimization.LineConstraint.to_data", "api/generated/compas_cem.optimization.LineConstraint.to_json", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.validate_data", "api/generated/compas_cem.optimization.LineConstraint.validate_json", "api/generated/compas_cem.optimization.NodeLoadXParameter", "api/generated/compas_cem.optimization.NodeLoadXParameter.ToString", "api/generated/compas_cem.optimization.NodeLoadXParameter.attr_name", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_low", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_up", "api/generated/compas_cem.optimization.NodeLoadXParameter.copy", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_data", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_json", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_jsonstring", "api/generated/compas_cem.optimization.NodeLoadXParameter.key", "api/generated/compas_cem.optimization.NodeLoadXParameter.sha256", "api/generated/compas_cem.optimization.NodeLoadXParameter.start_value", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_data", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_json", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_jsonstring", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_data", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_json", "api/generated/compas_cem.optimization.NodeLoadYParameter", "api/generated/compas_cem.optimization.NodeLoadYParameter.ToString", "api/generated/compas_cem.optimization.NodeLoadYParameter.attr_name", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_low", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_up", "api/generated/compas_cem.optimization.NodeLoadYParameter.copy", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_data", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_json", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_jsonstring", "api/generated/compas_cem.optimization.NodeLoadYParameter.key", "api/generated/compas_cem.optimization.NodeLoadYParameter.sha256", "api/generated/compas_cem.optimization.NodeLoadYParameter.start_value", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_data", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_json", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_jsonstring", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_data", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_json", "api/generated/compas_cem.optimization.NodeLoadZParameter", "api/generated/compas_cem.optimization.NodeLoadZParameter.ToString", "api/generated/compas_cem.optimization.NodeLoadZParameter.attr_name", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_low", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_up", "api/generated/compas_cem.optimization.NodeLoadZParameter.copy", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_data", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_json", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_jsonstring", "api/generated/compas_cem.optimization.NodeLoadZParameter.key", "api/generated/compas_cem.optimization.NodeLoadZParameter.sha256", "api/generated/compas_cem.optimization.NodeLoadZParameter.start_value", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_data", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_json", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_jsonstring", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_data", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_json", "api/generated/compas_cem.optimization.Optimizer", "api/generated/compas_cem.optimization.Optimizer.ToString", "api/generated/compas_cem.optimization.Optimizer.add_constraint", "api/generated/compas_cem.optimization.Optimizer.add_parameter", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity", "api/generated/compas_cem.optimization.Optimizer.copy", "api/generated/compas_cem.optimization.Optimizer.from_data", "api/generated/compas_cem.optimization.Optimizer.from_json", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring", "api/generated/compas_cem.optimization.Optimizer.gradient_func", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters", "api/generated/compas_cem.optimization.Optimizer.objective_func", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters", "api/generated/compas_cem.optimization.Optimizer.remove_constraint", "api/generated/compas_cem.optimization.Optimizer.remove_parameter", "api/generated/compas_cem.optimization.Optimizer.sha256", "api/generated/compas_cem.optimization.Optimizer.solve", "api/generated/compas_cem.optimization.Optimizer.to_data", "api/generated/compas_cem.optimization.Optimizer.to_json", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring", "api/generated/compas_cem.optimization.Optimizer.validate_data", "api/generated/compas_cem.optimization.Optimizer.validate_json", "api/generated/compas_cem.optimization.OriginNodeXParameter", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.key", "api/generated/compas_cem.optimization.OriginNodeXParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeYParameter", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.key", "api/generated/compas_cem.optimization.OriginNodeYParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeZParameter", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.key", "api/generated/compas_cem.optimization.OriginNodeZParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json", "api/generated/compas_cem.optimization.PlaneConstraint", "api/generated/compas_cem.optimization.PlaneConstraint.ToString", "api/generated/compas_cem.optimization.PlaneConstraint.copy", "api/generated/compas_cem.optimization.PlaneConstraint.from_data", "api/generated/compas_cem.optimization.PlaneConstraint.from_json", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.key", "api/generated/compas_cem.optimization.PlaneConstraint.penalty", "api/generated/compas_cem.optimization.PlaneConstraint.reference", "api/generated/compas_cem.optimization.PlaneConstraint.sha256", "api/generated/compas_cem.optimization.PlaneConstraint.target", "api/generated/compas_cem.optimization.PlaneConstraint.to_data", "api/generated/compas_cem.optimization.PlaneConstraint.to_json", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json", "api/generated/compas_cem.optimization.PointConstraint", "api/generated/compas_cem.optimization.PointConstraint.ToString", "api/generated/compas_cem.optimization.PointConstraint.copy", "api/generated/compas_cem.optimization.PointConstraint.from_data", "api/generated/compas_cem.optimization.PointConstraint.from_json", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.key", "api/generated/compas_cem.optimization.PointConstraint.penalty", "api/generated/compas_cem.optimization.PointConstraint.reference", "api/generated/compas_cem.optimization.PointConstraint.sha256", "api/generated/compas_cem.optimization.PointConstraint.target", "api/generated/compas_cem.optimization.PointConstraint.to_data", "api/generated/compas_cem.optimization.PointConstraint.to_json", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.validate_data", "api/generated/compas_cem.optimization.PointConstraint.validate_json", "api/generated/compas_cem.optimization.ReactionForceConstraint", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.key", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference", "api/generated/compas_cem.optimization.ReactionForceConstraint.sha256", "api/generated/compas_cem.optimization.ReactionForceConstraint.target", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.sha256", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeParameter", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.key", "api/generated/compas_cem.optimization.TrailEdgeParameter.sha256", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json", "api/generated/compas_cem.optimization.solve_proxy", "api/generated/compas_cem.plotters.FormArtist", "api/generated/compas_cem.plotters.FormArtist.build", "api/generated/compas_cem.plotters.FormArtist.build_as", "api/generated/compas_cem.plotters.FormArtist.clear", "api/generated/compas_cem.plotters.FormArtist.clear_edges", "api/generated/compas_cem.plotters.FormArtist.clear_nodes", "api/generated/compas_cem.plotters.FormArtist.draw", "api/generated/compas_cem.plotters.FormArtist.draw_collection", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels", "api/generated/compas_cem.plotters.FormArtist.draw_edges", "api/generated/compas_cem.plotters.FormArtist.draw_loads", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels", "api/generated/compas_cem.plotters.FormArtist.draw_nodes", "api/generated/compas_cem.plotters.FormArtist.draw_reactions", "api/generated/compas_cem.plotters.FormArtist.redraw", "api/generated/compas_cem.plotters.FormArtist.register", "api/generated/compas_cem.plotters.FormArtist.update_data", "api/generated/compas_cem.plotters.FormArtist.viewbox", "api/generated/compas_cem.plotters.Plotter", "api/generated/compas_cem.plotters.Plotter.add", "api/generated/compas_cem.plotters.Plotter.add_from_list", "api/generated/compas_cem.plotters.Plotter.draw", "api/generated/compas_cem.plotters.Plotter.find", "api/generated/compas_cem.plotters.Plotter.on", "api/generated/compas_cem.plotters.Plotter.pause", "api/generated/compas_cem.plotters.Plotter.redraw", "api/generated/compas_cem.plotters.Plotter.register_listener", "api/generated/compas_cem.plotters.Plotter.save", "api/generated/compas_cem.plotters.Plotter.show", "api/generated/compas_cem.plotters.Plotter.zoom_extents", "api/generated/compas_cem.plotters.TopologyArtist", "api/generated/compas_cem.plotters.TopologyArtist.build", "api/generated/compas_cem.plotters.TopologyArtist.build_as", "api/generated/compas_cem.plotters.TopologyArtist.clear", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes", "api/generated/compas_cem.plotters.TopologyArtist.draw", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes", "api/generated/compas_cem.plotters.TopologyArtist.redraw", "api/generated/compas_cem.plotters.TopologyArtist.register", "api/generated/compas_cem.plotters.TopologyArtist.update_data", "api/generated/compas_cem.plotters.TopologyArtist.viewbox", "api/generated/compas_cem.supports.NodeSupport", "api/generated/compas_cem.supports.NodeSupport.ToString", "api/generated/compas_cem.supports.NodeSupport.copy", "api/generated/compas_cem.supports.NodeSupport.from_data", "api/generated/compas_cem.supports.NodeSupport.from_json", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring", "api/generated/compas_cem.supports.NodeSupport.from_point", "api/generated/compas_cem.supports.NodeSupport.sha256", "api/generated/compas_cem.supports.NodeSupport.to_data", "api/generated/compas_cem.supports.NodeSupport.to_json", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring", "api/generated/compas_cem.supports.NodeSupport.validate_data", "api/generated/compas_cem.supports.NodeSupport.validate_json", "changelog", "citing", "examples", "index", "installation", "license"], "filenames": ["_examples/01_python.rst", "_examples/01_python/01.rst", "_examples/01_python/02.rst", "_examples/01_python/03.rst", "_examples/01_python/04.rst", "_examples/01_python/05.rst", "_examples/02_ghpython.rst", "_examples/02_ghpython/bridge_2d.rst", "_examples/02_ghpython/bridge_3d.rst", "_examples/02_ghpython/dome.rst", "_examples/02_ghpython/jessen.rst", "_examples/02_ghpython/spiral.rst", "api.rst", "api/compas_cem.rst", "api/compas_cem.diagrams.rst", "api/compas_cem.elements.rst", "api/compas_cem.equilibrium.rst", "api/compas_cem.loads.rst", "api/compas_cem.optimization.rst", "api/compas_cem.plotters.rst", "api/compas_cem.supports.rst", "api/compas_cem.viewers.rst", "api/generated/compas_cem.diagrams.FormDiagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.ToString.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.clear.rst", "api/generated/compas_cem.diagrams.FormDiagram.complement.rst", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.copy.rst", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_edge_supported.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.leaves.rst", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_load.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.sha256.rst", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.FormDiagram.smooth.rst", "api/generated/compas_cem.diagrams.FormDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.summary.rst", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_points.rst", "api/generated/compas_cem.diagrams.FormDiagram.transform.rst", "api/generated/compas_cem.diagrams.FormDiagram.transformed.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.clear.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.complement.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.copy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_direct_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_edge_supported.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_indirect_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_max.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sha256.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.summary.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transform.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json.rst", "api/generated/compas_cem.elements.DeviationEdge.rst", "api/generated/compas_cem.elements.DeviationEdge.ToString.rst", "api/generated/compas_cem.elements.DeviationEdge.copy.rst", "api/generated/compas_cem.elements.DeviationEdge.from_data.rst", "api/generated/compas_cem.elements.DeviationEdge.from_json.rst", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.from_line.rst", "api/generated/compas_cem.elements.DeviationEdge.sha256.rst", "api/generated/compas_cem.elements.DeviationEdge.to_data.rst", "api/generated/compas_cem.elements.DeviationEdge.to_json.rst", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_data.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_json.rst", "api/generated/compas_cem.elements.Node.rst", "api/generated/compas_cem.elements.Node.ToString.rst", "api/generated/compas_cem.elements.Node.copy.rst", "api/generated/compas_cem.elements.Node.from_data.rst", "api/generated/compas_cem.elements.Node.from_json.rst", "api/generated/compas_cem.elements.Node.from_jsonstring.rst", "api/generated/compas_cem.elements.Node.from_point.rst", "api/generated/compas_cem.elements.Node.sha256.rst", "api/generated/compas_cem.elements.Node.to_data.rst", "api/generated/compas_cem.elements.Node.to_json.rst", "api/generated/compas_cem.elements.Node.to_jsonstring.rst", "api/generated/compas_cem.elements.Node.validate_data.rst", "api/generated/compas_cem.elements.Node.validate_json.rst", "api/generated/compas_cem.elements.TrailEdge.rst", "api/generated/compas_cem.elements.TrailEdge.ToString.rst", "api/generated/compas_cem.elements.TrailEdge.copy.rst", "api/generated/compas_cem.elements.TrailEdge.from_data.rst", "api/generated/compas_cem.elements.TrailEdge.from_json.rst", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.from_line.rst", "api/generated/compas_cem.elements.TrailEdge.sha256.rst", "api/generated/compas_cem.elements.TrailEdge.to_data.rst", "api/generated/compas_cem.elements.TrailEdge.to_json.rst", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.validate_data.rst", "api/generated/compas_cem.elements.TrailEdge.validate_json.rst", "api/generated/compas_cem.equilibrium.static_equilibrium.rst", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy.rst", "api/generated/compas_cem.loads.NodeLoad.rst", "api/generated/compas_cem.loads.NodeLoad.ToString.rst", "api/generated/compas_cem.loads.NodeLoad.copy.rst", "api/generated/compas_cem.loads.NodeLoad.from_data.rst", "api/generated/compas_cem.loads.NodeLoad.from_json.rst", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector.rst", "api/generated/compas_cem.loads.NodeLoad.sha256.rst", "api/generated/compas_cem.loads.NodeLoad.to_data.rst", "api/generated/compas_cem.loads.NodeLoad.to_json.rst", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.validate_data.rst", "api/generated/compas_cem.loads.NodeLoad.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.sha256.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.sha256.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.LineConstraint.rst", "api/generated/compas_cem.optimization.LineConstraint.ToString.rst", "api/generated/compas_cem.optimization.LineConstraint.copy.rst", "api/generated/compas_cem.optimization.LineConstraint.from_data.rst", "api/generated/compas_cem.optimization.LineConstraint.from_json.rst", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.key.rst", "api/generated/compas_cem.optimization.LineConstraint.penalty.rst", "api/generated/compas_cem.optimization.LineConstraint.reference.rst", "api/generated/compas_cem.optimization.LineConstraint.sha256.rst", "api/generated/compas_cem.optimization.LineConstraint.target.rst", "api/generated/compas_cem.optimization.LineConstraint.to_data.rst", "api/generated/compas_cem.optimization.LineConstraint.to_json.rst", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_data.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_json.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.ToString.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.attr_name.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_low.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_up.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.copy.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_data.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_json.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.key.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.sha256.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.start_value.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_data.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_json.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_data.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_json.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.ToString.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.attr_name.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_low.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_up.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.copy.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_data.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_json.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.key.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.sha256.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.start_value.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_data.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_json.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_data.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_json.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.ToString.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.attr_name.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_low.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_up.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.copy.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_data.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_json.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.key.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.sha256.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.start_value.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_data.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_json.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_data.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_json.rst", "api/generated/compas_cem.optimization.Optimizer.rst", "api/generated/compas_cem.optimization.Optimizer.ToString.rst", "api/generated/compas_cem.optimization.Optimizer.add_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.add_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity.rst", "api/generated/compas_cem.optimization.Optimizer.copy.rst", "api/generated/compas_cem.optimization.Optimizer.from_data.rst", "api/generated/compas_cem.optimization.Optimizer.from_json.rst", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.gradient_func.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.objective_func.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.remove_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.remove_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.sha256.rst", "api/generated/compas_cem.optimization.Optimizer.solve.rst", "api/generated/compas_cem.optimization.Optimizer.to_data.rst", "api/generated/compas_cem.optimization.Optimizer.to_json.rst", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.validate_data.rst", "api/generated/compas_cem.optimization.Optimizer.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.rst", "api/generated/compas_cem.optimization.PlaneConstraint.ToString.rst", "api/generated/compas_cem.optimization.PlaneConstraint.copy.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.key.rst", "api/generated/compas_cem.optimization.PlaneConstraint.penalty.rst", "api/generated/compas_cem.optimization.PlaneConstraint.reference.rst", "api/generated/compas_cem.optimization.PlaneConstraint.sha256.rst", "api/generated/compas_cem.optimization.PlaneConstraint.target.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json.rst", "api/generated/compas_cem.optimization.PointConstraint.rst", "api/generated/compas_cem.optimization.PointConstraint.ToString.rst", "api/generated/compas_cem.optimization.PointConstraint.copy.rst", "api/generated/compas_cem.optimization.PointConstraint.from_data.rst", "api/generated/compas_cem.optimization.PointConstraint.from_json.rst", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.key.rst", "api/generated/compas_cem.optimization.PointConstraint.penalty.rst", "api/generated/compas_cem.optimization.PointConstraint.reference.rst", "api/generated/compas_cem.optimization.PointConstraint.sha256.rst", "api/generated/compas_cem.optimization.PointConstraint.target.rst", "api/generated/compas_cem.optimization.PointConstraint.to_data.rst", "api/generated/compas_cem.optimization.PointConstraint.to_json.rst", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.key.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.sha256.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.target.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.sha256.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.key.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.sha256.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.solve_proxy.rst", "api/generated/compas_cem.plotters.FormArtist.rst", "api/generated/compas_cem.plotters.FormArtist.build.rst", "api/generated/compas_cem.plotters.FormArtist.build_as.rst", "api/generated/compas_cem.plotters.FormArtist.clear.rst", "api/generated/compas_cem.plotters.FormArtist.clear_edges.rst", "api/generated/compas_cem.plotters.FormArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw.rst", "api/generated/compas_cem.plotters.FormArtist.draw_collection.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edges.rst", "api/generated/compas_cem.plotters.FormArtist.draw_loads.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw_reactions.rst", "api/generated/compas_cem.plotters.FormArtist.redraw.rst", "api/generated/compas_cem.plotters.FormArtist.register.rst", "api/generated/compas_cem.plotters.FormArtist.update_data.rst", "api/generated/compas_cem.plotters.FormArtist.viewbox.rst", "api/generated/compas_cem.plotters.Plotter.rst", "api/generated/compas_cem.plotters.Plotter.add.rst", "api/generated/compas_cem.plotters.Plotter.add_from_list.rst", "api/generated/compas_cem.plotters.Plotter.draw.rst", "api/generated/compas_cem.plotters.Plotter.find.rst", "api/generated/compas_cem.plotters.Plotter.on.rst", "api/generated/compas_cem.plotters.Plotter.pause.rst", "api/generated/compas_cem.plotters.Plotter.redraw.rst", "api/generated/compas_cem.plotters.Plotter.register_listener.rst", "api/generated/compas_cem.plotters.Plotter.save.rst", "api/generated/compas_cem.plotters.Plotter.show.rst", "api/generated/compas_cem.plotters.Plotter.zoom_extents.rst", "api/generated/compas_cem.plotters.TopologyArtist.rst", "api/generated/compas_cem.plotters.TopologyArtist.build.rst", "api/generated/compas_cem.plotters.TopologyArtist.build_as.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.redraw.rst", "api/generated/compas_cem.plotters.TopologyArtist.register.rst", "api/generated/compas_cem.plotters.TopologyArtist.update_data.rst", "api/generated/compas_cem.plotters.TopologyArtist.viewbox.rst", "api/generated/compas_cem.supports.NodeSupport.rst", "api/generated/compas_cem.supports.NodeSupport.ToString.rst", "api/generated/compas_cem.supports.NodeSupport.copy.rst", "api/generated/compas_cem.supports.NodeSupport.from_data.rst", "api/generated/compas_cem.supports.NodeSupport.from_json.rst", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.from_point.rst", "api/generated/compas_cem.supports.NodeSupport.sha256.rst", "api/generated/compas_cem.supports.NodeSupport.to_data.rst", "api/generated/compas_cem.supports.NodeSupport.to_json.rst", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.validate_data.rst", "api/generated/compas_cem.supports.NodeSupport.validate_json.rst", "changelog.rst", "citing.rst", "examples.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["Python", "01. Simple Compression Structure", "02. Braced Tower in 2D", "03. Bridge Optimization in 2D", "04. Tree Structure in 2D", "05. Planar Tensegrity Wheel", "Grasshopper", "A. Bridge in 2D", "B. Tubular Bridge in 3D", "C. Circular Dome", "D. Jessen Tensegrity", "E. Spiral Staircase", "API Reference", "compas_cem", "compas_cem.diagrams", "compas_cem.elements", "compas_cem.equilibrium", "compas_cem.loads", "compas_cem.optimization", "compas_cem.plotters", "compas_cem.supports", "compas_cem.viewers", "FormDiagram", "FormDiagram.ToString", "FormDiagram.add_edge", "FormDiagram.add_node", "FormDiagram.adjacency_matrix", "FormDiagram.clear", "FormDiagram.complement", "FormDiagram.connected_edges", "FormDiagram.connectivity_matrix", "FormDiagram.copy", "FormDiagram.count_crossings", "FormDiagram.degree", "FormDiagram.degree_in", "FormDiagram.degree_matrix", "FormDiagram.degree_out", "FormDiagram.delete_edge", "FormDiagram.delete_node", "FormDiagram.edge_attribute", "FormDiagram.edge_attributes", "FormDiagram.edge_coordinates", "FormDiagram.edge_direction", "FormDiagram.edge_force", "FormDiagram.edge_length", "FormDiagram.edge_length_2", "FormDiagram.edge_midpoint", "FormDiagram.edge_point", "FormDiagram.edge_sample", "FormDiagram.edge_vector", "FormDiagram.edges", "FormDiagram.edges_attribute", "FormDiagram.edges_attributes", "FormDiagram.edges_where", "FormDiagram.edges_where_predicate", "FormDiagram.embed_in_plane", "FormDiagram.find_crossings", "FormDiagram.find_cycles", "FormDiagram.from_data", "FormDiagram.from_edges", "FormDiagram.from_json", "FormDiagram.from_jsonstring", "FormDiagram.from_lines", "FormDiagram.from_networkx", "FormDiagram.from_nodes_and_edges", "FormDiagram.from_obj", "FormDiagram.from_pointcloud", "FormDiagram.from_topology_diagram", "FormDiagram.get_any_edge", "FormDiagram.get_any_edges", "FormDiagram.get_any_node", "FormDiagram.get_any_nodes", "FormDiagram.gkey", "FormDiagram.gkey_key", "FormDiagram.has_edge", "FormDiagram.has_node", "FormDiagram.index_key", "FormDiagram.index_uv", "FormDiagram.is_connected", "FormDiagram.is_crossed", "FormDiagram.is_edge_supported", "FormDiagram.is_leaf", "FormDiagram.is_node_connected", "FormDiagram.is_node_loaded", "FormDiagram.is_node_support", "FormDiagram.is_planar", "FormDiagram.is_planar_embedding", "FormDiagram.is_xy", "FormDiagram.key_gkey", "FormDiagram.key_index", "FormDiagram.laplacian_matrix", "FormDiagram.leaves", "FormDiagram.loaded_nodes", "FormDiagram.neighborhood", "FormDiagram.neighbors", "FormDiagram.neighbors_in", "FormDiagram.neighbors_out", "FormDiagram.network_adjacency_matrix", "FormDiagram.network_connectivity_matrix", "FormDiagram.network_degree_matrix", "FormDiagram.network_embed_in_plane", "FormDiagram.network_is_planar", "FormDiagram.network_is_planar_embedding", "FormDiagram.network_laplacian_matrix", "FormDiagram.node_attribute", "FormDiagram.node_attributes", "FormDiagram.node_coordinates", "FormDiagram.node_exists", "FormDiagram.node_gkey", "FormDiagram.node_key", "FormDiagram.node_laplacian", "FormDiagram.node_load", "FormDiagram.node_neighborhood_centroid", "FormDiagram.node_sample", "FormDiagram.node_xyz", "FormDiagram.nodes", "FormDiagram.nodes_attribute", "FormDiagram.nodes_attributes", "FormDiagram.nodes_where", "FormDiagram.nodes_where_predicate", "FormDiagram.number_of_edges", "FormDiagram.number_of_loaded_nodes", "FormDiagram.number_of_nodes", "FormDiagram.number_of_support_nodes", "FormDiagram.reaction_force", "FormDiagram.sha256", "FormDiagram.shortest_path", "FormDiagram.smooth", "FormDiagram.split_edge", "FormDiagram.summary", "FormDiagram.support_nodes", "FormDiagram.to_data", "FormDiagram.to_json", "FormDiagram.to_jsonstring", "FormDiagram.to_lines", "FormDiagram.to_networkx", "FormDiagram.to_nodes_and_edges", "FormDiagram.to_obj", "FormDiagram.to_points", "FormDiagram.transform", "FormDiagram.transformed", "FormDiagram.unset_edge_attribute", "FormDiagram.unset_node_attribute", "FormDiagram.update_dea", "FormDiagram.update_default_edge_attributes", "FormDiagram.update_default_node_attributes", "FormDiagram.update_dna", "FormDiagram.update_node_xyz", "FormDiagram.uv_index", "FormDiagram.validate_data", "FormDiagram.validate_json", "TopologyDiagram", "TopologyDiagram.ToString", "TopologyDiagram.add_edge", "TopologyDiagram.add_load", "TopologyDiagram.add_node", "TopologyDiagram.add_support", "TopologyDiagram.adjacency_matrix", "TopologyDiagram.auxiliary_trail_edges", "TopologyDiagram.auxiliary_trails", "TopologyDiagram.build_trails", "TopologyDiagram.clear", "TopologyDiagram.complement", "TopologyDiagram.connected_deviation_edges", "TopologyDiagram.connected_edges", "TopologyDiagram.connected_trail_edges", "TopologyDiagram.connectivity_matrix", "TopologyDiagram.copy", "TopologyDiagram.count_crossings", "TopologyDiagram.degree", "TopologyDiagram.degree_in", "TopologyDiagram.degree_matrix", "TopologyDiagram.degree_out", "TopologyDiagram.delete_edge", "TopologyDiagram.delete_node", "TopologyDiagram.deviation_edges", "TopologyDiagram.edge_attribute", "TopologyDiagram.edge_attributes", "TopologyDiagram.edge_coordinates", "TopologyDiagram.edge_direction", "TopologyDiagram.edge_force", "TopologyDiagram.edge_length", "TopologyDiagram.edge_length_2", "TopologyDiagram.edge_midpoint", "TopologyDiagram.edge_point", "TopologyDiagram.edge_sample", "TopologyDiagram.edge_sequence", "TopologyDiagram.edge_vector", "TopologyDiagram.edges", "TopologyDiagram.edges_attribute", "TopologyDiagram.edges_attributes", "TopologyDiagram.edges_where", "TopologyDiagram.edges_where_predicate", "TopologyDiagram.embed_in_plane", "TopologyDiagram.find_crossings", "TopologyDiagram.find_cycles", "TopologyDiagram.from_data", "TopologyDiagram.from_edges", "TopologyDiagram.from_json", "TopologyDiagram.from_jsonstring", "TopologyDiagram.from_lines", "TopologyDiagram.from_networkx", "TopologyDiagram.from_nodes_and_edges", "TopologyDiagram.from_obj", "TopologyDiagram.from_pointcloud", "TopologyDiagram.get_any_edge", "TopologyDiagram.get_any_edges", "TopologyDiagram.get_any_node", "TopologyDiagram.get_any_nodes", "TopologyDiagram.gkey", "TopologyDiagram.gkey_key", "TopologyDiagram.has_edge", "TopologyDiagram.has_node", "TopologyDiagram.has_trails", "TopologyDiagram.index_key", "TopologyDiagram.index_uv", "TopologyDiagram.is_auxiliary_trail_edge", "TopologyDiagram.is_connected", "TopologyDiagram.is_crossed", "TopologyDiagram.is_deviation_edge", "TopologyDiagram.is_direct_deviation_edge", "TopologyDiagram.is_edge_supported", "TopologyDiagram.is_indirect_deviation_edge", "TopologyDiagram.is_leaf", "TopologyDiagram.is_node_connected", "TopologyDiagram.is_node_loaded", "TopologyDiagram.is_node_origin", "TopologyDiagram.is_node_support", "TopologyDiagram.is_planar", "TopologyDiagram.is_planar_embedding", "TopologyDiagram.is_trail_edge", "TopologyDiagram.is_xy", "TopologyDiagram.key_gkey", "TopologyDiagram.key_index", "TopologyDiagram.laplacian_matrix", "TopologyDiagram.leaves", "TopologyDiagram.loaded_nodes", "TopologyDiagram.neighborhood", "TopologyDiagram.neighbors", "TopologyDiagram.neighbors_in", "TopologyDiagram.neighbors_out", "TopologyDiagram.network_adjacency_matrix", "TopologyDiagram.network_connectivity_matrix", "TopologyDiagram.network_degree_matrix", "TopologyDiagram.network_embed_in_plane", "TopologyDiagram.network_is_planar", "TopologyDiagram.network_is_planar_embedding", "TopologyDiagram.network_laplacian_matrix", "TopologyDiagram.node_attribute", "TopologyDiagram.node_attributes", "TopologyDiagram.node_coordinates", "TopologyDiagram.node_exists", "TopologyDiagram.node_gkey", "TopologyDiagram.node_key", "TopologyDiagram.node_laplacian", "TopologyDiagram.node_load", "TopologyDiagram.node_neighborhood_centroid", "TopologyDiagram.node_sample", "TopologyDiagram.node_sequence", "TopologyDiagram.node_xyz", "TopologyDiagram.nodes", "TopologyDiagram.nodes_attribute", "TopologyDiagram.nodes_attributes", "TopologyDiagram.nodes_where", "TopologyDiagram.nodes_where_predicate", "TopologyDiagram.number_of_auxiliary_trails", "TopologyDiagram.number_of_deviation_edges", "TopologyDiagram.number_of_edges", "TopologyDiagram.number_of_loaded_nodes", "TopologyDiagram.number_of_nodes", "TopologyDiagram.number_of_support_nodes", "TopologyDiagram.number_of_trail_edges", "TopologyDiagram.number_of_trails", "TopologyDiagram.origin_nodes", "TopologyDiagram.reaction_force", "TopologyDiagram.sequence_max", "TopologyDiagram.sequences", "TopologyDiagram.sha256", "TopologyDiagram.shortest_path", "TopologyDiagram.smooth", "TopologyDiagram.split_edge", "TopologyDiagram.summary", "TopologyDiagram.support_nodes", "TopologyDiagram.to_data", "TopologyDiagram.to_json", "TopologyDiagram.to_jsonstring", "TopologyDiagram.to_lines", "TopologyDiagram.to_networkx", "TopologyDiagram.to_nodes_and_edges", "TopologyDiagram.to_obj", "TopologyDiagram.to_points", "TopologyDiagram.trail_edges", "TopologyDiagram.trails", "TopologyDiagram.transform", "TopologyDiagram.transformed", "TopologyDiagram.unset_edge_attribute", "TopologyDiagram.unset_node_attribute", "TopologyDiagram.update_dea", "TopologyDiagram.update_default_edge_attributes", "TopologyDiagram.update_default_node_attributes", "TopologyDiagram.update_dna", "TopologyDiagram.update_node_xyz", "TopologyDiagram.uv_index", "TopologyDiagram.validate_data", "TopologyDiagram.validate_json", "DeviationEdge", "DeviationEdge.ToString", "DeviationEdge.copy", "DeviationEdge.from_data", "DeviationEdge.from_json", "DeviationEdge.from_jsonstring", "DeviationEdge.from_line", "DeviationEdge.sha256", "DeviationEdge.to_data", "DeviationEdge.to_json", "DeviationEdge.to_jsonstring", "DeviationEdge.validate_data", "DeviationEdge.validate_json", "Node", "Node.ToString", "Node.copy", "Node.from_data", "Node.from_json", "Node.from_jsonstring", "Node.from_point", "Node.sha256", "Node.to_data", "Node.to_json", "Node.to_jsonstring", "Node.validate_data", "Node.validate_json", "TrailEdge", "TrailEdge.ToString", "TrailEdge.copy", "TrailEdge.from_data", "TrailEdge.from_json", "TrailEdge.from_jsonstring", "TrailEdge.from_line", "TrailEdge.sha256", "TrailEdge.to_data", "TrailEdge.to_json", "TrailEdge.to_jsonstring", "TrailEdge.validate_data", "TrailEdge.validate_json", "static_equilibrium", "static_equilibrium_numpy", "NodeLoad", "NodeLoad.ToString", "NodeLoad.copy", "NodeLoad.from_data", "NodeLoad.from_json", "NodeLoad.from_jsonstring", "NodeLoad.from_point_and_vector", "NodeLoad.sha256", "NodeLoad.to_data", "NodeLoad.to_json", "NodeLoad.to_jsonstring", "NodeLoad.validate_data", "NodeLoad.validate_json", "DeviationEdgeLengthConstraint", "DeviationEdgeLengthConstraint.ToString", "DeviationEdgeLengthConstraint.copy", "DeviationEdgeLengthConstraint.from_data", "DeviationEdgeLengthConstraint.from_json", "DeviationEdgeLengthConstraint.from_jsonstring", "DeviationEdgeLengthConstraint.key", "DeviationEdgeLengthConstraint.penalty", "DeviationEdgeLengthConstraint.reference", "DeviationEdgeLengthConstraint.sha256", "DeviationEdgeLengthConstraint.target", "DeviationEdgeLengthConstraint.to_data", "DeviationEdgeLengthConstraint.to_json", "DeviationEdgeLengthConstraint.to_jsonstring", "DeviationEdgeLengthConstraint.validate_data", "DeviationEdgeLengthConstraint.validate_json", "DeviationEdgeParameter", "DeviationEdgeParameter.ToString", "DeviationEdgeParameter.attr_name", "DeviationEdgeParameter.bound_low", "DeviationEdgeParameter.bound_up", "DeviationEdgeParameter.copy", "DeviationEdgeParameter.from_data", "DeviationEdgeParameter.from_json", "DeviationEdgeParameter.from_jsonstring", "DeviationEdgeParameter.key", "DeviationEdgeParameter.sha256", "DeviationEdgeParameter.start_value", "DeviationEdgeParameter.to_data", "DeviationEdgeParameter.to_json", "DeviationEdgeParameter.to_jsonstring", "DeviationEdgeParameter.validate_data", "DeviationEdgeParameter.validate_json", "LineConstraint", "LineConstraint.ToString", "LineConstraint.copy", "LineConstraint.from_data", "LineConstraint.from_json", "LineConstraint.from_jsonstring", "LineConstraint.key", "LineConstraint.penalty", "LineConstraint.reference", "LineConstraint.sha256", "LineConstraint.target", "LineConstraint.to_data", "LineConstraint.to_json", "LineConstraint.to_jsonstring", "LineConstraint.validate_data", "LineConstraint.validate_json", "NodeLoadXParameter", "NodeLoadXParameter.ToString", "NodeLoadXParameter.attr_name", "NodeLoadXParameter.bound_low", "NodeLoadXParameter.bound_up", "NodeLoadXParameter.copy", "NodeLoadXParameter.from_data", "NodeLoadXParameter.from_json", "NodeLoadXParameter.from_jsonstring", "NodeLoadXParameter.key", "NodeLoadXParameter.sha256", "NodeLoadXParameter.start_value", "NodeLoadXParameter.to_data", "NodeLoadXParameter.to_json", "NodeLoadXParameter.to_jsonstring", "NodeLoadXParameter.validate_data", "NodeLoadXParameter.validate_json", "NodeLoadYParameter", "NodeLoadYParameter.ToString", "NodeLoadYParameter.attr_name", "NodeLoadYParameter.bound_low", "NodeLoadYParameter.bound_up", "NodeLoadYParameter.copy", "NodeLoadYParameter.from_data", "NodeLoadYParameter.from_json", "NodeLoadYParameter.from_jsonstring", "NodeLoadYParameter.key", "NodeLoadYParameter.sha256", "NodeLoadYParameter.start_value", "NodeLoadYParameter.to_data", "NodeLoadYParameter.to_json", "NodeLoadYParameter.to_jsonstring", "NodeLoadYParameter.validate_data", "NodeLoadYParameter.validate_json", "NodeLoadZParameter", "NodeLoadZParameter.ToString", "NodeLoadZParameter.attr_name", "NodeLoadZParameter.bound_low", "NodeLoadZParameter.bound_up", "NodeLoadZParameter.copy", "NodeLoadZParameter.from_data", "NodeLoadZParameter.from_json", "NodeLoadZParameter.from_jsonstring", "NodeLoadZParameter.key", "NodeLoadZParameter.sha256", "NodeLoadZParameter.start_value", "NodeLoadZParameter.to_data", "NodeLoadZParameter.to_json", "NodeLoadZParameter.to_jsonstring", "NodeLoadZParameter.validate_data", "NodeLoadZParameter.validate_json", "Optimizer", "Optimizer.ToString", "Optimizer.add_constraint", "Optimizer.add_parameter", "Optimizer.check_optimization_sanity", "Optimizer.copy", "Optimizer.from_data", "Optimizer.from_json", "Optimizer.from_jsonstring", "Optimizer.gradient_func", "Optimizer.number_of_constraints", "Optimizer.number_of_parameters", "Optimizer.objective_func", "Optimizer.optimization_bounds", "Optimizer.optimization_parameters", "Optimizer.remove_constraint", "Optimizer.remove_parameter", "Optimizer.sha256", "Optimizer.solve", "Optimizer.to_data", "Optimizer.to_json", "Optimizer.to_jsonstring", "Optimizer.validate_data", "Optimizer.validate_json", "OriginNodeXParameter", "OriginNodeXParameter.ToString", "OriginNodeXParameter.attr_name", "OriginNodeXParameter.bound_low", "OriginNodeXParameter.bound_up", "OriginNodeXParameter.copy", "OriginNodeXParameter.from_data", "OriginNodeXParameter.from_json", "OriginNodeXParameter.from_jsonstring", "OriginNodeXParameter.key", "OriginNodeXParameter.sha256", "OriginNodeXParameter.start_value", "OriginNodeXParameter.to_data", "OriginNodeXParameter.to_json", "OriginNodeXParameter.to_jsonstring", "OriginNodeXParameter.validate_data", "OriginNodeXParameter.validate_json", "OriginNodeYParameter", "OriginNodeYParameter.ToString", "OriginNodeYParameter.attr_name", "OriginNodeYParameter.bound_low", "OriginNodeYParameter.bound_up", "OriginNodeYParameter.copy", "OriginNodeYParameter.from_data", "OriginNodeYParameter.from_json", "OriginNodeYParameter.from_jsonstring", "OriginNodeYParameter.key", "OriginNodeYParameter.sha256", "OriginNodeYParameter.start_value", "OriginNodeYParameter.to_data", "OriginNodeYParameter.to_json", "OriginNodeYParameter.to_jsonstring", "OriginNodeYParameter.validate_data", "OriginNodeYParameter.validate_json", "OriginNodeZParameter", "OriginNodeZParameter.ToString", "OriginNodeZParameter.attr_name", "OriginNodeZParameter.bound_low", "OriginNodeZParameter.bound_up", "OriginNodeZParameter.copy", "OriginNodeZParameter.from_data", "OriginNodeZParameter.from_json", "OriginNodeZParameter.from_jsonstring", "OriginNodeZParameter.key", "OriginNodeZParameter.sha256", "OriginNodeZParameter.start_value", "OriginNodeZParameter.to_data", "OriginNodeZParameter.to_json", "OriginNodeZParameter.to_jsonstring", "OriginNodeZParameter.validate_data", "OriginNodeZParameter.validate_json", "PlaneConstraint", "PlaneConstraint.ToString", "PlaneConstraint.copy", "PlaneConstraint.from_data", "PlaneConstraint.from_json", "PlaneConstraint.from_jsonstring", "PlaneConstraint.key", "PlaneConstraint.penalty", "PlaneConstraint.reference", "PlaneConstraint.sha256", "PlaneConstraint.target", "PlaneConstraint.to_data", "PlaneConstraint.to_json", "PlaneConstraint.to_jsonstring", "PlaneConstraint.validate_data", "PlaneConstraint.validate_json", "PointConstraint", "PointConstraint.ToString", "PointConstraint.copy", "PointConstraint.from_data", "PointConstraint.from_json", "PointConstraint.from_jsonstring", "PointConstraint.key", "PointConstraint.penalty", "PointConstraint.reference", "PointConstraint.sha256", "PointConstraint.target", "PointConstraint.to_data", "PointConstraint.to_json", "PointConstraint.to_jsonstring", "PointConstraint.validate_data", "PointConstraint.validate_json", "ReactionForceConstraint", "ReactionForceConstraint.ToString", "ReactionForceConstraint.copy", "ReactionForceConstraint.from_data", "ReactionForceConstraint.from_json", "ReactionForceConstraint.from_jsonstring", "ReactionForceConstraint.key", "ReactionForceConstraint.penalty", "ReactionForceConstraint.reference", "ReactionForceConstraint.sha256", "ReactionForceConstraint.target", "ReactionForceConstraint.to_data", "ReactionForceConstraint.to_json", "ReactionForceConstraint.to_jsonstring", "ReactionForceConstraint.validate_data", "ReactionForceConstraint.validate_json", "TrailEdgeForceConstraint", "TrailEdgeForceConstraint.ToString", "TrailEdgeForceConstraint.copy", "TrailEdgeForceConstraint.from_data", "TrailEdgeForceConstraint.from_json", "TrailEdgeForceConstraint.from_jsonstring", "TrailEdgeForceConstraint.key", "TrailEdgeForceConstraint.penalty", "TrailEdgeForceConstraint.reference", "TrailEdgeForceConstraint.sha256", "TrailEdgeForceConstraint.target", "TrailEdgeForceConstraint.to_data", "TrailEdgeForceConstraint.to_json", "TrailEdgeForceConstraint.to_jsonstring", "TrailEdgeForceConstraint.validate_data", "TrailEdgeForceConstraint.validate_json", "TrailEdgeParameter", "TrailEdgeParameter.ToString", "TrailEdgeParameter.attr_name", "TrailEdgeParameter.bound_low", "TrailEdgeParameter.bound_up", "TrailEdgeParameter.copy", "TrailEdgeParameter.from_data", "TrailEdgeParameter.from_json", "TrailEdgeParameter.from_jsonstring", "TrailEdgeParameter.key", "TrailEdgeParameter.sha256", "TrailEdgeParameter.start_value", "TrailEdgeParameter.to_data", "TrailEdgeParameter.to_json", "TrailEdgeParameter.to_jsonstring", "TrailEdgeParameter.validate_data", "TrailEdgeParameter.validate_json", "solve_proxy", "FormArtist", "FormArtist.build", "FormArtist.build_as", "FormArtist.clear", "FormArtist.clear_edges", "FormArtist.clear_nodes", "FormArtist.draw", "FormArtist.draw_collection", "FormArtist.draw_edgelabels", "FormArtist.draw_edges", "FormArtist.draw_loads", "FormArtist.draw_nodelabels", "FormArtist.draw_nodes", "FormArtist.draw_reactions", "FormArtist.redraw", "FormArtist.register", "FormArtist.update_data", "FormArtist.viewbox", "Plotter", "Plotter.add", "Plotter.add_from_list", "Plotter.draw", "Plotter.find", "Plotter.on", "Plotter.pause", "Plotter.redraw", "Plotter.register_listener", "Plotter.save", "Plotter.show", "Plotter.zoom_extents", "TopologyArtist", "TopologyArtist.build", "TopologyArtist.build_as", "TopologyArtist.clear", "TopologyArtist.clear_edges", "TopologyArtist.clear_nodes", "TopologyArtist.draw", "TopologyArtist.draw_collection", "TopologyArtist.draw_edgelabels", "TopologyArtist.draw_edges", "TopologyArtist.draw_loads", "TopologyArtist.draw_nodelabels", "TopologyArtist.draw_nodes", "TopologyArtist.redraw", "TopologyArtist.register", "TopologyArtist.update_data", "TopologyArtist.viewbox", "NodeSupport", "NodeSupport.ToString", "NodeSupport.copy", "NodeSupport.from_data", "NodeSupport.from_json", "NodeSupport.from_jsonstring", "NodeSupport.from_point", "NodeSupport.sha256", "NodeSupport.to_data", "NodeSupport.to_json", "NodeSupport.to_jsonstring", "NodeSupport.validate_data", "NodeSupport.validate_json", "Changelog", "Citing", "Examples", "COMPAS CEM", "Installation", "License"], "terms": {"01": [0, 678, 679], "simpl": [0, 678, 679, 680], "compress": [0, 5, 677, 678, 679], "structur": [0, 30, 57, 78, 90, 98, 103, 126, 166, 195, 217, 234, 242, 247, 278, 635, 636, 638, 677, 678, 679, 680], "02": [0, 678, 679], "brace": [0, 678, 679], "tower": [0, 678, 679], "2d": [0, 6, 633, 662, 676, 678, 679], "03": [0, 678, 679], "bridg": [0, 6, 676, 678, 679], "optim": [0, 4, 5, 12, 13, 359, 375, 378, 379, 386, 392, 408, 411, 412, 419, 425, 428, 429, 436, 442, 445, 446, 453, 483, 486, 487, 494, 500, 503, 504, 511, 517, 520, 521, 528, 534, 550, 566, 582, 598, 601, 602, 609, 615, 676, 678, 679], "04": [0, 678, 679], "tree": [0, 678, 679], "05": [0, 678, 679], "planar": [0, 57, 85, 101, 195, 228, 245, 678, 679, 680], "tensegr": [0, 6, 676, 678, 679], "wheel": [0, 678, 679], "from": [1, 2, 3, 4, 5, 26, 28, 30, 35, 37, 38, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 78, 90, 97, 98, 99, 103, 110, 125, 126, 135, 157, 160, 162, 166, 171, 173, 174, 187, 196, 197, 198, 199, 200, 201, 202, 203, 204, 208, 217, 234, 241, 242, 243, 247, 254, 277, 278, 287, 308, 309, 310, 311, 312, 321, 322, 323, 324, 325, 334, 335, 336, 337, 338, 344, 345, 349, 350, 351, 352, 353, 362, 363, 364, 368, 381, 382, 383, 385, 395, 396, 397, 401, 414, 415, 416, 418, 431, 432, 433, 435, 448, 449, 450, 452, 465, 466, 467, 468, 474, 476, 489, 490, 491, 493, 506, 507, 508, 510, 523, 524, 525, 527, 537, 538, 539, 543, 553, 554, 555, 559, 569, 570, 571, 575, 585, 586, 587, 591, 604, 605, 606, 608, 620, 621, 636, 650, 651, 666, 667, 668, 669, 670, 676, 680, 681], "compa": [1, 2, 3, 4, 5, 28, 78, 125, 162, 217, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 635, 636, 670, 676, 677, 678], "geometri": [1, 2, 3, 4, 5, 57, 195, 635, 636, 638], "import": [1, 2, 3, 4, 5, 28, 78, 125, 162, 217, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670, 676, 680], "translat": [1, 2, 3, 4, 5], "compas_cem": [1, 2, 3, 4, 5, 12, 22, 151, 305, 318, 331, 344, 345, 346, 359, 375, 392, 408, 425, 442, 459, 477, 483, 500, 517, 534, 550, 566, 582, 598, 615, 616, 634, 646, 663, 676, 677, 679, 680], "diagram": [1, 2, 3, 4, 5, 12, 13, 22, 57, 67, 121, 123, 151, 159, 160, 195, 213, 265, 266, 268, 270, 271, 272, 276, 292, 344, 345, 365, 377, 384, 398, 410, 417, 427, 434, 444, 451, 459, 477, 485, 492, 502, 509, 519, 526, 540, 556, 572, 588, 600, 607, 615, 616, 622, 625, 626, 628, 629, 646, 652, 655, 658, 669, 676, 679], "topologydiagram": [1, 2, 3, 4, 5, 344, 345, 477, 615, 646, 676], "element": [1, 2, 4, 5, 12, 13, 24, 153, 305, 318, 331, 676, 679], "node": [1, 2, 3, 4, 5, 25, 26, 29, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 49, 54, 59, 64, 66, 70, 71, 73, 74, 75, 76, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 130, 136, 142, 145, 146, 155, 156, 157, 159, 160, 163, 164, 165, 169, 170, 171, 172, 173, 174, 176, 178, 179, 181, 183, 184, 186, 187, 192, 197, 202, 204, 207, 208, 210, 211, 212, 214, 221, 223, 224, 225, 226, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 268, 269, 270, 273, 274, 278, 279, 280, 282, 288, 292, 296, 299, 300, 344, 345, 346, 365, 392, 398, 408, 419, 425, 436, 442, 453, 483, 494, 500, 511, 517, 528, 534, 540, 550, 556, 566, 572, 588, 619, 621, 622, 626, 627, 628, 649, 651, 652, 656, 657, 658, 663, 669, 676], "trailedg": [1, 2, 4], "deviationedg": [1, 2, 4, 5], "load": [1, 2, 3, 4, 12, 13, 57, 83, 92, 111, 121, 154, 195, 225, 236, 255, 268, 346, 352, 408, 425, 442, 622, 626, 652, 656, 676, 679], "nodeload": [1, 2, 3, 4, 676], "support": [1, 2, 3, 4, 12, 13, 80, 83, 84, 123, 124, 130, 156, 160, 221, 225, 227, 270, 274, 282, 477, 566, 615, 629, 663, 669, 676, 679], "nodesupport": [1, 2, 3, 4, 156, 676], "equilibrium": [1, 2, 3, 4, 5, 12, 13, 344, 345, 676, 677, 679], "static_equilibrium": [1, 2, 3, 4, 5, 676], "plotter": [1, 2, 3, 4, 5, 12, 13, 616, 631, 646, 660, 676, 679], "instanti": [1, 4, 378, 379, 411, 412, 428, 429, 445, 446, 486, 487, 503, 504, 520, 521, 601, 602], "topologi": [1, 2, 3, 4, 5, 67, 121, 123, 151, 159, 160, 213, 265, 266, 268, 270, 271, 272, 292, 344, 345, 378, 379, 386, 411, 412, 419, 428, 429, 436, 445, 446, 453, 468, 471, 472, 473, 477, 486, 487, 494, 503, 504, 511, 520, 521, 528, 601, 602, 609, 615, 646, 652, 655, 658, 676], "add": [1, 2, 3, 4, 5, 24, 25, 153, 155, 156, 461, 462, 636], "add_nod": [1, 2, 4, 5], "0": [1, 2, 3, 4, 5, 47, 125, 127, 128, 184, 277, 279, 280, 312, 318, 325, 338, 346, 353, 359, 368, 385, 392, 401, 418, 435, 452, 476, 493, 510, 527, 534, 543, 550, 559, 566, 575, 582, 591, 608, 643, 670, 680], "1": [1, 2, 3, 4, 5, 28, 47, 48, 68, 69, 70, 71, 90, 93, 103, 110, 113, 125, 128, 162, 184, 185, 205, 206, 207, 208, 234, 237, 247, 254, 257, 277, 280, 312, 325, 338, 346, 353, 359, 368, 385, 392, 401, 418, 435, 452, 476, 493, 510, 527, 534, 543, 550, 559, 566, 575, 582, 591, 608, 642, 643, 670], "2": [1, 2, 3, 4, 5, 54, 119, 192, 264, 642, 643], "5": [1, 2, 3, 4, 5, 47, 127, 128, 184, 279, 280], "3": [1, 2, 4, 5, 66, 68, 69, 70, 71, 204, 205, 206, 207, 208, 477], "edg": [1, 2, 3, 4, 5, 24, 28, 29, 32, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 64, 68, 69, 71, 74, 77, 79, 80, 85, 86, 101, 102, 120, 128, 136, 141, 143, 144, 148, 153, 158, 162, 163, 164, 165, 168, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 197, 202, 205, 206, 208, 211, 215, 216, 218, 219, 220, 221, 222, 228, 229, 230, 245, 246, 266, 267, 271, 280, 288, 291, 295, 297, 298, 302, 305, 311, 331, 337, 359, 365, 375, 379, 386, 398, 412, 429, 446, 487, 504, 521, 540, 556, 572, 582, 588, 598, 602, 609, 619, 620, 622, 624, 625, 649, 650, 652, 654, 655, 676], "add_edg": [1, 2, 4, 5], "length": [1, 2, 4, 44, 45, 128, 181, 182, 280, 331, 359, 598, 676, 679], "forc": [1, 2, 4, 5, 43, 57, 83, 92, 124, 180, 195, 225, 236, 274, 305, 375, 566, 582, 626, 629, 676, 679], "add_support": [1, 2, 3, 4], "add_load": [1, 2, 3, 4], "build": [1, 4, 618, 648, 676, 680], "trail": [1, 2, 3, 4, 5, 24, 153, 156, 158, 159, 160, 165, 175, 213, 216, 230, 265, 271, 272, 273, 291, 331, 582, 598, 676], "automat": [1, 160, 477, 676, 677, 679, 680], "build_trail": [1, 2, 3, 4, 5, 676], "comput": [1, 4, 5, 112, 120, 122, 125, 160, 256, 267, 269, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 477, 493, 510, 527, 543, 559, 575, 591, 608, 633, 662, 670, 676], "state": [1, 4, 5, 331], "static": [1, 4, 5, 344, 345, 617, 618, 623, 630, 631, 647, 648, 653, 659, 660, 679], "form": [1, 2, 3, 4, 5, 22, 53, 67, 68, 118, 151, 191, 205, 263, 344, 345, 365, 398, 459, 477, 540, 556, 572, 588, 615, 616, 622, 625, 628, 629, 677, 679, 680], "eta": [1, 2, 4, 5, 344, 345, 468, 471, 477, 615, 676], "1e": [1, 2, 3, 4, 5, 83, 92, 225, 236, 344, 345, 477, 615], "6": [1, 2, 3, 4, 5, 83, 92, 225, 236, 344, 345, 477, 615, 680], "tmax": [1, 2, 4, 5, 344, 345, 468, 471, 477, 615, 676], "100": [1, 2, 3, 4, 5, 127, 279, 344, 345, 477, 615], "verbos": [1, 2, 3, 4, 5, 344, 345, 477], "true": [1, 2, 3, 4, 5, 50, 53, 54, 55, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 100, 101, 102, 103, 115, 118, 119, 125, 132, 133, 158, 175, 188, 191, 192, 193, 208, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 244, 245, 246, 247, 260, 263, 264, 277, 284, 285, 291, 312, 314, 315, 325, 327, 328, 338, 340, 341, 353, 355, 356, 368, 371, 372, 385, 388, 389, 401, 404, 405, 418, 421, 422, 435, 438, 439, 452, 455, 456, 476, 477, 479, 480, 493, 496, 497, 510, 513, 514, 527, 530, 531, 543, 546, 547, 559, 562, 563, 575, 578, 579, 591, 594, 595, 608, 611, 612, 670, 672, 673], "plot": [1, 2, 3, 4, 5, 616, 632, 635, 637, 638, 639, 640, 641, 643, 644, 646, 661], "result": [1, 4, 5, 26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 234, 241, 242, 243, 247], "scene": [1, 2, 3, 4, 5], "nodes": [1, 2, 3, 4, 5], "shift": [1, 4, 5], "transform": [1, 2, 3, 4, 5], "from_vector": [1, 2, 3, 4, 5], "show_edgetext": [1, 4], "edgetext": [1, 4], "show": [1, 2, 3, 4, 5, 680], "content": 1, "zoom_ext": [1, 2, 3, 4, 5], "data": [2, 3, 26, 27, 30, 31, 35, 50, 53, 54, 58, 60, 61, 65, 78, 90, 97, 98, 99, 103, 115, 118, 119, 125, 126, 131, 132, 133, 149, 150, 157, 158, 161, 166, 167, 171, 175, 188, 191, 192, 196, 198, 199, 203, 217, 234, 241, 242, 243, 247, 260, 263, 264, 277, 278, 283, 284, 285, 291, 303, 304, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 346, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 366, 367, 368, 370, 371, 372, 373, 374, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 394, 395, 396, 397, 399, 400, 401, 403, 404, 405, 406, 407, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458, 459, 464, 465, 466, 467, 476, 478, 479, 480, 481, 482, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 505, 506, 507, 508, 510, 512, 513, 514, 515, 516, 522, 523, 524, 525, 527, 529, 530, 531, 532, 533, 536, 537, 538, 539, 541, 542, 543, 545, 546, 547, 548, 549, 552, 553, 554, 555, 557, 558, 559, 561, 562, 563, 564, 565, 568, 569, 570, 571, 573, 574, 575, 577, 578, 579, 580, 581, 584, 585, 586, 587, 589, 590, 591, 593, 594, 595, 596, 597, 603, 604, 605, 606, 608, 610, 611, 612, 613, 614, 631, 632, 635, 636, 638, 660, 661, 663, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 679], "point": [2, 3, 41, 47, 55, 62, 64, 65, 66, 90, 100, 103, 134, 137, 178, 184, 193, 200, 202, 203, 204, 234, 244, 247, 286, 289, 311, 324, 337, 346, 352, 402, 544, 550, 669], "4": [2, 3, 4, 5], "trail_edg": [2, 3, 165], "deviation_edg": [2, 3, 5, 158, 163], "kei": [2, 4, 24, 29, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 56, 64, 73, 75, 76, 77, 80, 81, 82, 83, 84, 88, 89, 92, 93, 94, 95, 96, 104, 105, 106, 108, 110, 111, 112, 114, 115, 116, 117, 118, 124, 128, 130, 141, 142, 147, 148, 153, 158, 163, 164, 165, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 194, 202, 210, 212, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 236, 237, 238, 239, 240, 248, 249, 250, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 273, 274, 280, 282, 291, 292, 295, 296, 301, 302, 318, 346, 375, 408, 425, 442, 483, 500, 517, 598, 663, 676], "u": [2, 5, 28, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 74, 128, 162, 173, 178, 179, 180, 181, 182, 183, 184, 187, 188, 191, 192, 211, 280, 305, 331], "v": [2, 5, 28, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 74, 128, 162, 173, 178, 179, 180, 181, 182, 183, 184, 187, 188, 191, 192, 211, 280, 305, 331, 680], "deviat": [2, 5, 24, 153, 163, 175, 219, 220, 222, 266, 305, 359, 375, 676], "indirect": [2, 222, 676], "set": [2, 39, 40, 48, 51, 52, 53, 54, 62, 69, 71, 104, 105, 113, 114, 116, 117, 118, 119, 141, 142, 176, 177, 185, 189, 190, 191, 192, 200, 206, 208, 248, 249, 257, 259, 261, 262, 263, 264, 295, 296, 375, 378, 379, 408, 411, 412, 425, 428, 429, 442, 445, 446, 483, 486, 487, 500, 503, 504, 517, 520, 521, 598, 601, 602, 676], "loadscal": [2, 3], "reactionscal": [2, 3], "o": 3, "time": [3, 5, 160, 615, 641, 676, 680], "pointconstraint": 3, "trailedgeparamet": 3, "deviationedgeparamet": [3, 4, 5], "here": [3, 680], "path": [3, 60, 65, 78, 126, 132, 137, 198, 203, 217, 278, 284, 289, 309, 314, 322, 327, 335, 340, 350, 355, 363, 371, 382, 388, 396, 404, 415, 421, 432, 438, 449, 455, 466, 479, 490, 496, 507, 513, 524, 530, 538, 546, 554, 562, 570, 578, 586, 594, 605, 611, 643, 667, 672], "dirnam": 3, "__file__": 3, "IN": [3, 681], "abspath": 3, "join": 3, "03_bridge_2d": 3, "json": [3, 60, 61, 132, 133, 150, 198, 199, 284, 285, 304, 309, 310, 314, 315, 317, 322, 323, 327, 328, 330, 335, 336, 340, 341, 343, 350, 351, 355, 356, 358, 363, 364, 371, 372, 374, 382, 383, 388, 389, 391, 396, 397, 404, 405, 407, 415, 416, 421, 422, 424, 432, 433, 438, 439, 441, 449, 450, 455, 456, 458, 466, 467, 479, 480, 482, 490, 491, 496, 497, 499, 507, 508, 513, 514, 516, 524, 525, 530, 531, 533, 538, 539, 546, 547, 549, 554, 555, 562, 563, 565, 570, 571, 578, 579, 581, 586, 587, 594, 595, 597, 605, 606, 611, 612, 614, 667, 668, 672, 673, 675, 676], "from_json": 3, "appli": [3, 57, 83, 92, 111, 121, 154, 195, 225, 236, 255, 268, 346, 352, 663, 676], "gener": [3, 4, 5, 28, 160, 162, 344, 345, 679], "find": [3, 57, 126, 163, 165, 195, 278, 477, 615, 677, 679, 680], "initi": [3, 386, 419, 436, 453, 494, 511, 528, 609], "opt": [3, 5], "defin": [3, 127, 134, 279, 286, 331, 346, 669], "constraint": [3, 4, 5, 459, 461, 469, 472, 473, 474, 615, 676, 679], "nodes_opt": 3, "target_point": 3, "20": 3, "67": 3, "42": 3, "7": [3, 680], "15": 3, "28": 3, "84": 3, "zip": 3, "add_constraint": [3, 4, 5], "paramet": [3, 4, 5, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 154, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 274, 277, 278, 279, 280, 284, 285, 289, 291, 293, 294, 295, 296, 297, 298, 299, 300, 307, 308, 309, 310, 311, 312, 314, 315, 320, 321, 322, 323, 324, 325, 327, 328, 333, 334, 335, 336, 337, 338, 340, 341, 344, 345, 346, 348, 349, 350, 351, 352, 353, 355, 356, 361, 362, 363, 364, 368, 371, 372, 375, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 394, 395, 396, 397, 401, 404, 405, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 462, 464, 465, 466, 467, 470, 475, 476, 477, 479, 480, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 500, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 517, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 536, 537, 538, 539, 543, 546, 547, 552, 553, 554, 555, 559, 562, 563, 568, 569, 570, 571, 575, 578, 579, 584, 585, 586, 587, 591, 594, 595, 598, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 615, 616, 617, 618, 624, 627, 631, 635, 640, 641, 642, 643, 645, 646, 647, 648, 654, 657, 660, 663, 665, 666, 667, 668, 669, 670, 672, 673, 676], "add_paramet": [3, 4, 5], "bound_low": [3, 375, 408, 425, 442, 483, 500, 517, 598], "bound_up": [3, 375, 408, 425, 442, 483, 500, 517, 598], "10": [3, 4, 5, 677], "form_opt": [3, 4, 5], "solv": [3, 4, 5, 57, 195, 615, 676, 679, 680], "algorithm": [3, 5, 32, 56, 57, 79, 125, 168, 194, 195, 218, 277, 312, 325, 338, 344, 345, 353, 368, 385, 401, 418, 435, 452, 476, 477, 493, 510, 527, 543, 559, 575, 591, 608, 615, 670, 676], "slsqp": [3, 4, 477, 615], "iter": [3, 4, 50, 92, 115, 127, 158, 159, 175, 188, 236, 260, 276, 279, 291, 292, 344, 345, 477, 615, 676], "ep": [3, 4, 477, 615], "figsiz": [3, 4, 5], "16": [3, 4, 5, 680], "9": [3, 4, 5], "t": [3, 4, 5, 47, 128, 156, 184, 280, 680], "40": 3, "target": [3, 359, 366, 392, 399, 534, 541, 550, 557, 558, 566, 573, 582, 589, 676, 679], "x": [3, 5, 408, 483, 676], "y": [3, 5, 425, 500, 676], "z": [3, 87, 125, 231, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 442, 452, 476, 493, 510, 517, 527, 543, 559, 575, 591, 608, 670, 676], "size": [3, 48, 93, 113, 185, 237, 257, 477, 676], "facecolor": 3, "90": 3, "math": [4, 5], "sqrt": 4, "trailedgeforceconstraint": [4, 5], "width": [4, 676], "height": 4, "auto": [4, 5], "auxiliari": [4, 5, 158, 159, 160, 216, 265, 292, 676], "auxiliary_trail": [4, 5, 160, 676], "minim": [4, 471], "axiliari": [4, 5], "goal": [4, 461], "auxiliary_trail_edg": [4, 5, 676], "n": [4, 5, 69, 71, 113, 206, 208, 257, 680], "show_nodetext": 4, "nodetext": 4, "pad": [4, 5, 645], "pi": 5, "co": 5, "sin": 5, "numpi": [5, 345, 680], "np": 5, "util": 5, "pairwis": 5, "creat": [5, 26, 30, 35, 59, 63, 97, 98, 99, 135, 157, 166, 171, 197, 201, 241, 242, 243, 287, 311, 324, 337, 352, 472, 473, 617, 647, 669, 676], "diamet": 5, "num_sid": 5, "onli": [5, 55, 71, 81, 100, 193, 208, 223, 244, 472, 473, 477, 615, 634, 669, 676, 679, 680], "even": 5, "number": [5, 32, 33, 34, 36, 66, 69, 71, 120, 121, 122, 123, 127, 168, 169, 170, 172, 204, 206, 208, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 279, 344, 345, 469, 470, 477, 615], "appendix_length": 5, "tension_forc": 5, "compression_forc": 5, "bound": [5, 378, 379, 411, 412, 428, 429, 445, 446, 472, 486, 487, 503, 504, 520, 521, 601, 602, 633, 645, 662], "grad_method": 5, "ad": [5, 469, 477, 676], "test": [5, 216, 219, 220, 222, 227, 230], "subdivis": 5, "i": [5, 28, 39, 40, 47, 50, 51, 52, 53, 54, 55, 57, 62, 65, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 90, 100, 101, 102, 103, 104, 105, 115, 116, 117, 118, 119, 121, 127, 128, 139, 140, 148, 159, 160, 162, 163, 165, 176, 177, 184, 188, 189, 190, 191, 192, 193, 195, 200, 203, 211, 212, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 244, 245, 246, 247, 248, 249, 258, 260, 261, 262, 263, 264, 268, 279, 280, 292, 293, 294, 302, 331, 344, 345, 378, 379, 411, 412, 428, 429, 445, 446, 463, 477, 486, 487, 503, 504, 520, 521, 601, 602, 615, 617, 647, 676, 679, 680, 681], "assert": 5, "remov": [5, 474, 475, 676], "last": [5, 160, 680], "theta": 5, "linspac": 5, "radiu": 5, "enumer": 5, "perimet": 5, "tension": [5, 677, 679], "list": [5, 22, 26, 29, 30, 35, 40, 41, 42, 46, 47, 48, 49, 51, 52, 56, 57, 59, 62, 64, 69, 71, 76, 77, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 103, 105, 106, 110, 111, 112, 113, 116, 117, 124, 126, 127, 134, 136, 138, 148, 151, 157, 159, 163, 164, 165, 166, 171, 177, 178, 179, 183, 184, 185, 187, 189, 190, 194, 195, 197, 200, 202, 206, 208, 214, 215, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 247, 249, 250, 254, 255, 256, 257, 261, 262, 274, 278, 279, 286, 288, 290, 292, 302, 311, 324, 337, 346, 352, 615, 617, 618, 636, 647, 648, 669, 676], "rang": [5, 47, 53, 118, 128, 184, 191, 263, 280], "intern": [5, 344, 345, 679], "ar": [5, 23, 57, 128, 152, 160, 195, 280, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 477, 484, 501, 518, 535, 551, 567, 583, 599, 615, 664, 676, 678, 679, 680], "half_num_sid": 5, "int": [5, 32, 33, 34, 36, 48, 66, 69, 71, 76, 77, 83, 84, 89, 92, 93, 111, 113, 120, 121, 122, 123, 124, 127, 130, 142, 148, 163, 165, 168, 169, 170, 172, 185, 204, 206, 208, 214, 215, 225, 226, 227, 233, 236, 237, 255, 257, 258, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 282, 296, 302, 344, 345, 346, 365, 398, 477, 540, 556, 572, 588, 615, 624, 627, 639, 645, 654, 657, 663], "auxiliary_trail_length": [5, 676], "should": [5, 41, 53, 54, 57, 118, 119, 158, 175, 178, 191, 192, 195, 263, 264, 291, 631, 660], "zero": [5, 87, 231], "all": [5, 27, 40, 52, 56, 87, 91, 92, 105, 158, 159, 161, 175, 177, 190, 194, 231, 235, 236, 249, 273, 291, 292, 637, 643, 645, 676, 680, 681], "allow": [5, 680], "chang": [5, 90, 103, 234, 247, 676], "lbfg": [5, 477, 615], "grad": [5, 477], "45": 5, "A": [6, 22, 28, 32, 40, 51, 52, 53, 55, 56, 62, 64, 65, 66, 73, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 100, 101, 102, 105, 108, 111, 116, 117, 118, 124, 126, 127, 134, 135, 136, 137, 138, 140, 143, 144, 145, 146, 148, 151, 154, 156, 160, 162, 163, 165, 168, 177, 189, 190, 191, 193, 194, 200, 202, 203, 204, 210, 214, 215, 217, 218, 223, 225, 226, 227, 228, 229, 231, 232, 233, 235, 237, 238, 239, 240, 244, 245, 246, 249, 252, 255, 261, 262, 263, 274, 278, 279, 286, 287, 288, 289, 290, 292, 294, 297, 298, 299, 300, 302, 305, 318, 324, 331, 344, 345, 346, 352, 477, 615, 627, 634, 635, 657, 663, 669, 676, 678, 679, 681], "b": [6, 678, 679], "tubular": [6, 678, 679], "3d": [6, 676, 678, 679], "c": [6, 90, 103, 234, 247, 678, 679, 680, 681], "circular": [6, 678, 679], "dome": [6, 676, 678, 679], "d": [6, 90, 103, 234, 247, 677, 678, 679], "jessen": [6, 678, 679], "e": [6, 148, 302, 331, 678, 679], "spiral": [6, 676, 678, 679], "staircas": [6, 676, 678, 679], "download": [7, 8, 9, 10, 11, 680], "rhino": [7, 23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 631, 660, 664, 676, 679, 680], "file": [7, 8, 9, 10, 11, 60, 61, 65, 132, 137, 198, 199, 203, 284, 289, 309, 310, 314, 322, 323, 327, 335, 336, 340, 350, 351, 355, 363, 364, 371, 382, 383, 388, 396, 397, 404, 415, 416, 421, 432, 433, 438, 449, 450, 455, 466, 467, 479, 490, 491, 496, 507, 508, 513, 524, 525, 530, 538, 539, 546, 554, 555, 562, 570, 571, 578, 586, 587, 594, 605, 606, 611, 643, 667, 668, 672, 676, 681], "grasshopp": [7, 8, 9, 10, 11, 23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 631, 660, 664, 676, 678, 679], "viewer": [12, 13, 634, 676, 679], "class": [22, 23, 151, 152, 305, 306, 318, 319, 331, 332, 346, 347, 359, 360, 375, 376, 392, 393, 408, 409, 425, 426, 442, 443, 459, 460, 483, 484, 500, 501, 517, 518, 534, 535, 550, 551, 566, 567, 582, 583, 598, 599, 616, 634, 646, 663, 664, 676], "arg": [22, 151, 324, 369, 560, 576, 592, 634], "kwarg": [22, 53, 118, 151, 191, 263, 305, 311, 318, 324, 331, 337, 346, 369, 459, 560, 576, 592, 616, 617, 618, 634, 635, 636, 643, 646, 647, 648, 663], "sourc": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 360, 361, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 670, 671, 672, 673, 674, 675, 679], "base": [22, 67, 151, 305, 318, 331, 346, 359, 375, 392, 408, 425, 442, 459, 477, 483, 500, 517, 534, 550, 566, 582, 598, 615, 616, 634, 646, 663, 676], "The": [22, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 73, 74, 75, 81, 82, 83, 88, 92, 93, 94, 95, 96, 104, 105, 106, 108, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 141, 142, 149, 150, 151, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 210, 211, 212, 216, 219, 220, 222, 223, 224, 225, 230, 232, 236, 237, 238, 239, 240, 248, 249, 250, 252, 254, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 291, 292, 293, 294, 295, 296, 303, 304, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 464, 465, 466, 467, 468, 469, 470, 471, 477, 478, 479, 480, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 525, 526, 528, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 576, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 597, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 631, 640, 642, 646, 647, 648, 660, 663, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681], "heart": [22, 151], "life": [22, 151], "argument": [22, 53, 127, 143, 144, 145, 146, 151, 191, 279, 297, 298, 299, 300, 311, 324, 337, 617, 618, 647, 648, 676], "dict": [22, 40, 50, 52, 53, 54, 58, 64, 73, 76, 77, 88, 89, 105, 108, 115, 117, 118, 119, 131, 133, 141, 142, 143, 144, 145, 146, 148, 149, 151, 158, 175, 177, 188, 190, 191, 192, 196, 202, 210, 214, 215, 232, 233, 249, 252, 260, 262, 263, 264, 283, 285, 291, 295, 296, 297, 298, 299, 300, 302, 303, 308, 311, 313, 315, 316, 321, 324, 326, 328, 329, 334, 337, 339, 341, 342, 349, 354, 356, 357, 362, 370, 372, 373, 381, 387, 389, 390, 395, 403, 405, 406, 414, 420, 422, 423, 431, 437, 439, 440, 448, 454, 456, 457, 465, 478, 480, 481, 489, 495, 497, 498, 506, 512, 514, 515, 523, 529, 531, 532, 537, 545, 547, 548, 553, 561, 563, 564, 569, 577, 579, 580, 585, 593, 595, 596, 604, 610, 612, 613, 617, 618, 624, 627, 647, 648, 654, 657, 666, 671, 673, 674], "keyword": [22, 151, 311, 324, 337, 617, 618, 647, 648], "return": [22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 153, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 295, 297, 298, 299, 300, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 368, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 385, 387, 388, 389, 390, 391, 394, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 407, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 433, 435, 437, 438, 439, 440, 441, 445, 446, 447, 448, 449, 450, 452, 454, 455, 456, 457, 458, 464, 465, 466, 467, 476, 477, 478, 479, 480, 481, 482, 486, 487, 488, 489, 490, 491, 493, 495, 496, 497, 498, 499, 503, 504, 505, 506, 507, 508, 510, 512, 513, 514, 515, 516, 520, 521, 522, 523, 524, 525, 527, 529, 530, 531, 532, 533, 536, 537, 538, 539, 540, 541, 543, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 559, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 575, 577, 578, 579, 580, 581, 584, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 601, 602, 603, 604, 605, 606, 608, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 624, 627, 630, 631, 632, 633, 635, 642, 647, 648, 649, 650, 651, 654, 657, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676], "method": [22, 23, 151, 152, 305, 306, 318, 319, 331, 332, 346, 347, 359, 360, 375, 376, 392, 393, 408, 409, 425, 426, 442, 443, 459, 460, 477, 483, 484, 500, 501, 517, 518, 534, 535, 550, 551, 566, 567, 582, 583, 598, 599, 615, 616, 623, 634, 639, 646, 653, 663, 664, 676], "inherit": [22, 151, 305, 318, 331, 346, 359, 375, 392, 408, 425, 442, 459, 483, 500, 517, 534, 550, 566, 582, 598, 616, 634, 646, 663], "convert": [23, 131, 152, 283, 306, 313, 319, 326, 332, 339, 347, 354, 360, 370, 376, 387, 393, 403, 409, 420, 426, 437, 443, 454, 460, 478, 484, 495, 501, 512, 518, 529, 535, 545, 551, 561, 567, 577, 583, 593, 599, 610, 664, 671, 676], "instanc": [23, 58, 59, 60, 61, 63, 135, 152, 196, 197, 198, 199, 201, 287, 306, 308, 309, 310, 319, 321, 322, 323, 332, 334, 335, 336, 347, 349, 350, 351, 360, 362, 363, 364, 376, 381, 382, 383, 393, 395, 396, 397, 409, 414, 415, 416, 426, 431, 432, 433, 443, 448, 449, 450, 460, 465, 466, 467, 484, 489, 490, 491, 501, 506, 507, 508, 518, 523, 524, 525, 535, 537, 538, 539, 551, 553, 554, 555, 567, 569, 570, 571, 583, 585, 586, 587, 599, 604, 605, 606, 664, 666, 667, 668], "string": [23, 60, 61, 65, 73, 88, 108, 132, 133, 137, 152, 198, 199, 203, 210, 232, 252, 284, 285, 289, 306, 309, 310, 314, 315, 319, 322, 323, 327, 328, 332, 335, 336, 340, 341, 347, 350, 351, 355, 356, 360, 363, 364, 371, 372, 376, 382, 383, 388, 389, 393, 396, 397, 404, 405, 409, 415, 416, 421, 422, 426, 432, 433, 438, 439, 443, 449, 450, 455, 456, 460, 466, 467, 479, 480, 484, 490, 491, 496, 497, 501, 507, 508, 513, 514, 518, 524, 525, 530, 531, 535, 538, 539, 546, 547, 551, 554, 555, 562, 563, 567, 570, 571, 578, 579, 583, 586, 587, 594, 595, 599, 605, 606, 611, 612, 664, 667, 668, 672, 673], "thi": [23, 31, 32, 56, 57, 58, 60, 61, 79, 85, 101, 152, 160, 167, 168, 194, 195, 196, 198, 199, 218, 228, 245, 292, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 332, 333, 334, 335, 336, 344, 345, 347, 348, 349, 350, 351, 360, 361, 362, 363, 364, 376, 378, 379, 380, 381, 382, 383, 393, 394, 395, 396, 397, 409, 411, 412, 413, 414, 415, 416, 426, 428, 429, 430, 431, 432, 433, 443, 445, 446, 447, 448, 449, 450, 460, 464, 465, 466, 467, 477, 484, 486, 487, 488, 489, 490, 491, 501, 503, 504, 505, 506, 507, 508, 518, 520, 521, 522, 523, 524, 525, 535, 536, 537, 538, 539, 551, 552, 553, 554, 555, 567, 568, 569, 570, 571, 583, 584, 585, 586, 587, 599, 601, 602, 603, 604, 605, 606, 634, 664, 665, 666, 667, 668, 676, 680, 681], "exist": [23, 39, 40, 51, 52, 78, 85, 101, 104, 105, 116, 117, 141, 142, 152, 176, 177, 189, 190, 217, 228, 245, 248, 249, 261, 262, 292, 295, 296, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 634, 664, 676], "net": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664, 679], "compat": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 631, 660, 664, 676], "when": [23, 39, 104, 152, 176, 248, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664, 676, 680], "us": [23, 39, 40, 51, 52, 54, 55, 57, 62, 65, 68, 69, 70, 71, 73, 85, 88, 90, 100, 101, 103, 104, 105, 108, 116, 117, 119, 125, 152, 176, 177, 189, 190, 192, 193, 195, 200, 203, 205, 206, 207, 208, 210, 228, 232, 234, 244, 245, 247, 248, 249, 252, 261, 262, 264, 277, 306, 312, 319, 325, 332, 338, 345, 347, 353, 360, 368, 376, 385, 393, 401, 409, 418, 426, 435, 443, 452, 460, 476, 477, 484, 493, 501, 510, 518, 527, 535, 543, 551, 559, 567, 575, 583, 591, 599, 608, 615, 617, 632, 635, 647, 661, 664, 670, 676, 677, 678, 679, 680, 681], "ironpython": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "implicit": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "convers": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "usual": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "take": [23, 54, 57, 119, 152, 192, 195, 264, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 473, 484, 501, 518, 535, 551, 567, 583, 599, 664], "place": [23, 139, 152, 293, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "cpython": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "kick": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "its": [23, 50, 53, 54, 110, 118, 119, 127, 128, 131, 149, 150, 152, 188, 191, 192, 254, 263, 264, 279, 280, 283, 303, 304, 306, 313, 316, 317, 319, 324, 326, 329, 330, 332, 339, 342, 343, 347, 354, 357, 358, 360, 370, 373, 374, 376, 387, 390, 391, 393, 403, 406, 407, 409, 420, 423, 424, 426, 437, 440, 441, 443, 454, 457, 458, 460, 463, 478, 481, 482, 484, 495, 498, 499, 501, 512, 515, 516, 518, 529, 532, 533, 535, 545, 548, 549, 551, 561, 564, 565, 567, 577, 580, 581, 583, 593, 596, 597, 599, 610, 613, 614, 664, 671, 674, 675], "default": [23, 31, 83, 92, 141, 142, 143, 144, 145, 146, 152, 158, 167, 175, 225, 236, 291, 295, 296, 297, 298, 299, 300, 306, 307, 319, 320, 332, 333, 344, 345, 347, 348, 360, 361, 376, 380, 393, 394, 409, 413, 426, 430, 443, 447, 460, 464, 477, 484, 488, 501, 505, 518, 522, 535, 536, 551, 552, 567, 568, 583, 584, 599, 603, 615, 664, 665, 676], "print": [23, 152, 306, 319, 332, 344, 345, 347, 360, 376, 393, 409, 426, 443, 460, 477, 484, 501, 518, 535, 551, 567, 583, 599, 664], "self": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "gettyp": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "fullnam": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "similar": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "overrid": [23, 152, 306, 319, 331, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "object": [23, 26, 31, 32, 35, 39, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 79, 85, 86, 87, 97, 99, 100, 101, 102, 127, 131, 132, 133, 137, 149, 150, 152, 154, 156, 157, 167, 168, 171, 176, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 218, 228, 229, 231, 241, 243, 244, 245, 246, 279, 283, 284, 285, 289, 303, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 370, 371, 372, 373, 374, 376, 380, 381, 382, 383, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 403, 404, 405, 406, 407, 409, 413, 414, 415, 416, 420, 421, 422, 423, 424, 426, 430, 431, 432, 433, 437, 438, 439, 440, 441, 443, 447, 448, 449, 450, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 468, 471, 477, 478, 479, 480, 481, 482, 484, 488, 489, 490, 491, 495, 496, 497, 498, 499, 501, 505, 506, 507, 508, 512, 513, 514, 515, 516, 518, 522, 523, 524, 525, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 561, 562, 563, 564, 565, 567, 568, 569, 570, 571, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 593, 594, 595, 596, 597, 599, 603, 604, 605, 606, 610, 611, 612, 613, 614, 615, 623, 634, 635, 636, 637, 638, 645, 653, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 680], "fix": [23, 55, 100, 127, 152, 156, 193, 244, 279, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664, 676], "make": [23, 31, 152, 160, 167, 306, 307, 319, 320, 332, 333, 347, 348, 359, 360, 361, 376, 380, 393, 394, 409, 413, 426, 430, 443, 447, 460, 464, 484, 488, 501, 505, 518, 522, 535, 536, 551, 552, 566, 567, 568, 582, 583, 584, 599, 603, 664, 665, 680], "displai": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 644, 664, 676], "proper": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "represent": [23, 131, 132, 133, 150, 152, 283, 284, 285, 304, 306, 313, 314, 315, 317, 319, 326, 327, 328, 330, 332, 339, 340, 341, 343, 347, 354, 355, 356, 358, 360, 370, 371, 372, 374, 376, 387, 388, 389, 391, 393, 403, 404, 405, 407, 409, 420, 421, 422, 424, 426, 437, 438, 439, 441, 443, 454, 455, 456, 458, 460, 478, 479, 480, 482, 484, 495, 496, 497, 499, 501, 512, 513, 514, 516, 518, 529, 530, 531, 533, 535, 545, 546, 547, 549, 551, 561, 562, 563, 565, 567, 577, 578, 579, 581, 583, 593, 594, 595, 597, 599, 610, 611, 612, 614, 664, 671, 672, 673, 675], "connect": [23, 29, 30, 62, 65, 66, 71, 78, 82, 98, 152, 163, 164, 165, 166, 200, 203, 204, 208, 217, 224, 242, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664, 680, 681], "panel": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "other": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664, 679, 680, 681], "type": [23, 31, 57, 58, 60, 61, 124, 152, 167, 195, 196, 198, 199, 274, 306, 307, 308, 309, 310, 319, 320, 321, 322, 323, 332, 333, 334, 335, 336, 347, 348, 349, 350, 351, 360, 361, 362, 363, 364, 376, 380, 381, 382, 383, 393, 394, 395, 396, 397, 409, 413, 414, 415, 416, 426, 430, 431, 432, 433, 443, 447, 448, 449, 450, 460, 464, 465, 466, 467, 484, 488, 489, 490, 491, 501, 505, 506, 507, 508, 518, 522, 523, 524, 525, 535, 536, 537, 538, 539, 551, 552, 553, 554, 555, 567, 568, 569, 570, 571, 583, 584, 585, 586, 587, 599, 603, 604, 605, 606, 617, 618, 631, 635, 647, 648, 660, 664, 665, 666, 667, 668, 676, 680], "output": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 477, 484, 501, 518, 535, 551, 567, 583, 599, 615, 664, 676], "an": [24, 31, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 57, 58, 60, 61, 65, 80, 85, 101, 104, 116, 117, 121, 123, 131, 132, 133, 137, 141, 153, 159, 160, 167, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 192, 195, 196, 198, 199, 203, 216, 219, 221, 226, 228, 230, 245, 248, 261, 262, 268, 270, 283, 284, 285, 289, 292, 295, 307, 308, 309, 310, 311, 313, 314, 315, 320, 321, 322, 323, 326, 327, 328, 333, 334, 335, 336, 337, 339, 340, 341, 344, 345, 348, 349, 350, 351, 354, 355, 356, 361, 362, 363, 364, 365, 370, 371, 372, 375, 380, 381, 382, 383, 387, 388, 389, 394, 395, 396, 397, 398, 403, 404, 405, 408, 413, 414, 415, 416, 420, 421, 422, 425, 430, 431, 432, 433, 437, 438, 439, 442, 447, 448, 449, 450, 454, 455, 456, 459, 464, 465, 466, 467, 475, 478, 479, 480, 483, 488, 489, 490, 491, 495, 496, 497, 500, 505, 506, 507, 508, 512, 513, 514, 517, 522, 523, 524, 525, 529, 530, 531, 536, 537, 538, 539, 540, 545, 546, 547, 552, 553, 554, 555, 556, 561, 562, 563, 568, 569, 570, 571, 572, 577, 578, 579, 584, 585, 586, 587, 588, 593, 594, 595, 598, 603, 604, 605, 606, 610, 611, 612, 616, 617, 618, 623, 624, 631, 643, 646, 647, 648, 653, 654, 660, 665, 666, 667, 668, 671, 672, 673, 676, 679, 680, 681], "tupl": [24, 29, 39, 40, 43, 45, 48, 50, 51, 52, 53, 54, 56, 59, 62, 64, 68, 69, 77, 80, 115, 118, 119, 134, 136, 141, 148, 153, 158, 164, 175, 176, 177, 180, 182, 185, 186, 188, 189, 190, 191, 192, 194, 197, 200, 202, 205, 206, 215, 216, 219, 220, 221, 222, 230, 260, 263, 264, 286, 288, 291, 295, 302, 311, 324, 337, 365, 398, 540, 556, 572, 588, 624, 633, 654, 662, 676], "doubl": [25, 155, 680], "rtype": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 234, 241, 242, 243, 247], "arrai": [26, 30, 35, 89, 90, 97, 98, 99, 103, 148, 157, 166, 171, 233, 234, 241, 242, 243, 247, 302, 472, 473], "adjac": [26, 97, 157, 241], "matrix": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 234, 241, 242, 243, 247], "network": [26, 27, 28, 30, 32, 35, 37, 50, 55, 56, 57, 62, 64, 65, 66, 74, 75, 78, 79, 85, 86, 87, 90, 91, 97, 98, 99, 100, 101, 102, 103, 115, 126, 127, 134, 136, 137, 138, 139, 140, 157, 161, 162, 166, 168, 171, 173, 188, 193, 194, 195, 200, 202, 203, 204, 211, 212, 217, 218, 228, 229, 231, 234, 235, 241, 242, 243, 244, 245, 246, 247, 260, 278, 279, 286, 288, 289, 290, 293, 294, 619, 635, 638, 649], "datastructur": [26, 28, 30, 35, 78, 90, 97, 98, 99, 103, 125, 157, 162, 166, 171, 217, 234, 241, 242, 243, 247, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "obj": [26, 28, 35, 39, 51, 65, 78, 97, 99, 104, 116, 125, 137, 157, 162, 171, 176, 189, 203, 217, 241, 243, 248, 261, 277, 289, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "get": [26, 28, 35, 39, 40, 43, 45, 48, 51, 52, 53, 54, 68, 69, 70, 71, 72, 78, 97, 99, 104, 105, 109, 111, 113, 114, 116, 117, 118, 119, 124, 125, 157, 162, 171, 176, 177, 180, 182, 185, 186, 189, 190, 191, 192, 205, 206, 207, 208, 209, 217, 241, 243, 248, 249, 253, 255, 257, 258, 259, 261, 262, 263, 264, 274, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 558, 559, 575, 591, 608, 670, 678], "liter": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 234, 241, 242, 243, 247, 631, 660], "csc": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 234, 241, 242, 243, 247], "csr": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 234, 241, 242, 243, 247], "coo": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 234, 241, 242, 243, 247], "option": [26, 30, 31, 35, 39, 40, 41, 47, 48, 50, 51, 52, 53, 54, 55, 57, 62, 65, 66, 71, 73, 74, 88, 90, 93, 97, 98, 99, 100, 103, 104, 105, 106, 108, 113, 115, 116, 117, 118, 119, 125, 127, 128, 132, 133, 143, 144, 145, 146, 157, 166, 167, 171, 176, 177, 178, 184, 185, 188, 189, 190, 191, 192, 193, 195, 200, 203, 204, 208, 210, 211, 232, 234, 237, 241, 242, 243, 244, 247, 248, 249, 250, 252, 257, 260, 261, 262, 263, 264, 277, 279, 280, 284, 285, 297, 298, 299, 300, 307, 312, 314, 315, 320, 325, 327, 328, 333, 338, 340, 341, 344, 345, 348, 353, 355, 356, 361, 368, 371, 372, 380, 385, 388, 389, 394, 401, 404, 405, 413, 418, 421, 422, 430, 435, 438, 439, 447, 452, 455, 456, 464, 476, 477, 479, 480, 488, 493, 496, 497, 505, 510, 513, 514, 522, 527, 530, 531, 536, 543, 546, 547, 552, 559, 562, 563, 568, 575, 578, 579, 584, 591, 594, 595, 603, 608, 611, 612, 615, 617, 618, 624, 627, 631, 635, 637, 639, 641, 643, 645, 647, 648, 654, 657, 660, 665, 670, 672, 673, 680], "format": [26, 30, 35, 73, 88, 90, 97, 98, 99, 103, 108, 125, 129, 133, 157, 166, 171, 210, 232, 234, 241, 242, 243, 247, 252, 277, 281, 285, 312, 315, 325, 328, 338, 341, 353, 356, 368, 372, 385, 389, 401, 405, 418, 422, 435, 439, 452, 456, 476, 480, 493, 497, 510, 514, 527, 531, 543, 547, 559, 563, 575, 579, 591, 595, 608, 612, 670, 673, 676], "array_lik": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 234, 241, 242, 243, 247], "construct": [26, 30, 35, 58, 60, 61, 62, 64, 65, 66, 67, 90, 97, 98, 99, 103, 157, 166, 171, 196, 198, 199, 200, 202, 203, 204, 234, 241, 242, 243, 247, 308, 309, 310, 321, 322, 323, 334, 335, 336, 349, 350, 351, 362, 363, 364, 381, 382, 383, 395, 396, 397, 414, 415, 416, 431, 432, 433, 448, 449, 450, 465, 466, 467, 489, 490, 491, 506, 507, 508, 523, 524, 525, 537, 538, 539, 553, 554, 555, 569, 570, 571, 585, 586, 587, 604, 605, 606, 666, 667, 668], "none": [27, 28, 31, 37, 38, 39, 40, 51, 52, 53, 55, 57, 62, 65, 73, 88, 100, 104, 105, 108, 114, 116, 117, 118, 127, 132, 137, 139, 141, 143, 144, 145, 146, 161, 162, 167, 173, 174, 176, 177, 189, 190, 191, 193, 195, 200, 203, 210, 232, 244, 248, 249, 252, 259, 261, 262, 263, 279, 284, 289, 293, 295, 297, 298, 299, 300, 307, 314, 318, 320, 327, 331, 333, 340, 344, 345, 348, 355, 359, 361, 371, 375, 378, 379, 380, 388, 392, 394, 404, 408, 411, 412, 413, 421, 425, 428, 429, 430, 438, 442, 445, 446, 447, 455, 464, 479, 483, 486, 487, 488, 496, 500, 503, 504, 505, 513, 517, 520, 521, 522, 530, 534, 536, 546, 550, 552, 562, 566, 568, 578, 582, 584, 594, 598, 601, 602, 603, 611, 619, 620, 621, 624, 627, 630, 631, 632, 635, 637, 639, 640, 641, 642, 643, 644, 645, 649, 650, 651, 654, 657, 659, 660, 661, 665, 672, 676], "cl": [28, 31, 162, 167, 307, 320, 333, 348, 361, 380, 394, 413, 430, 447, 464, 488, 505, 522, 536, 552, 568, 584, 603, 665], "graph": [28, 38, 59, 63, 120, 122, 129, 135, 160, 162, 174, 197, 201, 267, 269, 281, 287], "g": [28, 162, 331], "h": [28, 162], "same": [28, 57, 162, 195, 679], "vertic": [28, 57, 78, 87, 138, 162, 195, 217, 231, 290], "whose": [28, 162, 669], "consist": [28, 162, 634], "present": [28, 74, 75, 162, 211, 212], "refer": [28, 162, 477, 615, 642, 643, 679, 680], "wolfram": [28, 162], "mathworld": [28, 162], "avail": [28, 85, 101, 159, 162, 228, 245, 477, 680], "http": [28, 85, 101, 162, 228, 245, 642, 643, 677], "com": [28, 162], "graphcompl": [28, 162], "html": [28, 162, 642, 643], "exampl": [28, 37, 38, 54, 57, 78, 119, 125, 162, 173, 174, 192, 195, 217, 264, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670, 676, 679], "network_compl": [28, 162], "from_obj": [28, 78, 125, 162, 217, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "line": [28, 55, 57, 62, 65, 78, 85, 100, 101, 134, 162, 193, 195, 200, 203, 217, 228, 244, 245, 286, 311, 337, 392, 680], "ani": [28, 40, 50, 51, 52, 53, 54, 57, 80, 105, 115, 116, 117, 118, 119, 143, 144, 145, 146, 162, 177, 188, 189, 190, 191, 192, 195, 221, 249, 260, 261, 262, 263, 264, 292, 297, 298, 299, 300, 617, 618, 647, 648, 679, 681], "has_edg": [28, 162], "direct": [28, 42, 47, 57, 63, 74, 162, 179, 184, 195, 201, 211, 220, 346, 676], "fals": [28, 50, 53, 54, 55, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 100, 101, 103, 115, 118, 119, 125, 132, 133, 158, 160, 162, 175, 188, 191, 192, 193, 208, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 234, 244, 245, 247, 260, 263, 264, 277, 284, 285, 291, 312, 314, 315, 325, 327, 328, 338, 340, 341, 344, 345, 353, 355, 356, 368, 371, 372, 385, 388, 389, 401, 404, 405, 418, 421, 422, 435, 438, 439, 452, 455, 456, 476, 477, 479, 480, 493, 496, 497, 510, 513, 514, 527, 530, 531, 543, 546, 547, 559, 562, 563, 575, 578, 579, 591, 594, 595, 608, 611, 612, 639, 670, 672, 673, 676], "hashabl": [29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 81, 82, 88, 89, 91, 93, 94, 95, 96, 100, 104, 105, 106, 108, 110, 112, 113, 115, 116, 117, 118, 119, 126, 128, 136, 141, 148, 164, 169, 170, 172, 173, 174, 176, 177, 178, 179, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 197, 202, 205, 206, 207, 208, 210, 211, 212, 214, 215, 223, 224, 232, 233, 235, 237, 238, 239, 240, 244, 248, 249, 250, 252, 254, 256, 257, 260, 261, 262, 263, 264, 278, 280, 288, 295, 302], "identifi": [29, 33, 34, 36, 37, 38, 39, 40, 48, 50, 51, 52, 53, 54, 56, 59, 68, 69, 70, 71, 74, 75, 81, 82, 89, 91, 93, 94, 95, 96, 104, 105, 106, 110, 112, 113, 115, 116, 117, 118, 119, 126, 141, 142, 164, 169, 170, 172, 173, 174, 176, 177, 185, 188, 189, 190, 191, 192, 194, 197, 205, 206, 207, 208, 211, 212, 223, 224, 233, 235, 237, 238, 239, 240, 248, 249, 250, 254, 256, 257, 260, 261, 262, 263, 264, 278, 295, 296, 676], "independ": [31, 140, 167, 294, 307, 320, 333, 348, 361, 380, 394, 413, 430, 447, 464, 488, 505, 522, 536, 552, 568, 584, 603, 665], "current": [31, 90, 103, 167, 234, 247, 307, 320, 333, 348, 361, 366, 380, 394, 399, 413, 430, 447, 464, 477, 488, 505, 522, 536, 541, 552, 557, 568, 573, 584, 589, 603, 620, 621, 633, 650, 651, 662, 665], "count": [32, 168], "cross": [32, 56, 79, 85, 86, 101, 102, 168, 194, 218, 228, 229, 245, 246, 656], "pair": [32, 39, 40, 53, 56, 59, 62, 68, 73, 76, 77, 79, 88, 89, 105, 108, 118, 134, 136, 148, 168, 176, 177, 191, 194, 197, 200, 205, 210, 214, 215, 218, 232, 233, 249, 252, 263, 286, 288, 302, 617, 631, 647, 660], "note": [32, 56, 57, 78, 79, 81, 85, 90, 101, 103, 139, 140, 141, 142, 156, 159, 160, 168, 194, 195, 217, 218, 223, 228, 234, 245, 247, 292, 293, 294, 295, 296, 331, 378, 379, 411, 412, 428, 429, 445, 446, 486, 487, 503, 504, 520, 521, 601, 602, 642, 643, 669], "assum": [32, 56, 79, 168, 194, 218, 680], "li": [32, 56, 79, 87, 168, 194, 218, 231], "xy": [32, 56, 79, 87, 168, 194, 218, 231], "plane": [32, 55, 56, 79, 85, 86, 87, 100, 101, 102, 168, 193, 194, 218, 228, 229, 231, 244, 245, 246, 331, 534, 676], "neighbor": [33, 34, 36, 57, 81, 95, 96, 112, 127, 128, 169, 170, 172, 195, 223, 239, 240, 256, 279, 280], "numer": [34, 170, 477, 615, 679], "incom": [34, 95, 170, 239], "degre": [35, 66, 99, 171, 204, 243], "outgo": [36, 96, 172, 240], "delet": [37, 38, 173, 174, 676], "first": [37, 74, 128, 160, 173, 211, 280, 477, 615, 676, 680], "second": [37, 74, 128, 173, 211, 280, 640, 641], "name": [39, 40, 51, 52, 53, 104, 105, 116, 117, 118, 141, 142, 143, 144, 145, 146, 176, 177, 189, 190, 191, 248, 249, 261, 262, 263, 295, 296, 297, 298, 299, 300, 377, 410, 427, 444, 477, 485, 502, 519, 600, 615, 680], "valu": [39, 40, 43, 47, 51, 52, 53, 90, 103, 104, 105, 107, 109, 116, 117, 118, 141, 142, 143, 144, 145, 146, 176, 177, 180, 184, 189, 190, 191, 234, 247, 248, 249, 251, 253, 261, 262, 263, 295, 296, 297, 298, 299, 300, 369, 378, 379, 386, 411, 412, 419, 428, 429, 436, 445, 446, 453, 477, 486, 487, 494, 503, 504, 511, 520, 521, 528, 582, 592, 601, 602, 609, 615, 676], "attribut": [39, 40, 50, 51, 52, 53, 54, 104, 105, 115, 116, 117, 118, 119, 141, 142, 143, 144, 145, 146, 158, 175, 176, 177, 188, 189, 190, 191, 192, 248, 249, 260, 261, 262, 263, 264, 291, 295, 296, 297, 298, 299, 300, 377, 410, 427, 444, 485, 502, 519, 600, 676], "str": [39, 40, 41, 50, 51, 52, 53, 54, 61, 62, 65, 73, 88, 104, 105, 106, 108, 115, 116, 117, 118, 119, 125, 128, 129, 133, 141, 142, 143, 144, 145, 146, 150, 176, 177, 178, 188, 189, 190, 191, 192, 199, 200, 203, 210, 232, 248, 249, 250, 252, 260, 261, 262, 263, 264, 277, 280, 281, 285, 295, 296, 297, 298, 299, 300, 304, 310, 312, 315, 317, 323, 325, 328, 330, 336, 338, 341, 343, 351, 353, 356, 358, 364, 368, 372, 374, 383, 385, 389, 391, 397, 401, 405, 407, 416, 418, 422, 424, 433, 435, 439, 441, 450, 452, 456, 458, 467, 476, 477, 480, 482, 491, 493, 497, 499, 508, 510, 514, 516, 525, 527, 531, 533, 539, 543, 547, 549, 555, 559, 563, 565, 571, 575, 579, 581, 587, 591, 595, 597, 606, 608, 612, 614, 615, 617, 618, 624, 627, 639, 643, 647, 648, 654, 657, 668, 670, 673, 675], "function": [39, 40, 51, 52, 53, 54, 85, 101, 104, 105, 116, 117, 119, 127, 160, 176, 177, 189, 190, 191, 192, 228, 245, 248, 249, 261, 262, 264, 279, 344, 345, 468, 471, 477, 615, 639], "setter": [39, 40, 51, 52, 104, 105, 116, 117, 176, 177, 189, 190, 248, 249, 261, 262, 676], "rais": [39, 40, 51, 52, 55, 85, 100, 101, 104, 105, 116, 117, 127, 128, 141, 142, 149, 150, 176, 177, 189, 190, 193, 228, 244, 245, 248, 249, 261, 262, 279, 280, 295, 296, 303, 304, 316, 317, 329, 330, 342, 343, 357, 358, 373, 374, 390, 391, 406, 407, 423, 424, 440, 441, 457, 458, 481, 482, 498, 499, 515, 516, 532, 533, 548, 549, 564, 565, 580, 581, 596, 597, 613, 614, 674, 675, 676], "keyerror": [39, 40, 51, 52, 104, 105, 116, 117, 141, 142, 176, 177, 189, 190, 248, 249, 261, 262, 295, 296], "If": [39, 40, 47, 50, 51, 52, 53, 54, 55, 71, 74, 85, 90, 100, 101, 103, 104, 105, 115, 116, 117, 118, 119, 125, 127, 128, 132, 133, 141, 142, 163, 165, 176, 177, 184, 188, 189, 190, 191, 192, 193, 208, 211, 228, 234, 244, 245, 247, 248, 249, 260, 261, 262, 263, 264, 277, 279, 280, 284, 285, 295, 296, 312, 314, 315, 325, 327, 328, 331, 338, 340, 341, 344, 345, 353, 355, 356, 368, 371, 372, 378, 379, 385, 388, 389, 401, 404, 405, 411, 412, 418, 421, 422, 428, 429, 435, 438, 439, 445, 446, 452, 455, 456, 476, 477, 479, 480, 486, 487, 493, 496, 497, 503, 504, 510, 513, 514, 520, 521, 527, 530, 531, 543, 546, 547, 559, 562, 563, 575, 578, 579, 591, 594, 595, 601, 602, 608, 611, 612, 615, 670, 672, 673, 677, 678, 680], "doe": [39, 40, 51, 52, 104, 105, 116, 117, 141, 142, 176, 177, 189, 190, 248, 249, 261, 262, 295, 296, 679], "multipl": [40, 51, 52, 105, 116, 117, 177, 189, 190, 249, 261, 262, 459, 636], "empti": [40, 52, 105, 163, 165, 177, 190, 249], "dictionari": [40, 58, 64, 73, 76, 77, 88, 89, 105, 108, 143, 144, 145, 146, 148, 177, 196, 202, 210, 214, 215, 232, 233, 249, 252, 297, 298, 299, 300, 302, 308, 321, 334, 349, 362, 381, 395, 414, 431, 448, 465, 489, 506, 523, 537, 553, 569, 585, 604, 666, 676], "correspond": [40, 52, 73, 77, 88, 89, 105, 108, 117, 148, 177, 190, 210, 215, 232, 233, 249, 252, 262, 302, 617, 631, 647, 660], "provid": [40, 53, 58, 117, 127, 177, 191, 196, 262, 279, 308, 321, 334, 349, 362, 381, 395, 414, 431, 448, 465, 489, 506, 523, 537, 553, 569, 585, 604, 617, 647, 666, 679, 681], "ax": [41, 106, 178, 250, 632, 661, 676], "xyz": [41, 46, 47, 72, 90, 103, 106, 111, 114, 136, 147, 178, 183, 184, 209, 234, 247, 250, 255, 259, 288, 301, 311, 318, 324, 337, 346, 352, 392, 534, 550, 669], "coordin": [41, 46, 47, 62, 64, 87, 106, 112, 114, 134, 136, 138, 178, 183, 184, 200, 202, 231, 250, 256, 259, 286, 288, 290, 311, 324, 337, 352, 483, 500, 517, 633, 662, 669], "start": [41, 42, 44, 46, 47, 49, 62, 126, 134, 160, 178, 179, 181, 183, 184, 187, 200, 273, 278, 286, 378, 379, 411, 412, 428, 429, 445, 446, 486, 487, 503, 504, 520, 521, 601, 602, 678, 680], "end": [41, 42, 44, 46, 47, 49, 62, 126, 134, 156, 178, 179, 181, 183, 184, 187, 200, 278, 286, 311, 337], "along": [41, 47, 128, 178, 184, 280], "which": [41, 53, 54, 57, 118, 119, 178, 191, 192, 195, 263, 264, 631, 660], "includ": [41, 178, 292, 637, 676, 681], "float": [41, 42, 43, 44, 45, 46, 47, 49, 62, 64, 73, 83, 88, 92, 106, 108, 110, 112, 127, 128, 134, 136, 138, 178, 179, 180, 181, 182, 183, 184, 187, 200, 202, 210, 225, 232, 236, 250, 252, 254, 256, 279, 280, 286, 288, 290, 344, 345, 346, 352, 366, 369, 378, 379, 399, 411, 412, 428, 429, 445, 446, 477, 486, 487, 503, 504, 520, 521, 541, 557, 573, 589, 592, 601, 602, 615, 633, 637, 640, 641, 662, 669], "vector": [42, 47, 49, 90, 103, 110, 111, 124, 179, 184, 187, 234, 247, 254, 255, 274, 346, 352, 399, 541, 557, 560, 566, 573, 576], "locat": [46, 47, 183, 184], "midpoint": [46, 183], "outsid": [47, 57, 184, 195], "lie": [47, 184], "random": [48, 66, 68, 69, 70, 71, 113, 185, 204, 205, 206, 207, 208, 257], "sampl": [48, 113, 185, 257], "over": [50, 92, 115, 158, 159, 175, 188, 236, 260, 276, 291, 292], "bool": [50, 53, 54, 55, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 100, 101, 102, 103, 115, 118, 119, 125, 132, 133, 158, 160, 175, 188, 191, 192, 193, 208, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 244, 245, 246, 247, 260, 263, 264, 277, 284, 285, 291, 312, 314, 315, 325, 327, 328, 338, 340, 341, 344, 345, 353, 355, 356, 368, 371, 372, 385, 388, 389, 401, 404, 405, 418, 421, 422, 435, 438, 439, 452, 455, 456, 476, 477, 479, 480, 493, 496, 497, 510, 513, 514, 527, 530, 531, 543, 546, 547, 559, 562, 563, 575, 578, 579, 591, 594, 595, 608, 611, 612, 639, 670, 672, 673], "yield": [50, 53, 54, 92, 115, 118, 119, 130, 158, 159, 175, 188, 191, 192, 236, 260, 263, 264, 273, 275, 276, 282, 291, 292], "addit": [50, 53, 54, 85, 101, 115, 118, 119, 143, 144, 145, 146, 188, 191, 192, 228, 245, 260, 263, 264, 297, 298, 299, 300, 324], "next": [50, 53, 54, 92, 115, 118, 119, 130, 158, 159, 175, 188, 191, 192, 236, 260, 263, 264, 273, 276, 282, 291, 292, 344, 345, 676, 679, 680], "attr": [50, 53, 54, 115, 188, 191, 192, 260], "contain": [51, 52, 58, 60, 61, 65, 74, 117, 132, 189, 190, 196, 198, 199, 203, 211, 262, 284, 308, 309, 310, 314, 321, 322, 323, 327, 334, 335, 336, 340, 349, 350, 351, 355, 362, 363, 364, 371, 381, 382, 383, 388, 395, 396, 397, 404, 414, 415, 416, 421, 431, 432, 433, 438, 448, 449, 450, 455, 465, 466, 467, 479, 489, 490, 491, 496, 506, 507, 508, 513, 523, 524, 525, 530, 537, 538, 539, 546, 553, 554, 555, 562, 569, 570, 571, 578, 585, 586, 587, 594, 604, 605, 606, 611, 666, 667, 668, 672], "per": [51, 52, 66, 117, 189, 190, 204, 262, 472, 473, 615], "request": [51, 52, 105, 189, 190, 249], "condit": [53, 54, 118, 119, 191, 192, 263, 264, 681], "certain": [53, 54, 73, 88, 108, 118, 119, 191, 192, 210, 232, 252, 263, 264], "can": [53, 85, 101, 118, 191, 228, 245, 263, 676, 680], "min": [53, 118, 191, 263], "max": [53, 118, 191, 263], "predic": [54, 119, 192, 264], "lambda": [54, 119, 192, 264], "callabl": [54, 119, 127, 192, 264, 279, 639, 642], "you": [54, 119, 192, 264, 677, 678, 679, 680], "want": [54, 119, 192, 264, 680], "evalu": [54, 119, 192, 264], "straightlin": [55, 100, 193, 244], "emb": [55, 100, 193, 244], "two": [55, 56, 78, 100, 126, 159, 160, 193, 194, 217, 244, 278, 311, 337, 680], "straight": [55, 57, 85, 100, 101, 193, 195, 228, 244, 245], "embed": [55, 57, 85, 86, 100, 101, 102, 193, 195, 228, 229, 244, 245, 246], "wa": [55, 100, 193, 244, 676, 680], "success": [55, 100, 193, 244], "otherwis": [55, 74, 78, 79, 80, 83, 84, 85, 86, 87, 100, 101, 102, 193, 211, 213, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 244, 245, 246, 378, 379, 411, 412, 428, 429, 445, 446, 477, 486, 487, 503, 504, 520, 521, 601, 602, 669, 681], "importerror": [55, 85, 100, 101, 193, 228, 244, 245], "networkx": [55, 63, 100, 135, 193, 201, 244, 287], "instal": [55, 85, 100, 101, 193, 228, 244, 245, 676, 679], "each": [56, 57, 116, 134, 136, 194, 195, 261, 286, 288], "repres": [56, 62, 136, 194, 200, 288], "vertex": [56, 57, 68, 77, 148, 194, 195, 205, 215, 302], "breakpoint": [57, 195], "face": [57, 125, 195, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "break": [57, 195], "found": [57, 195, 615], "primarili": [57, 195], "up": [57, 88, 108, 195, 232, 252, 680], "between": [57, 66, 126, 195, 204, 278, 366, 399, 541, 557, 573, 589], "specif": [57, 74, 75, 82, 195, 211, 212, 224, 680], "For": [57, 195, 617, 618, 642, 643, 647, 648], "applic": [57, 195], "involv": [57, 195], "dual": [57, 195], "where": [57, 121, 130, 195, 268, 282, 352, 663, 669, 676], "extern": [57, 195], "reaction": [57, 124, 195, 274, 566, 629, 676, 679], "input": [57, 195, 676], "essenti": [57, 195], "wall": [57, 195], "follow": [57, 195, 477, 615, 680, 681], "maze": [57, 195], "It": [57, 85, 101, 195, 228, 245, 477], "reli": [57, 195], "repes": [57, 195], "determin": [57, 195], "order": [57, 160, 195, 292, 473], "around": [57, 195, 645], "alwai": [57, 195], "turn": [57, 195], "classmethod": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 196, 197, 198, 199, 200, 201, 202, 203, 204, 308, 309, 310, 311, 321, 322, 323, 324, 334, 335, 336, 337, 349, 350, 351, 352, 362, 363, 364, 381, 382, 383, 395, 396, 397, 414, 415, 416, 431, 432, 433, 448, 449, 450, 465, 466, 467, 489, 490, 491, 506, 507, 508, 523, 524, 525, 537, 538, 539, 553, 554, 555, 569, 570, 571, 585, 586, 587, 604, 605, 606, 666, 667, 668, 669], "ha": [58, 60, 61, 79, 81, 130, 196, 198, 199, 213, 218, 223, 282, 308, 309, 310, 321, 322, 323, 334, 335, 336, 349, 350, 351, 362, 363, 364, 381, 382, 383, 395, 396, 397, 414, 415, 416, 431, 432, 433, 448, 449, 450, 465, 466, 467, 489, 490, 491, 506, 507, 508, 523, 524, 525, 537, 538, 539, 553, 554, 555, 569, 570, 571, 585, 586, 587, 604, 605, 606, 666, 667, 668, 669, 676, 680], "correct": [58, 60, 61, 196, 198, 199, 308, 309, 310, 321, 322, 323, 334, 335, 336, 349, 350, 351, 362, 363, 364, 381, 382, 383, 395, 396, 397, 414, 415, 416, 431, 432, 433, 448, 449, 450, 465, 466, 467, 489, 490, 491, 506, 507, 508, 523, 524, 525, 537, 538, 539, 553, 554, 555, 569, 570, 571, 585, 586, 587, 604, 605, 606, 666, 667, 668], "schema": [58, 60, 61, 131, 149, 150, 196, 198, 199, 283, 303, 304, 308, 309, 310, 313, 316, 317, 321, 322, 323, 326, 329, 330, 334, 335, 336, 339, 342, 343, 349, 350, 351, 354, 357, 358, 362, 363, 364, 370, 373, 374, 381, 382, 383, 387, 390, 391, 395, 396, 397, 403, 406, 407, 414, 415, 416, 420, 423, 424, 431, 432, 433, 437, 440, 441, 448, 449, 450, 454, 457, 458, 465, 466, 467, 478, 481, 482, 489, 490, 491, 495, 498, 499, 506, 507, 508, 512, 515, 516, 523, 524, 525, 529, 532, 533, 537, 538, 539, 545, 548, 549, 553, 554, 555, 561, 564, 565, 569, 570, 571, 577, 580, 581, 585, 586, 587, 593, 596, 597, 604, 605, 606, 610, 613, 614, 666, 667, 668, 671, 674, 675], "new": [59, 63, 135, 197, 201, 287, 680], "inform": [59, 197, 642], "about": [59, 197, 678], "filepath": [60, 65, 132, 137, 198, 203, 284, 289, 309, 314, 322, 327, 335, 340, 350, 355, 363, 371, 382, 388, 396, 404, 415, 421, 432, 438, 449, 455, 466, 479, 490, 496, 507, 513, 524, 530, 538, 546, 554, 562, 570, 578, 586, 594, 605, 611, 643, 667, 672], "serial": [60, 61, 132, 133, 198, 199, 284, 285, 309, 310, 314, 315, 322, 323, 327, 328, 335, 336, 340, 341, 350, 351, 355, 356, 363, 364, 371, 372, 382, 383, 388, 389, 396, 397, 404, 405, 415, 416, 421, 422, 432, 433, 438, 439, 449, 450, 455, 456, 466, 467, 479, 480, 490, 491, 496, 497, 507, 508, 513, 514, 524, 525, 530, 531, 538, 539, 546, 547, 554, 555, 562, 563, 570, 571, 578, 579, 586, 587, 594, 595, 605, 606, 611, 612, 667, 668, 672, 673, 676], "like": [60, 65, 132, 137, 198, 203, 284, 289, 309, 314, 322, 327, 335, 340, 350, 355, 363, 371, 382, 388, 396, 404, 415, 421, 432, 438, 449, 455, 466, 479, 490, 496, 507, 513, 524, 530, 538, 546, 554, 562, 570, 578, 586, 594, 605, 611, 667, 672, 679, 680], "url": [60, 65, 198, 203, 309, 322, 335, 350, 363, 382, 396, 415, 432, 449, 466, 490, 507, 524, 538, 554, 570, 586, 605, 667, 677], "precis": [62, 65, 73, 88, 108, 200, 203, 210, 232, 252], "geometr": [62, 65, 73, 88, 108, 200, 203, 210, 232, 252, 635], "map": [62, 65, 73, 76, 77, 88, 89, 108, 148, 200, 203, 210, 214, 215, 232, 233, 252, 302, 617, 624, 627, 647, 654, 657], "digraph": [63, 135, 201, 287], "specifi": [64, 73, 88, 108, 202, 210, 232, 252, 640, 676], "hshabl": [64, 202], "cloud": [66, 204], "pointcloud": [66, 204], "deprec": [68, 69, 70, 71, 205, 206, 207, 208, 676], "sinc": [68, 69, 70, 71, 205, 206, 207, 208], "version": [68, 69, 70, 71, 125, 205, 206, 207, 208, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670, 676, 680], "13": [68, 69, 70, 71, 205, 206, 207, 208], "edge_sampl": [68, 69, 205, 206], "instead": [68, 69, 70, 71, 140, 205, 206, 207, 208, 294, 676, 680], "node_sampl": [70, 71, 207, 208], "exclude_leav": [71, 208], "exclud": [71, 208], "leav": [71, 208], "one": [71, 79, 81, 208, 213, 218, 223, 344, 345, 346, 472, 473, 676, 679, 680], "verifi": [74, 75, 78, 79, 81, 82, 86, 87, 102, 211, 212, 217, 218, 223, 224, 229, 231, 246, 463], "taken": [74, 211], "account": [74, 211], "indic": [76, 136, 214, 288, 680], "index": [76, 77, 89, 148, 214, 215, 233, 302], "uv": [77, 148, 215, 302], "everi": [78, 127, 160, 217, 279, 344, 345], "them": [78, 217], "network_is_connect": [78, 217], "least": [79, 159, 213, 218, 477, 615], "check": [80, 83, 84, 85, 101, 107, 213, 221, 225, 226, 228, 245, 251, 676], "flag": [80, 83, 84, 160, 213, 216, 219, 220, 221, 222, 225, 226, 227, 230, 344, 345, 477, 676, 680], "leaf": [81, 223], "min_forc": [83, 92, 225, 236], "06": [83, 92, 225, 236, 344, 345, 477, 615], "larg": [83, 92, 225, 236], "enough": [83, 92, 225, 236], "minimum": [83, 92, 225, 236], "magnitud": [83, 92, 225, 236, 346], "consid": [83, 92, 225, 236], "packag": [85, 101, 228, 245], "drawn": [85, 101, 228, 245], "without": [85, 86, 101, 102, 228, 229, 245, 246, 681], "shown": [85, 101, 228, 245], "furthermor": [85, 101, 228, 245], "python": [85, 101, 228, 245, 678, 679, 680], "bind": [85, 101, 228, 245], "suit": [85, 101, 228, 245], "anaconda": [85, 101, 228, 245, 680], "org": [85, 101, 228, 245, 642, 643, 677], "conda": [85, 101, 228, 245], "forg": [85, 101, 228, 245, 680], "fase": [86, 102, 229, 246], "normal": [90, 103, 234, 247], "laplacian": [90, 103, 110, 234, 247, 254], "entri": [90, 103, 234, 247, 472, 473], "diagon": [90, 103, 234, 247], "l": [90, 103, 234, 247], "dot": [90, 103, 234, 247], "centroid": [90, 103, 110, 112, 127, 234, 247, 254, 256, 279], "therefor": [90, 103, 234, 247], "By": [90, 103, 234, 247], "sign": [90, 103, 234, 247, 331, 676], "dsiplac": [90, 103, 234, 247], "could": [90, 103, 234, 247], "more": [90, 103, 234, 247, 477, 615, 642, 676], "natur": [90, 103, 234, 247], "wai": [90, 103, 234, 247, 680], "ring": [93, 110, 237, 254], "compon": [106, 111, 250, 255, 408, 425, 442, 676, 680], "neighborhood": [110, 254], "load_vector": [111, 255], "match": [118, 119, 263, 264, 566, 617, 618, 647, 648, 669], "assign": [123, 130, 258, 270, 282, 663, 669, 676], "residu": [124, 274, 676], "as_str": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "hash": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "comparison": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "dure": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 640, 670], "control": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670, 679], "digest": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "hexadecim": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "rather": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "than": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670, 676], "byte": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "mesh": [125, 127, 277, 279, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 635, 638, 670], "v1": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "v2": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "vertex_attribut": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "vertex_sampl": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "v3": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "shortest": [126, 278], "lead": [126, 278], "kmax": [127, 279], "damp": [127, 279], "callback": [127, 279, 344, 345, 639], "callback_arg": [127, 279], "move": [127, 279, 477, 615, 679], "free": [127, 279, 676, 681], "maximum": [127, 279, 344, 345, 477, 615], "factor": [127, 279], "user": [127, 279, 642, 676, 680], "execut": [127, 279], "after": [127, 279], "pass": [127, 279, 680], "except": [127, 128, 150, 279, 280, 304, 317, 330, 343, 358, 374, 391, 407, 424, 441, 458, 482, 499, 516, 533, 549, 565, 581, 597, 614, 675], "split": [128, 280, 676], "insert": [128, 280], "posit": [128, 280, 344, 345, 346, 352, 392, 534, 550, 669, 676], "valueerror": [128, 280], "been": [130, 282, 680], "nativ": [131, 283, 313, 326, 339, 354, 370, 387, 403, 420, 437, 454, 478, 495, 512, 529, 545, 561, 577, 593, 610, 671, 679], "describ": [131, 283, 311, 313, 324, 326, 337, 339, 354, 370, 387, 403, 420, 437, 454, 478, 495, 512, 529, 545, 561, 577, 593, 610, 671], "pretti": [132, 133, 284, 285, 314, 315, 327, 328, 340, 341, 355, 356, 371, 372, 388, 389, 404, 405, 421, 422, 438, 439, 455, 456, 479, 480, 496, 497, 513, 514, 530, 531, 546, 547, 562, 563, 578, 579, 594, 595, 611, 612, 672, 673], "human": [132, 284, 314, 327, 340, 355, 371, 388, 404, 421, 438, 455, 479, 496, 513, 530, 546, 562, 578, 594, 611, 672], "readabl": [132, 284, 314, 327, 340, 355, 371, 388, 404, 421, 438, 455, 479, 496, 513, 530, 546, 562, 578, 594, 611, 672], "": [133, 149, 150, 285, 303, 304, 311, 315, 316, 317, 328, 329, 330, 337, 341, 342, 343, 356, 357, 358, 372, 373, 374, 389, 390, 391, 405, 406, 407, 422, 423, 424, 439, 440, 441, 456, 457, 458, 480, 481, 482, 497, 498, 499, 514, 515, 516, 531, 532, 533, 547, 548, 549, 563, 564, 565, 579, 580, 581, 595, 596, 597, 612, 613, 614, 673, 674, 675, 680], "newli": [135, 287], "write": [137, 289], "modifi": [139, 140, 147, 293, 294, 301, 459, 681], "copi": [140, 294, 681], "origin": [140, 160, 226, 273, 294, 483, 500, 517, 676], "unset": [141, 142, 295, 296], "implicitli": [141, 142, 295, 296], "back": [141, 142, 295, 296], "store": [141, 142, 295, 296], "attr_dict": [143, 144, 145, 146, 297, 298, 299, 300], "kwattr": [143, 144, 145, 146, 297, 298, 299, 300], "updat": [143, 144, 145, 146, 297, 298, 299, 300, 632, 641, 661, 676], "compil": [143, 144, 145, 146, 297, 298, 299, 300], "remain": [143, 144, 145, 146, 297, 298, 299, 300], "valid": [149, 150, 303, 304, 316, 317, 329, 330, 342, 343, 357, 358, 373, 374, 390, 391, 406, 407, 423, 424, 440, 441, 457, 458, 481, 482, 498, 499, 515, 516, 532, 533, 548, 549, 564, 565, 580, 581, 596, 597, 613, 614, 674, 675], "against": [149, 150, 303, 304, 316, 317, 329, 330, 342, 343, 344, 345, 357, 358, 373, 374, 390, 391, 406, 407, 423, 424, 440, 441, 457, 458, 481, 482, 498, 499, 515, 516, 532, 533, 548, 549, 558, 564, 565, 580, 581, 596, 597, 613, 614, 674, 675], "schemaerror": [149, 303, 316, 329, 342, 357, 373, 390, 406, 423, 440, 457, 481, 498, 515, 532, 548, 564, 580, 596, 613, 674], "jsonschema": [150, 304, 317, 330, 343, 358, 374, 391, 407, 424, 441, 458, 482, 499, 516, 533, 549, 565, 581, 597, 614, 675], "validationerror": [150, 304, 317, 330, 343, 358, 374, 391, 407, 424, 441, 458, 482, 499, 516, 533, 549, 565, 581, 597, 614, 675], "veri": 151, "mark": [156, 344, 345], "continu": [156, 680], "thei": [156, 676, 680], "aren": 156, "simultan": [158, 175, 291, 679], "process": [160, 477], "travers": 160, "begin": 160, "sequenc": [160, 186, 258, 275, 292], "characterist": 160, "append": 160, "unassign": 160, "part": [160, 680], "previou": 160, "recalcul": 160, "call": [160, 676, 680], "attach": [163, 165], "given": [186, 618, 648], "whether": [216, 219, 230, 681], "k": 258, "largest": 275, "extra": [311, 324, 337, 645, 676], "absolut": [331, 378, 379, 411, 412, 428, 429, 445, 446, 486, 487, 503, 504, 520, 521, 601, 602], "howev": [331, 679], "combinatori": [331, 677, 679], "preserv": 331, "todo": 331, "addexplicit": 331, "signatur": [331, 676], "constructor": 331, "run": [344, 345, 477, 615, 679, 680], "distanc": [344, 345, 366, 399, 541, 557, 573, 589], "threshold": [344, 345, 477, 615], "converg": [344, 345, 477, 615, 676], "compar": [344, 345, 558], "sum": [344, 345], "hit": [344, 345, 477, 615, 680], "befor": [344, 345, 680], "consum": [344, 345], "calcul": [344, 345, 378, 379, 411, 412, 428, 429, 445, 446, 468, 477, 486, 487, 503, 504, 520, 521, 601, 602, 676], "stop": [344, 345, 477, 615], "earli": [344, 345, 477, 615], "out": [344, 345, 680, 681], "oper": [344, 345, 679], "formdiagram": [344, 345, 477, 615, 616, 669], "weight": [359, 392, 534, 550, 566, 582], "floatconstraint": [359, 582, 676], "reach": [359, 582], "error": [366, 399, 541, 557, 573, 589, 676, 680], "squar": [366, 399, 477, 541, 557, 573, 589, 615], "differ": [366, 399, 477, 541, 557, 573, 589, 676, 679], "edgeparamet": [375, 598], "parametr": [377, 410, 427, 444, 485, 502, 519, 600, 676], "lower": [378, 411, 428, 445, 486, 503, 520, 601], "minu": [378, 411, 428, 445, 486, 503, 520, 601], "inf": [378, 379, 411, 412, 428, 429, 445, 446, 486, 487, 503, 504, 520, 521, 601, 602], "upper": [379, 412, 429, 446, 487, 504, 521, 602], "plu": [379, 412, 429, 446, 487, 504, 521, 602], "vectorconstraint": [392, 534, 550, 566, 676], "pull": [392, 534, 550], "rai": 392, "nodeparamet": [408, 425, 442, 483, 500, 517], "meet": [459, 679], "problem": [462, 463, 477, 615, 679, 680], "sane": 463, "mind": 463, "grad_f": 468, "step_siz": [468, 477], "gradient": [468, 477, 615, 676], "grad_func": 471, "paremet": 473, "care": 473, "keep": [473, 676, 680], "ckei": 474, "pkei": 475, "kappa": [477, 615, 676], "08": [477, 615], "constrain": [477, 615, 677, 679, 680], "local": [477, 615], "sequenti": [477, 615], "program": [477, 615, 680], "low": [477, 615], "storag": [477, 615], "broyden": [477, 615], "fletcher": [477, 615], "goldfarb": [477, 615], "shanno": [477, 615], "mma": [477, 615], "asymptot": [477, 615], "tnewton": [477, 615], "precondit": [477, 615], "truncat": [477, 615], "newton": [477, 615], "auglag": [477, 615], "augment": [477, 615], "lagrangian": [477, 615], "var": [477, 615, 676], "limit": [477, 615, 632, 661, 680, 681], "memori": [477, 615], "variabl": [477, 615], "metric": [477, 615], "nlopt": [477, 615, 676], "document": [477, 615, 676, 680, 681], "detail": [477, 615], "theoret": [477, 615], "underpin": [477, 615], "differenti": [477, 677, 679], "fd": 477, "finit": [477, 676], "norm": [477, 615], "8": [477, 615, 676], "step": [477, 680], "via": [477, 676, 679], "becom": 477, "activ": 477, "ignor": [477, 676], "cem": [477, 615, 676, 677, 678], "statist": 477, "through": [615, 680], "proxi": 615, "hyperspac": 615, "tunnel": 615, "final": [615, 680], "grad_norm": 615, "cummul": 615, "elaps": 615, "durat": [615, 640], "total": 615, "millisecond": 615, "statu": 615, "item": [616, 617, 618, 631, 635, 636, 638, 646, 647, 648, 660], "networkartist": [616, 646], "artist": [616, 617, 618, 631, 635, 646, 647, 648, 660, 676], "draw": [616, 623, 624, 625, 626, 627, 628, 629, 635, 646, 653, 654, 655, 656, 657, 658, 676], "form_diagram": 616, "collect": [617, 618, 623, 647, 648, 653, 680], "relev": [617, 618, 647, 648], "see": [617, 618, 642, 643, 647, 648], "accord": [617, 647], "item_artist": [617, 647], "regist": [617, 642, 647], "artist_typ": [618, 631, 648, 660], "clear": [620, 621, 650, 651], "canva": [620, 621, 650, 651, 680], "label": [622, 624, 627, 652, 654, 657], "entir": [623, 653], "text": [624, 627, 654, 657], "select": [624, 627, 654, 657], "act": 626, "view": [630, 633, 645, 659, 662], "item_typ": [631, 660], "context": [631, 660], "blender": [631, 660, 679], "visual": [631, 632, 660, 661, 680], "corner": [633, 662], "box": [633, 645, 662], "thin": 634, "wrapper": 634, "compas_plott": 634, "api": [634, 642, 643, 679], "union": [635, 638], "primit": [635, 638], "plotterartist": [635, 636, 638], "paus": [637, 641], "interv": [639, 640], "frame": [639, 676, 679], "record": 639, "dpi": 639, "150": 639, "decor": 639, "dynam": 639, "amount": 641, "listen": 642, "pick": 642, "event": [642, 681], "handler": 642, "doc": 642, "mpl_connect": 642, "handl": 642, "matplotlib": [642, 643], "backend_bases_api": 642, "backend_bas": 642, "figurecanvasbas": 642, "event_handl": 642, "full": [643, 676], "overview": 643, "configur": 643, "pyplot_api": 643, "pyplot": 643, "savefig": 643, "zoom": 645, "topology_diagram": 646, "inscrib": 656, "circl": 656, "node_support": 663, "notabl": 676, "project": [676, 677], "adher": 676, "semant": 676, "color": 676, "enabl": [676, 679], "explicit": 676, "ghpython": [676, 680], "formartist": 676, "topologyartist": 676, "prevent": 676, "nan": 676, "equilibrium_state_numpi": 676, "mise": 676, "solve_proxi": 676, "constrainedformfind": 676, "gh": [676, 680], "treshold": 676, "implement": 676, "is_edge_support": 676, "folder": 676, "prefix": 676, "compascem": 676, "renam": 676, "solve_nlopt": 676, "refactor": 676, "intersect": 676, "static_equilibrium_numpi": 676, "bug": 676, "equilibrium_st": 676, "undefin": 676, "solve_nlopt_proxi": 676, "diagramobject": 676, "topologydiagramobject": 676, "formdiagramobject": 676, "proxyserv": 676, "acceler": 676, "__str__": 676, "nlopt_statu": 676, "better": 676, "interpret": 676, "registr": 676, "creation": 676, "caus": 676, "old": 676, "compas_rhino": [676, 680], "rhinoplan": 676, "from_geometri": 676, "from_rhino_point_and_vector": 676, "from_rhino_point": 676, "from_rhino_lin": 676, "ghdata": 676, "jenssen": 676, "tube": 676, "is_node_support": 676, "search": 676, "plugin": [676, 679], "global": [676, 679], "dark": 676, "blue": 676, "grai": 676, "mechan": 676, "compli": 676, "topologyplott": 676, "formplott": 676, "serializ": 676, "pin": 676, "depend": [676, 679, 680], "due": 676, "networkplott": 676, "green": 676, "light": 676, "assembl": 676, "ghplugin": 676, "wrap": 676, "edgesearch": 676, "drop": [676, 680], "ld": 676, "subscript": 676, "skip": 676, "assembletopologydiagram": 676, "draw_arrow": 676, "_draw_load": 676, "_draw_load_arrow": 676, "arrow": 676, "export": 676, "draw_trail": 676, "topologyartistcompon": 676, "number_of_trail_edg": 676, "number_of_deviation_edg": 676, "__repr__": 676, "edge_kei": 676, "node_kei": 676, "replac": [676, 680], "noderesult": 676, "wit": 676, "supportnoderesult": 676, "merg": [676, 681], "access": 676, "gradient_norm": 676, "expos": 676, "hard": 676, "code": [676, 677, 679, 680], "ghcompon": 676, "to_compa": 676, "planeconstraint": 676, "formfind": 676, "eps_min": 676, "draw_seg": 676, "scheme": 676, "draw_edg": 676, "tight": 676, "autoscal": 676, "save": 676, "overcrop": 676, "imag": 676, "custom": 676, "form_plotter_proxi": 676, "topology_plotter_proxi": 676, "polygon": 676, "took": 676, "temporari": 676, "patch": 676, "deviationedgelengthconstraint": 676, "autograd": 676, "is_auxiliary_trail_edg": 676, "filter": 676, "number_of_auxiliary_trail": 676, "properti": 676, "auxiliary_trail_vector": 676, "under": 676, "anyth": 676, "longer": [676, 680], "reflect": 676, "immut": 676, "children": 676, "penalti": 676, "nodemixin": 676, "node_xyz": 676, "rhino_instal": 676, "streamlin": 676, "symlink": 676, "src": 676, "ghuser": [676, 680], "gitignor": 676, "uninstal": [676, 680], "tag": 676, "regex": 676, "bumpvers": 676, "cfg": 676, "md": 676, "rst": 676, "research": 677, "pleas": [677, 680], "our": [677, 679, 680], "paper": 677, "preprint": 677, "misc": 677, "pastrana_constrainedformfinding_2021": 677, "titl": 677, "pastrana": [677, 679, 681], "rafael": [677, 679, 681], "ohlbrock": [677, 679], "patrick": 677, "ol": [677, 679], "acunto": [677, 679], "pierluigi": [677, 679], "parascho": [677, 679], "stefana": [677, 679], "year": 677, "2021": [677, 681], "arxiv": 677, "ab": 677, "2111": 677, "02607": 677, "eprint": 677, "archiveprefix": 677, "And": 677, "repositori": 677, "softwar": [677, 679, 681], "model": [677, 679, 680], "framework": [677, 679], "doi": 677, "5281": 677, "zenodo": 677, "5705740": 677, "arpastrana": 677, "github": 677, "io": 677, "_cem": 677, "arpj": 677, "princeton": [677, 679], "arch": 677, "ethz": 677, "ch": 677, "oleohlbrock": 677, "pierluigidacunto": 677, "tum": 677, "de": 677, "edu": 677, "stefanaparascho": 677, "excit": 678, "mai": [678, 680], "help": 678, "approach": 679, "spatial": 679, "bar": 679, "subject": [679, 681], "combin": 679, "design": 679, "encapsul": 679, "open": 679, "tool": [679, 680], "formul": 679, "solut": 679, "plain": 679, "mix": 679, "explor": 679, "wider": 679, "spectrum": 679, "typologi": 679, "space": 679, "go": [679, 680], "beyond": 679, "convent": 679, "catalog": 679, "shell": 679, "cabl": 679, "effici": 679, "priori": 679, "best": 679, "fit": [679, 681], "shape": 679, "restrain": 679, "usabl": 679, "across": 679, "system": 679, "window": [679, 680], "maco": [679, 680], "linux": [679, 680], "perhap": 679, "dai": [679, 680], "also": 679, "metavers": 679, "cad": 679, "work": [679, 680], "necessari": 679, "interfac": 679, "seamlessli": 679, "insid": 679, "popular": 679, "environ": 679, "As": [679, 680], "extens": [679, 680], "offer": 679, "integr": 679, "exchang": 679, "ecosystem": 679, "those": [679, 680], "slider": 679, "person": [679, 681], "worri": 679, "ship": 679, "too": 679, "precook": 679, "readili": 679, "engin": [679, 680], "your": 679, "spaghetti": 679, "pipelin": 679, "develop": 679, "endors": 679, "introduct": 679, "changelog": 679, "cite": 679, "licens": 679, "four": 680, "we": 680, "have": 680, "machin": 680, "command": 680, "prompt": 680, "termin": 680, "chose": 680, "spacecowboi": 680, "prefer": 680, "bubbl": 680, "isol": 680, "In": 680, "word": 680, "what": 680, "happen": 680, "stai": 680, "requir": 680, "recommend": 680, "consult": 680, "encount": 680, "being": 680, "abl": 680, "microsoft": 680, "miss": 680, "fail": 680, "saniti": 680, "known": 680, "issu": 680, "page": 680, "instruct": 680, "how": 680, "liner": 680, "To": 680, "everyth": 680, "enter": 680, "celebr": 680, "There": 680, "complex": 680, "easier": 680, "do": [680, 681], "few": 680, "mous": 680, "click": 680, "hundr": 680, "bit": 680, "familiar": 680, "addition": 680, "close": 680, "three": 680, "sure": 680, "proceed": 680, "case": 680, "older": 680, "m": 680, "compani": 680, "let": 680, "compas_ghpython": 680, "were": 680, "wonder": 680, "launch": 680, "onto": 680, "send": 680, "pictur": 680, "onc": 680, "forget": 680, "who": 680, "don": 680, "know": 680, "consequ": 680, "alreadi": 680, "NOT": [680, 681], "past": 680, "latest": 680, "upgrad": 680, "altern": 680, "switch": 680, "had": 680, "mit": 681, "copyright": 681, "2020": 681, "permiss": 681, "herebi": 681, "grant": 681, "charg": 681, "obtain": 681, "associ": 681, "deal": 681, "restrict": 681, "right": 681, "publish": 681, "distribut": 681, "sublicens": 681, "sell": 681, "permit": 681, "whom": 681, "furnish": 681, "so": 681, "abov": 681, "notic": 681, "shall": 681, "substanti": 681, "portion": 681, "THE": 681, "AS": 681, "warranti": 681, "OF": 681, "kind": 681, "express": 681, "OR": 681, "impli": 681, "BUT": 681, "TO": 681, "merchant": 681, "FOR": 681, "particular": 681, "purpos": 681, "AND": 681, "noninfring": 681, "NO": 681, "author": 681, "holder": 681, "BE": 681, "liabl": 681, "claim": 681, "damag": 681, "liabil": 681, "action": 681, "contract": 681, "tort": 681, "aris": 681, "WITH": 681}, "objects": {"": [[13, 0, 0, "-", "compas_cem"]], "compas_cem": [[14, 0, 0, "-", "diagrams"], [15, 0, 0, "-", "elements"], [16, 0, 0, "-", "equilibrium"], [17, 0, 0, "-", "loads"], [18, 0, 0, "-", "optimization"], [19, 0, 0, "-", "plotters"], [20, 0, 0, "-", "supports"], [21, 0, 0, "-", "viewers"]], "compas_cem.diagrams": [[22, 1, 1, "", "FormDiagram"], [151, 1, 1, "", "TopologyDiagram"]], "compas_cem.diagrams.FormDiagram": [[23, 2, 1, "", "ToString"], [24, 2, 1, "", "add_edge"], [25, 2, 1, "", "add_node"], [26, 2, 1, "", "adjacency_matrix"], [27, 2, 1, "", "clear"], [28, 2, 1, "", "complement"], [29, 2, 1, "", "connected_edges"], [30, 2, 1, "", "connectivity_matrix"], [31, 2, 1, "", "copy"], [32, 2, 1, "", "count_crossings"], [33, 2, 1, "", "degree"], [34, 2, 1, "", "degree_in"], [35, 2, 1, "", "degree_matrix"], [36, 2, 1, "", "degree_out"], [37, 2, 1, "", "delete_edge"], [38, 2, 1, "", "delete_node"], [39, 2, 1, "", "edge_attribute"], [40, 2, 1, "", "edge_attributes"], [41, 2, 1, "", "edge_coordinates"], [42, 2, 1, "", "edge_direction"], [43, 2, 1, "", "edge_force"], [44, 2, 1, "", "edge_length"], [45, 2, 1, "", "edge_length_2"], [46, 2, 1, "", "edge_midpoint"], [47, 2, 1, "", "edge_point"], [48, 2, 1, "", "edge_sample"], [49, 2, 1, "", "edge_vector"], [50, 2, 1, "", "edges"], [51, 2, 1, "", "edges_attribute"], [52, 2, 1, "", "edges_attributes"], [53, 2, 1, "", "edges_where"], [54, 2, 1, "", "edges_where_predicate"], [55, 2, 1, "", "embed_in_plane"], [56, 2, 1, "", "find_crossings"], [57, 2, 1, "", "find_cycles"], [58, 2, 1, "", "from_data"], [59, 2, 1, "", "from_edges"], [60, 2, 1, "", "from_json"], [61, 2, 1, "", "from_jsonstring"], [62, 2, 1, "", "from_lines"], [63, 2, 1, "", "from_networkx"], [64, 2, 1, "", "from_nodes_and_edges"], [65, 2, 1, "", "from_obj"], [66, 2, 1, "", "from_pointcloud"], [67, 2, 1, "", "from_topology_diagram"], [68, 2, 1, "", "get_any_edge"], [69, 2, 1, "", "get_any_edges"], [70, 2, 1, "", "get_any_node"], [71, 2, 1, "", "get_any_nodes"], [72, 2, 1, "", "gkey"], [73, 2, 1, "", "gkey_key"], [74, 2, 1, "", "has_edge"], [75, 2, 1, "", "has_node"], [76, 2, 1, "", "index_key"], [77, 2, 1, "", "index_uv"], [78, 2, 1, "", "is_connected"], [79, 2, 1, "", "is_crossed"], [80, 2, 1, "", "is_edge_supported"], [81, 2, 1, "", "is_leaf"], [82, 2, 1, "", "is_node_connected"], [83, 2, 1, "", "is_node_loaded"], [84, 2, 1, "", "is_node_support"], [85, 2, 1, "", "is_planar"], [86, 2, 1, "", "is_planar_embedding"], [87, 2, 1, "", "is_xy"], [88, 2, 1, "", "key_gkey"], [89, 2, 1, "", "key_index"], [90, 2, 1, "", "laplacian_matrix"], [91, 2, 1, "", "leaves"], [92, 2, 1, "", "loaded_nodes"], [93, 2, 1, "", "neighborhood"], [94, 2, 1, "", "neighbors"], [95, 2, 1, "", "neighbors_in"], [96, 2, 1, "", "neighbors_out"], [97, 2, 1, "", "network_adjacency_matrix"], [98, 2, 1, "", "network_connectivity_matrix"], [99, 2, 1, "", "network_degree_matrix"], [100, 2, 1, "", "network_embed_in_plane"], [101, 2, 1, "", "network_is_planar"], [102, 2, 1, "", "network_is_planar_embedding"], [103, 2, 1, "", "network_laplacian_matrix"], [104, 2, 1, "", "node_attribute"], [105, 2, 1, "", "node_attributes"], [106, 2, 1, "", "node_coordinates"], [107, 2, 1, "", "node_exists"], [108, 2, 1, "", "node_gkey"], [109, 2, 1, "", "node_key"], [110, 2, 1, "", "node_laplacian"], [111, 2, 1, "", "node_load"], [112, 2, 1, "", "node_neighborhood_centroid"], [113, 2, 1, "", "node_sample"], [114, 2, 1, "", "node_xyz"], [115, 2, 1, "", "nodes"], [116, 2, 1, "", "nodes_attribute"], [117, 2, 1, "", "nodes_attributes"], [118, 2, 1, "", "nodes_where"], [119, 2, 1, "", "nodes_where_predicate"], [120, 2, 1, "", "number_of_edges"], [121, 2, 1, "", "number_of_loaded_nodes"], [122, 2, 1, "", "number_of_nodes"], [123, 2, 1, "", "number_of_support_nodes"], [124, 2, 1, "", "reaction_force"], [125, 2, 1, "", "sha256"], [126, 2, 1, "", "shortest_path"], [127, 2, 1, "", "smooth"], [128, 2, 1, "", "split_edge"], [129, 2, 1, "", "summary"], [130, 2, 1, "", "support_nodes"], [131, 2, 1, "", "to_data"], [132, 2, 1, "", "to_json"], [133, 2, 1, "", "to_jsonstring"], [134, 2, 1, "", "to_lines"], [135, 2, 1, "", "to_networkx"], [136, 2, 1, "", "to_nodes_and_edges"], [137, 2, 1, "", "to_obj"], [138, 2, 1, "", "to_points"], [139, 2, 1, "", "transform"], [140, 2, 1, "", "transformed"], [141, 2, 1, "", "unset_edge_attribute"], [142, 2, 1, "", "unset_node_attribute"], [143, 2, 1, "", "update_dea"], [144, 2, 1, "", "update_default_edge_attributes"], [145, 2, 1, "", "update_default_node_attributes"], [146, 2, 1, "", "update_dna"], [147, 2, 1, "", "update_node_xyz"], [148, 2, 1, "", "uv_index"], [149, 2, 1, "", "validate_data"], [150, 2, 1, "", "validate_json"]], "compas_cem.diagrams.TopologyDiagram": [[152, 2, 1, "", "ToString"], [153, 2, 1, "", "add_edge"], [154, 2, 1, "", "add_load"], [155, 2, 1, "", "add_node"], [156, 2, 1, "", "add_support"], [157, 2, 1, "", "adjacency_matrix"], [158, 2, 1, "", "auxiliary_trail_edges"], [159, 2, 1, "", "auxiliary_trails"], [160, 2, 1, "", "build_trails"], [161, 2, 1, "", "clear"], [162, 2, 1, "", "complement"], [163, 2, 1, "", "connected_deviation_edges"], [164, 2, 1, "", "connected_edges"], [165, 2, 1, "", "connected_trail_edges"], [166, 2, 1, "", "connectivity_matrix"], [167, 2, 1, "", "copy"], [168, 2, 1, "", "count_crossings"], [169, 2, 1, "", "degree"], [170, 2, 1, "", "degree_in"], [171, 2, 1, "", "degree_matrix"], [172, 2, 1, "", "degree_out"], [173, 2, 1, "", "delete_edge"], [174, 2, 1, "", "delete_node"], [175, 2, 1, "", "deviation_edges"], [176, 2, 1, "", "edge_attribute"], [177, 2, 1, "", "edge_attributes"], [178, 2, 1, "", "edge_coordinates"], [179, 2, 1, "", "edge_direction"], [180, 2, 1, "", "edge_force"], [181, 2, 1, "", "edge_length"], [182, 2, 1, "", "edge_length_2"], [183, 2, 1, "", "edge_midpoint"], [184, 2, 1, "", "edge_point"], [185, 2, 1, "", "edge_sample"], [186, 2, 1, "", "edge_sequence"], [187, 2, 1, "", "edge_vector"], [188, 2, 1, "", "edges"], [189, 2, 1, "", "edges_attribute"], [190, 2, 1, "", "edges_attributes"], [191, 2, 1, "", "edges_where"], [192, 2, 1, "", "edges_where_predicate"], [193, 2, 1, "", "embed_in_plane"], [194, 2, 1, "", "find_crossings"], [195, 2, 1, "", "find_cycles"], [196, 2, 1, "", "from_data"], [197, 2, 1, "", "from_edges"], [198, 2, 1, "", "from_json"], [199, 2, 1, "", "from_jsonstring"], [200, 2, 1, "", "from_lines"], [201, 2, 1, "", "from_networkx"], [202, 2, 1, "", "from_nodes_and_edges"], [203, 2, 1, "", "from_obj"], [204, 2, 1, "", "from_pointcloud"], [205, 2, 1, "", "get_any_edge"], [206, 2, 1, "", "get_any_edges"], [207, 2, 1, "", "get_any_node"], [208, 2, 1, "", "get_any_nodes"], [209, 2, 1, "", "gkey"], [210, 2, 1, "", "gkey_key"], [211, 2, 1, "", "has_edge"], [212, 2, 1, "", "has_node"], [213, 2, 1, "", "has_trails"], [214, 2, 1, "", "index_key"], [215, 2, 1, "", "index_uv"], [216, 2, 1, "", "is_auxiliary_trail_edge"], [217, 2, 1, "", "is_connected"], [218, 2, 1, "", "is_crossed"], [219, 2, 1, "", "is_deviation_edge"], [220, 2, 1, "", "is_direct_deviation_edge"], [221, 2, 1, "", "is_edge_supported"], [222, 2, 1, "", "is_indirect_deviation_edge"], [223, 2, 1, "", "is_leaf"], [224, 2, 1, "", "is_node_connected"], [225, 2, 1, "", "is_node_loaded"], [226, 2, 1, "", "is_node_origin"], [227, 2, 1, "", "is_node_support"], [228, 2, 1, "", "is_planar"], [229, 2, 1, "", "is_planar_embedding"], [230, 2, 1, "", "is_trail_edge"], [231, 2, 1, "", "is_xy"], [232, 2, 1, "", "key_gkey"], [233, 2, 1, "", "key_index"], [234, 2, 1, "", "laplacian_matrix"], [235, 2, 1, "", "leaves"], [236, 2, 1, "", "loaded_nodes"], [237, 2, 1, "", "neighborhood"], [238, 2, 1, "", "neighbors"], [239, 2, 1, "", "neighbors_in"], [240, 2, 1, "", "neighbors_out"], [241, 2, 1, "", "network_adjacency_matrix"], [242, 2, 1, "", "network_connectivity_matrix"], [243, 2, 1, "", "network_degree_matrix"], [244, 2, 1, "", "network_embed_in_plane"], [245, 2, 1, "", "network_is_planar"], [246, 2, 1, "", "network_is_planar_embedding"], [247, 2, 1, "", "network_laplacian_matrix"], [248, 2, 1, "", "node_attribute"], [249, 2, 1, "", "node_attributes"], [250, 2, 1, "", "node_coordinates"], [251, 2, 1, "", "node_exists"], [252, 2, 1, "", "node_gkey"], [253, 2, 1, "", "node_key"], [254, 2, 1, "", "node_laplacian"], [255, 2, 1, "", "node_load"], [256, 2, 1, "", "node_neighborhood_centroid"], [257, 2, 1, "", "node_sample"], [258, 2, 1, "", "node_sequence"], [259, 2, 1, "", "node_xyz"], [260, 2, 1, "", "nodes"], [261, 2, 1, "", "nodes_attribute"], [262, 2, 1, "", "nodes_attributes"], [263, 2, 1, "", "nodes_where"], [264, 2, 1, "", "nodes_where_predicate"], [265, 2, 1, "", "number_of_auxiliary_trails"], [266, 2, 1, "", "number_of_deviation_edges"], [267, 2, 1, "", "number_of_edges"], [268, 2, 1, "", "number_of_loaded_nodes"], [269, 2, 1, "", "number_of_nodes"], [270, 2, 1, "", "number_of_support_nodes"], [271, 2, 1, "", "number_of_trail_edges"], [272, 2, 1, "", "number_of_trails"], [273, 2, 1, "", "origin_nodes"], [274, 2, 1, "", "reaction_force"], [275, 2, 1, "", "sequence_max"], [276, 2, 1, "", "sequences"], [277, 2, 1, "", "sha256"], [278, 2, 1, "", "shortest_path"], [279, 2, 1, "", "smooth"], [280, 2, 1, "", "split_edge"], [281, 2, 1, "", "summary"], [282, 2, 1, "", "support_nodes"], [283, 2, 1, "", "to_data"], [284, 2, 1, "", "to_json"], [285, 2, 1, "", "to_jsonstring"], [286, 2, 1, "", "to_lines"], [287, 2, 1, "", "to_networkx"], [288, 2, 1, "", "to_nodes_and_edges"], [289, 2, 1, "", "to_obj"], [290, 2, 1, "", "to_points"], [291, 2, 1, "", "trail_edges"], [292, 2, 1, "", "trails"], [293, 2, 1, "", "transform"], [294, 2, 1, "", "transformed"], [295, 2, 1, "", "unset_edge_attribute"], [296, 2, 1, "", "unset_node_attribute"], [297, 2, 1, "", "update_dea"], [298, 2, 1, "", "update_default_edge_attributes"], [299, 2, 1, "", "update_default_node_attributes"], [300, 2, 1, "", "update_dna"], [301, 2, 1, "", "update_node_xyz"], [302, 2, 1, "", "uv_index"], [303, 2, 1, "", "validate_data"], [304, 2, 1, "", "validate_json"]], "compas_cem.elements": [[305, 1, 1, "", "DeviationEdge"], [318, 1, 1, "", "Node"], [331, 1, 1, "", "TrailEdge"]], "compas_cem.elements.DeviationEdge": [[306, 2, 1, "", "ToString"], [307, 2, 1, "", "copy"], [308, 2, 1, "", "from_data"], [309, 2, 1, "", "from_json"], [310, 2, 1, "", "from_jsonstring"], [311, 2, 1, "", "from_line"], [312, 2, 1, "", "sha256"], [313, 2, 1, "", "to_data"], [314, 2, 1, "", "to_json"], [315, 2, 1, "", "to_jsonstring"], [316, 2, 1, "", "validate_data"], [317, 2, 1, "", "validate_json"]], "compas_cem.elements.Node": [[319, 2, 1, "", "ToString"], [320, 2, 1, "", "copy"], [321, 2, 1, "", "from_data"], [322, 2, 1, "", "from_json"], [323, 2, 1, "", "from_jsonstring"], [324, 2, 1, "", "from_point"], [325, 2, 1, "", "sha256"], [326, 2, 1, "", "to_data"], [327, 2, 1, "", "to_json"], [328, 2, 1, "", "to_jsonstring"], [329, 2, 1, "", "validate_data"], [330, 2, 1, "", "validate_json"]], "compas_cem.elements.TrailEdge": [[332, 2, 1, "", "ToString"], [333, 2, 1, "", "copy"], [334, 2, 1, "", "from_data"], [335, 2, 1, "", "from_json"], [336, 2, 1, "", "from_jsonstring"], [337, 2, 1, "", "from_line"], [338, 2, 1, "", "sha256"], [339, 2, 1, "", "to_data"], [340, 2, 1, "", "to_json"], [341, 2, 1, "", "to_jsonstring"], [342, 2, 1, "", "validate_data"], [343, 2, 1, "", "validate_json"]], "compas_cem.equilibrium": [[344, 3, 1, "", "static_equilibrium"], [345, 3, 1, "", "static_equilibrium_numpy"]], "compas_cem.loads": [[346, 1, 1, "", "NodeLoad"]], "compas_cem.loads.NodeLoad": [[347, 2, 1, "", "ToString"], [348, 2, 1, "", "copy"], [349, 2, 1, "", "from_data"], [350, 2, 1, "", "from_json"], [351, 2, 1, "", "from_jsonstring"], [352, 2, 1, "", "from_point_and_vector"], [353, 2, 1, "", "sha256"], [354, 2, 1, "", "to_data"], [355, 2, 1, "", "to_json"], [356, 2, 1, "", "to_jsonstring"], [357, 2, 1, "", "validate_data"], [358, 2, 1, "", "validate_json"]], "compas_cem.optimization": [[359, 1, 1, "", "DeviationEdgeLengthConstraint"], [375, 1, 1, "", "DeviationEdgeParameter"], [392, 1, 1, "", "LineConstraint"], [408, 1, 1, "", "NodeLoadXParameter"], [425, 1, 1, "", "NodeLoadYParameter"], [442, 1, 1, "", "NodeLoadZParameter"], [459, 1, 1, "", "Optimizer"], [483, 1, 1, "", "OriginNodeXParameter"], [500, 1, 1, "", "OriginNodeYParameter"], [517, 1, 1, "", "OriginNodeZParameter"], [534, 1, 1, "", "PlaneConstraint"], [550, 1, 1, "", "PointConstraint"], [566, 1, 1, "", "ReactionForceConstraint"], [582, 1, 1, "", "TrailEdgeForceConstraint"], [598, 1, 1, "", "TrailEdgeParameter"], [615, 3, 1, "", "solve_proxy"]], "compas_cem.optimization.DeviationEdgeLengthConstraint": [[360, 2, 1, "", "ToString"], [361, 2, 1, "", "copy"], [362, 2, 1, "", "from_data"], [363, 2, 1, "", "from_json"], [364, 2, 1, "", "from_jsonstring"], [365, 2, 1, "", "key"], [366, 2, 1, "", "penalty"], [367, 2, 1, "", "reference"], [368, 2, 1, "", "sha256"], [369, 2, 1, "", "target"], [370, 2, 1, "", "to_data"], [371, 2, 1, "", "to_json"], [372, 2, 1, "", "to_jsonstring"], [373, 2, 1, "", "validate_data"], [374, 2, 1, "", "validate_json"]], "compas_cem.optimization.DeviationEdgeParameter": [[376, 2, 1, "", "ToString"], [377, 2, 1, "", "attr_name"], [378, 2, 1, "", "bound_low"], [379, 2, 1, "", "bound_up"], [380, 2, 1, "", "copy"], [381, 2, 1, "", "from_data"], [382, 2, 1, "", "from_json"], [383, 2, 1, "", "from_jsonstring"], [384, 2, 1, "", "key"], [385, 2, 1, "", "sha256"], [386, 2, 1, "", "start_value"], [387, 2, 1, "", "to_data"], [388, 2, 1, "", "to_json"], [389, 2, 1, "", "to_jsonstring"], [390, 2, 1, "", "validate_data"], [391, 2, 1, "", "validate_json"]], "compas_cem.optimization.LineConstraint": [[393, 2, 1, "", "ToString"], [394, 2, 1, "", "copy"], [395, 2, 1, "", "from_data"], [396, 2, 1, "", "from_json"], [397, 2, 1, "", "from_jsonstring"], [398, 2, 1, "", "key"], [399, 2, 1, "", "penalty"], [400, 2, 1, "", "reference"], [401, 2, 1, "", "sha256"], [402, 2, 1, "", "target"], [403, 2, 1, "", "to_data"], [404, 2, 1, "", "to_json"], [405, 2, 1, "", "to_jsonstring"], [406, 2, 1, "", "validate_data"], [407, 2, 1, "", "validate_json"]], "compas_cem.optimization.NodeLoadXParameter": [[409, 2, 1, "", "ToString"], [410, 2, 1, "", "attr_name"], [411, 2, 1, "", "bound_low"], [412, 2, 1, "", "bound_up"], [413, 2, 1, "", "copy"], [414, 2, 1, "", "from_data"], [415, 2, 1, "", "from_json"], [416, 2, 1, "", "from_jsonstring"], [417, 2, 1, "", "key"], [418, 2, 1, "", "sha256"], [419, 2, 1, "", "start_value"], [420, 2, 1, "", "to_data"], [421, 2, 1, "", "to_json"], [422, 2, 1, "", "to_jsonstring"], [423, 2, 1, "", "validate_data"], [424, 2, 1, "", "validate_json"]], "compas_cem.optimization.NodeLoadYParameter": [[426, 2, 1, "", "ToString"], [427, 2, 1, "", "attr_name"], [428, 2, 1, "", "bound_low"], [429, 2, 1, "", "bound_up"], [430, 2, 1, "", "copy"], [431, 2, 1, "", "from_data"], [432, 2, 1, "", "from_json"], [433, 2, 1, "", "from_jsonstring"], [434, 2, 1, "", "key"], [435, 2, 1, "", "sha256"], [436, 2, 1, "", "start_value"], [437, 2, 1, "", "to_data"], [438, 2, 1, "", "to_json"], [439, 2, 1, "", "to_jsonstring"], [440, 2, 1, "", "validate_data"], [441, 2, 1, "", "validate_json"]], "compas_cem.optimization.NodeLoadZParameter": [[443, 2, 1, "", "ToString"], [444, 2, 1, "", "attr_name"], [445, 2, 1, "", "bound_low"], [446, 2, 1, "", "bound_up"], [447, 2, 1, "", "copy"], [448, 2, 1, "", "from_data"], [449, 2, 1, "", "from_json"], [450, 2, 1, "", "from_jsonstring"], [451, 2, 1, "", "key"], [452, 2, 1, "", "sha256"], [453, 2, 1, "", "start_value"], [454, 2, 1, "", "to_data"], [455, 2, 1, "", "to_json"], [456, 2, 1, "", "to_jsonstring"], [457, 2, 1, "", "validate_data"], [458, 2, 1, "", "validate_json"]], "compas_cem.optimization.Optimizer": [[460, 2, 1, "", "ToString"], [461, 2, 1, "", "add_constraint"], [462, 2, 1, "", "add_parameter"], [463, 2, 1, "", "check_optimization_sanity"], [464, 2, 1, "", "copy"], [465, 2, 1, "", "from_data"], [466, 2, 1, "", "from_json"], [467, 2, 1, "", "from_jsonstring"], [468, 2, 1, "", "gradient_func"], [469, 2, 1, "", "number_of_constraints"], [470, 2, 1, "", "number_of_parameters"], [471, 2, 1, "", "objective_func"], [472, 2, 1, "", "optimization_bounds"], [473, 2, 1, "", "optimization_parameters"], [474, 2, 1, "", "remove_constraint"], [475, 2, 1, "", "remove_parameter"], [476, 2, 1, "", "sha256"], [477, 2, 1, "", "solve"], [478, 2, 1, "", "to_data"], [479, 2, 1, "", "to_json"], [480, 2, 1, "", "to_jsonstring"], [481, 2, 1, "", "validate_data"], [482, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeXParameter": [[484, 2, 1, "", "ToString"], [485, 2, 1, "", "attr_name"], [486, 2, 1, "", "bound_low"], [487, 2, 1, "", "bound_up"], [488, 2, 1, "", "copy"], [489, 2, 1, "", "from_data"], [490, 2, 1, "", "from_json"], [491, 2, 1, "", "from_jsonstring"], [492, 2, 1, "", "key"], [493, 2, 1, "", "sha256"], [494, 2, 1, "", "start_value"], [495, 2, 1, "", "to_data"], [496, 2, 1, "", "to_json"], [497, 2, 1, "", "to_jsonstring"], [498, 2, 1, "", "validate_data"], [499, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeYParameter": [[501, 2, 1, "", "ToString"], [502, 2, 1, "", "attr_name"], [503, 2, 1, "", "bound_low"], [504, 2, 1, "", "bound_up"], [505, 2, 1, "", "copy"], [506, 2, 1, "", "from_data"], [507, 2, 1, "", "from_json"], [508, 2, 1, "", "from_jsonstring"], [509, 2, 1, "", "key"], [510, 2, 1, "", "sha256"], [511, 2, 1, "", "start_value"], [512, 2, 1, "", "to_data"], [513, 2, 1, "", "to_json"], [514, 2, 1, "", "to_jsonstring"], [515, 2, 1, "", "validate_data"], [516, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeZParameter": [[518, 2, 1, "", "ToString"], [519, 2, 1, "", "attr_name"], [520, 2, 1, "", "bound_low"], [521, 2, 1, "", "bound_up"], [522, 2, 1, "", "copy"], [523, 2, 1, "", "from_data"], [524, 2, 1, "", "from_json"], [525, 2, 1, "", "from_jsonstring"], [526, 2, 1, "", "key"], [527, 2, 1, "", "sha256"], [528, 2, 1, "", "start_value"], [529, 2, 1, "", "to_data"], [530, 2, 1, "", "to_json"], [531, 2, 1, "", "to_jsonstring"], [532, 2, 1, "", "validate_data"], [533, 2, 1, "", "validate_json"]], "compas_cem.optimization.PlaneConstraint": [[535, 2, 1, "", "ToString"], [536, 2, 1, "", "copy"], [537, 2, 1, "", "from_data"], [538, 2, 1, "", "from_json"], [539, 2, 1, "", "from_jsonstring"], [540, 2, 1, "", "key"], [541, 2, 1, "", "penalty"], [542, 2, 1, "", "reference"], [543, 2, 1, "", "sha256"], [544, 2, 1, "", "target"], [545, 2, 1, "", "to_data"], [546, 2, 1, "", "to_json"], [547, 2, 1, "", "to_jsonstring"], [548, 2, 1, "", "validate_data"], [549, 2, 1, "", "validate_json"]], "compas_cem.optimization.PointConstraint": [[551, 2, 1, "", "ToString"], [552, 2, 1, "", "copy"], [553, 2, 1, "", "from_data"], [554, 2, 1, "", "from_json"], [555, 2, 1, "", "from_jsonstring"], [556, 2, 1, "", "key"], [557, 2, 1, "", "penalty"], [558, 2, 1, "", "reference"], [559, 2, 1, "", "sha256"], [560, 2, 1, "", "target"], [561, 2, 1, "", "to_data"], [562, 2, 1, "", "to_json"], [563, 2, 1, "", "to_jsonstring"], [564, 2, 1, "", "validate_data"], [565, 2, 1, "", "validate_json"]], "compas_cem.optimization.ReactionForceConstraint": [[567, 2, 1, "", "ToString"], [568, 2, 1, "", "copy"], [569, 2, 1, "", "from_data"], [570, 2, 1, "", "from_json"], [571, 2, 1, "", "from_jsonstring"], [572, 2, 1, "", "key"], [573, 2, 1, "", "penalty"], [574, 2, 1, "", "reference"], [575, 2, 1, "", "sha256"], [576, 2, 1, "", "target"], [577, 2, 1, "", "to_data"], [578, 2, 1, "", "to_json"], [579, 2, 1, "", "to_jsonstring"], [580, 2, 1, "", "validate_data"], [581, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeForceConstraint": [[583, 2, 1, "", "ToString"], [584, 2, 1, "", "copy"], [585, 2, 1, "", "from_data"], [586, 2, 1, "", "from_json"], [587, 2, 1, "", "from_jsonstring"], [588, 2, 1, "", "key"], [589, 2, 1, "", "penalty"], [590, 2, 1, "", "reference"], [591, 2, 1, "", "sha256"], [592, 2, 1, "", "target"], [593, 2, 1, "", "to_data"], [594, 2, 1, "", "to_json"], [595, 2, 1, "", "to_jsonstring"], [596, 2, 1, "", "validate_data"], [597, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeParameter": [[599, 2, 1, "", "ToString"], [600, 2, 1, "", "attr_name"], [601, 2, 1, "", "bound_low"], [602, 2, 1, "", "bound_up"], [603, 2, 1, "", "copy"], [604, 2, 1, "", "from_data"], [605, 2, 1, "", "from_json"], [606, 2, 1, "", "from_jsonstring"], [607, 2, 1, "", "key"], [608, 2, 1, "", "sha256"], [609, 2, 1, "", "start_value"], [610, 2, 1, "", "to_data"], [611, 2, 1, "", "to_json"], [612, 2, 1, "", "to_jsonstring"], [613, 2, 1, "", "validate_data"], [614, 2, 1, "", "validate_json"]], "compas_cem.plotters": [[616, 1, 1, "", "FormArtist"], [634, 1, 1, "", "Plotter"], [646, 1, 1, "", "TopologyArtist"]], "compas_cem.plotters.FormArtist": [[617, 2, 1, "", "build"], [618, 2, 1, "", "build_as"], [619, 2, 1, "", "clear"], [620, 2, 1, "", "clear_edges"], [621, 2, 1, "", "clear_nodes"], [622, 2, 1, "", "draw"], [623, 2, 1, "", "draw_collection"], [624, 2, 1, "", "draw_edgelabels"], [625, 2, 1, "", "draw_edges"], [626, 2, 1, "", "draw_loads"], [627, 2, 1, "", "draw_nodelabels"], [628, 2, 1, "", "draw_nodes"], [629, 2, 1, "", "draw_reactions"], [630, 2, 1, "", "redraw"], [631, 2, 1, "", "register"], [632, 2, 1, "", "update_data"], [633, 2, 1, "", "viewbox"]], "compas_cem.plotters.Plotter": [[635, 2, 1, "", "add"], [636, 2, 1, "", "add_from_list"], [637, 2, 1, "", "draw"], [638, 2, 1, "", "find"], [639, 2, 1, "", "on"], [640, 2, 1, "", "pause"], [641, 2, 1, "", "redraw"], [642, 2, 1, "", "register_listener"], [643, 2, 1, "", "save"], [644, 2, 1, "", "show"], [645, 2, 1, "", "zoom_extents"]], "compas_cem.plotters.TopologyArtist": [[647, 2, 1, "", "build"], [648, 2, 1, "", "build_as"], [649, 2, 1, "", "clear"], [650, 2, 1, "", "clear_edges"], [651, 2, 1, "", "clear_nodes"], [652, 2, 1, "", "draw"], [653, 2, 1, "", "draw_collection"], [654, 2, 1, "", "draw_edgelabels"], [655, 2, 1, "", "draw_edges"], [656, 2, 1, "", "draw_loads"], [657, 2, 1, "", "draw_nodelabels"], [658, 2, 1, "", "draw_nodes"], [659, 2, 1, "", "redraw"], [660, 2, 1, "", "register"], [661, 2, 1, "", "update_data"], [662, 2, 1, "", "viewbox"]], "compas_cem.supports": [[663, 1, 1, "", "NodeSupport"]], "compas_cem.supports.NodeSupport": [[664, 2, 1, "", "ToString"], [665, 2, 1, "", "copy"], [666, 2, 1, "", "from_data"], [667, 2, 1, "", "from_json"], [668, 2, 1, "", "from_jsonstring"], [669, 2, 1, "", "from_point"], [670, 2, 1, "", "sha256"], [671, 2, 1, "", "to_data"], [672, 2, 1, "", "to_json"], [673, 2, 1, "", "to_jsonstring"], [674, 2, 1, "", "validate_data"], [675, 2, 1, "", "validate_json"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"python": 0, "01": 1, "simpl": 1, "compress": 1, "structur": [1, 4], "02": 2, "brace": 2, "tower": 2, "2d": [2, 3, 4, 7], "03": 3, "bridg": [3, 7, 8], "optim": [3, 18, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482], "04": 4, "tree": 4, "05": 5, "planar": 5, "tensegr": [5, 10], "wheel": 5, "grasshopp": [6, 680], "A": 7, "b": 8, "tubular": 8, "3d": 8, "c": 9, "circular": 9, "dome": 9, "d": 10, "jessen": 10, "e": 11, "spiral": 11, "staircas": 11, "api": 12, "refer": [12, 367, 400, 542, 558, 574, 590], "compas_cem": [13, 14, 15, 16, 17, 18, 19, 20, 21], "diagram": 14, "element": 15, "edg": [15, 50, 188], "node": [15, 115, 260, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "equilibrium": 16, "load": 17, "constraint": 18, "paramet": 18, "plotter": [19, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645], "artist": 19, "support": 20, "viewer": 21, "visual": 21, "object": 21, "formdiagram": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "tostr": [23, 152, 306, 319, 332, 347, 360, 376, 393, 409, 426, 443, 460, 484, 501, 518, 535, 551, 567, 583, 599, 664], "add_edg": [24, 153], "add_nod": [25, 155], "adjacency_matrix": [26, 157], "clear": [27, 161, 619, 649], "complement": [28, 162], "connected_edg": [29, 164], "connectivity_matrix": [30, 166], "copi": [31, 167, 307, 320, 333, 348, 361, 380, 394, 413, 430, 447, 464, 488, 505, 522, 536, 552, 568, 584, 603, 665], "count_cross": [32, 168], "degre": [33, 169], "degree_in": [34, 170], "degree_matrix": [35, 171], "degree_out": [36, 172], "delete_edg": [37, 173], "delete_nod": [38, 174], "edge_attribut": [39, 40, 176, 177], "edge_coordin": [41, 178], "edge_direct": [42, 179], "edge_forc": [43, 180], "edge_length": [44, 181], "edge_length_2": [45, 182], "edge_midpoint": [46, 183], "edge_point": [47, 184], "edge_sampl": [48, 185], "edge_vector": [49, 187], "edges_attribut": [51, 52, 189, 190], "edges_wher": [53, 191], "edges_where_pred": [54, 192], "embed_in_plan": [55, 193], "find_cross": [56, 194], "find_cycl": [57, 195], "from_data": [58, 196, 308, 321, 334, 349, 362, 381, 395, 414, 431, 448, 465, 489, 506, 523, 537, 553, 569, 585, 604, 666], "from_edg": [59, 197], "from_json": [60, 198, 309, 322, 335, 350, 363, 382, 396, 415, 432, 449, 466, 490, 507, 524, 538, 554, 570, 586, 605, 667], "from_jsonstr": [61, 199, 310, 323, 336, 351, 364, 383, 397, 416, 433, 450, 467, 491, 508, 525, 539, 555, 571, 587, 606, 668], "from_lin": [62, 200, 311, 337], "from_networkx": [63, 201], "from_nodes_and_edg": [64, 202], "from_obj": [65, 203], "from_pointcloud": [66, 204], "from_topology_diagram": 67, "get_any_edg": [68, 69, 205, 206], "get_any_nod": [70, 71, 207, 208], "gkei": [72, 209], "gkey_kei": [73, 210], "has_edg": [74, 211], "has_nod": [75, 212], "index_kei": [76, 214], "index_uv": [77, 215], "is_connect": [78, 217], "is_cross": [79, 218], "is_edge_support": [80, 221], "is_leaf": [81, 223], "is_node_connect": [82, 224], "is_node_load": [83, 225], "is_node_support": [84, 227], "is_planar": [85, 228], "is_planar_embed": [86, 229], "is_xi": [87, 231], "key_gkei": [88, 232], "key_index": [89, 233], "laplacian_matrix": [90, 234], "leav": [91, 235], "loaded_nod": [92, 236], "neighborhood": [93, 237], "neighbor": [94, 238], "neighbors_in": [95, 239], "neighbors_out": [96, 240], "network_adjacency_matrix": [97, 241], "network_connectivity_matrix": [98, 242], "network_degree_matrix": [99, 243], "network_embed_in_plan": [100, 244], "network_is_planar": [101, 245], "network_is_planar_embed": [102, 246], "network_laplacian_matrix": [103, 247], "node_attribut": [104, 105, 248, 249], "node_coordin": [106, 250], "node_exist": [107, 251], "node_gkei": [108, 252], "node_kei": [109, 253], "node_laplacian": [110, 254], "node_load": [111, 255], "node_neighborhood_centroid": [112, 256], "node_sampl": [113, 257], "node_xyz": [114, 259], "nodes_attribut": [116, 117, 261, 262], "nodes_wher": [118, 263], "nodes_where_pred": [119, 264], "number_of_edg": [120, 267], "number_of_loaded_nod": [121, 268], "number_of_nod": [122, 269], "number_of_support_nod": [123, 270], "reaction_forc": [124, 274], "sha256": [125, 277, 312, 325, 338, 353, 368, 385, 401, 418, 435, 452, 476, 493, 510, 527, 543, 559, 575, 591, 608, 670], "shortest_path": [126, 278], "smooth": [127, 279], "split_edg": [128, 280], "summari": [129, 281], "support_nod": [130, 282], "to_data": [131, 283, 313, 326, 339, 354, 370, 387, 403, 420, 437, 454, 478, 495, 512, 529, 545, 561, 577, 593, 610, 671], "to_json": [132, 284, 314, 327, 340, 355, 371, 388, 404, 421, 438, 455, 479, 496, 513, 530, 546, 562, 578, 594, 611, 672], "to_jsonstr": [133, 285, 315, 328, 341, 356, 372, 389, 405, 422, 439, 456, 480, 497, 514, 531, 547, 563, 579, 595, 612, 673], "to_lin": [134, 286], "to_networkx": [135, 287], "to_nodes_and_edg": [136, 288], "to_obj": [137, 289], "to_point": [138, 290], "transform": [139, 140, 293, 294], "unset_edge_attribut": [141, 295], "unset_node_attribut": [142, 296], "update_dea": [143, 297], "update_default_edge_attribut": [144, 298], "update_default_node_attribut": [145, 299], "update_dna": [146, 300], "update_node_xyz": [147, 301], "uv_index": [148, 302], "validate_data": [149, 303, 316, 329, 342, 357, 373, 390, 406, 423, 440, 457, 481, 498, 515, 532, 548, 564, 580, 596, 613, 674], "validate_json": [150, 304, 317, 330, 343, 358, 374, 391, 407, 424, 441, 458, 482, 499, 516, 533, 549, 565, 581, 597, 614, 675], "topologydiagram": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304], "add_load": 154, "add_support": 156, "auxiliary_trail_edg": 158, "auxiliary_trail": 159, "build_trail": 160, "connected_deviation_edg": 163, "connected_trail_edg": 165, "deviation_edg": 175, "edge_sequ": 186, "has_trail": 213, "is_auxiliary_trail_edg": 216, "is_deviation_edg": 219, "is_direct_deviation_edg": 220, "is_indirect_deviation_edg": 222, "is_node_origin": 226, "is_trail_edg": 230, "node_sequ": 258, "number_of_auxiliary_trail": 265, "number_of_deviation_edg": 266, "number_of_trail_edg": 271, "number_of_trail": 272, "origin_nod": 273, "sequence_max": 275, "sequenc": 276, "trail_edg": 291, "trail": 292, "deviationedg": [305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "from_point": [324, 669], "trailedg": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "static_equilibrium": 344, "static_equilibrium_numpi": 345, "nodeload": [346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358], "from_point_and_vector": 352, "deviationedgelengthconstraint": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374], "kei": [365, 384, 398, 417, 434, 451, 492, 509, 526, 540, 556, 572, 588, 607], "penalti": [366, 399, 541, 557, 573, 589], "target": [369, 402, 544, 560, 576, 592], "deviationedgeparamet": [375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391], "attr_nam": [377, 410, 427, 444, 485, 502, 519, 600], "bound_low": [378, 411, 428, 445, 486, 503, 520, 601], "bound_up": [379, 412, 429, 446, 487, 504, 521, 602], "start_valu": [386, 419, 436, 453, 494, 511, 528, 609], "lineconstraint": [392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "nodeloadxparamet": [408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424], "nodeloadyparamet": [425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441], "nodeloadzparamet": [442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "add_constraint": 461, "add_paramet": 462, "check_optimization_san": 463, "gradient_func": 468, "number_of_constraint": 469, "number_of_paramet": 470, "objective_func": 471, "optimization_bound": 472, "optimization_paramet": 473, "remove_constraint": 474, "remove_paramet": 475, "solv": 477, "originnodexparamet": [483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "originnodeyparamet": [500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516], "originnodezparamet": [517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "planeconstraint": [534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549], "pointconstraint": [550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565], "reactionforceconstraint": [566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581], "trailedgeforceconstraint": [582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597], "trailedgeparamet": [598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614], "solve_proxi": 615, "formartist": [616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633], "build": [617, 647], "build_a": [618, 648], "clear_edg": [620, 650], "clear_nod": [621, 651], "draw": [622, 637, 652], "draw_collect": [623, 653], "draw_edgelabel": [624, 654], "draw_edg": [625, 655], "draw_load": [626, 656], "draw_nodelabel": [627, 657], "draw_nod": [628, 658], "draw_react": 629, "redraw": [630, 641, 659], "regist": [631, 660], "update_data": [632, 661], "viewbox": [633, 662], "add": 635, "add_from_list": 636, "find": 638, "paus": 640, "register_listen": 642, "save": 643, "show": 644, "zoom_ext": 645, "topologyartist": [646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662], "nodesupport": [663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675], "changelog": 676, "unreleas": 676, "0": 676, "6": 676, "1": [676, 680], "5": 676, "4": [676, 680], "2": [676, 680], "15": 676, "14": 676, "13": 676, "12": 676, "11": 676, "9": 676, "3": [676, 680], "cite": 677, "author": 677, "exampl": 678, "compa": [679, 680], "cem": [679, 680], "main": 679, "featur": 679, "credit": 679, "tabl": 679, "content": 679, "instal": 680, "creat": 680, "virtual": 680, "environ": 680, "activ": 680, "via": 680, "conda": 680, "pip": 680, "plugin": 680, "remov": 680, "ani": 680, "leftov": 680, "link": 680, "check": 680, "your": 680, "updat": 680, "licens": 681}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})