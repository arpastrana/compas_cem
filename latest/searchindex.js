Search.setIndex({"docnames": ["_examples/01_python", "_examples/01_python/01", "_examples/01_python/02", "_examples/01_python/03", "_examples/01_python/04", "_examples/01_python/05", "_examples/02_ghpython", "_examples/02_ghpython/bridge_2d", "_examples/02_ghpython/bridge_3d", "_examples/02_ghpython/dome", "_examples/02_ghpython/jessen", "_examples/02_ghpython/spiral", "api", "api/compas_cem", "api/compas_cem.diagrams", "api/compas_cem.elements", "api/compas_cem.equilibrium", "api/compas_cem.loads", "api/compas_cem.optimization", "api/compas_cem.plotters", "api/compas_cem.supports", "api/generated/compas_cem.diagrams.FormDiagram", "api/generated/compas_cem.diagrams.FormDiagram.add_edge", "api/generated/compas_cem.diagrams.FormDiagram.add_node", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.clear", "api/generated/compas_cem.diagrams.FormDiagram.complement", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.copy", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings", "api/generated/compas_cem.diagrams.FormDiagram.degree", "api/generated/compas_cem.diagrams.FormDiagram.degree_in", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.degree_out", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge", "api/generated/compas_cem.diagrams.FormDiagram.delete_node", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction", "api/generated/compas_cem.diagrams.FormDiagram.edge_force", "api/generated/compas_cem.diagrams.FormDiagram.edge_length", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.FormDiagram.edge_point", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector", "api/generated/compas_cem.diagrams.FormDiagram.edges", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edges_where", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles", "api/generated/compas_cem.diagrams.FormDiagram.from_data", "api/generated/compas_cem.diagrams.FormDiagram.from_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_json", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.from_lines", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_obj", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.FormDiagram.gkey", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key", "api/generated/compas_cem.diagrams.FormDiagram.has_edge", "api/generated/compas_cem.diagrams.FormDiagram.has_node", "api/generated/compas_cem.diagrams.FormDiagram.index_key", "api/generated/compas_cem.diagrams.FormDiagram.index_uv", "api/generated/compas_cem.diagrams.FormDiagram.is_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support", "api/generated/compas_cem.diagrams.FormDiagram.is_planar", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.is_xy", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey", "api/generated/compas_cem.diagrams.FormDiagram.key_index", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.leaves", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood", "api/generated/compas_cem.diagrams.FormDiagram.neighbors", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.node_exists", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey", "api/generated/compas_cem.diagrams.FormDiagram.node_key", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian", "api/generated/compas_cem.diagrams.FormDiagram.node_load", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.FormDiagram.node_sample", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.nodes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path", "api/generated/compas_cem.diagrams.FormDiagram.smooth", "api/generated/compas_cem.diagrams.FormDiagram.split_edge", "api/generated/compas_cem.diagrams.FormDiagram.summary", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.to_data", "api/generated/compas_cem.diagrams.FormDiagram.to_json", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.to_lines", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.to_obj", "api/generated/compas_cem.diagrams.FormDiagram.to_points", "api/generated/compas_cem.diagrams.FormDiagram.transform", "api/generated/compas_cem.diagrams.FormDiagram.transformed", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.update_dea", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_dna", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.uv_index", "api/generated/compas_cem.diagrams.FormDiagram.validate_data", "api/generated/compas_cem.diagrams.FormDiagram.validate_json", "api/generated/compas_cem.diagrams.TopologyDiagram", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.clear", "api/generated/compas_cem.diagrams.TopologyDiagram.complement", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.copy", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.degree", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector", "api/generated/compas_cem.diagrams.TopologyDiagram.edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_max", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.summary", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.trails", "api/generated/compas_cem.diagrams.TopologyDiagram.transform", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json", "api/generated/compas_cem.elements.DeviationEdge", "api/generated/compas_cem.elements.DeviationEdge.copy", "api/generated/compas_cem.elements.DeviationEdge.from_data", "api/generated/compas_cem.elements.DeviationEdge.from_json", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.from_line", "api/generated/compas_cem.elements.DeviationEdge.to_data", "api/generated/compas_cem.elements.DeviationEdge.to_json", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.validate_data", "api/generated/compas_cem.elements.DeviationEdge.validate_json", "api/generated/compas_cem.elements.Node", "api/generated/compas_cem.elements.Node.copy", "api/generated/compas_cem.elements.Node.from_data", "api/generated/compas_cem.elements.Node.from_json", "api/generated/compas_cem.elements.Node.from_jsonstring", "api/generated/compas_cem.elements.Node.from_point", "api/generated/compas_cem.elements.Node.to_data", "api/generated/compas_cem.elements.Node.to_json", "api/generated/compas_cem.elements.Node.to_jsonstring", "api/generated/compas_cem.elements.Node.validate_data", "api/generated/compas_cem.elements.Node.validate_json", "api/generated/compas_cem.elements.TrailEdge", "api/generated/compas_cem.elements.TrailEdge.copy", "api/generated/compas_cem.elements.TrailEdge.from_data", "api/generated/compas_cem.elements.TrailEdge.from_json", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring", "api/generated/compas_cem.elements.TrailEdge.from_line", "api/generated/compas_cem.elements.TrailEdge.to_data", "api/generated/compas_cem.elements.TrailEdge.to_json", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring", "api/generated/compas_cem.elements.TrailEdge.validate_data", "api/generated/compas_cem.elements.TrailEdge.validate_json", "api/generated/compas_cem.equilibrium.static_equilibrium", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy", "api/generated/compas_cem.loads.NodeLoad", "api/generated/compas_cem.loads.NodeLoad.copy", "api/generated/compas_cem.loads.NodeLoad.from_data", "api/generated/compas_cem.loads.NodeLoad.from_json", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector", "api/generated/compas_cem.loads.NodeLoad.to_data", "api/generated/compas_cem.loads.NodeLoad.to_json", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring", "api/generated/compas_cem.loads.NodeLoad.validate_data", "api/generated/compas_cem.loads.NodeLoad.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json", "api/generated/compas_cem.optimization.LineConstraint", "api/generated/compas_cem.optimization.LineConstraint.copy", "api/generated/compas_cem.optimization.LineConstraint.from_data", "api/generated/compas_cem.optimization.LineConstraint.from_json", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.key", "api/generated/compas_cem.optimization.LineConstraint.penalty", "api/generated/compas_cem.optimization.LineConstraint.reference", "api/generated/compas_cem.optimization.LineConstraint.target", "api/generated/compas_cem.optimization.LineConstraint.to_data", "api/generated/compas_cem.optimization.LineConstraint.to_json", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.validate_data", "api/generated/compas_cem.optimization.LineConstraint.validate_json", "api/generated/compas_cem.optimization.Optimizer", "api/generated/compas_cem.optimization.Optimizer.add_constraint", "api/generated/compas_cem.optimization.Optimizer.add_parameter", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity", "api/generated/compas_cem.optimization.Optimizer.copy", "api/generated/compas_cem.optimization.Optimizer.from_data", "api/generated/compas_cem.optimization.Optimizer.from_json", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring", "api/generated/compas_cem.optimization.Optimizer.gradient_func", "api/generated/compas_cem.optimization.Optimizer.index_parameter", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters", "api/generated/compas_cem.optimization.Optimizer.objective_func", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters", "api/generated/compas_cem.optimization.Optimizer.parameter_index", "api/generated/compas_cem.optimization.Optimizer.remove_constraint", "api/generated/compas_cem.optimization.Optimizer.remove_parameter", "api/generated/compas_cem.optimization.Optimizer.solve_nlopt", "api/generated/compas_cem.optimization.Optimizer.to_data", "api/generated/compas_cem.optimization.Optimizer.to_json", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring", "api/generated/compas_cem.optimization.Optimizer.validate_data", "api/generated/compas_cem.optimization.Optimizer.validate_json", "api/generated/compas_cem.optimization.OriginNodeXParameter", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.key", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeYParameter", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.key", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeZParameter", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.key", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json", "api/generated/compas_cem.optimization.PlaneConstraint", "api/generated/compas_cem.optimization.PlaneConstraint.copy", "api/generated/compas_cem.optimization.PlaneConstraint.from_data", "api/generated/compas_cem.optimization.PlaneConstraint.from_json", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.key", "api/generated/compas_cem.optimization.PlaneConstraint.penalty", "api/generated/compas_cem.optimization.PlaneConstraint.reference", "api/generated/compas_cem.optimization.PlaneConstraint.target", "api/generated/compas_cem.optimization.PlaneConstraint.to_data", "api/generated/compas_cem.optimization.PlaneConstraint.to_json", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json", "api/generated/compas_cem.optimization.PointConstraint", "api/generated/compas_cem.optimization.PointConstraint.copy", "api/generated/compas_cem.optimization.PointConstraint.from_data", "api/generated/compas_cem.optimization.PointConstraint.from_json", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.key", "api/generated/compas_cem.optimization.PointConstraint.penalty", "api/generated/compas_cem.optimization.PointConstraint.reference", "api/generated/compas_cem.optimization.PointConstraint.target", "api/generated/compas_cem.optimization.PointConstraint.to_data", "api/generated/compas_cem.optimization.PointConstraint.to_json", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.validate_data", "api/generated/compas_cem.optimization.PointConstraint.validate_json", "api/generated/compas_cem.optimization.ReactionForceConstraint", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.key", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference", "api/generated/compas_cem.optimization.ReactionForceConstraint.target", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeParameter", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.key", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json", "api/generated/compas_cem.optimization.solve_nlopt_proxy", "api/generated/compas_cem.plotters.FormArtist", "api/generated/compas_cem.plotters.FormArtist.build", "api/generated/compas_cem.plotters.FormArtist.build_as", "api/generated/compas_cem.plotters.FormArtist.clear", "api/generated/compas_cem.plotters.FormArtist.clear_edges", "api/generated/compas_cem.plotters.FormArtist.clear_nodes", "api/generated/compas_cem.plotters.FormArtist.draw", "api/generated/compas_cem.plotters.FormArtist.draw_collection", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels", "api/generated/compas_cem.plotters.FormArtist.draw_edges", "api/generated/compas_cem.plotters.FormArtist.draw_loads", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels", "api/generated/compas_cem.plotters.FormArtist.draw_nodes", "api/generated/compas_cem.plotters.FormArtist.draw_reactions", "api/generated/compas_cem.plotters.FormArtist.redraw", "api/generated/compas_cem.plotters.FormArtist.register", "api/generated/compas_cem.plotters.FormArtist.update_data", "api/generated/compas_cem.plotters.FormArtist.viewbox", "api/generated/compas_cem.plotters.TopologyArtist", "api/generated/compas_cem.plotters.TopologyArtist.build", "api/generated/compas_cem.plotters.TopologyArtist.build_as", "api/generated/compas_cem.plotters.TopologyArtist.clear", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes", "api/generated/compas_cem.plotters.TopologyArtist.draw", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes", "api/generated/compas_cem.plotters.TopologyArtist.redraw", "api/generated/compas_cem.plotters.TopologyArtist.register", "api/generated/compas_cem.plotters.TopologyArtist.update_data", "api/generated/compas_cem.plotters.TopologyArtist.viewbox", "api/generated/compas_cem.supports.NodeSupport", "api/generated/compas_cem.supports.NodeSupport.copy", "api/generated/compas_cem.supports.NodeSupport.from_data", "api/generated/compas_cem.supports.NodeSupport.from_json", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring", "api/generated/compas_cem.supports.NodeSupport.from_point", "api/generated/compas_cem.supports.NodeSupport.to_data", "api/generated/compas_cem.supports.NodeSupport.to_json", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring", "api/generated/compas_cem.supports.NodeSupport.validate_data", "api/generated/compas_cem.supports.NodeSupport.validate_json", "changelog", "citing", "examples", "index", "installation", "license"], "filenames": ["_examples/01_python.rst", "_examples/01_python/01.rst", "_examples/01_python/02.rst", "_examples/01_python/03.rst", "_examples/01_python/04.rst", "_examples/01_python/05.rst", "_examples/02_ghpython.rst", "_examples/02_ghpython/bridge_2d.rst", "_examples/02_ghpython/bridge_3d.rst", "_examples/02_ghpython/dome.rst", "_examples/02_ghpython/jessen.rst", "_examples/02_ghpython/spiral.rst", "api.rst", "api/compas_cem.rst", "api/compas_cem.diagrams.rst", "api/compas_cem.elements.rst", "api/compas_cem.equilibrium.rst", "api/compas_cem.loads.rst", "api/compas_cem.optimization.rst", "api/compas_cem.plotters.rst", "api/compas_cem.supports.rst", "api/generated/compas_cem.diagrams.FormDiagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.clear.rst", "api/generated/compas_cem.diagrams.FormDiagram.complement.rst", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.copy.rst", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.leaves.rst", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_load.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.FormDiagram.smooth.rst", "api/generated/compas_cem.diagrams.FormDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.summary.rst", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_points.rst", "api/generated/compas_cem.diagrams.FormDiagram.transform.rst", "api/generated/compas_cem.diagrams.FormDiagram.transformed.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.clear.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.complement.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.copy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_max.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.summary.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transform.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json.rst", "api/generated/compas_cem.elements.DeviationEdge.rst", "api/generated/compas_cem.elements.DeviationEdge.copy.rst", "api/generated/compas_cem.elements.DeviationEdge.from_data.rst", "api/generated/compas_cem.elements.DeviationEdge.from_json.rst", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.from_line.rst", "api/generated/compas_cem.elements.DeviationEdge.to_data.rst", "api/generated/compas_cem.elements.DeviationEdge.to_json.rst", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_data.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_json.rst", "api/generated/compas_cem.elements.Node.rst", "api/generated/compas_cem.elements.Node.copy.rst", "api/generated/compas_cem.elements.Node.from_data.rst", "api/generated/compas_cem.elements.Node.from_json.rst", "api/generated/compas_cem.elements.Node.from_jsonstring.rst", "api/generated/compas_cem.elements.Node.from_point.rst", "api/generated/compas_cem.elements.Node.to_data.rst", "api/generated/compas_cem.elements.Node.to_json.rst", "api/generated/compas_cem.elements.Node.to_jsonstring.rst", "api/generated/compas_cem.elements.Node.validate_data.rst", "api/generated/compas_cem.elements.Node.validate_json.rst", "api/generated/compas_cem.elements.TrailEdge.rst", "api/generated/compas_cem.elements.TrailEdge.copy.rst", "api/generated/compas_cem.elements.TrailEdge.from_data.rst", "api/generated/compas_cem.elements.TrailEdge.from_json.rst", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.from_line.rst", "api/generated/compas_cem.elements.TrailEdge.to_data.rst", "api/generated/compas_cem.elements.TrailEdge.to_json.rst", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.validate_data.rst", "api/generated/compas_cem.elements.TrailEdge.validate_json.rst", "api/generated/compas_cem.equilibrium.static_equilibrium.rst", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy.rst", "api/generated/compas_cem.loads.NodeLoad.rst", "api/generated/compas_cem.loads.NodeLoad.copy.rst", "api/generated/compas_cem.loads.NodeLoad.from_data.rst", "api/generated/compas_cem.loads.NodeLoad.from_json.rst", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector.rst", "api/generated/compas_cem.loads.NodeLoad.to_data.rst", "api/generated/compas_cem.loads.NodeLoad.to_json.rst", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.validate_data.rst", "api/generated/compas_cem.loads.NodeLoad.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.LineConstraint.rst", "api/generated/compas_cem.optimization.LineConstraint.copy.rst", "api/generated/compas_cem.optimization.LineConstraint.from_data.rst", "api/generated/compas_cem.optimization.LineConstraint.from_json.rst", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.key.rst", "api/generated/compas_cem.optimization.LineConstraint.penalty.rst", "api/generated/compas_cem.optimization.LineConstraint.reference.rst", "api/generated/compas_cem.optimization.LineConstraint.target.rst", "api/generated/compas_cem.optimization.LineConstraint.to_data.rst", "api/generated/compas_cem.optimization.LineConstraint.to_json.rst", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_data.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_json.rst", "api/generated/compas_cem.optimization.Optimizer.rst", "api/generated/compas_cem.optimization.Optimizer.add_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.add_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity.rst", "api/generated/compas_cem.optimization.Optimizer.copy.rst", "api/generated/compas_cem.optimization.Optimizer.from_data.rst", "api/generated/compas_cem.optimization.Optimizer.from_json.rst", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.gradient_func.rst", "api/generated/compas_cem.optimization.Optimizer.index_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.objective_func.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.parameter_index.rst", "api/generated/compas_cem.optimization.Optimizer.remove_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.remove_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.solve_nlopt.rst", "api/generated/compas_cem.optimization.Optimizer.to_data.rst", "api/generated/compas_cem.optimization.Optimizer.to_json.rst", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.validate_data.rst", "api/generated/compas_cem.optimization.Optimizer.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.rst", "api/generated/compas_cem.optimization.PlaneConstraint.copy.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.key.rst", "api/generated/compas_cem.optimization.PlaneConstraint.penalty.rst", "api/generated/compas_cem.optimization.PlaneConstraint.reference.rst", "api/generated/compas_cem.optimization.PlaneConstraint.target.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json.rst", "api/generated/compas_cem.optimization.PointConstraint.rst", "api/generated/compas_cem.optimization.PointConstraint.copy.rst", "api/generated/compas_cem.optimization.PointConstraint.from_data.rst", "api/generated/compas_cem.optimization.PointConstraint.from_json.rst", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.key.rst", "api/generated/compas_cem.optimization.PointConstraint.penalty.rst", "api/generated/compas_cem.optimization.PointConstraint.reference.rst", "api/generated/compas_cem.optimization.PointConstraint.target.rst", "api/generated/compas_cem.optimization.PointConstraint.to_data.rst", "api/generated/compas_cem.optimization.PointConstraint.to_json.rst", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.key.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.target.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.key.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.solve_nlopt_proxy.rst", "api/generated/compas_cem.plotters.FormArtist.rst", "api/generated/compas_cem.plotters.FormArtist.build.rst", "api/generated/compas_cem.plotters.FormArtist.build_as.rst", "api/generated/compas_cem.plotters.FormArtist.clear.rst", "api/generated/compas_cem.plotters.FormArtist.clear_edges.rst", "api/generated/compas_cem.plotters.FormArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw.rst", "api/generated/compas_cem.plotters.FormArtist.draw_collection.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edges.rst", "api/generated/compas_cem.plotters.FormArtist.draw_loads.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw_reactions.rst", "api/generated/compas_cem.plotters.FormArtist.redraw.rst", "api/generated/compas_cem.plotters.FormArtist.register.rst", "api/generated/compas_cem.plotters.FormArtist.update_data.rst", "api/generated/compas_cem.plotters.FormArtist.viewbox.rst", "api/generated/compas_cem.plotters.TopologyArtist.rst", "api/generated/compas_cem.plotters.TopologyArtist.build.rst", "api/generated/compas_cem.plotters.TopologyArtist.build_as.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.redraw.rst", "api/generated/compas_cem.plotters.TopologyArtist.register.rst", "api/generated/compas_cem.plotters.TopologyArtist.update_data.rst", "api/generated/compas_cem.plotters.TopologyArtist.viewbox.rst", "api/generated/compas_cem.supports.NodeSupport.rst", "api/generated/compas_cem.supports.NodeSupport.copy.rst", "api/generated/compas_cem.supports.NodeSupport.from_data.rst", "api/generated/compas_cem.supports.NodeSupport.from_json.rst", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.from_point.rst", "api/generated/compas_cem.supports.NodeSupport.to_data.rst", "api/generated/compas_cem.supports.NodeSupport.to_json.rst", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.validate_data.rst", "api/generated/compas_cem.supports.NodeSupport.validate_json.rst", "changelog.rst", "citing.rst", "examples.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["Python", "01. Simple Compression Structure", "02. Braced Tower in 2D", "03. Bridge Optimization in 2D", "04. Tree Structure in 2D", "05. Planar Tensegrity Wheel", "Grasshopper", "A. Bridge in 2D", "B. Tubular Bridge in 3D", "C. Circular Dome", "D. Jessen Tensegrity", "E. Spiral Staircase", "API Reference", "compas_cem", "compas_cem.diagrams", "compas_cem.elements", "compas_cem.equilibrium", "compas_cem.loads", "compas_cem.optimization", "compas_cem.plotters", "compas_cem.supports", "FormDiagram", "FormDiagram.add_edge", "FormDiagram.add_node", "FormDiagram.adjacency_matrix", "FormDiagram.clear", "FormDiagram.complement", "FormDiagram.connected_edges", "FormDiagram.connectivity_matrix", "FormDiagram.copy", "FormDiagram.count_crossings", "FormDiagram.degree", "FormDiagram.degree_in", "FormDiagram.degree_matrix", "FormDiagram.degree_out", "FormDiagram.delete_edge", "FormDiagram.delete_node", "FormDiagram.edge_attribute", "FormDiagram.edge_attributes", "FormDiagram.edge_coordinates", "FormDiagram.edge_direction", "FormDiagram.edge_force", "FormDiagram.edge_length", "FormDiagram.edge_length_2", "FormDiagram.edge_midpoint", "FormDiagram.edge_point", "FormDiagram.edge_sample", "FormDiagram.edge_vector", "FormDiagram.edges", "FormDiagram.edges_attribute", "FormDiagram.edges_attributes", "FormDiagram.edges_where", "FormDiagram.edges_where_predicate", "FormDiagram.embed_in_plane", "FormDiagram.find_crossings", "FormDiagram.find_cycles", "FormDiagram.from_data", "FormDiagram.from_edges", "FormDiagram.from_json", "FormDiagram.from_jsonstring", "FormDiagram.from_lines", "FormDiagram.from_networkx", "FormDiagram.from_nodes_and_edges", "FormDiagram.from_obj", "FormDiagram.from_pointcloud", "FormDiagram.from_topology_diagram", "FormDiagram.get_any_edge", "FormDiagram.get_any_edges", "FormDiagram.get_any_node", "FormDiagram.get_any_nodes", "FormDiagram.gkey", "FormDiagram.gkey_key", "FormDiagram.has_edge", "FormDiagram.has_node", "FormDiagram.index_key", "FormDiagram.index_uv", "FormDiagram.is_connected", "FormDiagram.is_crossed", "FormDiagram.is_leaf", "FormDiagram.is_node_connected", "FormDiagram.is_node_loaded", "FormDiagram.is_node_support", "FormDiagram.is_planar", "FormDiagram.is_planar_embedding", "FormDiagram.is_xy", "FormDiagram.key_gkey", "FormDiagram.key_index", "FormDiagram.laplacian_matrix", "FormDiagram.leaves", "FormDiagram.loaded_nodes", "FormDiagram.neighborhood", "FormDiagram.neighbors", "FormDiagram.neighbors_in", "FormDiagram.neighbors_out", "FormDiagram.network_adjacency_matrix", "FormDiagram.network_connectivity_matrix", "FormDiagram.network_degree_matrix", "FormDiagram.network_embed_in_plane", "FormDiagram.network_is_planar", "FormDiagram.network_is_planar_embedding", "FormDiagram.network_laplacian_matrix", "FormDiagram.node_attribute", "FormDiagram.node_attributes", "FormDiagram.node_coordinates", "FormDiagram.node_exists", "FormDiagram.node_gkey", "FormDiagram.node_key", "FormDiagram.node_laplacian", "FormDiagram.node_load", "FormDiagram.node_neighborhood_centroid", "FormDiagram.node_sample", "FormDiagram.node_xyz", "FormDiagram.nodes", "FormDiagram.nodes_attribute", "FormDiagram.nodes_attributes", "FormDiagram.nodes_where", "FormDiagram.nodes_where_predicate", "FormDiagram.number_of_edges", "FormDiagram.number_of_loaded_nodes", "FormDiagram.number_of_nodes", "FormDiagram.number_of_support_nodes", "FormDiagram.reaction_force", "FormDiagram.shortest_path", "FormDiagram.smooth", "FormDiagram.split_edge", "FormDiagram.summary", "FormDiagram.support_nodes", "FormDiagram.to_data", "FormDiagram.to_json", "FormDiagram.to_jsonstring", "FormDiagram.to_lines", "FormDiagram.to_networkx", "FormDiagram.to_nodes_and_edges", "FormDiagram.to_obj", "FormDiagram.to_points", "FormDiagram.transform", "FormDiagram.transformed", "FormDiagram.unset_edge_attribute", "FormDiagram.unset_node_attribute", "FormDiagram.update_dea", "FormDiagram.update_default_edge_attributes", "FormDiagram.update_default_node_attributes", "FormDiagram.update_dna", "FormDiagram.update_node_xyz", "FormDiagram.uv_index", "FormDiagram.validate_data", "FormDiagram.validate_json", "TopologyDiagram", "TopologyDiagram.add_edge", "TopologyDiagram.add_load", "TopologyDiagram.add_node", "TopologyDiagram.add_support", "TopologyDiagram.adjacency_matrix", "TopologyDiagram.auxiliary_trail_edges", "TopologyDiagram.auxiliary_trails", "TopologyDiagram.build_trails", "TopologyDiagram.clear", "TopologyDiagram.complement", "TopologyDiagram.connected_deviation_edges", "TopologyDiagram.connected_edges", "TopologyDiagram.connected_trail_edges", "TopologyDiagram.connectivity_matrix", "TopologyDiagram.copy", "TopologyDiagram.count_crossings", "TopologyDiagram.degree", "TopologyDiagram.degree_in", "TopologyDiagram.degree_matrix", "TopologyDiagram.degree_out", "TopologyDiagram.delete_edge", "TopologyDiagram.delete_node", "TopologyDiagram.deviation_edges", "TopologyDiagram.edge_attribute", "TopologyDiagram.edge_attributes", "TopologyDiagram.edge_coordinates", "TopologyDiagram.edge_direction", "TopologyDiagram.edge_force", "TopologyDiagram.edge_length", "TopologyDiagram.edge_length_2", "TopologyDiagram.edge_midpoint", "TopologyDiagram.edge_point", "TopologyDiagram.edge_sample", "TopologyDiagram.edge_sequence", "TopologyDiagram.edge_vector", "TopologyDiagram.edges", "TopologyDiagram.edges_attribute", "TopologyDiagram.edges_attributes", "TopologyDiagram.edges_where", "TopologyDiagram.edges_where_predicate", "TopologyDiagram.embed_in_plane", "TopologyDiagram.find_crossings", "TopologyDiagram.find_cycles", "TopologyDiagram.from_data", "TopologyDiagram.from_edges", "TopologyDiagram.from_json", "TopologyDiagram.from_jsonstring", "TopologyDiagram.from_lines", "TopologyDiagram.from_networkx", "TopologyDiagram.from_nodes_and_edges", "TopologyDiagram.from_obj", "TopologyDiagram.from_pointcloud", "TopologyDiagram.get_any_edge", "TopologyDiagram.get_any_edges", "TopologyDiagram.get_any_node", "TopologyDiagram.get_any_nodes", "TopologyDiagram.gkey", "TopologyDiagram.gkey_key", "TopologyDiagram.has_edge", "TopologyDiagram.has_node", "TopologyDiagram.index_key", "TopologyDiagram.index_uv", "TopologyDiagram.is_auxiliary_trail_edge", "TopologyDiagram.is_connected", "TopologyDiagram.is_crossed", "TopologyDiagram.is_deviation_edge", "TopologyDiagram.is_leaf", "TopologyDiagram.is_node_connected", "TopologyDiagram.is_node_loaded", "TopologyDiagram.is_node_origin", "TopologyDiagram.is_node_support", "TopologyDiagram.is_planar", "TopologyDiagram.is_planar_embedding", "TopologyDiagram.is_trail_edge", "TopologyDiagram.is_xy", "TopologyDiagram.key_gkey", "TopologyDiagram.key_index", "TopologyDiagram.laplacian_matrix", "TopologyDiagram.leaves", "TopologyDiagram.loaded_nodes", "TopologyDiagram.neighborhood", "TopologyDiagram.neighbors", "TopologyDiagram.neighbors_in", "TopologyDiagram.neighbors_out", "TopologyDiagram.network_adjacency_matrix", "TopologyDiagram.network_connectivity_matrix", "TopologyDiagram.network_degree_matrix", "TopologyDiagram.network_embed_in_plane", "TopologyDiagram.network_is_planar", "TopologyDiagram.network_is_planar_embedding", "TopologyDiagram.network_laplacian_matrix", "TopologyDiagram.node_attribute", "TopologyDiagram.node_attributes", "TopologyDiagram.node_coordinates", "TopologyDiagram.node_exists", "TopologyDiagram.node_gkey", "TopologyDiagram.node_key", "TopologyDiagram.node_laplacian", "TopologyDiagram.node_load", "TopologyDiagram.node_neighborhood_centroid", "TopologyDiagram.node_sample", "TopologyDiagram.node_sequence", "TopologyDiagram.node_xyz", "TopologyDiagram.nodes", "TopologyDiagram.nodes_attribute", "TopologyDiagram.nodes_attributes", "TopologyDiagram.nodes_where", "TopologyDiagram.nodes_where_predicate", "TopologyDiagram.number_of_auxiliary_trails", "TopologyDiagram.number_of_deviation_edges", "TopologyDiagram.number_of_edges", "TopologyDiagram.number_of_loaded_nodes", "TopologyDiagram.number_of_nodes", "TopologyDiagram.number_of_support_nodes", "TopologyDiagram.number_of_trail_edges", "TopologyDiagram.number_of_trails", "TopologyDiagram.origin_nodes", "TopologyDiagram.reaction_force", "TopologyDiagram.sequence_max", "TopologyDiagram.sequences", "TopologyDiagram.shortest_path", "TopologyDiagram.smooth", "TopologyDiagram.split_edge", "TopologyDiagram.summary", "TopologyDiagram.support_nodes", "TopologyDiagram.to_data", "TopologyDiagram.to_json", "TopologyDiagram.to_jsonstring", "TopologyDiagram.to_lines", "TopologyDiagram.to_networkx", "TopologyDiagram.to_nodes_and_edges", "TopologyDiagram.to_obj", "TopologyDiagram.to_points", "TopologyDiagram.trail_edges", "TopologyDiagram.trails", "TopologyDiagram.transform", "TopologyDiagram.transformed", "TopologyDiagram.unset_edge_attribute", "TopologyDiagram.unset_node_attribute", "TopologyDiagram.update_dea", "TopologyDiagram.update_default_edge_attributes", "TopologyDiagram.update_default_node_attributes", "TopologyDiagram.update_dna", "TopologyDiagram.update_node_xyz", "TopologyDiagram.uv_index", "TopologyDiagram.validate_data", "TopologyDiagram.validate_json", "DeviationEdge", "DeviationEdge.copy", "DeviationEdge.from_data", "DeviationEdge.from_json", "DeviationEdge.from_jsonstring", "DeviationEdge.from_line", "DeviationEdge.to_data", "DeviationEdge.to_json", "DeviationEdge.to_jsonstring", "DeviationEdge.validate_data", "DeviationEdge.validate_json", "Node", "Node.copy", "Node.from_data", "Node.from_json", "Node.from_jsonstring", "Node.from_point", "Node.to_data", "Node.to_json", "Node.to_jsonstring", "Node.validate_data", "Node.validate_json", "TrailEdge", "TrailEdge.copy", "TrailEdge.from_data", "TrailEdge.from_json", "TrailEdge.from_jsonstring", "TrailEdge.from_line", "TrailEdge.to_data", "TrailEdge.to_json", "TrailEdge.to_jsonstring", "TrailEdge.validate_data", "TrailEdge.validate_json", "static_equilibrium", "static_equilibrium_numpy", "NodeLoad", "NodeLoad.copy", "NodeLoad.from_data", "NodeLoad.from_json", "NodeLoad.from_jsonstring", "NodeLoad.from_point_and_vector", "NodeLoad.to_data", "NodeLoad.to_json", "NodeLoad.to_jsonstring", "NodeLoad.validate_data", "NodeLoad.validate_json", "DeviationEdgeLengthConstraint", "DeviationEdgeLengthConstraint.copy", "DeviationEdgeLengthConstraint.from_data", "DeviationEdgeLengthConstraint.from_json", "DeviationEdgeLengthConstraint.from_jsonstring", "DeviationEdgeLengthConstraint.key", "DeviationEdgeLengthConstraint.penalty", "DeviationEdgeLengthConstraint.reference", "DeviationEdgeLengthConstraint.target", "DeviationEdgeLengthConstraint.to_data", "DeviationEdgeLengthConstraint.to_json", "DeviationEdgeLengthConstraint.to_jsonstring", "DeviationEdgeLengthConstraint.validate_data", "DeviationEdgeLengthConstraint.validate_json", "DeviationEdgeParameter", "DeviationEdgeParameter.attr_name", "DeviationEdgeParameter.bound_low", "DeviationEdgeParameter.bound_up", "DeviationEdgeParameter.copy", "DeviationEdgeParameter.from_data", "DeviationEdgeParameter.from_json", "DeviationEdgeParameter.from_jsonstring", "DeviationEdgeParameter.key", "DeviationEdgeParameter.start_value", "DeviationEdgeParameter.to_data", "DeviationEdgeParameter.to_json", "DeviationEdgeParameter.to_jsonstring", "DeviationEdgeParameter.validate_data", "DeviationEdgeParameter.validate_json", "LineConstraint", "LineConstraint.copy", "LineConstraint.from_data", "LineConstraint.from_json", "LineConstraint.from_jsonstring", "LineConstraint.key", "LineConstraint.penalty", "LineConstraint.reference", "LineConstraint.target", "LineConstraint.to_data", "LineConstraint.to_json", "LineConstraint.to_jsonstring", "LineConstraint.validate_data", "LineConstraint.validate_json", "Optimizer", "Optimizer.add_constraint", "Optimizer.add_parameter", "Optimizer.check_optimization_sanity", "Optimizer.copy", "Optimizer.from_data", "Optimizer.from_json", "Optimizer.from_jsonstring", "Optimizer.gradient_func", "Optimizer.index_parameter", "Optimizer.number_of_constraints", "Optimizer.number_of_parameters", "Optimizer.objective_func", "Optimizer.optimization_bounds", "Optimizer.optimization_parameters", "Optimizer.parameter_index", "Optimizer.remove_constraint", "Optimizer.remove_parameter", "Optimizer.solve_nlopt", "Optimizer.to_data", "Optimizer.to_json", "Optimizer.to_jsonstring", "Optimizer.validate_data", "Optimizer.validate_json", "OriginNodeXParameter", "OriginNodeXParameter.attr_name", "OriginNodeXParameter.bound_low", "OriginNodeXParameter.bound_up", "OriginNodeXParameter.copy", "OriginNodeXParameter.from_data", "OriginNodeXParameter.from_json", "OriginNodeXParameter.from_jsonstring", "OriginNodeXParameter.key", "OriginNodeXParameter.start_value", "OriginNodeXParameter.to_data", "OriginNodeXParameter.to_json", "OriginNodeXParameter.to_jsonstring", "OriginNodeXParameter.validate_data", "OriginNodeXParameter.validate_json", "OriginNodeYParameter", "OriginNodeYParameter.attr_name", "OriginNodeYParameter.bound_low", "OriginNodeYParameter.bound_up", "OriginNodeYParameter.copy", "OriginNodeYParameter.from_data", "OriginNodeYParameter.from_json", "OriginNodeYParameter.from_jsonstring", "OriginNodeYParameter.key", "OriginNodeYParameter.start_value", "OriginNodeYParameter.to_data", "OriginNodeYParameter.to_json", "OriginNodeYParameter.to_jsonstring", "OriginNodeYParameter.validate_data", "OriginNodeYParameter.validate_json", "OriginNodeZParameter", "OriginNodeZParameter.attr_name", "OriginNodeZParameter.bound_low", "OriginNodeZParameter.bound_up", "OriginNodeZParameter.copy", "OriginNodeZParameter.from_data", "OriginNodeZParameter.from_json", "OriginNodeZParameter.from_jsonstring", "OriginNodeZParameter.key", "OriginNodeZParameter.start_value", "OriginNodeZParameter.to_data", "OriginNodeZParameter.to_json", "OriginNodeZParameter.to_jsonstring", "OriginNodeZParameter.validate_data", "OriginNodeZParameter.validate_json", "PlaneConstraint", "PlaneConstraint.copy", "PlaneConstraint.from_data", "PlaneConstraint.from_json", "PlaneConstraint.from_jsonstring", "PlaneConstraint.key", "PlaneConstraint.penalty", "PlaneConstraint.reference", "PlaneConstraint.target", "PlaneConstraint.to_data", "PlaneConstraint.to_json", "PlaneConstraint.to_jsonstring", "PlaneConstraint.validate_data", "PlaneConstraint.validate_json", "PointConstraint", "PointConstraint.copy", "PointConstraint.from_data", "PointConstraint.from_json", "PointConstraint.from_jsonstring", "PointConstraint.key", "PointConstraint.penalty", "PointConstraint.reference", "PointConstraint.target", "PointConstraint.to_data", "PointConstraint.to_json", "PointConstraint.to_jsonstring", "PointConstraint.validate_data", "PointConstraint.validate_json", "ReactionForceConstraint", "ReactionForceConstraint.copy", "ReactionForceConstraint.from_data", "ReactionForceConstraint.from_json", "ReactionForceConstraint.from_jsonstring", "ReactionForceConstraint.key", "ReactionForceConstraint.penalty", "ReactionForceConstraint.reference", "ReactionForceConstraint.target", "ReactionForceConstraint.to_data", "ReactionForceConstraint.to_json", "ReactionForceConstraint.to_jsonstring", "ReactionForceConstraint.validate_data", "ReactionForceConstraint.validate_json", "TrailEdgeForceConstraint", "TrailEdgeForceConstraint.copy", "TrailEdgeForceConstraint.from_data", "TrailEdgeForceConstraint.from_json", "TrailEdgeForceConstraint.from_jsonstring", "TrailEdgeForceConstraint.key", "TrailEdgeForceConstraint.penalty", "TrailEdgeForceConstraint.reference", "TrailEdgeForceConstraint.target", "TrailEdgeForceConstraint.to_data", "TrailEdgeForceConstraint.to_json", "TrailEdgeForceConstraint.to_jsonstring", "TrailEdgeForceConstraint.validate_data", "TrailEdgeForceConstraint.validate_json", "TrailEdgeParameter", "TrailEdgeParameter.attr_name", "TrailEdgeParameter.bound_low", "TrailEdgeParameter.bound_up", "TrailEdgeParameter.copy", "TrailEdgeParameter.from_data", "TrailEdgeParameter.from_json", "TrailEdgeParameter.from_jsonstring", "TrailEdgeParameter.key", "TrailEdgeParameter.start_value", "TrailEdgeParameter.to_data", "TrailEdgeParameter.to_json", "TrailEdgeParameter.to_jsonstring", "TrailEdgeParameter.validate_data", "TrailEdgeParameter.validate_json", "solve_nlopt_proxy", "FormArtist", "FormArtist.build", "FormArtist.build_as", "FormArtist.clear", "FormArtist.clear_edges", "FormArtist.clear_nodes", "FormArtist.draw", "FormArtist.draw_collection", "FormArtist.draw_edgelabels", "FormArtist.draw_edges", "FormArtist.draw_loads", "FormArtist.draw_nodelabels", "FormArtist.draw_nodes", "FormArtist.draw_reactions", "FormArtist.redraw", "FormArtist.register", "FormArtist.update_data", "FormArtist.viewbox", "TopologyArtist", "TopologyArtist.build", "TopologyArtist.build_as", "TopologyArtist.clear", "TopologyArtist.clear_edges", "TopologyArtist.clear_nodes", "TopologyArtist.draw", "TopologyArtist.draw_collection", "TopologyArtist.draw_edgelabels", "TopologyArtist.draw_edges", "TopologyArtist.draw_loads", "TopologyArtist.draw_nodelabels", "TopologyArtist.draw_nodes", "TopologyArtist.redraw", "TopologyArtist.register", "TopologyArtist.update_data", "TopologyArtist.viewbox", "NodeSupport", "NodeSupport.copy", "NodeSupport.from_data", "NodeSupport.from_json", "NodeSupport.from_jsonstring", "NodeSupport.from_point", "NodeSupport.to_data", "NodeSupport.to_json", "NodeSupport.to_jsonstring", "NodeSupport.validate_data", "NodeSupport.validate_json", "Changelog", "Citing", "Examples", "COMPAS CEM", "Installation", "License"], "terms": {"01": [0, 573, 574], "simpl": [0, 573, 574, 575], "compress": [0, 5, 572, 573, 574], "structur": [0, 28, 55, 76, 87, 95, 100, 122, 161, 190, 211, 225, 233, 238, 268, 572, 573, 574, 575], "02": [0, 573, 574], "brace": [0, 573, 574], "tower": [0, 573, 574], "2d": [0, 6, 542, 559, 571, 573, 574], "03": [0, 573, 574], "bridg": [0, 6, 571, 573, 574], "optim": [0, 4, 5, 12, 13, 341, 355, 357, 358, 364, 370, 408, 410, 411, 417, 423, 425, 426, 432, 438, 440, 441, 447, 453, 467, 481, 495, 509, 511, 512, 518, 524, 571, 573, 574], "04": [0, 573, 574], "tree": [0, 573, 574], "05": [0, 573, 574], "planar": [0, 55, 82, 98, 190, 219, 236, 573, 574, 575], "tensegr": [0, 6, 571, 573, 574], "wheel": [0, 573, 574], "from": [1, 2, 3, 4, 5, 24, 26, 28, 33, 35, 36, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 76, 87, 94, 95, 96, 100, 107, 122, 131, 152, 155, 157, 161, 166, 168, 169, 182, 191, 192, 193, 194, 195, 196, 197, 198, 199, 203, 211, 225, 232, 233, 234, 238, 245, 268, 277, 297, 298, 299, 300, 308, 309, 310, 311, 319, 320, 321, 322, 328, 329, 332, 333, 334, 335, 343, 344, 345, 360, 361, 362, 372, 373, 374, 389, 390, 391, 392, 400, 413, 414, 415, 428, 429, 430, 443, 444, 445, 455, 456, 457, 469, 470, 471, 483, 484, 485, 497, 498, 499, 514, 515, 516, 529, 530, 547, 548, 562, 563, 564, 565, 571, 575, 576], "compas_cem": [1, 2, 3, 4, 5, 12, 21, 147, 295, 306, 317, 328, 329, 330, 341, 355, 370, 384, 402, 408, 423, 438, 453, 467, 481, 495, 509, 524, 525, 543, 560, 571, 572, 574, 575], "diagram": [1, 2, 3, 4, 5, 12, 13, 21, 55, 65, 118, 120, 147, 154, 155, 190, 256, 257, 259, 261, 262, 263, 267, 282, 328, 329, 346, 375, 384, 402, 458, 472, 486, 500, 524, 525, 531, 534, 535, 537, 538, 543, 549, 552, 555, 565, 571, 574], "import": [1, 2, 3, 4, 5, 26, 76, 157, 211, 571, 575], "topologydiagram": [1, 2, 3, 4, 5, 328, 329, 402, 524, 543, 571], "element": [1, 2, 4, 5, 12, 13, 22, 148, 295, 306, 317, 571, 574], "node": [1, 2, 3, 4, 5, 23, 24, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 44, 45, 47, 52, 57, 62, 64, 68, 69, 71, 72, 73, 74, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 132, 138, 141, 142, 150, 151, 152, 154, 155, 158, 159, 160, 164, 165, 166, 167, 168, 169, 171, 173, 174, 176, 178, 179, 181, 182, 187, 192, 197, 199, 202, 203, 205, 206, 207, 208, 214, 215, 216, 217, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 259, 260, 261, 264, 265, 268, 269, 270, 272, 278, 282, 286, 289, 290, 328, 329, 330, 346, 370, 375, 408, 409, 410, 411, 416, 417, 423, 424, 425, 426, 431, 432, 438, 439, 440, 441, 446, 447, 453, 458, 467, 472, 481, 486, 500, 528, 530, 531, 535, 536, 537, 546, 548, 549, 553, 554, 555, 560, 565, 571], "trailedg": [1, 2, 4], "deviationedg": [1, 2, 4, 5], "load": [1, 2, 3, 4, 12, 13, 55, 80, 89, 108, 118, 149, 190, 216, 227, 246, 259, 330, 335, 531, 535, 549, 553, 571, 574], "nodeload": [1, 2, 3, 4, 571], "support": [1, 2, 3, 4, 12, 13, 80, 81, 120, 121, 126, 151, 155, 216, 218, 261, 265, 272, 402, 481, 524, 538, 560, 565, 571, 574], "nodesupport": [1, 2, 3, 4, 151, 571], "equilibrium": [1, 2, 3, 4, 5, 12, 13, 328, 329, 572, 574], "static_equilibrium": [1, 2, 3, 4, 5, 571], "compas_plott": [1, 2, 3, 4, 5], "plotter": [1, 2, 3, 4, 5, 12, 13, 525, 540, 543, 557, 571, 574], "compa": [1, 2, 3, 4, 5, 26, 76, 157, 211, 571, 572, 573], "geometri": [1, 2, 3, 4, 5, 55, 190], "translat": [1, 2, 3, 4, 5], "instanti": [1, 4], "topolog": [1, 2, 3, 4, 5, 65, 118, 120, 147, 154, 155, 256, 257, 259, 261, 262, 263, 282, 328, 329, 357, 358, 364, 392, 396, 402, 410, 411, 417, 425, 426, 432, 440, 441, 447, 511, 512, 518, 524, 543, 549, 552, 555, 571], "add": [1, 2, 3, 4, 5, 22, 23, 148, 150, 151, 385, 386], "add_nod": [1, 2, 4, 5], "0": [1, 2, 3, 4, 5, 45, 123, 124, 179, 269, 270, 306, 330, 341, 370, 453, 467, 481, 495, 575], "1": [1, 2, 3, 4, 5, 26, 45, 46, 66, 67, 68, 69, 87, 90, 100, 107, 110, 124, 157, 179, 180, 200, 201, 202, 203, 225, 228, 238, 245, 248, 270, 330, 341, 370, 453, 467, 481, 495], "2": [1, 2, 3, 4, 5, 52, 116, 187, 255], "5": [1, 2, 3, 4, 5, 45, 123, 124, 179, 269, 270], "3": [1, 2, 4, 5, 64, 66, 67, 68, 69, 199, 200, 201, 202, 203], "edg": [1, 2, 3, 4, 5, 22, 26, 27, 30, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 57, 62, 66, 67, 69, 72, 75, 77, 82, 83, 98, 99, 117, 124, 132, 137, 139, 140, 144, 148, 153, 157, 158, 159, 160, 163, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 192, 197, 200, 201, 203, 206, 209, 210, 212, 213, 219, 220, 221, 236, 237, 257, 258, 262, 270, 278, 281, 285, 287, 288, 292, 295, 300, 317, 322, 341, 346, 355, 356, 357, 358, 363, 364, 375, 458, 472, 486, 495, 500, 509, 510, 511, 512, 517, 518, 528, 529, 531, 533, 534, 546, 547, 549, 551, 552, 571], "add_edg": [1, 2, 4, 5], "length": [1, 2, 4, 42, 43, 124, 176, 177, 270, 317, 341, 509, 571, 574], "forc": [1, 2, 4, 5, 41, 55, 80, 89, 121, 175, 190, 216, 227, 265, 295, 355, 481, 495, 535, 538, 571, 574], "add_support": [1, 2, 3, 4], "add_load": [1, 2, 3, 4], "build": [1, 4, 527, 545, 571, 575], "trail": [1, 2, 3, 4, 5, 22, 148, 151, 153, 154, 155, 160, 170, 210, 221, 256, 262, 263, 264, 281, 317, 495, 509, 571], "automat": [1, 155, 571, 572, 574, 575], "build_trail": [1, 2, 3, 4, 5, 571], "comput": [1, 4, 5, 109, 117, 119, 155, 247, 258, 260, 542, 559, 571], "state": [1, 4, 5, 317], "static": [1, 4, 5, 328, 329, 526, 527, 532, 539, 540, 544, 545, 550, 556, 557, 574], "form": [1, 2, 3, 4, 5, 21, 51, 65, 66, 115, 147, 186, 200, 254, 328, 329, 346, 375, 384, 397, 398, 402, 458, 472, 486, 500, 524, 525, 531, 534, 537, 538, 572, 574, 575], "eta": [1, 2, 4, 5, 328, 329, 392, 396, 402, 524, 571], "1e": [1, 2, 3, 4, 5, 80, 89, 216, 227, 328, 329, 402, 524], "6": [1, 2, 3, 4, 5, 80, 89, 216, 227, 328, 329, 402, 524, 575], "tmax": [1, 2, 4, 5, 328, 329, 392, 396, 402, 524, 571], "100": [1, 2, 3, 4, 5, 123, 269, 328, 329, 402, 524], "verbos": [1, 2, 328, 329], "true": [1, 2, 4, 5, 48, 51, 52, 53, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 97, 98, 99, 100, 112, 115, 116, 128, 129, 153, 170, 183, 186, 187, 188, 203, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 235, 236, 237, 238, 251, 254, 255, 274, 275, 281, 302, 303, 313, 314, 324, 325, 337, 338, 351, 352, 366, 367, 380, 381, 404, 405, 419, 420, 434, 435, 449, 450, 463, 464, 477, 478, 491, 492, 505, 506, 520, 521, 567, 568], "plot": [1, 2, 3, 4, 5, 525, 541, 543, 558], "result": [1, 3, 4, 5, 24, 28, 33, 87, 94, 95, 96, 100, 152, 161, 166, 225, 232, 233, 234, 238], "scene": [1, 2, 3, 4, 5], "nodes": [1, 2, 3, 4, 5], "shift": [1, 4, 5], "transform": [1, 2, 3, 4, 5], "from_vector": [1, 2, 3, 4, 5], "show": [1, 2, 3, 4, 5, 575], "content": 1, "zoom_ext": [1, 2, 3, 4, 5], "data": [2, 3, 24, 25, 28, 29, 33, 48, 51, 52, 56, 58, 59, 63, 76, 87, 94, 95, 96, 100, 112, 115, 116, 122, 127, 128, 129, 145, 146, 152, 153, 156, 161, 162, 166, 170, 183, 186, 187, 191, 193, 194, 198, 211, 225, 232, 233, 234, 238, 251, 254, 255, 268, 273, 274, 275, 281, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 348, 350, 351, 352, 353, 354, 359, 360, 361, 362, 365, 366, 367, 368, 369, 371, 372, 373, 374, 376, 377, 379, 380, 381, 382, 383, 384, 388, 389, 390, 391, 403, 404, 405, 406, 407, 412, 413, 414, 415, 418, 419, 420, 421, 422, 427, 428, 429, 430, 433, 434, 435, 436, 437, 442, 443, 444, 445, 448, 449, 450, 451, 452, 454, 455, 456, 457, 459, 460, 462, 463, 464, 465, 466, 468, 469, 470, 471, 473, 474, 476, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 504, 505, 506, 507, 508, 513, 514, 515, 516, 519, 520, 521, 522, 523, 540, 541, 557, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 574], "point": [2, 3, 39, 45, 53, 60, 62, 63, 64, 87, 97, 100, 130, 133, 173, 179, 188, 195, 197, 198, 199, 225, 235, 238, 276, 279, 300, 311, 322, 330, 335, 378, 461, 467, 565], "4": [2, 3, 4, 5], "trail_edg": [2, 3, 160], "deviation_edg": [2, 3, 5, 153, 158], "kei": [2, 4, 22, 27, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 54, 62, 71, 73, 74, 75, 78, 79, 80, 81, 85, 86, 89, 90, 91, 92, 93, 101, 102, 103, 105, 107, 108, 109, 111, 112, 113, 114, 115, 121, 124, 126, 137, 138, 143, 144, 148, 153, 158, 159, 160, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 185, 186, 189, 197, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 221, 223, 224, 227, 228, 229, 230, 231, 239, 240, 241, 243, 245, 246, 247, 249, 250, 251, 252, 253, 254, 264, 265, 270, 272, 281, 282, 285, 286, 291, 292, 306, 330, 355, 393, 399, 400, 401, 408, 423, 438, 509, 560, 571], "u": [2, 5, 26, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 72, 124, 157, 168, 173, 174, 175, 176, 177, 178, 179, 182, 183, 186, 187, 206, 270, 295, 317], "v": [2, 5, 26, 35, 39, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 72, 124, 157, 168, 173, 174, 175, 176, 177, 178, 179, 182, 183, 186, 187, 206, 270, 295, 317, 575], "deviat": [2, 5, 22, 148, 158, 170, 213, 257, 295, 341, 355, 571], "indirect": 2, "set": [2, 37, 38, 46, 49, 50, 51, 52, 60, 67, 69, 101, 102, 110, 111, 113, 114, 115, 116, 137, 138, 171, 172, 180, 184, 185, 186, 187, 195, 201, 203, 239, 240, 248, 250, 252, 253, 254, 255, 285, 286, 355, 402, 408, 423, 438, 509, 524, 571], "loadscal": [2, 3], "reactionscal": [2, 3], "os": 3, "time": [3, 5, 155, 524, 571, 575], "pointconstraint": 3, "trailedgeparamet": 3, "deviationedgeparamet": [3, 4, 5], "here": [3, 575], "path": [3, 58, 63, 76, 122, 128, 133, 193, 198, 211, 268, 274, 279, 298, 302, 309, 313, 320, 324, 333, 337, 344, 351, 361, 366, 373, 380, 390, 404, 414, 419, 429, 434, 444, 449, 456, 463, 470, 477, 484, 491, 498, 505, 515, 520, 563, 567], "dirnam": 3, "__file__": 3, "IN": [3, 576], "abspath": 3, "join": 3, "03_bridge_2d": 3, "json": [3, 58, 59, 128, 129, 146, 193, 194, 274, 275, 294, 298, 299, 302, 303, 305, 309, 310, 313, 314, 316, 320, 321, 324, 325, 327, 333, 334, 337, 338, 340, 344, 345, 351, 352, 354, 361, 362, 366, 367, 369, 373, 374, 380, 381, 383, 390, 391, 404, 405, 407, 414, 415, 419, 420, 422, 429, 430, 434, 435, 437, 444, 445, 449, 450, 452, 456, 457, 463, 464, 466, 470, 471, 477, 478, 480, 484, 485, 491, 492, 494, 498, 499, 505, 506, 508, 515, 516, 520, 521, 523, 563, 564, 567, 568, 570, 571], "from_json": 3, "appli": [3, 55, 80, 89, 108, 118, 149, 190, 216, 227, 246, 259, 335, 560], "gener": [3, 4, 5, 26, 155, 157, 328, 329, 574], "find": [3, 55, 122, 158, 160, 190, 268, 402, 524, 572, 574, 575], "initi": [3, 357, 358, 364, 410, 411, 417, 425, 426, 432, 440, 441, 447, 511, 512, 518], "opt": [3, 5], "defin": [3, 123, 269, 317, 330, 565], "constraint": [3, 4, 5, 384, 385, 394, 397, 398, 400, 524, 571, 574], "nodes_opt": 3, "target_point": 3, "20": 3, "67": 3, "42": 3, "7": [3, 575], "15": 3, "28": 3, "84": 3, "zip": 3, "add_constraint": [3, 4, 5], "paramet": [3, 4, 5, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 69, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 121, 122, 123, 124, 128, 129, 133, 135, 136, 137, 138, 139, 140, 141, 142, 147, 148, 149, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 265, 268, 269, 270, 274, 275, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 296, 297, 298, 299, 300, 302, 303, 307, 308, 309, 310, 311, 313, 314, 318, 319, 320, 321, 322, 324, 325, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 342, 343, 344, 345, 351, 352, 355, 357, 358, 359, 360, 361, 362, 364, 366, 367, 371, 372, 373, 374, 380, 381, 386, 388, 389, 390, 391, 393, 395, 399, 401, 402, 404, 405, 408, 410, 411, 412, 413, 414, 415, 417, 419, 420, 423, 425, 426, 427, 428, 429, 430, 432, 434, 435, 438, 440, 441, 442, 443, 444, 445, 447, 449, 450, 454, 455, 456, 457, 463, 464, 468, 469, 470, 471, 477, 478, 482, 483, 484, 485, 491, 492, 496, 497, 498, 499, 505, 506, 509, 511, 512, 513, 514, 515, 516, 518, 520, 521, 524, 525, 526, 527, 533, 536, 540, 543, 544, 545, 551, 554, 557, 560, 561, 562, 563, 564, 565, 567, 568, 571], "add_paramet": [3, 4, 5], "bound_low": [3, 355, 408, 423, 438, 509], "bound_up": [3, 355, 408, 423, 438, 509], "10": [3, 4, 5, 572], "record": 3, "start": [3, 5, 39, 40, 42, 44, 45, 47, 60, 122, 130, 155, 173, 174, 176, 178, 179, 182, 195, 264, 268, 276, 573, 575], "form_opt": [3, 4, 5], "solve_nlopt": [3, 4, 5, 571], "algorithm": [3, 5, 30, 54, 55, 77, 163, 189, 190, 212, 328, 329, 402, 524, 571], "slsqp": [3, 4, 402, 524], "iter": [3, 5, 48, 89, 112, 123, 153, 154, 170, 183, 227, 251, 267, 269, 281, 282, 328, 329, 402, 524, 571], "ep": [3, 5, 402, 524], "print": [3, 4, 5, 328, 329], "out": [3, 4, 5, 328, 329, 575, 576], "f": [3, 5], "number_of_paramet": [3, 5], "number_of_constraint": [3, 5], "elaps": [3, 5, 524], "final": [3, 5, 524, 575], "valu": [3, 4, 5, 37, 38, 41, 45, 49, 50, 51, 87, 100, 101, 102, 104, 106, 113, 114, 115, 137, 138, 139, 140, 141, 142, 171, 172, 175, 179, 184, 185, 186, 225, 238, 239, 240, 242, 244, 252, 253, 254, 285, 286, 287, 288, 289, 290, 349, 357, 358, 364, 402, 410, 411, 417, 425, 426, 432, 440, 441, 447, 495, 503, 511, 512, 518, 524, 571], "object": [3, 4, 5, 24, 29, 30, 33, 37, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 77, 82, 83, 84, 94, 96, 97, 98, 99, 123, 127, 128, 129, 133, 145, 146, 149, 151, 152, 162, 163, 166, 171, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 212, 219, 220, 222, 232, 234, 235, 236, 237, 269, 273, 274, 275, 279, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 350, 351, 352, 353, 354, 359, 360, 361, 362, 365, 366, 367, 368, 369, 371, 372, 373, 374, 379, 380, 381, 382, 383, 384, 388, 389, 390, 391, 392, 396, 403, 404, 405, 406, 407, 412, 413, 414, 415, 418, 419, 420, 421, 422, 427, 428, 429, 430, 433, 434, 435, 436, 437, 442, 443, 444, 445, 448, 449, 450, 451, 452, 454, 455, 456, 457, 462, 463, 464, 465, 466, 468, 469, 470, 471, 476, 477, 478, 479, 480, 482, 483, 484, 485, 490, 491, 492, 493, 494, 496, 497, 498, 499, 504, 505, 506, 507, 508, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 532, 550, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575], "function": [3, 4, 5, 37, 38, 49, 50, 51, 52, 82, 98, 101, 102, 113, 114, 116, 123, 155, 171, 172, 184, 185, 186, 187, 219, 236, 239, 240, 252, 253, 255, 269, 328, 329, 392, 396, 524], "penalti": [3, 4, 5, 571], "norm": [3, 4, 5, 524], "gradient": [3, 4, 5, 392, 402, 524, 571], "gradient_norm": [3, 4, 5, 571], "figsiz": [3, 4, 5], "16": [3, 4, 5, 575], "9": [3, 4, 5], "t": [3, 4, 5, 45, 124, 151, 179, 270, 575], "40": 3, "target": [3, 341, 347, 370, 376, 453, 459, 467, 473, 474, 481, 487, 495, 501, 571, 574], "x": [3, 5, 408], "y": [3, 5, 423], "z": [3, 84, 222, 438], "size": [3, 46, 90, 110, 180, 228, 248], "facecolor": 3, "90": 3, "math": [4, 5], "sqrt": 4, "trailedgeforceconstraint": [4, 5], "width": 4, "height": 4, "auto": [4, 5], "auxiliari": [4, 5, 153, 154, 155, 210, 256, 282, 571], "auxiliary_trail": [4, 5, 155, 571], "minim": [4, 396], "axiliari": [4, 5], "goal": [4, 385, 400], "auxiliary_trail_edg": [4, 5, 571], "should": [4, 5, 39, 51, 52, 55, 115, 116, 153, 170, 173, 186, 187, 190, 254, 255, 281, 540, 557], "small": 4, "number": [4, 5, 30, 31, 32, 34, 64, 67, 69, 117, 118, 119, 120, 123, 163, 164, 165, 167, 199, 201, 203, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 269, 328, 329, 394, 395, 402, 524], "total": [4, 524], "format": [4, 24, 28, 33, 71, 85, 87, 94, 95, 96, 100, 105, 125, 129, 152, 161, 166, 205, 223, 225, 232, 233, 234, 238, 243, 271, 275, 303, 314, 325, 338, 352, 367, 381, 405, 420, 435, 450, 464, 478, 492, 506, 521, 568, 571], "ns": [4, 5], "show_nodetext": 4, "nodetext": 4, "show_edgetext": 4, "edgetext": 4, "pad": [4, 5], "pi": 5, "co": 5, "sin": 5, "numpi": [5, 329, 575], "np": 5, "util": 5, "pairwis": 5, "creat": [5, 24, 28, 33, 57, 61, 94, 95, 96, 131, 152, 161, 166, 192, 196, 232, 233, 234, 277, 300, 311, 322, 335, 397, 398, 526, 544, 565, 571], "diamet": 5, "num_sid": 5, "onli": [5, 53, 69, 78, 97, 188, 203, 214, 235, 397, 398, 402, 524, 565, 571, 574, 575], "even": 5, "appendix_length": 5, "tension_forc": 5, "compression_forc": 5, "bound": [5, 357, 358, 397, 410, 411, 425, 426, 440, 441, 511, 512, 542, 559], "test": [5, 210, 213, 218, 221], "subdivis": 5, "assert": 5, "remov": [5, 400, 401, 571], "last": [5, 155, 575], "theta": 5, "linspac": 5, "radiu": 5, "i": [5, 144, 292], "enumer": 5, "perimet": 5, "tension": [5, 572, 574], "list": [5, 21, 24, 27, 28, 33, 38, 39, 40, 44, 45, 46, 47, 49, 50, 54, 55, 57, 60, 62, 67, 69, 74, 75, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 102, 103, 107, 108, 109, 110, 113, 114, 121, 122, 123, 130, 132, 134, 144, 147, 152, 154, 158, 159, 160, 161, 166, 172, 173, 174, 178, 179, 180, 182, 184, 185, 189, 190, 192, 195, 197, 201, 203, 208, 209, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 238, 240, 241, 245, 246, 247, 248, 252, 253, 265, 268, 269, 276, 278, 280, 282, 292, 300, 311, 322, 330, 335, 524, 526, 527, 544, 545, 565, 571], "rang": [5, 45, 51, 115, 124, 179, 186, 254, 270], "intern": [5, 328, 329, 574], "ar": [5, 55, 124, 155, 190, 270, 402, 524, 571, 573, 574, 575], "half_num_sid": 5, "int": [5, 30, 31, 32, 34, 46, 64, 67, 69, 74, 75, 80, 81, 86, 89, 90, 108, 110, 117, 118, 119, 120, 121, 123, 126, 138, 144, 158, 160, 163, 164, 165, 167, 180, 199, 201, 203, 208, 209, 216, 217, 218, 224, 227, 228, 246, 248, 249, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 272, 286, 292, 328, 329, 330, 346, 375, 402, 458, 472, 486, 500, 524, 533, 536, 551, 554, 560], "auxiliary_trail_length": [5, 571], "zero": [5, 84, 222], "all": [5, 25, 38, 50, 54, 84, 88, 89, 102, 153, 154, 156, 170, 172, 185, 189, 222, 226, 227, 240, 264, 281, 282, 571, 575, 576], "allow": [5, 575], "chang": [5, 87, 100, 225, 238, 571], "low_bound": 5, "up_bound": 5, "edge_forc": 5, "lbfg": [5, 402, 524], "1000": 5, "45": 5, "A": [6, 21, 26, 30, 38, 49, 50, 51, 53, 54, 60, 62, 63, 64, 71, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 97, 98, 99, 102, 105, 108, 113, 114, 115, 121, 122, 123, 131, 132, 133, 136, 139, 140, 141, 142, 144, 147, 149, 151, 155, 157, 158, 160, 163, 172, 184, 185, 186, 188, 189, 195, 197, 198, 199, 205, 208, 209, 211, 212, 214, 216, 217, 218, 219, 220, 222, 223, 224, 226, 228, 229, 230, 231, 235, 236, 237, 240, 243, 246, 252, 253, 254, 265, 268, 269, 277, 278, 279, 282, 284, 287, 288, 289, 290, 292, 295, 306, 311, 317, 328, 329, 330, 335, 393, 399, 402, 524, 536, 554, 560, 565, 573, 574, 576], "b": [6, 573, 574], "tubular": [6, 573, 574], "3d": [6, 571, 573, 574], "c": [6, 87, 100, 225, 238, 573, 574, 575, 576], "circular": [6, 573, 574], "dome": [6, 571, 573, 574], "d": [6, 87, 100, 225, 238, 572, 573, 574], "jessen": [6, 573, 574], "e": [6, 144, 292, 317, 573, 574], "spiral": [6, 571, 573, 574], "staircas": [6, 571, 573, 574], "download": [7, 8, 9, 10, 11, 575], "rhino": [7, 540, 557, 571, 574, 575], "file": [7, 8, 9, 10, 11, 58, 59, 63, 128, 133, 193, 194, 198, 274, 279, 298, 299, 302, 309, 310, 313, 320, 321, 324, 333, 334, 337, 344, 345, 351, 361, 362, 366, 373, 374, 380, 390, 391, 404, 414, 415, 419, 429, 430, 434, 444, 445, 449, 456, 457, 463, 470, 471, 477, 484, 485, 491, 498, 499, 505, 515, 516, 520, 563, 564, 567, 571, 576], "grasshopp": [7, 8, 9, 10, 11, 540, 557, 571, 573, 574], "class": [21, 147, 295, 306, 317, 330, 341, 355, 370, 384, 408, 423, 438, 453, 467, 481, 495, 509, 525, 543, 560, 571], "arg": [21, 147, 311, 349, 475, 489, 503], "kwarg": [21, 51, 115, 147, 186, 254, 295, 300, 306, 311, 317, 322, 330, 349, 384, 475, 489, 503, 525, 526, 527, 543, 544, 545, 560], "sourc": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 301, 302, 303, 304, 305, 306, 307, 312, 313, 314, 315, 316, 317, 318, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 337, 338, 339, 340, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 566, 567, 568, 569, 570, 574], "base": [21, 65, 147, 295, 306, 317, 330, 341, 355, 370, 384, 402, 408, 423, 438, 453, 467, 481, 495, 509, 524, 525, 543, 560, 571], "The": [21, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 71, 72, 73, 78, 79, 80, 85, 89, 90, 91, 92, 93, 101, 102, 103, 105, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135, 136, 137, 138, 145, 146, 147, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 206, 207, 210, 213, 214, 215, 216, 221, 223, 227, 228, 229, 230, 231, 239, 240, 241, 243, 245, 247, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 281, 282, 283, 284, 285, 286, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 388, 389, 390, 391, 392, 394, 395, 396, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 540, 543, 544, 545, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576], "heart": [21, 147], "life": [21, 147], "argument": [21, 51, 123, 139, 140, 141, 142, 147, 186, 269, 287, 288, 289, 290, 300, 311, 322, 526, 527, 544, 545, 571], "dict": [21, 38, 48, 50, 51, 52, 56, 62, 71, 74, 75, 85, 86, 102, 105, 112, 114, 115, 116, 127, 129, 137, 138, 139, 140, 141, 142, 144, 145, 147, 153, 170, 172, 183, 185, 186, 187, 191, 197, 205, 208, 209, 223, 224, 240, 243, 251, 253, 254, 255, 273, 275, 281, 285, 286, 287, 288, 289, 290, 292, 293, 297, 300, 301, 303, 304, 308, 311, 312, 314, 315, 319, 322, 323, 325, 326, 332, 336, 338, 339, 343, 350, 352, 353, 360, 365, 367, 368, 372, 379, 381, 382, 389, 403, 405, 406, 413, 418, 420, 421, 428, 433, 435, 436, 443, 448, 450, 451, 455, 462, 464, 465, 469, 476, 478, 479, 483, 490, 492, 493, 497, 504, 506, 507, 514, 519, 521, 522, 526, 527, 533, 536, 544, 545, 551, 554, 562, 566, 568, 569], "keyword": [21, 147, 300, 311, 322, 526, 527, 544, 545], "return": [21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 354, 359, 360, 361, 362, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 388, 389, 390, 391, 402, 403, 404, 405, 406, 407, 412, 413, 414, 415, 418, 419, 420, 421, 422, 427, 428, 429, 430, 433, 434, 435, 436, 437, 442, 443, 444, 445, 448, 449, 450, 451, 452, 454, 455, 456, 457, 458, 459, 462, 463, 464, 465, 466, 468, 469, 470, 471, 472, 473, 476, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 533, 536, 539, 540, 541, 542, 544, 545, 546, 547, 548, 551, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571], "method": [21, 147, 295, 306, 317, 330, 341, 355, 370, 384, 402, 408, 423, 438, 453, 467, 481, 495, 509, 524, 525, 532, 543, 550, 560, 571], "inherit": [21, 147, 295, 306, 317, 330, 341, 355, 370, 384, 408, 423, 438, 453, 467, 481, 495, 509, 525, 543, 560], "an": [22, 29, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 52, 55, 56, 58, 59, 63, 82, 98, 101, 113, 114, 118, 120, 127, 128, 129, 133, 137, 148, 154, 155, 162, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 185, 187, 190, 191, 193, 194, 198, 210, 213, 217, 219, 221, 236, 239, 252, 253, 259, 261, 273, 274, 275, 279, 282, 285, 296, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 310, 312, 313, 314, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 331, 332, 333, 334, 336, 337, 338, 342, 343, 344, 345, 346, 350, 351, 352, 355, 359, 360, 361, 362, 365, 366, 367, 371, 372, 373, 374, 375, 379, 380, 381, 384, 388, 389, 390, 391, 401, 402, 403, 404, 405, 408, 412, 413, 414, 415, 418, 419, 420, 423, 427, 428, 429, 430, 433, 434, 435, 438, 442, 443, 444, 445, 448, 449, 450, 454, 455, 456, 457, 458, 462, 463, 464, 468, 469, 470, 471, 472, 476, 477, 478, 482, 483, 484, 485, 486, 490, 491, 492, 496, 497, 498, 499, 500, 504, 505, 506, 509, 513, 514, 515, 516, 519, 520, 521, 525, 526, 527, 532, 533, 540, 543, 544, 545, 550, 551, 557, 561, 562, 563, 564, 566, 567, 568, 571, 574, 575, 576], "tupl": [22, 27, 37, 38, 41, 43, 46, 48, 49, 50, 51, 52, 54, 57, 60, 62, 66, 67, 75, 112, 115, 116, 130, 132, 137, 144, 148, 153, 159, 170, 171, 172, 175, 177, 180, 181, 183, 184, 185, 186, 187, 189, 192, 195, 197, 200, 201, 209, 210, 213, 221, 251, 254, 255, 276, 278, 281, 285, 292, 300, 311, 322, 346, 375, 458, 472, 486, 500, 533, 542, 551, 559, 571], "doubl": [23, 150, 575], "rtype": [24, 28, 33, 87, 94, 95, 96, 100, 152, 161, 166, 225, 232, 233, 234, 238], "arrai": [24, 28, 33, 86, 87, 94, 95, 96, 100, 144, 152, 161, 166, 224, 225, 232, 233, 234, 238, 292, 397, 398], "adjac": [24, 94, 152, 232], "matrix": [24, 28, 33, 87, 94, 95, 96, 100, 152, 161, 166, 225, 232, 233, 234, 238], "network": [24, 25, 26, 28, 30, 33, 35, 48, 53, 54, 55, 60, 62, 63, 64, 72, 73, 76, 77, 82, 83, 84, 87, 88, 94, 95, 96, 97, 98, 99, 100, 112, 122, 123, 130, 132, 133, 134, 135, 136, 152, 156, 157, 161, 163, 166, 168, 183, 188, 189, 190, 195, 197, 198, 199, 206, 207, 211, 212, 219, 220, 222, 225, 226, 232, 233, 234, 235, 236, 237, 238, 251, 268, 269, 276, 278, 279, 280, 283, 284, 528, 546], "datastructur": [24, 26, 28, 33, 76, 87, 94, 95, 96, 100, 152, 157, 161, 166, 211, 225, 232, 233, 234, 238], "obj": [24, 26, 33, 37, 49, 63, 76, 94, 96, 101, 113, 133, 152, 157, 166, 171, 184, 198, 211, 232, 234, 239, 252, 279], "get": [24, 26, 33, 37, 38, 41, 43, 46, 49, 50, 51, 52, 66, 67, 68, 69, 70, 76, 94, 96, 101, 102, 106, 108, 110, 111, 113, 114, 115, 116, 121, 152, 157, 166, 171, 172, 175, 177, 180, 181, 184, 185, 186, 187, 200, 201, 202, 203, 204, 211, 232, 234, 239, 240, 244, 246, 248, 249, 250, 252, 253, 254, 255, 265, 474, 573], "liter": [24, 28, 33, 87, 94, 95, 96, 100, 152, 161, 166, 225, 232, 233, 234, 238, 540, 557], "csc": [24, 28, 33, 87, 94, 95, 96, 100, 152, 161, 166, 225, 232, 233, 234, 238], "csr": [24, 28, 33, 87, 94, 95, 96, 100, 152, 161, 166, 225, 232, 233, 234, 238], "coo": [24, 28, 33, 87, 94, 95, 96, 100, 152, 161, 166, 225, 232, 233, 234, 238], "option": [24, 28, 29, 33, 37, 38, 39, 45, 46, 48, 49, 50, 51, 52, 53, 55, 60, 63, 64, 69, 71, 72, 85, 87, 90, 94, 95, 96, 97, 100, 101, 102, 103, 105, 110, 112, 113, 114, 115, 116, 123, 124, 128, 129, 139, 140, 141, 142, 152, 161, 162, 166, 171, 172, 173, 179, 180, 183, 184, 185, 186, 187, 188, 190, 195, 198, 199, 203, 205, 206, 223, 225, 228, 232, 233, 234, 235, 238, 239, 240, 241, 243, 248, 251, 252, 253, 254, 255, 269, 270, 274, 275, 287, 288, 289, 290, 296, 302, 303, 307, 313, 314, 318, 324, 325, 328, 329, 331, 337, 338, 342, 351, 352, 359, 366, 367, 371, 380, 381, 388, 402, 404, 405, 412, 419, 420, 427, 434, 435, 442, 449, 450, 454, 463, 464, 468, 477, 478, 482, 491, 492, 496, 505, 506, 513, 520, 521, 524, 526, 527, 533, 536, 540, 544, 545, 551, 554, 557, 561, 567, 568, 575], "array_lik": [24, 28, 33, 87, 94, 95, 96, 100, 152, 161, 166, 225, 232, 233, 234, 238], "construct": [24, 28, 33, 56, 58, 59, 60, 62, 63, 64, 65, 87, 94, 95, 96, 100, 152, 161, 166, 191, 193, 194, 195, 197, 198, 199, 225, 232, 233, 234, 238, 297, 298, 299, 308, 309, 310, 319, 320, 321, 332, 333, 334, 343, 344, 345, 360, 361, 362, 372, 373, 374, 389, 390, 391, 413, 414, 415, 428, 429, 430, 443, 444, 445, 455, 456, 457, 469, 470, 471, 483, 484, 485, 497, 498, 499, 514, 515, 516, 562, 563, 564], "none": [25, 26, 29, 35, 36, 37, 38, 49, 50, 51, 53, 55, 60, 63, 71, 85, 97, 101, 102, 105, 111, 113, 114, 115, 123, 128, 133, 135, 137, 139, 140, 141, 142, 156, 157, 162, 168, 169, 171, 172, 184, 185, 186, 188, 190, 195, 198, 205, 223, 235, 239, 240, 243, 250, 252, 253, 254, 269, 274, 279, 283, 285, 287, 288, 289, 290, 296, 302, 306, 307, 313, 317, 318, 324, 328, 329, 331, 337, 341, 342, 351, 355, 359, 366, 370, 371, 380, 388, 402, 404, 408, 412, 419, 423, 427, 434, 438, 442, 449, 453, 454, 463, 467, 468, 477, 481, 482, 491, 495, 496, 505, 509, 513, 520, 524, 528, 529, 530, 533, 536, 539, 540, 541, 546, 547, 548, 551, 554, 556, 557, 558, 561, 567, 571], "cl": [26, 29, 157, 162, 296, 307, 318, 331, 342, 359, 371, 388, 412, 427, 442, 454, 468, 482, 496, 513, 561], "graph": [26, 36, 57, 61, 117, 119, 125, 131, 155, 157, 169, 192, 196, 258, 260, 271, 277], "g": [26, 157, 317], "h": [26, 157], "same": [26, 55, 157, 190, 574], "vertic": [26, 55, 76, 84, 157, 190, 211, 222], "whose": [26, 157, 565], "consist": [26, 157], "present": [26, 72, 73, 157, 206, 207], "refer": [26, 157, 402, 524, 574, 575], "wolfram": [26, 157], "mathworld": [26, 157], "avail": [26, 82, 98, 154, 157, 219, 236, 575], "http": [26, 82, 98, 157, 219, 236, 572], "com": [26, 157], "graphcompl": [26, 157], "html": [26, 157], "exampl": [26, 35, 36, 52, 55, 76, 116, 157, 168, 169, 187, 190, 211, 255, 571, 574], "network_compl": [26, 157], "from_obj": [26, 76, 157, 211], "line": [26, 53, 55, 60, 63, 76, 82, 97, 98, 130, 157, 188, 190, 195, 198, 211, 219, 235, 236, 276, 300, 322, 370, 575], "ani": [26, 38, 48, 49, 50, 51, 52, 55, 102, 112, 113, 114, 115, 116, 139, 140, 141, 142, 157, 172, 183, 184, 185, 186, 187, 190, 240, 251, 252, 253, 254, 255, 282, 287, 288, 289, 290, 526, 527, 544, 545, 574, 576], "has_edg": [26, 157], "direct": [26, 40, 45, 55, 61, 72, 157, 174, 179, 190, 196, 206, 330, 571], "fals": [26, 48, 51, 52, 53, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 84, 87, 97, 98, 100, 112, 115, 116, 128, 129, 153, 155, 157, 170, 183, 186, 187, 188, 203, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 225, 235, 236, 238, 251, 254, 255, 274, 275, 281, 302, 303, 313, 314, 324, 325, 328, 329, 337, 338, 351, 352, 366, 367, 380, 381, 404, 405, 419, 420, 434, 435, 449, 450, 463, 464, 477, 478, 491, 492, 505, 506, 520, 521, 567, 568, 571], "connect": [27, 28, 60, 63, 64, 69, 76, 79, 95, 158, 159, 160, 161, 195, 198, 199, 203, 211, 215, 233, 575, 576], "hashabl": [27, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 62, 66, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 85, 86, 88, 90, 91, 92, 93, 97, 101, 102, 103, 105, 107, 109, 110, 112, 113, 114, 115, 116, 122, 124, 132, 137, 144, 159, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 192, 197, 200, 201, 202, 203, 205, 206, 207, 208, 209, 214, 215, 223, 224, 226, 228, 229, 230, 231, 235, 239, 240, 241, 243, 245, 247, 248, 251, 252, 253, 254, 255, 268, 270, 278, 285, 292], "identifi": [27, 31, 32, 34, 35, 36, 37, 38, 46, 48, 49, 50, 51, 52, 54, 57, 66, 67, 68, 69, 72, 73, 78, 79, 86, 88, 90, 91, 92, 93, 101, 102, 103, 107, 109, 110, 112, 113, 114, 115, 116, 122, 137, 138, 159, 164, 165, 167, 168, 169, 171, 172, 180, 183, 184, 185, 186, 187, 189, 192, 200, 201, 202, 203, 206, 207, 214, 215, 224, 226, 228, 229, 230, 231, 239, 240, 241, 245, 247, 248, 251, 252, 253, 254, 255, 268, 285, 286, 571], "make": [29, 155, 162, 296, 307, 318, 331, 341, 342, 359, 371, 388, 412, 427, 442, 454, 468, 481, 482, 495, 496, 513, 561, 575], "independ": [29, 136, 162, 284, 296, 307, 318, 331, 342, 359, 371, 388, 412, 427, 442, 454, 468, 482, 496, 513, 561], "type": [29, 55, 56, 58, 59, 121, 162, 190, 191, 193, 194, 265, 296, 297, 298, 299, 307, 308, 309, 310, 318, 319, 320, 321, 331, 332, 333, 334, 342, 343, 344, 345, 359, 360, 361, 362, 371, 372, 373, 374, 388, 389, 390, 391, 412, 413, 414, 415, 427, 428, 429, 430, 442, 443, 444, 445, 454, 455, 456, 457, 468, 469, 470, 471, 482, 483, 484, 485, 496, 497, 498, 499, 513, 514, 515, 516, 526, 527, 540, 544, 545, 557, 561, 562, 563, 564, 571, 575], "default": [29, 80, 89, 137, 138, 139, 140, 141, 142, 153, 162, 170, 216, 227, 281, 285, 286, 287, 288, 289, 290, 296, 307, 318, 328, 329, 331, 342, 359, 371, 388, 402, 412, 427, 442, 454, 468, 482, 496, 513, 524, 561, 571], "current": [29, 87, 100, 162, 225, 238, 296, 307, 318, 331, 342, 347, 359, 371, 376, 388, 412, 427, 442, 454, 459, 468, 473, 482, 487, 496, 501, 513, 529, 530, 542, 547, 548, 559, 561], "thi": [29, 30, 54, 55, 56, 58, 59, 77, 82, 98, 155, 162, 163, 189, 190, 191, 193, 194, 212, 219, 236, 282, 296, 297, 298, 299, 307, 308, 309, 310, 318, 319, 320, 321, 328, 329, 331, 332, 333, 334, 342, 343, 344, 345, 357, 358, 359, 360, 361, 362, 371, 372, 373, 374, 388, 389, 390, 391, 402, 410, 411, 412, 413, 414, 415, 425, 426, 427, 428, 429, 430, 440, 441, 442, 443, 444, 445, 454, 455, 456, 457, 468, 469, 470, 471, 482, 483, 484, 485, 496, 497, 498, 499, 511, 512, 513, 514, 515, 516, 524, 561, 562, 563, 564, 571, 575, 576], "count": [30, 163], "cross": [30, 54, 77, 82, 83, 98, 99, 163, 189, 212, 219, 220, 236, 237, 553], "pair": [30, 37, 38, 51, 54, 57, 60, 66, 71, 74, 75, 77, 85, 86, 102, 105, 115, 130, 132, 144, 163, 171, 172, 186, 189, 192, 195, 200, 205, 208, 209, 212, 223, 224, 240, 243, 254, 276, 278, 292, 526, 540, 544, 557], "note": [30, 54, 55, 76, 77, 78, 82, 87, 98, 100, 135, 136, 137, 138, 151, 154, 155, 163, 189, 190, 211, 212, 214, 219, 225, 236, 238, 282, 283, 284, 285, 286, 317, 357, 358, 410, 411, 425, 426, 440, 441, 511, 512, 565, 572], "assum": [30, 54, 77, 163, 189, 212, 575], "li": [30, 54, 77, 84, 163, 189, 212, 222], "xy": [30, 54, 77, 84, 163, 189, 212, 222], "plane": [30, 53, 54, 77, 82, 83, 84, 97, 98, 99, 163, 188, 189, 212, 219, 220, 222, 235, 236, 237, 317, 453, 571], "neighbor": [31, 32, 34, 55, 78, 92, 93, 109, 123, 124, 164, 165, 167, 190, 214, 230, 231, 247, 269, 270], "numer": [32, 165, 402, 524, 574], "incom": [32, 92, 165, 230], "degre": [33, 64, 96, 166, 199, 234], "outgo": [34, 93, 167, 231], "delet": [35, 36, 168, 169, 571], "first": [35, 72, 124, 155, 168, 206, 270, 402, 524, 571, 575], "second": [35, 72, 124, 168, 206, 270], "name": [37, 38, 49, 50, 51, 101, 102, 113, 114, 115, 137, 138, 139, 140, 141, 142, 171, 172, 184, 185, 186, 239, 240, 252, 253, 254, 285, 286, 287, 288, 289, 290, 356, 402, 409, 424, 439, 510, 524, 575], "attribut": [37, 38, 48, 49, 50, 51, 52, 101, 102, 112, 113, 114, 115, 116, 137, 138, 139, 140, 141, 142, 153, 170, 171, 172, 183, 184, 185, 186, 187, 239, 240, 251, 252, 253, 254, 255, 281, 285, 286, 287, 288, 289, 290, 356, 409, 424, 439, 510, 571], "str": [37, 38, 39, 48, 49, 50, 51, 52, 59, 60, 63, 71, 85, 101, 102, 103, 105, 112, 113, 114, 115, 116, 124, 125, 129, 137, 138, 139, 140, 141, 142, 146, 171, 172, 173, 183, 184, 185, 186, 187, 194, 195, 198, 205, 223, 239, 240, 241, 243, 251, 252, 253, 254, 255, 270, 271, 275, 285, 286, 287, 288, 289, 290, 294, 299, 303, 305, 310, 314, 316, 321, 325, 327, 334, 338, 340, 345, 352, 354, 362, 367, 369, 374, 381, 383, 391, 402, 405, 407, 415, 420, 422, 430, 435, 437, 445, 450, 452, 457, 464, 466, 471, 478, 480, 485, 492, 494, 499, 506, 508, 516, 521, 523, 524, 526, 527, 533, 536, 544, 545, 551, 554, 564, 568, 570], "when": [37, 101, 171, 239, 571, 575], "us": [37, 38, 49, 50, 52, 53, 55, 60, 63, 66, 67, 68, 69, 71, 82, 85, 87, 97, 98, 100, 101, 102, 105, 113, 114, 116, 171, 172, 184, 185, 187, 188, 190, 195, 198, 200, 201, 202, 203, 205, 219, 223, 225, 235, 236, 238, 239, 240, 243, 252, 253, 255, 329, 402, 524, 526, 541, 544, 558, 571, 572, 573, 574, 575, 576], "setter": [37, 38, 49, 50, 101, 102, 113, 114, 171, 172, 184, 185, 239, 240, 252, 253, 571], "rais": [37, 38, 49, 50, 53, 82, 97, 98, 101, 102, 113, 114, 123, 124, 137, 138, 145, 146, 171, 172, 184, 185, 188, 219, 235, 236, 239, 240, 252, 253, 269, 270, 285, 286, 293, 294, 304, 305, 315, 316, 326, 327, 339, 340, 353, 354, 368, 369, 382, 383, 406, 407, 421, 422, 436, 437, 451, 452, 465, 466, 479, 480, 493, 494, 507, 508, 522, 523, 569, 570, 571], "keyerror": [37, 38, 49, 50, 101, 102, 113, 114, 137, 138, 171, 172, 184, 185, 239, 240, 252, 253, 285, 286], "If": [37, 38, 45, 48, 49, 50, 51, 52, 53, 69, 72, 82, 87, 97, 98, 100, 101, 102, 112, 113, 114, 115, 116, 123, 124, 128, 129, 137, 138, 158, 160, 171, 172, 179, 183, 184, 185, 186, 187, 188, 203, 206, 219, 225, 235, 236, 238, 239, 240, 251, 252, 253, 254, 255, 269, 270, 274, 275, 285, 286, 302, 303, 313, 314, 317, 324, 325, 328, 329, 337, 338, 351, 352, 366, 367, 380, 381, 402, 404, 405, 419, 420, 434, 435, 449, 450, 463, 464, 477, 478, 491, 492, 505, 506, 520, 521, 524, 567, 568, 572, 573, 575], "doe": [37, 38, 49, 50, 101, 102, 113, 114, 137, 138, 171, 172, 184, 185, 239, 240, 252, 253, 285, 286, 574], "exist": [37, 38, 49, 50, 76, 82, 98, 101, 102, 113, 114, 137, 138, 171, 172, 184, 185, 211, 219, 236, 239, 240, 252, 253, 282, 285, 286, 571], "multipl": [38, 49, 50, 102, 113, 114, 172, 184, 185, 240, 252, 253, 384], "empti": [38, 50, 102, 158, 160, 172, 185, 240], "dictionari": [38, 56, 62, 71, 74, 75, 85, 86, 102, 105, 139, 140, 141, 142, 144, 172, 191, 197, 205, 208, 209, 223, 224, 240, 243, 287, 288, 289, 290, 292, 297, 308, 319, 332, 343, 360, 372, 389, 393, 399, 413, 428, 443, 455, 469, 483, 497, 514, 562, 571], "correspond": [38, 50, 71, 75, 85, 86, 102, 105, 114, 144, 172, 185, 205, 209, 223, 224, 240, 243, 253, 292, 526, 540, 544, 557], "provid": [38, 51, 56, 114, 123, 172, 186, 191, 253, 269, 297, 308, 319, 332, 343, 360, 372, 389, 413, 428, 443, 455, 469, 483, 497, 514, 526, 544, 562, 574, 576], "ax": [39, 103, 173, 241, 541, 558, 571], "xyz": [39, 44, 45, 70, 87, 100, 103, 108, 111, 132, 143, 173, 178, 179, 204, 225, 238, 241, 246, 250, 278, 291, 300, 306, 311, 322, 330, 335, 370, 453, 467, 565], "coordin": [39, 44, 45, 60, 62, 84, 103, 109, 111, 130, 132, 134, 173, 178, 179, 195, 197, 222, 241, 247, 250, 276, 278, 280, 300, 311, 322, 335, 408, 423, 438, 542, 559, 565], "end": [39, 40, 42, 44, 45, 47, 60, 122, 130, 151, 173, 174, 176, 178, 179, 182, 195, 268, 276, 300, 322], "along": [39, 45, 124, 173, 179, 270], "which": [39, 51, 52, 55, 115, 116, 173, 186, 187, 190, 254, 255, 540, 557], "includ": [39, 173, 282, 571, 576], "float": [39, 40, 41, 42, 43, 44, 45, 47, 60, 62, 71, 80, 85, 89, 103, 105, 107, 109, 123, 124, 130, 132, 134, 173, 174, 175, 176, 177, 178, 179, 182, 195, 197, 205, 216, 223, 227, 241, 243, 245, 247, 269, 270, 276, 278, 280, 328, 329, 330, 335, 347, 349, 376, 402, 459, 473, 487, 501, 503, 524, 542, 559, 565], "vector": [40, 45, 47, 87, 100, 107, 108, 121, 174, 179, 182, 225, 238, 245, 246, 265, 330, 335, 376, 459, 473, 475, 481, 487, 489], "locat": [44, 45, 178, 179], "midpoint": [44, 178], "outsid": [45, 55, 179, 190], "lie": [45, 179], "random": [46, 64, 66, 67, 68, 69, 110, 180, 199, 200, 201, 202, 203, 248], "sampl": [46, 110, 180, 248], "over": [48, 89, 112, 153, 154, 170, 183, 227, 251, 267, 281, 282], "bool": [48, 51, 52, 53, 69, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 97, 98, 99, 100, 112, 115, 116, 128, 129, 153, 155, 170, 183, 186, 187, 188, 203, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 235, 236, 237, 238, 251, 254, 255, 274, 275, 281, 302, 303, 313, 314, 324, 325, 328, 329, 337, 338, 351, 352, 366, 367, 380, 381, 404, 405, 419, 420, 434, 435, 449, 450, 463, 464, 477, 478, 491, 492, 505, 506, 520, 521, 567, 568], "yield": [48, 51, 52, 89, 112, 115, 116, 126, 153, 154, 170, 183, 186, 187, 227, 251, 254, 255, 264, 266, 267, 272, 281, 282], "addit": [48, 51, 52, 82, 98, 112, 115, 116, 139, 140, 141, 142, 183, 186, 187, 219, 236, 251, 254, 255, 287, 288, 289, 290, 311], "next": [48, 51, 52, 89, 112, 115, 116, 126, 153, 154, 170, 183, 186, 187, 227, 251, 254, 255, 264, 267, 272, 281, 282, 328, 329, 574, 575], "its": [48, 51, 52, 107, 115, 116, 123, 124, 127, 145, 146, 183, 186, 187, 245, 254, 255, 269, 270, 273, 293, 294, 301, 304, 305, 311, 312, 315, 316, 323, 326, 327, 336, 339, 340, 350, 353, 354, 365, 368, 369, 379, 382, 383, 387, 403, 406, 407, 418, 421, 422, 433, 436, 437, 448, 451, 452, 462, 465, 466, 476, 479, 480, 490, 493, 494, 504, 507, 508, 519, 522, 523, 566, 569, 570], "attr": [48, 51, 52, 112, 183, 186, 187, 251], "contain": [49, 50, 56, 58, 59, 63, 72, 114, 128, 184, 185, 191, 193, 194, 198, 206, 253, 274, 297, 298, 299, 302, 308, 309, 310, 313, 319, 320, 321, 324, 332, 333, 334, 337, 343, 344, 345, 351, 360, 361, 362, 366, 372, 373, 374, 380, 389, 390, 391, 404, 413, 414, 415, 419, 428, 429, 430, 434, 443, 444, 445, 449, 455, 456, 457, 463, 469, 470, 471, 477, 483, 484, 485, 491, 497, 498, 499, 505, 514, 515, 516, 520, 562, 563, 564, 567], "per": [49, 50, 64, 114, 184, 185, 199, 253, 397, 398, 524], "request": [49, 50, 102, 184, 185, 240], "condit": [51, 52, 115, 116, 186, 187, 254, 255, 576], "certain": [51, 52, 71, 85, 105, 115, 116, 186, 187, 205, 223, 243, 254, 255], "can": [51, 82, 98, 115, 186, 219, 236, 254, 571, 575], "min": [51, 115, 186, 254], "max": [51, 115, 186, 254], "predic": [52, 116, 187, 255], "lambda": [52, 116, 187, 255], "callabl": [52, 116, 123, 187, 255, 269], "you": [52, 116, 187, 255, 572, 573, 574, 575], "want": [52, 116, 187, 255, 575], "evalu": [52, 116, 187, 255], "take": [52, 55, 116, 187, 190, 255, 398], "fix": [53, 97, 123, 151, 188, 235, 269, 571], "straightlin": [53, 97, 188, 235], "emb": [53, 97, 188, 235], "two": [53, 54, 76, 97, 122, 154, 155, 188, 189, 211, 235, 268, 300, 322, 575], "straight": [53, 55, 82, 97, 98, 188, 190, 219, 235, 236], "embed": [53, 55, 82, 83, 97, 98, 99, 188, 190, 219, 220, 235, 236, 237], "wa": [53, 97, 188, 235, 571, 575], "success": [53, 97, 188, 235], "otherwis": [53, 72, 76, 77, 80, 81, 82, 83, 84, 97, 98, 99, 188, 206, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 235, 236, 237, 565, 576], "importerror": [53, 82, 97, 98, 188, 219, 235, 236], "networkx": [53, 61, 97, 131, 188, 196, 235, 277], "instal": [53, 82, 97, 98, 188, 219, 235, 236, 571, 574], "each": [54, 55, 113, 132, 189, 190, 252, 278], "repres": [54, 60, 132, 189, 195, 278], "vertex": [54, 55, 66, 75, 144, 189, 190, 200, 209, 292], "breakpoint": [55, 190], "face": [55, 190], "break": [55, 190], "found": [55, 190], "primarili": [55, 190], "up": [55, 85, 105, 190, 223, 243, 575], "between": [55, 64, 122, 190, 199, 268, 347, 376, 459, 473, 487, 501], "specif": [55, 72, 73, 79, 190, 206, 207, 215, 575], "For": [55, 190, 526, 527, 544, 545], "applic": [55, 190], "involv": [55, 190], "dual": [55, 190], "where": [55, 118, 126, 190, 259, 272, 335, 560, 565], "extern": [55, 190], "reaction": [55, 121, 190, 265, 481, 538, 571, 574], "input": [55, 190, 571], "essenti": [55, 190], "wall": [55, 190], "follow": [55, 190, 402, 524, 575, 576], "maze": [55, 190], "solv": [55, 190, 402, 524, 574, 575], "It": [55, 82, 98, 190, 219, 236], "reli": [55, 190], "repes": [55, 190], "determin": [55, 190], "order": [55, 155, 190, 282, 398], "around": [55, 190], "alwai": [55, 190], "turn": [55, 190], "classmethod": [56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 191, 192, 193, 194, 195, 196, 197, 198, 199, 297, 298, 299, 300, 308, 309, 310, 311, 319, 320, 321, 322, 332, 333, 334, 335, 343, 344, 345, 360, 361, 362, 372, 373, 374, 389, 390, 391, 413, 414, 415, 428, 429, 430, 443, 444, 445, 455, 456, 457, 469, 470, 471, 483, 484, 485, 497, 498, 499, 514, 515, 516, 562, 563, 564, 565], "instanc": [56, 57, 58, 59, 61, 131, 191, 192, 193, 194, 196, 277, 297, 298, 299, 308, 309, 310, 319, 320, 321, 332, 333, 334, 343, 344, 345, 360, 361, 362, 372, 373, 374, 389, 390, 391, 413, 414, 415, 428, 429, 430, 443, 444, 445, 455, 456, 457, 469, 470, 471, 483, 484, 485, 497, 498, 499, 514, 515, 516, 562, 563, 564], "ha": [56, 58, 59, 77, 78, 126, 191, 193, 194, 212, 214, 272, 297, 298, 299, 308, 309, 310, 319, 320, 321, 332, 333, 334, 343, 344, 345, 360, 361, 362, 372, 373, 374, 389, 390, 391, 413, 414, 415, 428, 429, 430, 443, 444, 445, 455, 456, 457, 469, 470, 471, 483, 484, 485, 497, 498, 499, 514, 515, 516, 562, 563, 564, 565, 575], "correct": [56, 58, 59, 191, 193, 194, 297, 298, 299, 308, 309, 310, 319, 320, 321, 332, 333, 334, 343, 344, 345, 360, 361, 362, 372, 373, 374, 389, 390, 391, 413, 414, 415, 428, 429, 430, 443, 444, 445, 455, 456, 457, 469, 470, 471, 483, 484, 485, 497, 498, 499, 514, 515, 516, 562, 563, 564], "schema": [56, 58, 59, 127, 145, 146, 191, 193, 194, 273, 293, 294, 297, 298, 299, 301, 304, 305, 308, 309, 310, 312, 315, 316, 319, 320, 321, 323, 326, 327, 332, 333, 334, 336, 339, 340, 343, 344, 345, 350, 353, 354, 360, 361, 362, 365, 368, 369, 372, 373, 374, 379, 382, 383, 389, 390, 391, 403, 406, 407, 413, 414, 415, 418, 421, 422, 428, 429, 430, 433, 436, 437, 443, 444, 445, 448, 451, 452, 455, 456, 457, 462, 465, 466, 469, 470, 471, 476, 479, 480, 483, 484, 485, 490, 493, 494, 497, 498, 499, 504, 507, 508, 514, 515, 516, 519, 522, 523, 562, 563, 564, 566, 569, 570], "new": [57, 61, 131, 192, 196, 277, 575], "inform": [57, 192], "about": [57, 192, 573], "filepath": [58, 63, 128, 133, 193, 198, 274, 279, 298, 302, 309, 313, 320, 324, 333, 337, 344, 351, 361, 366, 373, 380, 390, 404, 414, 419, 429, 434, 444, 449, 456, 463, 470, 477, 484, 491, 498, 505, 515, 520, 563, 567], "serial": [58, 59, 128, 129, 193, 194, 274, 275, 298, 299, 302, 303, 309, 310, 313, 314, 320, 321, 324, 325, 333, 334, 337, 338, 344, 345, 351, 352, 361, 362, 366, 367, 373, 374, 380, 381, 390, 391, 404, 405, 414, 415, 419, 420, 429, 430, 434, 435, 444, 445, 449, 450, 456, 457, 463, 464, 470, 471, 477, 478, 484, 485, 491, 492, 498, 499, 505, 506, 515, 516, 520, 521, 563, 564, 567, 568, 571], "string": [58, 59, 63, 71, 85, 105, 128, 129, 133, 193, 194, 198, 205, 223, 243, 274, 275, 279, 298, 299, 302, 303, 309, 310, 313, 314, 320, 321, 324, 325, 333, 334, 337, 338, 344, 345, 351, 352, 361, 362, 366, 367, 373, 374, 380, 381, 390, 391, 404, 405, 414, 415, 419, 420, 429, 430, 434, 435, 444, 445, 449, 450, 456, 457, 463, 464, 470, 471, 477, 478, 484, 485, 491, 492, 498, 499, 505, 506, 515, 516, 520, 521, 563, 564, 567, 568], "like": [58, 63, 128, 133, 193, 198, 274, 279, 298, 302, 309, 313, 320, 324, 333, 337, 344, 351, 361, 366, 373, 380, 390, 404, 414, 419, 429, 434, 444, 449, 456, 463, 470, 477, 484, 491, 498, 505, 515, 520, 563, 567, 574, 575], "url": [58, 63, 193, 198, 298, 309, 320, 333, 344, 361, 373, 390, 414, 429, 444, 456, 470, 484, 498, 515, 563, 572], "precis": [60, 63, 71, 85, 105, 195, 198, 205, 223, 243], "geometr": [60, 63, 71, 85, 105, 195, 198, 205, 223, 243], "map": [60, 63, 71, 74, 75, 85, 86, 105, 144, 195, 198, 205, 208, 209, 223, 224, 243, 292, 393, 399, 526, 533, 536, 544, 551, 554], "digraph": [61, 131, 196, 277], "specifi": [62, 71, 85, 105, 197, 205, 223, 243, 571], "hshabl": [62, 197], "cloud": [64, 199], "pointcloud": [64, 199], "deprec": [66, 67, 68, 69, 200, 201, 202, 203, 571], "sinc": [66, 67, 68, 69, 200, 201, 202, 203], "version": [66, 67, 68, 69, 200, 201, 202, 203, 571, 575], "13": [66, 67, 68, 69, 200, 201, 202, 203], "edge_sampl": [66, 67, 200, 201], "instead": [66, 67, 68, 69, 136, 200, 201, 202, 203, 284, 571, 575], "n": [67, 69, 110, 201, 203, 248, 575], "node_sampl": [68, 69, 202, 203], "exclude_leav": [69, 203], "exclud": [69, 203], "leav": [69, 203], "one": [69, 77, 78, 203, 212, 214, 328, 329, 397, 398, 574, 575], "verifi": [72, 73, 76, 77, 78, 79, 83, 84, 99, 206, 207, 211, 212, 214, 215, 220, 222, 237, 387], "taken": [72, 206], "account": [72, 206], "indic": [74, 132, 208, 278, 393, 399, 575], "index": [74, 75, 86, 144, 208, 209, 224, 292], "uv": [75, 144, 209, 292], "everi": [76, 123, 155, 211, 269, 328, 329], "them": [76, 211], "network_is_connect": [76, 211], "least": [77, 154, 212, 402, 524], "leaf": [78, 214], "min_forc": [80, 89, 216, 227], "06": [80, 89, 216, 227, 328, 329, 402, 524], "check": [80, 81, 82, 98, 104, 216, 217, 219, 236, 242, 571], "larg": [80, 89, 216, 227], "enough": [80, 89, 216, 227], "minimum": [80, 89, 216, 227], "magnitud": [80, 89, 216, 227, 330], "consid": [80, 89, 216, 227], "flag": [80, 81, 155, 210, 213, 216, 217, 218, 221, 328, 329, 571, 575], "packag": [82, 98, 219, 236], "drawn": [82, 98, 219, 236], "without": [82, 83, 98, 99, 219, 220, 236, 237, 576], "shown": [82, 98, 219, 236], "furthermor": [82, 98, 219, 236], "python": [82, 98, 219, 236, 573, 574, 575], "bind": [82, 98, 219, 236], "suit": [82, 98, 219, 236], "anaconda": [82, 98, 219, 236, 575], "org": [82, 98, 219, 236, 572], "conda": [82, 98, 219, 236], "forg": [82, 98, 219, 236, 575], "fase": [83, 99, 220, 237], "normal": [87, 100, 225, 238], "laplacian": [87, 100, 107, 225, 238, 245], "entri": [87, 100, 225, 238, 397, 398], "diagon": [87, 100, 225, 238], "l": [87, 100, 225, 238], "dot": [87, 100, 225, 238], "centroid": [87, 100, 107, 109, 123, 225, 238, 245, 247, 269], "therefor": [87, 100, 225, 238], "By": [87, 100, 225, 238], "sign": [87, 100, 225, 238, 317, 571], "dsiplac": [87, 100, 225, 238], "could": [87, 100, 225, 238], "more": [87, 100, 225, 238, 402, 524], "natur": [87, 100, 225, 238], "wai": [87, 100, 225, 238, 575], "ring": [90, 107, 228, 245], "compon": [103, 108, 241, 246, 571, 575], "neighborhood": [107, 245], "load_vector": [108, 246], "match": [115, 116, 254, 255, 481, 526, 527, 544, 545, 565], "assign": [120, 126, 249, 261, 272, 560, 565], "residu": [121, 265], "shortest": [122, 268], "lead": [122, 268], "kmax": [123, 269], "damp": [123, 269], "callback": [123, 269, 328, 329], "callback_arg": [123, 269], "move": [123, 269, 402, 524, 574], "free": [123, 269, 571, 576], "mesh": [123, 269], "maximum": [123, 269, 328, 329, 402, 524], "factor": [123, 269], "user": [123, 269, 571, 575], "execut": [123, 269], "after": [123, 269], "pass": [123, 269, 575], "except": [123, 124, 146, 269, 270, 294, 305, 316, 327, 340, 354, 369, 383, 407, 422, 437, 452, 466, 480, 494, 508, 523, 570], "split": [124, 270, 571], "insert": [124, 270], "posit": [124, 270, 328, 329, 330, 335, 370, 453, 467, 565], "valueerror": [124, 270], "been": [126, 272, 575], "convert": [127, 273, 301, 312, 323, 336, 350, 365, 379, 403, 418, 433, 448, 462, 476, 490, 504, 519, 566, 571], "nativ": [127, 273, 301, 312, 323, 336, 350, 365, 379, 403, 418, 433, 448, 462, 476, 490, 504, 519, 566, 574], "represent": [127, 128, 129, 146, 273, 274, 275, 294, 301, 302, 303, 305, 312, 313, 314, 316, 323, 324, 325, 327, 336, 337, 338, 340, 350, 351, 352, 354, 365, 366, 367, 369, 379, 380, 381, 383, 403, 404, 405, 407, 418, 419, 420, 422, 433, 434, 435, 437, 448, 449, 450, 452, 462, 463, 464, 466, 476, 477, 478, 480, 490, 491, 492, 494, 504, 505, 506, 508, 519, 520, 521, 523, 566, 567, 568, 570], "describ": [127, 273, 300, 301, 311, 312, 322, 323, 336, 350, 365, 379, 403, 418, 433, 448, 462, 476, 490, 504, 519, 566], "pretti": [128, 129, 274, 275, 302, 303, 313, 314, 324, 325, 337, 338, 351, 352, 366, 367, 380, 381, 404, 405, 419, 420, 434, 435, 449, 450, 463, 464, 477, 478, 491, 492, 505, 506, 520, 521, 567, 568], "human": [128, 274, 302, 313, 324, 337, 351, 366, 380, 404, 419, 434, 449, 463, 477, 491, 505, 520, 567], "readabl": [128, 274, 302, 313, 324, 337, 351, 366, 380, 404, 419, 434, 449, 463, 477, 491, 505, 520, 567], "s": [129, 145, 146, 275, 293, 294, 300, 303, 304, 305, 314, 315, 316, 322, 325, 326, 327, 338, 339, 340, 352, 353, 354, 357, 358, 367, 368, 369, 381, 382, 383, 405, 406, 407, 410, 411, 420, 421, 422, 425, 426, 435, 436, 437, 440, 441, 450, 451, 452, 464, 465, 466, 478, 479, 480, 492, 493, 494, 506, 507, 508, 511, 512, 521, 522, 523, 568, 569, 570, 575], "newli": [131, 277], "write": [133, 279], "modifi": [135, 136, 143, 283, 284, 291, 384, 576], "place": [135, 283], "copi": [136, 284, 576], "origin": [136, 155, 217, 264, 284, 408, 423, 438], "unset": [137, 138, 285, 286], "implicitli": [137, 138, 285, 286], "back": [137, 138, 285, 286], "store": [137, 138, 285, 286], "attr_dict": [139, 140, 141, 142, 287, 288, 289, 290], "kwattr": [139, 140, 141, 142, 287, 288, 289, 290], "updat": [139, 140, 141, 142, 287, 288, 289, 290, 541, 558, 571], "compil": [139, 140, 141, 142, 287, 288, 289, 290], "remain": [139, 140, 141, 142, 287, 288, 289, 290], "valid": [145, 146, 293, 294, 304, 305, 315, 316, 326, 327, 339, 340, 353, 354, 368, 369, 382, 383, 406, 407, 421, 422, 436, 437, 451, 452, 465, 466, 479, 480, 493, 494, 507, 508, 522, 523, 569, 570], "against": [145, 146, 293, 294, 304, 305, 315, 316, 326, 327, 328, 329, 339, 340, 353, 354, 368, 369, 382, 383, 406, 407, 421, 422, 436, 437, 451, 452, 465, 466, 474, 479, 480, 493, 494, 507, 508, 522, 523, 569, 570], "schemaerror": [145, 293, 304, 315, 326, 339, 353, 368, 382, 406, 421, 436, 451, 465, 479, 493, 507, 522, 569], "jsonschema": [146, 294, 305, 316, 327, 340, 354, 369, 383, 407, 422, 437, 452, 466, 480, 494, 508, 523, 570], "validationerror": [146, 294, 305, 316, 327, 340, 354, 369, 383, 407, 422, 437, 452, 466, 480, 494, 508, 523, 570], "veri": 147, "mark": [151, 328, 329], "continu": [151, 575], "thei": [151, 571, 575], "aren": 151, "simultan": [153, 170, 281, 574], "process": 155, "travers": 155, "begin": 155, "sequenc": [155, 181, 249, 266, 282], "characterist": 155, "append": 155, "unassign": 155, "part": [155, 575], "previou": 155, "recalcul": 155, "call": [155, 571, 575], "attach": [158, 160], "given": [181, 527, 545], "whether": [210, 213, 221, 576], "k": 249, "largest": 266, "extra": [300, 311, 322, 571], "overrid": 317, "absolut": [317, 357, 358, 410, 411, 425, 426, 440, 441, 511, 512], "howev": [317, 574], "combinatori": [317, 572, 574], "preserv": 317, "todo": 317, "addexplicit": 317, "signatur": [317, 571], "constructor": 317, "run": [328, 329, 402, 524, 574, 575], "distanc": [328, 329, 347, 376, 459, 473, 487, 501], "threshold": [328, 329, 402, 524], "converg": [328, 329, 402, 524], "compar": [328, 329, 474], "sum": [328, 329], "hit": [328, 329, 402, 524, 575], "befor": [328, 329, 575], "consum": [328, 329], "calcul": [328, 329, 357, 358, 392, 410, 411, 425, 426, 440, 441, 511, 512, 571], "stop": [328, 329, 402, 524], "earli": [328, 329, 402, 524], "oper": [328, 329, 574], "formdiagram": [328, 329, 402, 524, 525, 565], "weight": [341, 370, 453, 467, 481, 495], "floatconstraint": [341, 495, 571], "reach": [341, 495], "error": [347, 376, 459, 473, 487, 501, 571, 575], "squar": [347, 376, 402, 459, 473, 487, 501, 524], "differ": [347, 376, 459, 473, 487, 501, 574], "edgeparamet": [355, 509], "parametr": [356, 409, 424, 439, 510], "lower": [357, 410, 425, 440, 511], "minu": [357, 410, 425, 440, 511], "upper": [358, 411, 426, 441, 512], "plu": [358, 411, 426, 441, 512], "vectorconstraint": [370, 453, 467, 481, 571], "pull": [370, 453, 467], "rai": 370, "meet": [384, 574], "problem": [386, 387, 402, 524, 574, 575], "sane": 387, "mind": 387, "ad": [394, 571], "grad_func": 396, "paremet": 398, "care": 398, "keep": [398, 571, 575], "nlopt": [402, 524, 571], "local": [402, 524], "sequenti": [402, 524], "program": [402, 524, 575], "low": [402, 524], "storag": [402, 524], "broyden": [402, 524], "fletcher": [402, 524], "goldfarb": [402, 524], "shanno": [402, 524], "auglag": [402, 524], "augment": [402, 524], "lagrangian": [402, 524], "mma": [402, 524], "asymptot": [402, 524], "tnewton": [402, 524], "precondit": [402, 524], "truncat": [402, 524], "newton": [402, 524], "document": [402, 524, 571, 575, 576], "detail": [402, 524], "theoret": [402, 524], "underpin": [402, 524], "ignor": [402, 524, 571], "until": [402, 524], "exhaust": [402, 524], "cem": [402, 524, 572, 573], "nodeparamet": [408, 423, 438], "constrain": [524, 572, 574, 575], "task": 524, "through": [524, 575], "proxi": 524, "server": 524, "hyperspac": 524, "tunnel": 524, "grad_norm": 524, "cummul": 524, "durat": 524, "millisecond": 524, "statu": 524, "item": [525, 526, 527, 540, 543, 544, 545, 557], "networkartist": [525, 543], "artist": [525, 526, 527, 540, 543, 544, 545, 557, 571], "draw": [525, 532, 533, 534, 535, 536, 537, 538, 543, 550, 551, 552, 553, 554, 555, 571], "form_diagram": 525, "collect": [526, 527, 532, 544, 545, 550, 575], "relev": [526, 527, 544, 545], "see": [526, 527, 544, 545], "accord": [526, 544], "item_artist": [526, 544], "regist": [526, 544], "artist_typ": [527, 540, 545, 557], "clear": [529, 530, 547, 548], "canva": [529, 530, 547, 548, 575], "label": [531, 533, 536, 549, 551, 554], "entir": [532, 550], "text": [533, 536, 551, 554], "select": [533, 536, 551, 554], "act": 535, "view": [539, 542, 556, 559], "item_typ": [540, 557], "context": [540, 557], "compat": [540, 557, 571], "blender": [540, 557, 574], "visual": [540, 541, 557, 558, 575], "limit": [541, 558, 575, 576], "corner": [542, 559], "box": [542, 559], "topology_diagram": 543, "inscrib": 553, "circl": 553, "node_support": 560, "notabl": 571, "project": [571, 572], "adher": 571, "semant": 571, "implement": 571, "proxyserv": 571, "gh": [571, 575], "acceler": 571, "__str__": 571, "constrainedformfind": 571, "nlopt_statu": 571, "better": 571, "interpret": 571, "ghpython": [571, 575], "bug": 571, "registr": 571, "creation": 571, "caus": 571, "old": 571, "compas_rhino": [571, 575], "rhinoplan": 571, "from_geometri": 571, "from_rhino_point_and_vector": 571, "from_rhino_point": 571, "from_rhino_lin": 571, "ghdata": 571, "jenssen": 571, "tube": 571, "is_node_support": 571, "renam": 571, "search": 571, "topologyartist": 571, "formartist": 571, "via": [571, 574], "plugin": [571, 574], "global": [571, 574], "color": 571, "dark": 571, "blue": 571, "grai": 571, "mechan": 571, "compli": 571, "topologyplott": 571, "formplott": 571, "serializ": 571, "pin": 571, "depend": [571, 574, 575], "8": 571, "due": 571, "networkplott": 571, "displai": 571, "green": 571, "light": 571, "assembl": 571, "ghplugin": 571, "wrap": 571, "edgesearch": 571, "output": 571, "drop": [571, 575], "ld": 571, "subscript": 571, "skip": 571, "assembletopologydiagram": 571, "draw_arrow": 571, "_draw_load": 571, "_draw_load_arrow": 571, "arrow": 571, "export": 571, "draw_trail": 571, "topologyartistcompon": 571, "number_of_trail_edg": 571, "number_of_deviation_edg": 571, "__repr__": 571, "edge_kei": 571, "node_kei": 571, "replac": [571, 575], "noderesult": 571, "wit": 571, "supportnoderesult": 571, "merg": [571, 576], "access": 571, "expos": 571, "hard": 571, "code": [571, 572, 574, 575], "ghcompon": 571, "frame": [571, 574], "to_compa": 571, "planeconstraint": 571, "formfind": 571, "eps_min": 571, "equilibrium_st": 571, "equilibrium_state_numpi": 571, "draw_seg": 571, "scheme": 571, "draw_edg": 571, "tight": 571, "autoscal": 571, "save": 571, "overcrop": 571, "imag": 571, "custom": 571, "form_plotter_proxi": 571, "topology_plotter_proxi": 571, "polygon": 571, "static_equilibrium_numpi": 571, "took": 571, "temporari": 571, "patch": 571, "deviationedgelengthconstraint": 571, "autograd": 571, "is_auxiliary_trail_edg": 571, "filter": 571, "number_of_auxiliary_trail": 571, "properti": 571, "auxiliary_trail_vector": 571, "full": 571, "under": 571, "anyth": 571, "longer": [571, 575], "reflect": 571, "immut": 571, "children": 571, "refactor": 571, "folder": 571, "nodemixin": 571, "node_xyz": 571, "rhino_instal": 571, "streamlin": 571, "symlink": 571, "src": 571, "ghuser": [571, 575], "gitignor": 571, "uninstal": [571, 575], "tag": 571, "regex": 571, "bumpvers": 571, "cfg": 571, "md": 571, "rst": 571, "research": 572, "pleas": [572, 575], "our": [572, 574, 575], "paper": 572, "preprint": 572, "misc": 572, "pastrana_constrainedformfinding_2021": 572, "titl": 572, "differenti": [572, 574], "pastrana": [572, 574, 576], "rafael": [572, 574, 576], "ohlbrock": [572, 574], "patrick": 572, "ol": [572, 574], "acunto": [572, 574], "pierluigi": [572, 574], "parascho": [572, 574], "stefana": [572, 574], "year": 572, "2021": [572, 576], "arxiv": 572, "ab": 572, "2111": 572, "02607": 572, "eprint": 572, "archiveprefix": 572, "And": 572, "repositori": 572, "softwar": [572, 574, 576], "model": [572, 574, 575], "framework": [572, 574], "doi": 572, "5281": 572, "zenodo": 572, "5705740": 572, "arpastrana": 572, "github": 572, "io": 572, "_cem": 572, "arpj": 572, "princeton": [572, 574], "arch": 572, "ethz": 572, "ch": 572, "oleohlbrock": 572, "pierluigidacunto": 572, "tum": 572, "de": 572, "edu": 572, "stefanaparascho": 572, "excit": 573, "mai": [573, 575], "help": 573, "approach": 574, "spatial": 574, "bar": 574, "subject": [574, 576], "combin": 574, "design": 574, "encapsul": 574, "open": 574, "tool": [574, 575], "enabl": 574, "formul": 574, "solut": 574, "plain": 574, "mix": 574, "explor": 574, "wider": 574, "spectrum": 574, "typolog": 574, "space": 574, "go": [574, 575], "beyond": 574, "convent": 574, "catalog": 574, "shell": 574, "cabl": 574, "net": 574, "effici": 574, "priori": 574, "best": 574, "fit": [574, 576], "shape": 574, "restrain": 574, "control": 574, "usabl": 574, "across": 574, "system": 574, "window": [574, 575], "maco": [574, 575], "linux": [574, 575], "perhap": 574, "dai": [574, 575], "also": 574, "metavers": 574, "cad": 574, "work": [574, 575], "necessari": 574, "interfac": 574, "seamlessli": 574, "insid": 574, "popular": 574, "environ": 574, "As": [574, 575], "extens": [574, 575], "offer": 574, "integr": 574, "exchang": 574, "other": [574, 575, 576], "ecosystem": 574, "those": [574, 575], "slider": 574, "person": [574, 576], "worri": 574, "ship": 574, "too": 574, "precook": 574, "readili": 574, "engin": [574, 575], "your": 574, "spaghetti": 574, "pipelin": 574, "develop": 574, "endors": 574, "introduct": 574, "api": 574, "changelog": 574, "cite": 574, "licens": 574, "four": 575, "step": 575, "we": 575, "have": 575, "machin": 575, "command": 575, "prompt": 575, "termin": 575, "chose": 575, "spacecowboi": 575, "prefer": 575, "bubbl": 575, "isol": 575, "In": 575, "word": 575, "what": 575, "happen": 575, "stai": 575, "requir": 575, "recommend": 575, "consult": 575, "encount": 575, "being": 575, "abl": 575, "microsoft": 575, "miss": 575, "fail": 575, "saniti": 575, "known": 575, "issu": 575, "page": 575, "instruct": 575, "how": 575, "liner": 575, "To": 575, "everyth": 575, "enter": 575, "celebr": 575, "There": 575, "complex": 575, "easier": 575, "do": [575, 576], "few": 575, "mous": 575, "click": 575, "hundr": 575, "bit": 575, "familiar": 575, "addition": 575, "close": 575, "three": 575, "sure": 575, "proceed": 575, "case": 575, "older": 575, "m": 575, "compani": 575, "let": 575, "compas_ghpython": 575, "were": 575, "wonder": 575, "launch": 575, "onto": 575, "send": 575, "pictur": 575, "onc": 575, "forget": 575, "who": 575, "don": 575, "know": 575, "consequ": 575, "alreadi": 575, "NOT": [575, 576], "past": 575, "latest": 575, "upgrad": 575, "altern": 575, "switch": 575, "had": 575, "mit": 576, "copyright": 576, "2020": 576, "permiss": 576, "herebi": 576, "grant": 576, "charg": 576, "obtain": 576, "associ": 576, "deal": 576, "restrict": 576, "right": 576, "publish": 576, "distribut": 576, "sublicens": 576, "sell": 576, "permit": 576, "whom": 576, "furnish": 576, "so": 576, "abov": 576, "notic": 576, "shall": 576, "substanti": 576, "portion": 576, "THE": 576, "IS": 576, "AS": 576, "warranti": 576, "OF": 576, "kind": 576, "express": 576, "OR": 576, "impli": 576, "BUT": 576, "TO": 576, "merchant": 576, "FOR": 576, "particular": 576, "purpos": 576, "AND": 576, "noninfring": 576, "NO": 576, "event": 576, "author": 576, "holder": 576, "BE": 576, "liabl": 576, "claim": 576, "damag": 576, "liabil": 576, "action": 576, "contract": 576, "tort": 576, "aris": 576, "WITH": 576}, "objects": {"": [[13, 0, 0, "-", "compas_cem"]], "compas_cem": [[14, 0, 0, "-", "diagrams"], [15, 0, 0, "-", "elements"], [16, 0, 0, "-", "equilibrium"], [17, 0, 0, "-", "loads"], [18, 0, 0, "-", "optimization"], [19, 0, 0, "-", "plotters"], [20, 0, 0, "-", "supports"]], "compas_cem.diagrams": [[21, 1, 1, "", "FormDiagram"], [147, 1, 1, "", "TopologyDiagram"]], "compas_cem.diagrams.FormDiagram": [[22, 2, 1, "", "add_edge"], [23, 2, 1, "", "add_node"], [24, 2, 1, "", "adjacency_matrix"], [25, 2, 1, "", "clear"], [26, 2, 1, "", "complement"], [27, 2, 1, "", "connected_edges"], [28, 2, 1, "", "connectivity_matrix"], [29, 2, 1, "", "copy"], [30, 2, 1, "", "count_crossings"], [31, 2, 1, "", "degree"], [32, 2, 1, "", "degree_in"], [33, 2, 1, "", "degree_matrix"], [34, 2, 1, "", "degree_out"], [35, 2, 1, "", "delete_edge"], [36, 2, 1, "", "delete_node"], [37, 2, 1, "", "edge_attribute"], [38, 2, 1, "", "edge_attributes"], [39, 2, 1, "", "edge_coordinates"], [40, 2, 1, "", "edge_direction"], [41, 2, 1, "", "edge_force"], [42, 2, 1, "", "edge_length"], [43, 2, 1, "", "edge_length_2"], [44, 2, 1, "", "edge_midpoint"], [45, 2, 1, "", "edge_point"], [46, 2, 1, "", "edge_sample"], [47, 2, 1, "", "edge_vector"], [48, 2, 1, "", "edges"], [49, 2, 1, "", "edges_attribute"], [50, 2, 1, "", "edges_attributes"], [51, 2, 1, "", "edges_where"], [52, 2, 1, "", "edges_where_predicate"], [53, 2, 1, "", "embed_in_plane"], [54, 2, 1, "", "find_crossings"], [55, 2, 1, "", "find_cycles"], [56, 2, 1, "", "from_data"], [57, 2, 1, "", "from_edges"], [58, 2, 1, "", "from_json"], [59, 2, 1, "", "from_jsonstring"], [60, 2, 1, "", "from_lines"], [61, 2, 1, "", "from_networkx"], [62, 2, 1, "", "from_nodes_and_edges"], [63, 2, 1, "", "from_obj"], [64, 2, 1, "", "from_pointcloud"], [65, 2, 1, "", "from_topology_diagram"], [66, 2, 1, "", "get_any_edge"], [67, 2, 1, "", "get_any_edges"], [68, 2, 1, "", "get_any_node"], [69, 2, 1, "", "get_any_nodes"], [70, 2, 1, "", "gkey"], [71, 2, 1, "", "gkey_key"], [72, 2, 1, "", "has_edge"], [73, 2, 1, "", "has_node"], [74, 2, 1, "", "index_key"], [75, 2, 1, "", "index_uv"], [76, 2, 1, "", "is_connected"], [77, 2, 1, "", "is_crossed"], [78, 2, 1, "", "is_leaf"], [79, 2, 1, "", "is_node_connected"], [80, 2, 1, "", "is_node_loaded"], [81, 2, 1, "", "is_node_support"], [82, 2, 1, "", "is_planar"], [83, 2, 1, "", "is_planar_embedding"], [84, 2, 1, "", "is_xy"], [85, 2, 1, "", "key_gkey"], [86, 2, 1, "", "key_index"], [87, 2, 1, "", "laplacian_matrix"], [88, 2, 1, "", "leaves"], [89, 2, 1, "", "loaded_nodes"], [90, 2, 1, "", "neighborhood"], [91, 2, 1, "", "neighbors"], [92, 2, 1, "", "neighbors_in"], [93, 2, 1, "", "neighbors_out"], [94, 2, 1, "", "network_adjacency_matrix"], [95, 2, 1, "", "network_connectivity_matrix"], [96, 2, 1, "", "network_degree_matrix"], [97, 2, 1, "", "network_embed_in_plane"], [98, 2, 1, "", "network_is_planar"], [99, 2, 1, "", "network_is_planar_embedding"], [100, 2, 1, "", "network_laplacian_matrix"], [101, 2, 1, "", "node_attribute"], [102, 2, 1, "", "node_attributes"], [103, 2, 1, "", "node_coordinates"], [104, 2, 1, "", "node_exists"], [105, 2, 1, "", "node_gkey"], [106, 2, 1, "", "node_key"], [107, 2, 1, "", "node_laplacian"], [108, 2, 1, "", "node_load"], [109, 2, 1, "", "node_neighborhood_centroid"], [110, 2, 1, "", "node_sample"], [111, 2, 1, "", "node_xyz"], [112, 2, 1, "", "nodes"], [113, 2, 1, "", "nodes_attribute"], [114, 2, 1, "", "nodes_attributes"], [115, 2, 1, "", "nodes_where"], [116, 2, 1, "", "nodes_where_predicate"], [117, 2, 1, "", "number_of_edges"], [118, 2, 1, "", "number_of_loaded_nodes"], [119, 2, 1, "", "number_of_nodes"], [120, 2, 1, "", "number_of_support_nodes"], [121, 2, 1, "", "reaction_force"], [122, 2, 1, "", "shortest_path"], [123, 2, 1, "", "smooth"], [124, 2, 1, "", "split_edge"], [125, 2, 1, "", "summary"], [126, 2, 1, "", "support_nodes"], [127, 2, 1, "", "to_data"], [128, 2, 1, "", "to_json"], [129, 2, 1, "", "to_jsonstring"], [130, 2, 1, "", "to_lines"], [131, 2, 1, "", "to_networkx"], [132, 2, 1, "", "to_nodes_and_edges"], [133, 2, 1, "", "to_obj"], [134, 2, 1, "", "to_points"], [135, 2, 1, "", "transform"], [136, 2, 1, "", "transformed"], [137, 2, 1, "", "unset_edge_attribute"], [138, 2, 1, "", "unset_node_attribute"], [139, 2, 1, "", "update_dea"], [140, 2, 1, "", "update_default_edge_attributes"], [141, 2, 1, "", "update_default_node_attributes"], [142, 2, 1, "", "update_dna"], [143, 2, 1, "", "update_node_xyz"], [144, 2, 1, "", "uv_index"], [145, 2, 1, "", "validate_data"], [146, 2, 1, "", "validate_json"]], "compas_cem.diagrams.TopologyDiagram": [[148, 2, 1, "", "add_edge"], [149, 2, 1, "", "add_load"], [150, 2, 1, "", "add_node"], [151, 2, 1, "", "add_support"], [152, 2, 1, "", "adjacency_matrix"], [153, 2, 1, "", "auxiliary_trail_edges"], [154, 2, 1, "", "auxiliary_trails"], [155, 2, 1, "", "build_trails"], [156, 2, 1, "", "clear"], [157, 2, 1, "", "complement"], [158, 2, 1, "", "connected_deviation_edges"], [159, 2, 1, "", "connected_edges"], [160, 2, 1, "", "connected_trail_edges"], [161, 2, 1, "", "connectivity_matrix"], [162, 2, 1, "", "copy"], [163, 2, 1, "", "count_crossings"], [164, 2, 1, "", "degree"], [165, 2, 1, "", "degree_in"], [166, 2, 1, "", "degree_matrix"], [167, 2, 1, "", "degree_out"], [168, 2, 1, "", "delete_edge"], [169, 2, 1, "", "delete_node"], [170, 2, 1, "", "deviation_edges"], [171, 2, 1, "", "edge_attribute"], [172, 2, 1, "", "edge_attributes"], [173, 2, 1, "", "edge_coordinates"], [174, 2, 1, "", "edge_direction"], [175, 2, 1, "", "edge_force"], [176, 2, 1, "", "edge_length"], [177, 2, 1, "", "edge_length_2"], [178, 2, 1, "", "edge_midpoint"], [179, 2, 1, "", "edge_point"], [180, 2, 1, "", "edge_sample"], [181, 2, 1, "", "edge_sequence"], [182, 2, 1, "", "edge_vector"], [183, 2, 1, "", "edges"], [184, 2, 1, "", "edges_attribute"], [185, 2, 1, "", "edges_attributes"], [186, 2, 1, "", "edges_where"], [187, 2, 1, "", "edges_where_predicate"], [188, 2, 1, "", "embed_in_plane"], [189, 2, 1, "", "find_crossings"], [190, 2, 1, "", "find_cycles"], [191, 2, 1, "", "from_data"], [192, 2, 1, "", "from_edges"], [193, 2, 1, "", "from_json"], [194, 2, 1, "", "from_jsonstring"], [195, 2, 1, "", "from_lines"], [196, 2, 1, "", "from_networkx"], [197, 2, 1, "", "from_nodes_and_edges"], [198, 2, 1, "", "from_obj"], [199, 2, 1, "", "from_pointcloud"], [200, 2, 1, "", "get_any_edge"], [201, 2, 1, "", "get_any_edges"], [202, 2, 1, "", "get_any_node"], [203, 2, 1, "", "get_any_nodes"], [204, 2, 1, "", "gkey"], [205, 2, 1, "", "gkey_key"], [206, 2, 1, "", "has_edge"], [207, 2, 1, "", "has_node"], [208, 2, 1, "", "index_key"], [209, 2, 1, "", "index_uv"], [210, 2, 1, "", "is_auxiliary_trail_edge"], [211, 2, 1, "", "is_connected"], [212, 2, 1, "", "is_crossed"], [213, 2, 1, "", "is_deviation_edge"], [214, 2, 1, "", "is_leaf"], [215, 2, 1, "", "is_node_connected"], [216, 2, 1, "", "is_node_loaded"], [217, 2, 1, "", "is_node_origin"], [218, 2, 1, "", "is_node_support"], [219, 2, 1, "", "is_planar"], [220, 2, 1, "", "is_planar_embedding"], [221, 2, 1, "", "is_trail_edge"], [222, 2, 1, "", "is_xy"], [223, 2, 1, "", "key_gkey"], [224, 2, 1, "", "key_index"], [225, 2, 1, "", "laplacian_matrix"], [226, 2, 1, "", "leaves"], [227, 2, 1, "", "loaded_nodes"], [228, 2, 1, "", "neighborhood"], [229, 2, 1, "", "neighbors"], [230, 2, 1, "", "neighbors_in"], [231, 2, 1, "", "neighbors_out"], [232, 2, 1, "", "network_adjacency_matrix"], [233, 2, 1, "", "network_connectivity_matrix"], [234, 2, 1, "", "network_degree_matrix"], [235, 2, 1, "", "network_embed_in_plane"], [236, 2, 1, "", "network_is_planar"], [237, 2, 1, "", "network_is_planar_embedding"], [238, 2, 1, "", "network_laplacian_matrix"], [239, 2, 1, "", "node_attribute"], [240, 2, 1, "", "node_attributes"], [241, 2, 1, "", "node_coordinates"], [242, 2, 1, "", "node_exists"], [243, 2, 1, "", "node_gkey"], [244, 2, 1, "", "node_key"], [245, 2, 1, "", "node_laplacian"], [246, 2, 1, "", "node_load"], [247, 2, 1, "", "node_neighborhood_centroid"], [248, 2, 1, "", "node_sample"], [249, 2, 1, "", "node_sequence"], [250, 2, 1, "", "node_xyz"], [251, 2, 1, "", "nodes"], [252, 2, 1, "", "nodes_attribute"], [253, 2, 1, "", "nodes_attributes"], [254, 2, 1, "", "nodes_where"], [255, 2, 1, "", "nodes_where_predicate"], [256, 2, 1, "", "number_of_auxiliary_trails"], [257, 2, 1, "", "number_of_deviation_edges"], [258, 2, 1, "", "number_of_edges"], [259, 2, 1, "", "number_of_loaded_nodes"], [260, 2, 1, "", "number_of_nodes"], [261, 2, 1, "", "number_of_support_nodes"], [262, 2, 1, "", "number_of_trail_edges"], [263, 2, 1, "", "number_of_trails"], [264, 2, 1, "", "origin_nodes"], [265, 2, 1, "", "reaction_force"], [266, 2, 1, "", "sequence_max"], [267, 2, 1, "", "sequences"], [268, 2, 1, "", "shortest_path"], [269, 2, 1, "", "smooth"], [270, 2, 1, "", "split_edge"], [271, 2, 1, "", "summary"], [272, 2, 1, "", "support_nodes"], [273, 2, 1, "", "to_data"], [274, 2, 1, "", "to_json"], [275, 2, 1, "", "to_jsonstring"], [276, 2, 1, "", "to_lines"], [277, 2, 1, "", "to_networkx"], [278, 2, 1, "", "to_nodes_and_edges"], [279, 2, 1, "", "to_obj"], [280, 2, 1, "", "to_points"], [281, 2, 1, "", "trail_edges"], [282, 2, 1, "", "trails"], [283, 2, 1, "", "transform"], [284, 2, 1, "", "transformed"], [285, 2, 1, "", "unset_edge_attribute"], [286, 2, 1, "", "unset_node_attribute"], [287, 2, 1, "", "update_dea"], [288, 2, 1, "", "update_default_edge_attributes"], [289, 2, 1, "", "update_default_node_attributes"], [290, 2, 1, "", "update_dna"], [291, 2, 1, "", "update_node_xyz"], [292, 2, 1, "", "uv_index"], [293, 2, 1, "", "validate_data"], [294, 2, 1, "", "validate_json"]], "compas_cem.elements": [[295, 1, 1, "", "DeviationEdge"], [306, 1, 1, "", "Node"], [317, 1, 1, "", "TrailEdge"]], "compas_cem.elements.DeviationEdge": [[296, 2, 1, "", "copy"], [297, 2, 1, "", "from_data"], [298, 2, 1, "", "from_json"], [299, 2, 1, "", "from_jsonstring"], [300, 2, 1, "", "from_line"], [301, 2, 1, "", "to_data"], [302, 2, 1, "", "to_json"], [303, 2, 1, "", "to_jsonstring"], [304, 2, 1, "", "validate_data"], [305, 2, 1, "", "validate_json"]], "compas_cem.elements.Node": [[307, 2, 1, "", "copy"], [308, 2, 1, "", "from_data"], [309, 2, 1, "", "from_json"], [310, 2, 1, "", "from_jsonstring"], [311, 2, 1, "", "from_point"], [312, 2, 1, "", "to_data"], [313, 2, 1, "", "to_json"], [314, 2, 1, "", "to_jsonstring"], [315, 2, 1, "", "validate_data"], [316, 2, 1, "", "validate_json"]], "compas_cem.elements.TrailEdge": [[318, 2, 1, "", "copy"], [319, 2, 1, "", "from_data"], [320, 2, 1, "", "from_json"], [321, 2, 1, "", "from_jsonstring"], [322, 2, 1, "", "from_line"], [323, 2, 1, "", "to_data"], [324, 2, 1, "", "to_json"], [325, 2, 1, "", "to_jsonstring"], [326, 2, 1, "", "validate_data"], [327, 2, 1, "", "validate_json"]], "compas_cem.equilibrium": [[328, 3, 1, "", "static_equilibrium"], [329, 3, 1, "", "static_equilibrium_numpy"]], "compas_cem.loads": [[330, 1, 1, "", "NodeLoad"]], "compas_cem.loads.NodeLoad": [[331, 2, 1, "", "copy"], [332, 2, 1, "", "from_data"], [333, 2, 1, "", "from_json"], [334, 2, 1, "", "from_jsonstring"], [335, 2, 1, "", "from_point_and_vector"], [336, 2, 1, "", "to_data"], [337, 2, 1, "", "to_json"], [338, 2, 1, "", "to_jsonstring"], [339, 2, 1, "", "validate_data"], [340, 2, 1, "", "validate_json"]], "compas_cem.optimization": [[341, 1, 1, "", "DeviationEdgeLengthConstraint"], [355, 1, 1, "", "DeviationEdgeParameter"], [370, 1, 1, "", "LineConstraint"], [384, 1, 1, "", "Optimizer"], [408, 1, 1, "", "OriginNodeXParameter"], [423, 1, 1, "", "OriginNodeYParameter"], [438, 1, 1, "", "OriginNodeZParameter"], [453, 1, 1, "", "PlaneConstraint"], [467, 1, 1, "", "PointConstraint"], [481, 1, 1, "", "ReactionForceConstraint"], [495, 1, 1, "", "TrailEdgeForceConstraint"], [509, 1, 1, "", "TrailEdgeParameter"], [524, 3, 1, "", "solve_nlopt_proxy"]], "compas_cem.optimization.DeviationEdgeLengthConstraint": [[342, 2, 1, "", "copy"], [343, 2, 1, "", "from_data"], [344, 2, 1, "", "from_json"], [345, 2, 1, "", "from_jsonstring"], [346, 2, 1, "", "key"], [347, 2, 1, "", "penalty"], [348, 2, 1, "", "reference"], [349, 2, 1, "", "target"], [350, 2, 1, "", "to_data"], [351, 2, 1, "", "to_json"], [352, 2, 1, "", "to_jsonstring"], [353, 2, 1, "", "validate_data"], [354, 2, 1, "", "validate_json"]], "compas_cem.optimization.DeviationEdgeParameter": [[356, 2, 1, "", "attr_name"], [357, 2, 1, "", "bound_low"], [358, 2, 1, "", "bound_up"], [359, 2, 1, "", "copy"], [360, 2, 1, "", "from_data"], [361, 2, 1, "", "from_json"], [362, 2, 1, "", "from_jsonstring"], [363, 2, 1, "", "key"], [364, 2, 1, "", "start_value"], [365, 2, 1, "", "to_data"], [366, 2, 1, "", "to_json"], [367, 2, 1, "", "to_jsonstring"], [368, 2, 1, "", "validate_data"], [369, 2, 1, "", "validate_json"]], "compas_cem.optimization.LineConstraint": [[371, 2, 1, "", "copy"], [372, 2, 1, "", "from_data"], [373, 2, 1, "", "from_json"], [374, 2, 1, "", "from_jsonstring"], [375, 2, 1, "", "key"], [376, 2, 1, "", "penalty"], [377, 2, 1, "", "reference"], [378, 2, 1, "", "target"], [379, 2, 1, "", "to_data"], [380, 2, 1, "", "to_json"], [381, 2, 1, "", "to_jsonstring"], [382, 2, 1, "", "validate_data"], [383, 2, 1, "", "validate_json"]], "compas_cem.optimization.Optimizer": [[385, 2, 1, "", "add_constraint"], [386, 2, 1, "", "add_parameter"], [387, 2, 1, "", "check_optimization_sanity"], [388, 2, 1, "", "copy"], [389, 2, 1, "", "from_data"], [390, 2, 1, "", "from_json"], [391, 2, 1, "", "from_jsonstring"], [392, 2, 1, "", "gradient_func"], [393, 2, 1, "", "index_parameter"], [394, 2, 1, "", "number_of_constraints"], [395, 2, 1, "", "number_of_parameters"], [396, 2, 1, "", "objective_func"], [397, 2, 1, "", "optimization_bounds"], [398, 2, 1, "", "optimization_parameters"], [399, 2, 1, "", "parameter_index"], [400, 2, 1, "", "remove_constraint"], [401, 2, 1, "", "remove_parameter"], [402, 2, 1, "", "solve_nlopt"], [403, 2, 1, "", "to_data"], [404, 2, 1, "", "to_json"], [405, 2, 1, "", "to_jsonstring"], [406, 2, 1, "", "validate_data"], [407, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeXParameter": [[409, 2, 1, "", "attr_name"], [410, 2, 1, "", "bound_low"], [411, 2, 1, "", "bound_up"], [412, 2, 1, "", "copy"], [413, 2, 1, "", "from_data"], [414, 2, 1, "", "from_json"], [415, 2, 1, "", "from_jsonstring"], [416, 2, 1, "", "key"], [417, 2, 1, "", "start_value"], [418, 2, 1, "", "to_data"], [419, 2, 1, "", "to_json"], [420, 2, 1, "", "to_jsonstring"], [421, 2, 1, "", "validate_data"], [422, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeYParameter": [[424, 2, 1, "", "attr_name"], [425, 2, 1, "", "bound_low"], [426, 2, 1, "", "bound_up"], [427, 2, 1, "", "copy"], [428, 2, 1, "", "from_data"], [429, 2, 1, "", "from_json"], [430, 2, 1, "", "from_jsonstring"], [431, 2, 1, "", "key"], [432, 2, 1, "", "start_value"], [433, 2, 1, "", "to_data"], [434, 2, 1, "", "to_json"], [435, 2, 1, "", "to_jsonstring"], [436, 2, 1, "", "validate_data"], [437, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeZParameter": [[439, 2, 1, "", "attr_name"], [440, 2, 1, "", "bound_low"], [441, 2, 1, "", "bound_up"], [442, 2, 1, "", "copy"], [443, 2, 1, "", "from_data"], [444, 2, 1, "", "from_json"], [445, 2, 1, "", "from_jsonstring"], [446, 2, 1, "", "key"], [447, 2, 1, "", "start_value"], [448, 2, 1, "", "to_data"], [449, 2, 1, "", "to_json"], [450, 2, 1, "", "to_jsonstring"], [451, 2, 1, "", "validate_data"], [452, 2, 1, "", "validate_json"]], "compas_cem.optimization.PlaneConstraint": [[454, 2, 1, "", "copy"], [455, 2, 1, "", "from_data"], [456, 2, 1, "", "from_json"], [457, 2, 1, "", "from_jsonstring"], [458, 2, 1, "", "key"], [459, 2, 1, "", "penalty"], [460, 2, 1, "", "reference"], [461, 2, 1, "", "target"], [462, 2, 1, "", "to_data"], [463, 2, 1, "", "to_json"], [464, 2, 1, "", "to_jsonstring"], [465, 2, 1, "", "validate_data"], [466, 2, 1, "", "validate_json"]], "compas_cem.optimization.PointConstraint": [[468, 2, 1, "", "copy"], [469, 2, 1, "", "from_data"], [470, 2, 1, "", "from_json"], [471, 2, 1, "", "from_jsonstring"], [472, 2, 1, "", "key"], [473, 2, 1, "", "penalty"], [474, 2, 1, "", "reference"], [475, 2, 1, "", "target"], [476, 2, 1, "", "to_data"], [477, 2, 1, "", "to_json"], [478, 2, 1, "", "to_jsonstring"], [479, 2, 1, "", "validate_data"], [480, 2, 1, "", "validate_json"]], "compas_cem.optimization.ReactionForceConstraint": [[482, 2, 1, "", "copy"], [483, 2, 1, "", "from_data"], [484, 2, 1, "", "from_json"], [485, 2, 1, "", "from_jsonstring"], [486, 2, 1, "", "key"], [487, 2, 1, "", "penalty"], [488, 2, 1, "", "reference"], [489, 2, 1, "", "target"], [490, 2, 1, "", "to_data"], [491, 2, 1, "", "to_json"], [492, 2, 1, "", "to_jsonstring"], [493, 2, 1, "", "validate_data"], [494, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeForceConstraint": [[496, 2, 1, "", "copy"], [497, 2, 1, "", "from_data"], [498, 2, 1, "", "from_json"], [499, 2, 1, "", "from_jsonstring"], [500, 2, 1, "", "key"], [501, 2, 1, "", "penalty"], [502, 2, 1, "", "reference"], [503, 2, 1, "", "target"], [504, 2, 1, "", "to_data"], [505, 2, 1, "", "to_json"], [506, 2, 1, "", "to_jsonstring"], [507, 2, 1, "", "validate_data"], [508, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeParameter": [[510, 2, 1, "", "attr_name"], [511, 2, 1, "", "bound_low"], [512, 2, 1, "", "bound_up"], [513, 2, 1, "", "copy"], [514, 2, 1, "", "from_data"], [515, 2, 1, "", "from_json"], [516, 2, 1, "", "from_jsonstring"], [517, 2, 1, "", "key"], [518, 2, 1, "", "start_value"], [519, 2, 1, "", "to_data"], [520, 2, 1, "", "to_json"], [521, 2, 1, "", "to_jsonstring"], [522, 2, 1, "", "validate_data"], [523, 2, 1, "", "validate_json"]], "compas_cem.plotters": [[525, 1, 1, "", "FormArtist"], [543, 1, 1, "", "TopologyArtist"]], "compas_cem.plotters.FormArtist": [[526, 2, 1, "", "build"], [527, 2, 1, "", "build_as"], [528, 2, 1, "", "clear"], [529, 2, 1, "", "clear_edges"], [530, 2, 1, "", "clear_nodes"], [531, 2, 1, "", "draw"], [532, 2, 1, "", "draw_collection"], [533, 2, 1, "", "draw_edgelabels"], [534, 2, 1, "", "draw_edges"], [535, 2, 1, "", "draw_loads"], [536, 2, 1, "", "draw_nodelabels"], [537, 2, 1, "", "draw_nodes"], [538, 2, 1, "", "draw_reactions"], [539, 2, 1, "", "redraw"], [540, 2, 1, "", "register"], [541, 2, 1, "", "update_data"], [542, 2, 1, "", "viewbox"]], "compas_cem.plotters.TopologyArtist": [[544, 2, 1, "", "build"], [545, 2, 1, "", "build_as"], [546, 2, 1, "", "clear"], [547, 2, 1, "", "clear_edges"], [548, 2, 1, "", "clear_nodes"], [549, 2, 1, "", "draw"], [550, 2, 1, "", "draw_collection"], [551, 2, 1, "", "draw_edgelabels"], [552, 2, 1, "", "draw_edges"], [553, 2, 1, "", "draw_loads"], [554, 2, 1, "", "draw_nodelabels"], [555, 2, 1, "", "draw_nodes"], [556, 2, 1, "", "redraw"], [557, 2, 1, "", "register"], [558, 2, 1, "", "update_data"], [559, 2, 1, "", "viewbox"]], "compas_cem.supports": [[560, 1, 1, "", "NodeSupport"]], "compas_cem.supports.NodeSupport": [[561, 2, 1, "", "copy"], [562, 2, 1, "", "from_data"], [563, 2, 1, "", "from_json"], [564, 2, 1, "", "from_jsonstring"], [565, 2, 1, "", "from_point"], [566, 2, 1, "", "to_data"], [567, 2, 1, "", "to_json"], [568, 2, 1, "", "to_jsonstring"], [569, 2, 1, "", "validate_data"], [570, 2, 1, "", "validate_json"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"python": 0, "01": 1, "simpl": 1, "compress": 1, "structur": [1, 4], "02": 2, "brace": 2, "tower": 2, "2d": [2, 3, 4, 7], "03": 3, "bridg": [3, 7, 8], "optim": [3, 18, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407], "04": 4, "tree": 4, "05": 5, "planar": 5, "tensegr": [5, 10], "wheel": 5, "grasshopp": [6, 575], "A": 7, "b": 8, "tubular": 8, "3d": 8, "c": 9, "circular": 9, "dome": 9, "d": 10, "jessen": 10, "e": 11, "spiral": 11, "staircas": 11, "api": 12, "refer": [12, 348, 377, 460, 474, 488, 502], "compas_cem": [13, 14, 15, 16, 17, 18, 19, 20], "diagram": 14, "element": 15, "edg": [15, 48, 183], "node": [15, 112, 251, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "equilibrium": 16, "load": 17, "constraint": 18, "paramet": 18, "plotter": 19, "class": 19, "support": 20, "formdiagram": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "add_edg": [22, 148], "add_nod": [23, 150], "adjacency_matrix": [24, 152], "clear": [25, 156, 528, 546], "complement": [26, 157], "connected_edg": [27, 159], "connectivity_matrix": [28, 161], "copi": [29, 162, 296, 307, 318, 331, 342, 359, 371, 388, 412, 427, 442, 454, 468, 482, 496, 513, 561], "count_cross": [30, 163], "degre": [31, 164], "degree_in": [32, 165], "degree_matrix": [33, 166], "degree_out": [34, 167], "delete_edg": [35, 168], "delete_nod": [36, 169], "edge_attribut": [37, 38, 171, 172], "edge_coordin": [39, 173], "edge_direct": [40, 174], "edge_forc": [41, 175], "edge_length": [42, 176], "edge_length_2": [43, 177], "edge_midpoint": [44, 178], "edge_point": [45, 179], "edge_sampl": [46, 180], "edge_vector": [47, 182], "edges_attribut": [49, 50, 184, 185], "edges_wher": [51, 186], "edges_where_pred": [52, 187], "embed_in_plan": [53, 188], "find_cross": [54, 189], "find_cycl": [55, 190], "from_data": [56, 191, 297, 308, 319, 332, 343, 360, 372, 389, 413, 428, 443, 455, 469, 483, 497, 514, 562], "from_edg": [57, 192], "from_json": [58, 193, 298, 309, 320, 333, 344, 361, 373, 390, 414, 429, 444, 456, 470, 484, 498, 515, 563], "from_jsonstr": [59, 194, 299, 310, 321, 334, 345, 362, 374, 391, 415, 430, 445, 457, 471, 485, 499, 516, 564], "from_lin": [60, 195, 300, 322], "from_networkx": [61, 196], "from_nodes_and_edg": [62, 197], "from_obj": [63, 198], "from_pointcloud": [64, 199], "from_topology_diagram": 65, "get_any_edg": [66, 67, 200, 201], "get_any_nod": [68, 69, 202, 203], "gkei": [70, 204], "gkey_kei": [71, 205], "has_edg": [72, 206], "has_nod": [73, 207], "index_kei": [74, 208], "index_uv": [75, 209], "is_connect": [76, 211], "is_cross": [77, 212], "is_leaf": [78, 214], "is_node_connect": [79, 215], "is_node_load": [80, 216], "is_node_support": [81, 218], "is_planar": [82, 219], "is_planar_embed": [83, 220], "is_xi": [84, 222], "key_gkei": [85, 223], "key_index": [86, 224], "laplacian_matrix": [87, 225], "leav": [88, 226], "loaded_nod": [89, 227], "neighborhood": [90, 228], "neighbor": [91, 229], "neighbors_in": [92, 230], "neighbors_out": [93, 231], "network_adjacency_matrix": [94, 232], "network_connectivity_matrix": [95, 233], "network_degree_matrix": [96, 234], "network_embed_in_plan": [97, 235], "network_is_planar": [98, 236], "network_is_planar_embed": [99, 237], "network_laplacian_matrix": [100, 238], "node_attribut": [101, 102, 239, 240], "node_coordin": [103, 241], "node_exist": [104, 242], "node_gkei": [105, 243], "node_kei": [106, 244], "node_laplacian": [107, 245], "node_load": [108, 246], "node_neighborhood_centroid": [109, 247], "node_sampl": [110, 248], "node_xyz": [111, 250], "nodes_attribut": [113, 114, 252, 253], "nodes_wher": [115, 254], "nodes_where_pred": [116, 255], "number_of_edg": [117, 258], "number_of_loaded_nod": [118, 259], "number_of_nod": [119, 260], "number_of_support_nod": [120, 261], "reaction_forc": [121, 265], "shortest_path": [122, 268], "smooth": [123, 269], "split_edg": [124, 270], "summari": [125, 271], "support_nod": [126, 272], "to_data": [127, 273, 301, 312, 323, 336, 350, 365, 379, 403, 418, 433, 448, 462, 476, 490, 504, 519, 566], "to_json": [128, 274, 302, 313, 324, 337, 351, 366, 380, 404, 419, 434, 449, 463, 477, 491, 505, 520, 567], "to_jsonstr": [129, 275, 303, 314, 325, 338, 352, 367, 381, 405, 420, 435, 450, 464, 478, 492, 506, 521, 568], "to_lin": [130, 276], "to_networkx": [131, 277], "to_nodes_and_edg": [132, 278], "to_obj": [133, 279], "to_point": [134, 280], "transform": [135, 136, 283, 284], "unset_edge_attribut": [137, 285], "unset_node_attribut": [138, 286], "update_dea": [139, 287], "update_default_edge_attribut": [140, 288], "update_default_node_attribut": [141, 289], "update_dna": [142, 290], "update_node_xyz": [143, 291], "uv_index": [144, 292], "validate_data": [145, 293, 304, 315, 326, 339, 353, 368, 382, 406, 421, 436, 451, 465, 479, 493, 507, 522, 569], "validate_json": [146, 294, 305, 316, 327, 340, 354, 369, 383, 407, 422, 437, 452, 466, 480, 494, 508, 523, 570], "topologydiagram": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294], "add_load": 149, "add_support": 151, "auxiliary_trail_edg": 153, "auxiliary_trail": 154, "build_trail": 155, "connected_deviation_edg": 158, "connected_trail_edg": 160, "deviation_edg": 170, "edge_sequ": 181, "is_auxiliary_trail_edg": 210, "is_deviation_edg": 213, "is_node_origin": 217, "is_trail_edg": 221, "node_sequ": 249, "number_of_auxiliary_trail": 256, "number_of_deviation_edg": 257, "number_of_trail_edg": 262, "number_of_trail": 263, "origin_nod": 264, "sequence_max": 266, "sequenc": 267, "trail_edg": 281, "trail": 282, "deviationedg": [295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "from_point": [311, 565], "trailedg": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327], "static_equilibrium": 328, "static_equilibrium_numpi": 329, "nodeload": [330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "from_point_and_vector": 335, "deviationedgelengthconstraint": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354], "kei": [346, 363, 375, 416, 431, 446, 458, 472, 486, 500, 517], "penalti": [347, 376, 459, 473, 487, 501], "target": [349, 378, 461, 475, 489, 503], "deviationedgeparamet": [355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "attr_nam": [356, 409, 424, 439, 510], "bound_low": [357, 410, 425, 440, 511], "bound_up": [358, 411, 426, 441, 512], "start_valu": [364, 417, 432, 447, 518], "lineconstraint": [370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383], "add_constraint": 385, "add_paramet": 386, "check_optimization_san": 387, "gradient_func": 392, "index_paramet": 393, "number_of_constraint": 394, "number_of_paramet": 395, "objective_func": 396, "optimization_bound": 397, "optimization_paramet": 398, "parameter_index": 399, "remove_constraint": 400, "remove_paramet": 401, "solve_nlopt": 402, "originnodexparamet": [408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422], "originnodeyparamet": [423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "originnodezparamet": [438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452], "planeconstraint": [453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "pointconstraint": [467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480], "reactionforceconstraint": [481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494], "trailedgeforceconstraint": [495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508], "trailedgeparamet": [509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "solve_nlopt_proxi": 524, "formartist": [525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542], "build": [526, 544], "build_a": [527, 545], "clear_edg": [529, 547], "clear_nod": [530, 548], "draw": [531, 549], "draw_collect": [532, 550], "draw_edgelabel": [533, 551], "draw_edg": [534, 552], "draw_load": [535, 553], "draw_nodelabel": [536, 554], "draw_nod": [537, 555], "draw_react": 538, "redraw": [539, 556], "regist": [540, 557], "update_data": [541, 558], "viewbox": [542, 559], "topologyartist": [543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559], "nodesupport": [560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570], "changelog": 571, "unreleas": 571, "0": 571, "4": [571, 575], "1": [571, 575], "2": [571, 575], "15": 571, "14": 571, "13": 571, "12": 571, "11": 571, "9": 571, "6": 571, "3": [571, 575], "cite": 572, "author": 572, "exampl": 573, "compa": [574, 575], "cem": [574, 575], "main": 574, "featur": 574, "credit": 574, "tabl": 574, "content": 574, "instal": 575, "creat": 575, "virtual": 575, "environ": 575, "activ": 575, "via": 575, "conda": 575, "pip": 575, "plugin": 575, "remov": 575, "ani": 575, "leftov": 575, "link": 575, "check": 575, "your": 575, "updat": 575, "licens": 576}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})