Search.setIndex({"docnames": ["_examples/01_python", "_examples/01_python/01", "_examples/01_python/02", "_examples/01_python/03", "_examples/01_python/04", "_examples/01_python/05", "_examples/02_ghpython", "_examples/02_ghpython/bridge_2d", "_examples/02_ghpython/bridge_3d", "_examples/02_ghpython/dome", "_examples/02_ghpython/jessen", "_examples/02_ghpython/spiral", "api", "api/compas_cem", "api/compas_cem.diagrams", "api/compas_cem.elements", "api/compas_cem.equilibrium", "api/compas_cem.loads", "api/compas_cem.optimization", "api/compas_cem.plotters", "api/compas_cem.supports", "api/generated/compas_cem.diagrams.FormDiagram", "api/generated/compas_cem.diagrams.FormDiagram.ToString", "api/generated/compas_cem.diagrams.FormDiagram.add_edge", "api/generated/compas_cem.diagrams.FormDiagram.add_node", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.clear", "api/generated/compas_cem.diagrams.FormDiagram.complement", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.copy", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings", "api/generated/compas_cem.diagrams.FormDiagram.degree", "api/generated/compas_cem.diagrams.FormDiagram.degree_in", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.degree_out", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge", "api/generated/compas_cem.diagrams.FormDiagram.delete_node", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction", "api/generated/compas_cem.diagrams.FormDiagram.edge_force", "api/generated/compas_cem.diagrams.FormDiagram.edge_length", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.FormDiagram.edge_point", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector", "api/generated/compas_cem.diagrams.FormDiagram.edges", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edges_where", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles", "api/generated/compas_cem.diagrams.FormDiagram.from_data", "api/generated/compas_cem.diagrams.FormDiagram.from_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_json", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.from_lines", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_obj", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.FormDiagram.gkey", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key", "api/generated/compas_cem.diagrams.FormDiagram.has_edge", "api/generated/compas_cem.diagrams.FormDiagram.has_node", "api/generated/compas_cem.diagrams.FormDiagram.index_key", "api/generated/compas_cem.diagrams.FormDiagram.index_uv", "api/generated/compas_cem.diagrams.FormDiagram.is_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support", "api/generated/compas_cem.diagrams.FormDiagram.is_planar", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.is_xy", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey", "api/generated/compas_cem.diagrams.FormDiagram.key_index", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.leaves", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood", "api/generated/compas_cem.diagrams.FormDiagram.neighbors", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.node_exists", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey", "api/generated/compas_cem.diagrams.FormDiagram.node_key", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian", "api/generated/compas_cem.diagrams.FormDiagram.node_load", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.FormDiagram.node_sample", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.nodes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path", "api/generated/compas_cem.diagrams.FormDiagram.smooth", "api/generated/compas_cem.diagrams.FormDiagram.split_edge", "api/generated/compas_cem.diagrams.FormDiagram.summary", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.to_data", "api/generated/compas_cem.diagrams.FormDiagram.to_json", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.to_lines", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.to_obj", "api/generated/compas_cem.diagrams.FormDiagram.to_points", "api/generated/compas_cem.diagrams.FormDiagram.transform", "api/generated/compas_cem.diagrams.FormDiagram.transformed", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.update_dea", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_dna", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.uv_index", "api/generated/compas_cem.diagrams.FormDiagram.validate_data", "api/generated/compas_cem.diagrams.FormDiagram.validate_json", "api/generated/compas_cem.diagrams.TopologyDiagram", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.clear", "api/generated/compas_cem.diagrams.TopologyDiagram.complement", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.copy", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.degree", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector", "api/generated/compas_cem.diagrams.TopologyDiagram.edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_max", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.summary", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.trails", "api/generated/compas_cem.diagrams.TopologyDiagram.transform", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json", "api/generated/compas_cem.elements.DeviationEdge", "api/generated/compas_cem.elements.DeviationEdge.ToString", "api/generated/compas_cem.elements.DeviationEdge.copy", "api/generated/compas_cem.elements.DeviationEdge.from_data", "api/generated/compas_cem.elements.DeviationEdge.from_json", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.from_line", "api/generated/compas_cem.elements.DeviationEdge.from_rhino_line", "api/generated/compas_cem.elements.DeviationEdge.to_data", "api/generated/compas_cem.elements.DeviationEdge.to_json", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.validate_data", "api/generated/compas_cem.elements.DeviationEdge.validate_json", "api/generated/compas_cem.elements.Node", "api/generated/compas_cem.elements.Node.ToString", "api/generated/compas_cem.elements.Node.copy", "api/generated/compas_cem.elements.Node.from_data", "api/generated/compas_cem.elements.Node.from_json", "api/generated/compas_cem.elements.Node.from_jsonstring", "api/generated/compas_cem.elements.Node.from_point", "api/generated/compas_cem.elements.Node.from_rhino_point", "api/generated/compas_cem.elements.Node.to_data", "api/generated/compas_cem.elements.Node.to_json", "api/generated/compas_cem.elements.Node.to_jsonstring", "api/generated/compas_cem.elements.Node.validate_data", "api/generated/compas_cem.elements.Node.validate_json", "api/generated/compas_cem.elements.TrailEdge", "api/generated/compas_cem.elements.TrailEdge.ToString", "api/generated/compas_cem.elements.TrailEdge.copy", "api/generated/compas_cem.elements.TrailEdge.from_data", "api/generated/compas_cem.elements.TrailEdge.from_json", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring", "api/generated/compas_cem.elements.TrailEdge.from_line", "api/generated/compas_cem.elements.TrailEdge.from_rhino_line", "api/generated/compas_cem.elements.TrailEdge.to_data", "api/generated/compas_cem.elements.TrailEdge.to_json", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring", "api/generated/compas_cem.elements.TrailEdge.validate_data", "api/generated/compas_cem.elements.TrailEdge.validate_json", "api/generated/compas_cem.equilibrium.static_equilibrium", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy", "api/generated/compas_cem.loads.NodeLoad", "api/generated/compas_cem.loads.NodeLoad.ToString", "api/generated/compas_cem.loads.NodeLoad.copy", "api/generated/compas_cem.loads.NodeLoad.from_data", "api/generated/compas_cem.loads.NodeLoad.from_json", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector", "api/generated/compas_cem.loads.NodeLoad.from_rhino_point_and_vector", "api/generated/compas_cem.loads.NodeLoad.to_data", "api/generated/compas_cem.loads.NodeLoad.to_json", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring", "api/generated/compas_cem.loads.NodeLoad.validate_data", "api/generated/compas_cem.loads.NodeLoad.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json", "api/generated/compas_cem.optimization.LineConstraint", "api/generated/compas_cem.optimization.LineConstraint.ToString", "api/generated/compas_cem.optimization.LineConstraint.copy", "api/generated/compas_cem.optimization.LineConstraint.from_data", "api/generated/compas_cem.optimization.LineConstraint.from_json", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.key", "api/generated/compas_cem.optimization.LineConstraint.penalty", "api/generated/compas_cem.optimization.LineConstraint.reference", "api/generated/compas_cem.optimization.LineConstraint.target", "api/generated/compas_cem.optimization.LineConstraint.to_data", "api/generated/compas_cem.optimization.LineConstraint.to_json", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.validate_data", "api/generated/compas_cem.optimization.LineConstraint.validate_json", "api/generated/compas_cem.optimization.Optimizer", "api/generated/compas_cem.optimization.Optimizer.ToString", "api/generated/compas_cem.optimization.Optimizer.add_constraint", "api/generated/compas_cem.optimization.Optimizer.add_parameter", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity", "api/generated/compas_cem.optimization.Optimizer.copy", "api/generated/compas_cem.optimization.Optimizer.from_data", "api/generated/compas_cem.optimization.Optimizer.from_json", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring", "api/generated/compas_cem.optimization.Optimizer.gradient_func", "api/generated/compas_cem.optimization.Optimizer.index_parameter", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters", "api/generated/compas_cem.optimization.Optimizer.objective_func", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters", "api/generated/compas_cem.optimization.Optimizer.parameter_index", "api/generated/compas_cem.optimization.Optimizer.remove_constraint", "api/generated/compas_cem.optimization.Optimizer.remove_parameter", "api/generated/compas_cem.optimization.Optimizer.solve_nlopt", "api/generated/compas_cem.optimization.Optimizer.to_data", "api/generated/compas_cem.optimization.Optimizer.to_json", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring", "api/generated/compas_cem.optimization.Optimizer.validate_data", "api/generated/compas_cem.optimization.Optimizer.validate_json", "api/generated/compas_cem.optimization.OriginNodeXParameter", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.key", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeYParameter", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.key", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeZParameter", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.key", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json", "api/generated/compas_cem.optimization.PlaneConstraint", "api/generated/compas_cem.optimization.PlaneConstraint.ToString", "api/generated/compas_cem.optimization.PlaneConstraint.copy", "api/generated/compas_cem.optimization.PlaneConstraint.from_data", "api/generated/compas_cem.optimization.PlaneConstraint.from_json", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.key", "api/generated/compas_cem.optimization.PlaneConstraint.penalty", "api/generated/compas_cem.optimization.PlaneConstraint.reference", "api/generated/compas_cem.optimization.PlaneConstraint.target", "api/generated/compas_cem.optimization.PlaneConstraint.to_data", "api/generated/compas_cem.optimization.PlaneConstraint.to_json", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json", "api/generated/compas_cem.optimization.PointConstraint", "api/generated/compas_cem.optimization.PointConstraint.ToString", "api/generated/compas_cem.optimization.PointConstraint.copy", "api/generated/compas_cem.optimization.PointConstraint.from_data", "api/generated/compas_cem.optimization.PointConstraint.from_json", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.key", "api/generated/compas_cem.optimization.PointConstraint.penalty", "api/generated/compas_cem.optimization.PointConstraint.reference", "api/generated/compas_cem.optimization.PointConstraint.target", "api/generated/compas_cem.optimization.PointConstraint.to_data", "api/generated/compas_cem.optimization.PointConstraint.to_json", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.validate_data", "api/generated/compas_cem.optimization.PointConstraint.validate_json", "api/generated/compas_cem.optimization.ReactionForceConstraint", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.key", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference", "api/generated/compas_cem.optimization.ReactionForceConstraint.target", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeParameter", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.key", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json", "api/generated/compas_cem.optimization.solve_nlopt_proxy", "api/generated/compas_cem.plotters.FormArtist", "api/generated/compas_cem.plotters.FormArtist.build", "api/generated/compas_cem.plotters.FormArtist.build_as", "api/generated/compas_cem.plotters.FormArtist.clear", "api/generated/compas_cem.plotters.FormArtist.clear_edges", "api/generated/compas_cem.plotters.FormArtist.clear_nodes", "api/generated/compas_cem.plotters.FormArtist.draw", "api/generated/compas_cem.plotters.FormArtist.draw_collection", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels", "api/generated/compas_cem.plotters.FormArtist.draw_edges", "api/generated/compas_cem.plotters.FormArtist.draw_loads", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels", "api/generated/compas_cem.plotters.FormArtist.draw_nodes", "api/generated/compas_cem.plotters.FormArtist.draw_reactions", "api/generated/compas_cem.plotters.FormArtist.redraw", "api/generated/compas_cem.plotters.FormArtist.register", "api/generated/compas_cem.plotters.FormArtist.update_data", "api/generated/compas_cem.plotters.FormArtist.viewbox", "api/generated/compas_cem.plotters.TopologyArtist", "api/generated/compas_cem.plotters.TopologyArtist.build", "api/generated/compas_cem.plotters.TopologyArtist.build_as", "api/generated/compas_cem.plotters.TopologyArtist.clear", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes", "api/generated/compas_cem.plotters.TopologyArtist.draw", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes", "api/generated/compas_cem.plotters.TopologyArtist.redraw", "api/generated/compas_cem.plotters.TopologyArtist.register", "api/generated/compas_cem.plotters.TopologyArtist.update_data", "api/generated/compas_cem.plotters.TopologyArtist.viewbox", "api/generated/compas_cem.supports.NodeSupport", "api/generated/compas_cem.supports.NodeSupport.ToString", "api/generated/compas_cem.supports.NodeSupport.copy", "api/generated/compas_cem.supports.NodeSupport.from_data", "api/generated/compas_cem.supports.NodeSupport.from_json", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring", "api/generated/compas_cem.supports.NodeSupport.from_point", "api/generated/compas_cem.supports.NodeSupport.from_rhino_point", "api/generated/compas_cem.supports.NodeSupport.to_data", "api/generated/compas_cem.supports.NodeSupport.to_json", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring", "api/generated/compas_cem.supports.NodeSupport.validate_data", "api/generated/compas_cem.supports.NodeSupport.validate_json", "changelog", "citing", "examples", "index", "installation", "license"], "filenames": ["_examples/01_python.rst", "_examples/01_python/01.rst", "_examples/01_python/02.rst", "_examples/01_python/03.rst", "_examples/01_python/04.rst", "_examples/01_python/05.rst", "_examples/02_ghpython.rst", "_examples/02_ghpython/bridge_2d.rst", "_examples/02_ghpython/bridge_3d.rst", "_examples/02_ghpython/dome.rst", "_examples/02_ghpython/jessen.rst", "_examples/02_ghpython/spiral.rst", "api.rst", "api/compas_cem.rst", "api/compas_cem.diagrams.rst", "api/compas_cem.elements.rst", "api/compas_cem.equilibrium.rst", "api/compas_cem.loads.rst", "api/compas_cem.optimization.rst", "api/compas_cem.plotters.rst", "api/compas_cem.supports.rst", "api/generated/compas_cem.diagrams.FormDiagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.ToString.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.clear.rst", "api/generated/compas_cem.diagrams.FormDiagram.complement.rst", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.copy.rst", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.leaves.rst", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_load.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.FormDiagram.smooth.rst", "api/generated/compas_cem.diagrams.FormDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.summary.rst", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_points.rst", "api/generated/compas_cem.diagrams.FormDiagram.transform.rst", "api/generated/compas_cem.diagrams.FormDiagram.transformed.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.clear.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.complement.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.copy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_max.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.summary.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transform.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json.rst", "api/generated/compas_cem.elements.DeviationEdge.rst", "api/generated/compas_cem.elements.DeviationEdge.ToString.rst", "api/generated/compas_cem.elements.DeviationEdge.copy.rst", "api/generated/compas_cem.elements.DeviationEdge.from_data.rst", "api/generated/compas_cem.elements.DeviationEdge.from_json.rst", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.from_line.rst", "api/generated/compas_cem.elements.DeviationEdge.from_rhino_line.rst", "api/generated/compas_cem.elements.DeviationEdge.to_data.rst", "api/generated/compas_cem.elements.DeviationEdge.to_json.rst", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_data.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_json.rst", "api/generated/compas_cem.elements.Node.rst", "api/generated/compas_cem.elements.Node.ToString.rst", "api/generated/compas_cem.elements.Node.copy.rst", "api/generated/compas_cem.elements.Node.from_data.rst", "api/generated/compas_cem.elements.Node.from_json.rst", "api/generated/compas_cem.elements.Node.from_jsonstring.rst", "api/generated/compas_cem.elements.Node.from_point.rst", "api/generated/compas_cem.elements.Node.from_rhino_point.rst", "api/generated/compas_cem.elements.Node.to_data.rst", "api/generated/compas_cem.elements.Node.to_json.rst", "api/generated/compas_cem.elements.Node.to_jsonstring.rst", "api/generated/compas_cem.elements.Node.validate_data.rst", "api/generated/compas_cem.elements.Node.validate_json.rst", "api/generated/compas_cem.elements.TrailEdge.rst", "api/generated/compas_cem.elements.TrailEdge.ToString.rst", "api/generated/compas_cem.elements.TrailEdge.copy.rst", "api/generated/compas_cem.elements.TrailEdge.from_data.rst", "api/generated/compas_cem.elements.TrailEdge.from_json.rst", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.from_line.rst", "api/generated/compas_cem.elements.TrailEdge.from_rhino_line.rst", "api/generated/compas_cem.elements.TrailEdge.to_data.rst", "api/generated/compas_cem.elements.TrailEdge.to_json.rst", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.validate_data.rst", "api/generated/compas_cem.elements.TrailEdge.validate_json.rst", "api/generated/compas_cem.equilibrium.static_equilibrium.rst", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy.rst", "api/generated/compas_cem.loads.NodeLoad.rst", "api/generated/compas_cem.loads.NodeLoad.ToString.rst", "api/generated/compas_cem.loads.NodeLoad.copy.rst", "api/generated/compas_cem.loads.NodeLoad.from_data.rst", "api/generated/compas_cem.loads.NodeLoad.from_json.rst", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector.rst", "api/generated/compas_cem.loads.NodeLoad.from_rhino_point_and_vector.rst", "api/generated/compas_cem.loads.NodeLoad.to_data.rst", "api/generated/compas_cem.loads.NodeLoad.to_json.rst", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.validate_data.rst", "api/generated/compas_cem.loads.NodeLoad.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.LineConstraint.rst", "api/generated/compas_cem.optimization.LineConstraint.ToString.rst", "api/generated/compas_cem.optimization.LineConstraint.copy.rst", "api/generated/compas_cem.optimization.LineConstraint.from_data.rst", "api/generated/compas_cem.optimization.LineConstraint.from_json.rst", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.key.rst", "api/generated/compas_cem.optimization.LineConstraint.penalty.rst", "api/generated/compas_cem.optimization.LineConstraint.reference.rst", "api/generated/compas_cem.optimization.LineConstraint.target.rst", "api/generated/compas_cem.optimization.LineConstraint.to_data.rst", "api/generated/compas_cem.optimization.LineConstraint.to_json.rst", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_data.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_json.rst", "api/generated/compas_cem.optimization.Optimizer.rst", "api/generated/compas_cem.optimization.Optimizer.ToString.rst", "api/generated/compas_cem.optimization.Optimizer.add_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.add_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity.rst", "api/generated/compas_cem.optimization.Optimizer.copy.rst", "api/generated/compas_cem.optimization.Optimizer.from_data.rst", "api/generated/compas_cem.optimization.Optimizer.from_json.rst", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.gradient_func.rst", "api/generated/compas_cem.optimization.Optimizer.index_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.objective_func.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.parameter_index.rst", "api/generated/compas_cem.optimization.Optimizer.remove_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.remove_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.solve_nlopt.rst", "api/generated/compas_cem.optimization.Optimizer.to_data.rst", "api/generated/compas_cem.optimization.Optimizer.to_json.rst", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.validate_data.rst", "api/generated/compas_cem.optimization.Optimizer.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.rst", "api/generated/compas_cem.optimization.PlaneConstraint.ToString.rst", "api/generated/compas_cem.optimization.PlaneConstraint.copy.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.key.rst", "api/generated/compas_cem.optimization.PlaneConstraint.penalty.rst", "api/generated/compas_cem.optimization.PlaneConstraint.reference.rst", "api/generated/compas_cem.optimization.PlaneConstraint.target.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json.rst", "api/generated/compas_cem.optimization.PointConstraint.rst", "api/generated/compas_cem.optimization.PointConstraint.ToString.rst", "api/generated/compas_cem.optimization.PointConstraint.copy.rst", "api/generated/compas_cem.optimization.PointConstraint.from_data.rst", "api/generated/compas_cem.optimization.PointConstraint.from_json.rst", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.key.rst", "api/generated/compas_cem.optimization.PointConstraint.penalty.rst", "api/generated/compas_cem.optimization.PointConstraint.reference.rst", "api/generated/compas_cem.optimization.PointConstraint.target.rst", "api/generated/compas_cem.optimization.PointConstraint.to_data.rst", "api/generated/compas_cem.optimization.PointConstraint.to_json.rst", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.key.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.target.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.key.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.solve_nlopt_proxy.rst", "api/generated/compas_cem.plotters.FormArtist.rst", "api/generated/compas_cem.plotters.FormArtist.build.rst", "api/generated/compas_cem.plotters.FormArtist.build_as.rst", "api/generated/compas_cem.plotters.FormArtist.clear.rst", "api/generated/compas_cem.plotters.FormArtist.clear_edges.rst", "api/generated/compas_cem.plotters.FormArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw.rst", "api/generated/compas_cem.plotters.FormArtist.draw_collection.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edges.rst", "api/generated/compas_cem.plotters.FormArtist.draw_loads.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw_reactions.rst", "api/generated/compas_cem.plotters.FormArtist.redraw.rst", "api/generated/compas_cem.plotters.FormArtist.register.rst", "api/generated/compas_cem.plotters.FormArtist.update_data.rst", "api/generated/compas_cem.plotters.FormArtist.viewbox.rst", "api/generated/compas_cem.plotters.TopologyArtist.rst", "api/generated/compas_cem.plotters.TopologyArtist.build.rst", "api/generated/compas_cem.plotters.TopologyArtist.build_as.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.redraw.rst", "api/generated/compas_cem.plotters.TopologyArtist.register.rst", "api/generated/compas_cem.plotters.TopologyArtist.update_data.rst", "api/generated/compas_cem.plotters.TopologyArtist.viewbox.rst", "api/generated/compas_cem.supports.NodeSupport.rst", "api/generated/compas_cem.supports.NodeSupport.ToString.rst", "api/generated/compas_cem.supports.NodeSupport.copy.rst", "api/generated/compas_cem.supports.NodeSupport.from_data.rst", "api/generated/compas_cem.supports.NodeSupport.from_json.rst", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.from_point.rst", "api/generated/compas_cem.supports.NodeSupport.from_rhino_point.rst", "api/generated/compas_cem.supports.NodeSupport.to_data.rst", "api/generated/compas_cem.supports.NodeSupport.to_json.rst", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.validate_data.rst", "api/generated/compas_cem.supports.NodeSupport.validate_json.rst", "changelog.rst", "citing.rst", "examples.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["Python", "01. Simple Compression Structure", "02. Braced Tower in 2D", "03. Bridge Optimization in 2D", "04. Tree Structure in 2D", "05. Planar Tensegrity Wheel", "Grasshopper", "A. Bridge in 2D", "B. Tubular Bridge in 3D", "C. Circular Dome", "D. Jessen Tensegrity", "E. Spiral Staircase", "API Reference", "compas_cem", "compas_cem.diagrams", "compas_cem.elements", "compas_cem.equilibrium", "compas_cem.loads", "compas_cem.optimization", "compas_cem.plotters", "compas_cem.supports", "FormDiagram", "FormDiagram.ToString", "FormDiagram.add_edge", "FormDiagram.add_node", "FormDiagram.adjacency_matrix", "FormDiagram.clear", "FormDiagram.complement", "FormDiagram.connected_edges", "FormDiagram.connectivity_matrix", "FormDiagram.copy", "FormDiagram.count_crossings", "FormDiagram.degree", "FormDiagram.degree_in", "FormDiagram.degree_matrix", "FormDiagram.degree_out", "FormDiagram.delete_edge", "FormDiagram.delete_node", "FormDiagram.edge_attribute", "FormDiagram.edge_attributes", "FormDiagram.edge_coordinates", "FormDiagram.edge_direction", "FormDiagram.edge_force", "FormDiagram.edge_length", "FormDiagram.edge_length_2", "FormDiagram.edge_midpoint", "FormDiagram.edge_point", "FormDiagram.edge_sample", "FormDiagram.edge_vector", "FormDiagram.edges", "FormDiagram.edges_attribute", "FormDiagram.edges_attributes", "FormDiagram.edges_where", "FormDiagram.edges_where_predicate", "FormDiagram.embed_in_plane", "FormDiagram.find_crossings", "FormDiagram.find_cycles", "FormDiagram.from_data", "FormDiagram.from_edges", "FormDiagram.from_json", "FormDiagram.from_jsonstring", "FormDiagram.from_lines", "FormDiagram.from_networkx", "FormDiagram.from_nodes_and_edges", "FormDiagram.from_obj", "FormDiagram.from_pointcloud", "FormDiagram.from_topology_diagram", "FormDiagram.get_any_edge", "FormDiagram.get_any_edges", "FormDiagram.get_any_node", "FormDiagram.get_any_nodes", "FormDiagram.gkey", "FormDiagram.gkey_key", "FormDiagram.has_edge", "FormDiagram.has_node", "FormDiagram.index_key", "FormDiagram.index_uv", "FormDiagram.is_connected", "FormDiagram.is_crossed", "FormDiagram.is_leaf", "FormDiagram.is_node_connected", "FormDiagram.is_node_loaded", "FormDiagram.is_node_support", "FormDiagram.is_planar", "FormDiagram.is_planar_embedding", "FormDiagram.is_xy", "FormDiagram.key_gkey", "FormDiagram.key_index", "FormDiagram.laplacian_matrix", "FormDiagram.leaves", "FormDiagram.loaded_nodes", "FormDiagram.neighborhood", "FormDiagram.neighbors", "FormDiagram.neighbors_in", "FormDiagram.neighbors_out", "FormDiagram.network_adjacency_matrix", "FormDiagram.network_connectivity_matrix", "FormDiagram.network_degree_matrix", "FormDiagram.network_embed_in_plane", "FormDiagram.network_is_planar", "FormDiagram.network_is_planar_embedding", "FormDiagram.network_laplacian_matrix", "FormDiagram.node_attribute", "FormDiagram.node_attributes", "FormDiagram.node_coordinates", "FormDiagram.node_exists", "FormDiagram.node_gkey", "FormDiagram.node_key", "FormDiagram.node_laplacian", "FormDiagram.node_load", "FormDiagram.node_neighborhood_centroid", "FormDiagram.node_sample", "FormDiagram.node_xyz", "FormDiagram.nodes", "FormDiagram.nodes_attribute", "FormDiagram.nodes_attributes", "FormDiagram.nodes_where", "FormDiagram.nodes_where_predicate", "FormDiagram.number_of_edges", "FormDiagram.number_of_loaded_nodes", "FormDiagram.number_of_nodes", "FormDiagram.number_of_support_nodes", "FormDiagram.reaction_force", "FormDiagram.shortest_path", "FormDiagram.smooth", "FormDiagram.split_edge", "FormDiagram.summary", "FormDiagram.support_nodes", "FormDiagram.to_data", "FormDiagram.to_json", "FormDiagram.to_jsonstring", "FormDiagram.to_lines", "FormDiagram.to_networkx", "FormDiagram.to_nodes_and_edges", "FormDiagram.to_obj", "FormDiagram.to_points", "FormDiagram.transform", "FormDiagram.transformed", "FormDiagram.unset_edge_attribute", "FormDiagram.unset_node_attribute", "FormDiagram.update_dea", "FormDiagram.update_default_edge_attributes", "FormDiagram.update_default_node_attributes", "FormDiagram.update_dna", "FormDiagram.update_node_xyz", "FormDiagram.uv_index", "FormDiagram.validate_data", "FormDiagram.validate_json", "TopologyDiagram", "TopologyDiagram.ToString", "TopologyDiagram.add_edge", "TopologyDiagram.add_load", "TopologyDiagram.add_node", "TopologyDiagram.add_support", "TopologyDiagram.adjacency_matrix", "TopologyDiagram.auxiliary_trail_edges", "TopologyDiagram.auxiliary_trails", "TopologyDiagram.build_trails", "TopologyDiagram.clear", "TopologyDiagram.complement", "TopologyDiagram.connected_deviation_edges", "TopologyDiagram.connected_edges", "TopologyDiagram.connected_trail_edges", "TopologyDiagram.connectivity_matrix", "TopologyDiagram.copy", "TopologyDiagram.count_crossings", "TopologyDiagram.degree", "TopologyDiagram.degree_in", "TopologyDiagram.degree_matrix", "TopologyDiagram.degree_out", "TopologyDiagram.delete_edge", "TopologyDiagram.delete_node", "TopologyDiagram.deviation_edges", "TopologyDiagram.edge_attribute", "TopologyDiagram.edge_attributes", "TopologyDiagram.edge_coordinates", "TopologyDiagram.edge_direction", "TopologyDiagram.edge_force", "TopologyDiagram.edge_length", "TopologyDiagram.edge_length_2", "TopologyDiagram.edge_midpoint", "TopologyDiagram.edge_point", "TopologyDiagram.edge_sample", "TopologyDiagram.edge_sequence", "TopologyDiagram.edge_vector", "TopologyDiagram.edges", "TopologyDiagram.edges_attribute", "TopologyDiagram.edges_attributes", "TopologyDiagram.edges_where", "TopologyDiagram.edges_where_predicate", "TopologyDiagram.embed_in_plane", "TopologyDiagram.find_crossings", "TopologyDiagram.find_cycles", "TopologyDiagram.from_data", "TopologyDiagram.from_edges", "TopologyDiagram.from_json", "TopologyDiagram.from_jsonstring", "TopologyDiagram.from_lines", "TopologyDiagram.from_networkx", "TopologyDiagram.from_nodes_and_edges", "TopologyDiagram.from_obj", "TopologyDiagram.from_pointcloud", "TopologyDiagram.get_any_edge", "TopologyDiagram.get_any_edges", "TopologyDiagram.get_any_node", "TopologyDiagram.get_any_nodes", "TopologyDiagram.gkey", "TopologyDiagram.gkey_key", "TopologyDiagram.has_edge", "TopologyDiagram.has_node", "TopologyDiagram.index_key", "TopologyDiagram.index_uv", "TopologyDiagram.is_auxiliary_trail_edge", "TopologyDiagram.is_connected", "TopologyDiagram.is_crossed", "TopologyDiagram.is_deviation_edge", "TopologyDiagram.is_leaf", "TopologyDiagram.is_node_connected", "TopologyDiagram.is_node_loaded", "TopologyDiagram.is_node_origin", "TopologyDiagram.is_node_support", "TopologyDiagram.is_planar", "TopologyDiagram.is_planar_embedding", "TopologyDiagram.is_trail_edge", "TopologyDiagram.is_xy", "TopologyDiagram.key_gkey", "TopologyDiagram.key_index", "TopologyDiagram.laplacian_matrix", "TopologyDiagram.leaves", "TopologyDiagram.loaded_nodes", "TopologyDiagram.neighborhood", "TopologyDiagram.neighbors", "TopologyDiagram.neighbors_in", "TopologyDiagram.neighbors_out", "TopologyDiagram.network_adjacency_matrix", "TopologyDiagram.network_connectivity_matrix", "TopologyDiagram.network_degree_matrix", "TopologyDiagram.network_embed_in_plane", "TopologyDiagram.network_is_planar", "TopologyDiagram.network_is_planar_embedding", "TopologyDiagram.network_laplacian_matrix", "TopologyDiagram.node_attribute", "TopologyDiagram.node_attributes", "TopologyDiagram.node_coordinates", "TopologyDiagram.node_exists", "TopologyDiagram.node_gkey", "TopologyDiagram.node_key", "TopologyDiagram.node_laplacian", "TopologyDiagram.node_load", "TopologyDiagram.node_neighborhood_centroid", "TopologyDiagram.node_sample", "TopologyDiagram.node_sequence", "TopologyDiagram.node_xyz", "TopologyDiagram.nodes", "TopologyDiagram.nodes_attribute", "TopologyDiagram.nodes_attributes", "TopologyDiagram.nodes_where", "TopologyDiagram.nodes_where_predicate", "TopologyDiagram.number_of_auxiliary_trails", "TopologyDiagram.number_of_deviation_edges", "TopologyDiagram.number_of_edges", "TopologyDiagram.number_of_loaded_nodes", "TopologyDiagram.number_of_nodes", "TopologyDiagram.number_of_support_nodes", "TopologyDiagram.number_of_trail_edges", "TopologyDiagram.number_of_trails", "TopologyDiagram.origin_nodes", "TopologyDiagram.reaction_force", "TopologyDiagram.sequence_max", "TopologyDiagram.sequences", "TopologyDiagram.shortest_path", "TopologyDiagram.smooth", "TopologyDiagram.split_edge", "TopologyDiagram.summary", "TopologyDiagram.support_nodes", "TopologyDiagram.to_data", "TopologyDiagram.to_json", "TopologyDiagram.to_jsonstring", "TopologyDiagram.to_lines", "TopologyDiagram.to_networkx", "TopologyDiagram.to_nodes_and_edges", "TopologyDiagram.to_obj", "TopologyDiagram.to_points", "TopologyDiagram.trail_edges", "TopologyDiagram.trails", "TopologyDiagram.transform", "TopologyDiagram.transformed", "TopologyDiagram.unset_edge_attribute", "TopologyDiagram.unset_node_attribute", "TopologyDiagram.update_dea", "TopologyDiagram.update_default_edge_attributes", "TopologyDiagram.update_default_node_attributes", "TopologyDiagram.update_dna", "TopologyDiagram.update_node_xyz", "TopologyDiagram.uv_index", "TopologyDiagram.validate_data", "TopologyDiagram.validate_json", "DeviationEdge", "DeviationEdge.ToString", "DeviationEdge.copy", "DeviationEdge.from_data", "DeviationEdge.from_json", "DeviationEdge.from_jsonstring", "DeviationEdge.from_line", "DeviationEdge.from_rhino_line", "DeviationEdge.to_data", "DeviationEdge.to_json", "DeviationEdge.to_jsonstring", "DeviationEdge.validate_data", "DeviationEdge.validate_json", "Node", "Node.ToString", "Node.copy", "Node.from_data", "Node.from_json", "Node.from_jsonstring", "Node.from_point", "Node.from_rhino_point", "Node.to_data", "Node.to_json", "Node.to_jsonstring", "Node.validate_data", "Node.validate_json", "TrailEdge", "TrailEdge.ToString", "TrailEdge.copy", "TrailEdge.from_data", "TrailEdge.from_json", "TrailEdge.from_jsonstring", "TrailEdge.from_line", "TrailEdge.from_rhino_line", "TrailEdge.to_data", "TrailEdge.to_json", "TrailEdge.to_jsonstring", "TrailEdge.validate_data", "TrailEdge.validate_json", "static_equilibrium", "static_equilibrium_numpy", "NodeLoad", "NodeLoad.ToString", "NodeLoad.copy", "NodeLoad.from_data", "NodeLoad.from_json", "NodeLoad.from_jsonstring", "NodeLoad.from_point_and_vector", "NodeLoad.from_rhino_point_and_vector", "NodeLoad.to_data", "NodeLoad.to_json", "NodeLoad.to_jsonstring", "NodeLoad.validate_data", "NodeLoad.validate_json", "DeviationEdgeLengthConstraint", "DeviationEdgeLengthConstraint.ToString", "DeviationEdgeLengthConstraint.copy", "DeviationEdgeLengthConstraint.from_data", "DeviationEdgeLengthConstraint.from_json", "DeviationEdgeLengthConstraint.from_jsonstring", "DeviationEdgeLengthConstraint.key", "DeviationEdgeLengthConstraint.penalty", "DeviationEdgeLengthConstraint.reference", "DeviationEdgeLengthConstraint.target", "DeviationEdgeLengthConstraint.to_data", "DeviationEdgeLengthConstraint.to_json", "DeviationEdgeLengthConstraint.to_jsonstring", "DeviationEdgeLengthConstraint.validate_data", "DeviationEdgeLengthConstraint.validate_json", "DeviationEdgeParameter", "DeviationEdgeParameter.ToString", "DeviationEdgeParameter.attr_name", "DeviationEdgeParameter.bound_low", "DeviationEdgeParameter.bound_up", "DeviationEdgeParameter.copy", "DeviationEdgeParameter.from_data", "DeviationEdgeParameter.from_json", "DeviationEdgeParameter.from_jsonstring", "DeviationEdgeParameter.key", "DeviationEdgeParameter.start_value", "DeviationEdgeParameter.to_data", "DeviationEdgeParameter.to_json", "DeviationEdgeParameter.to_jsonstring", "DeviationEdgeParameter.validate_data", "DeviationEdgeParameter.validate_json", "LineConstraint", "LineConstraint.ToString", "LineConstraint.copy", "LineConstraint.from_data", "LineConstraint.from_json", "LineConstraint.from_jsonstring", "LineConstraint.key", "LineConstraint.penalty", "LineConstraint.reference", "LineConstraint.target", "LineConstraint.to_data", "LineConstraint.to_json", "LineConstraint.to_jsonstring", "LineConstraint.validate_data", "LineConstraint.validate_json", "Optimizer", "Optimizer.ToString", "Optimizer.add_constraint", "Optimizer.add_parameter", "Optimizer.check_optimization_sanity", "Optimizer.copy", "Optimizer.from_data", "Optimizer.from_json", "Optimizer.from_jsonstring", "Optimizer.gradient_func", "Optimizer.index_parameter", "Optimizer.number_of_constraints", "Optimizer.number_of_parameters", "Optimizer.objective_func", "Optimizer.optimization_bounds", "Optimizer.optimization_parameters", "Optimizer.parameter_index", "Optimizer.remove_constraint", "Optimizer.remove_parameter", "Optimizer.solve_nlopt", "Optimizer.to_data", "Optimizer.to_json", "Optimizer.to_jsonstring", "Optimizer.validate_data", "Optimizer.validate_json", "OriginNodeXParameter", "OriginNodeXParameter.ToString", "OriginNodeXParameter.attr_name", "OriginNodeXParameter.bound_low", "OriginNodeXParameter.bound_up", "OriginNodeXParameter.copy", "OriginNodeXParameter.from_data", "OriginNodeXParameter.from_json", "OriginNodeXParameter.from_jsonstring", "OriginNodeXParameter.key", "OriginNodeXParameter.start_value", "OriginNodeXParameter.to_data", "OriginNodeXParameter.to_json", "OriginNodeXParameter.to_jsonstring", "OriginNodeXParameter.validate_data", "OriginNodeXParameter.validate_json", "OriginNodeYParameter", "OriginNodeYParameter.ToString", "OriginNodeYParameter.attr_name", "OriginNodeYParameter.bound_low", "OriginNodeYParameter.bound_up", "OriginNodeYParameter.copy", "OriginNodeYParameter.from_data", "OriginNodeYParameter.from_json", "OriginNodeYParameter.from_jsonstring", "OriginNodeYParameter.key", "OriginNodeYParameter.start_value", "OriginNodeYParameter.to_data", "OriginNodeYParameter.to_json", "OriginNodeYParameter.to_jsonstring", "OriginNodeYParameter.validate_data", "OriginNodeYParameter.validate_json", "OriginNodeZParameter", "OriginNodeZParameter.ToString", "OriginNodeZParameter.attr_name", "OriginNodeZParameter.bound_low", "OriginNodeZParameter.bound_up", "OriginNodeZParameter.copy", "OriginNodeZParameter.from_data", "OriginNodeZParameter.from_json", "OriginNodeZParameter.from_jsonstring", "OriginNodeZParameter.key", "OriginNodeZParameter.start_value", "OriginNodeZParameter.to_data", "OriginNodeZParameter.to_json", "OriginNodeZParameter.to_jsonstring", "OriginNodeZParameter.validate_data", "OriginNodeZParameter.validate_json", "PlaneConstraint", "PlaneConstraint.ToString", "PlaneConstraint.copy", "PlaneConstraint.from_data", "PlaneConstraint.from_json", "PlaneConstraint.from_jsonstring", "PlaneConstraint.key", "PlaneConstraint.penalty", "PlaneConstraint.reference", "PlaneConstraint.target", "PlaneConstraint.to_data", "PlaneConstraint.to_json", "PlaneConstraint.to_jsonstring", "PlaneConstraint.validate_data", "PlaneConstraint.validate_json", "PointConstraint", "PointConstraint.ToString", "PointConstraint.copy", "PointConstraint.from_data", "PointConstraint.from_json", "PointConstraint.from_jsonstring", "PointConstraint.key", "PointConstraint.penalty", "PointConstraint.reference", "PointConstraint.target", "PointConstraint.to_data", "PointConstraint.to_json", "PointConstraint.to_jsonstring", "PointConstraint.validate_data", "PointConstraint.validate_json", "ReactionForceConstraint", "ReactionForceConstraint.ToString", "ReactionForceConstraint.copy", "ReactionForceConstraint.from_data", "ReactionForceConstraint.from_json", "ReactionForceConstraint.from_jsonstring", "ReactionForceConstraint.key", "ReactionForceConstraint.penalty", "ReactionForceConstraint.reference", "ReactionForceConstraint.target", "ReactionForceConstraint.to_data", "ReactionForceConstraint.to_json", "ReactionForceConstraint.to_jsonstring", "ReactionForceConstraint.validate_data", "ReactionForceConstraint.validate_json", "TrailEdgeForceConstraint", "TrailEdgeForceConstraint.ToString", "TrailEdgeForceConstraint.copy", "TrailEdgeForceConstraint.from_data", "TrailEdgeForceConstraint.from_json", "TrailEdgeForceConstraint.from_jsonstring", "TrailEdgeForceConstraint.key", "TrailEdgeForceConstraint.penalty", "TrailEdgeForceConstraint.reference", "TrailEdgeForceConstraint.target", "TrailEdgeForceConstraint.to_data", "TrailEdgeForceConstraint.to_json", "TrailEdgeForceConstraint.to_jsonstring", "TrailEdgeForceConstraint.validate_data", "TrailEdgeForceConstraint.validate_json", "TrailEdgeParameter", "TrailEdgeParameter.ToString", "TrailEdgeParameter.attr_name", "TrailEdgeParameter.bound_low", "TrailEdgeParameter.bound_up", "TrailEdgeParameter.copy", "TrailEdgeParameter.from_data", "TrailEdgeParameter.from_json", "TrailEdgeParameter.from_jsonstring", "TrailEdgeParameter.key", "TrailEdgeParameter.start_value", "TrailEdgeParameter.to_data", "TrailEdgeParameter.to_json", "TrailEdgeParameter.to_jsonstring", "TrailEdgeParameter.validate_data", "TrailEdgeParameter.validate_json", "solve_nlopt_proxy", "FormArtist", "FormArtist.build", "FormArtist.build_as", "FormArtist.clear", "FormArtist.clear_edges", "FormArtist.clear_nodes", "FormArtist.draw", "FormArtist.draw_collection", "FormArtist.draw_edgelabels", "FormArtist.draw_edges", "FormArtist.draw_loads", "FormArtist.draw_nodelabels", "FormArtist.draw_nodes", "FormArtist.draw_reactions", "FormArtist.redraw", "FormArtist.register", "FormArtist.update_data", "FormArtist.viewbox", "TopologyArtist", "TopologyArtist.build", "TopologyArtist.build_as", "TopologyArtist.clear", "TopologyArtist.clear_edges", "TopologyArtist.clear_nodes", "TopologyArtist.draw", "TopologyArtist.draw_collection", "TopologyArtist.draw_edgelabels", "TopologyArtist.draw_edges", "TopologyArtist.draw_loads", "TopologyArtist.draw_nodelabels", "TopologyArtist.draw_nodes", "TopologyArtist.redraw", "TopologyArtist.register", "TopologyArtist.update_data", "TopologyArtist.viewbox", "NodeSupport", "NodeSupport.ToString", "NodeSupport.copy", "NodeSupport.from_data", "NodeSupport.from_json", "NodeSupport.from_jsonstring", "NodeSupport.from_point", "NodeSupport.from_rhino_point", "NodeSupport.to_data", "NodeSupport.to_json", "NodeSupport.to_jsonstring", "NodeSupport.validate_data", "NodeSupport.validate_json", "Changelog", "Citing", "Examples", "COMPAS CEM", "Installation", "License"], "terms": {"01": [0, 597, 598], "simpl": [0, 597, 598, 599], "compress": [0, 5, 596, 597, 598], "structur": [0, 29, 56, 77, 88, 96, 101, 123, 163, 192, 213, 227, 235, 240, 270, 596, 597, 598, 599], "02": [0, 597, 598], "brace": [0, 597, 598], "tower": [0, 597, 598], "2d": [0, 6, 564, 581, 595, 597, 598], "03": [0, 597, 598], "bridg": [0, 6, 595, 597, 598], "optim": [0, 4, 5, 12, 13, 351, 366, 369, 370, 376, 382, 422, 425, 426, 432, 438, 441, 442, 448, 454, 457, 458, 464, 470, 485, 500, 515, 530, 533, 534, 540, 546, 595, 597, 598], "04": [0, 597, 598], "tree": [0, 597, 598], "05": [0, 597, 598], "planar": [0, 56, 83, 99, 192, 221, 238, 597, 598], "tensegr": [0, 6, 595, 597, 598], "wheel": [0, 597, 598], "from": [1, 2, 3, 4, 5, 25, 27, 29, 34, 36, 37, 48, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 77, 88, 95, 96, 97, 101, 108, 123, 132, 154, 157, 159, 163, 168, 170, 171, 184, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 213, 227, 234, 235, 236, 240, 247, 270, 279, 300, 301, 302, 303, 304, 313, 314, 315, 316, 317, 326, 327, 328, 329, 330, 336, 337, 341, 342, 343, 344, 345, 354, 355, 356, 372, 373, 374, 385, 386, 387, 403, 404, 405, 406, 414, 428, 429, 430, 444, 445, 446, 460, 461, 462, 473, 474, 475, 488, 489, 490, 503, 504, 505, 518, 519, 520, 536, 537, 538, 551, 552, 569, 570, 585, 586, 587, 588, 589, 595, 599, 600], "compas_cem": [1, 2, 3, 4, 5, 12, 21, 148, 297, 310, 323, 336, 337, 338, 351, 366, 382, 397, 416, 422, 438, 454, 470, 485, 500, 515, 530, 546, 547, 565, 582, 595, 596, 598, 599], "diagram": [1, 2, 3, 4, 5, 12, 13, 21, 56, 66, 119, 121, 148, 156, 157, 192, 258, 259, 261, 263, 264, 265, 269, 284, 336, 337, 357, 388, 397, 416, 476, 491, 506, 521, 546, 547, 553, 556, 557, 559, 560, 565, 571, 574, 577, 588, 589, 595, 598], "import": [1, 2, 3, 4, 5, 27, 77, 159, 213, 595, 599], "topologydiagram": [1, 2, 3, 4, 5, 336, 337, 416, 546, 565, 595], "element": [1, 2, 4, 5, 12, 13, 23, 150, 297, 310, 323, 595, 598], "node": [1, 2, 3, 4, 5, 24, 25, 28, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 45, 46, 48, 53, 58, 63, 65, 69, 70, 72, 73, 74, 75, 79, 80, 81, 82, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 133, 139, 142, 143, 152, 153, 154, 156, 157, 160, 161, 162, 166, 167, 168, 169, 170, 171, 173, 175, 176, 178, 180, 181, 183, 184, 189, 194, 199, 201, 204, 205, 207, 208, 209, 210, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 261, 262, 263, 266, 267, 270, 271, 272, 274, 280, 284, 288, 291, 292, 336, 337, 338, 357, 382, 388, 422, 424, 425, 426, 431, 432, 438, 440, 441, 442, 447, 448, 454, 456, 457, 458, 463, 464, 470, 476, 485, 491, 500, 506, 521, 550, 552, 553, 557, 558, 559, 568, 570, 571, 575, 576, 577, 582, 588, 589, 595], "trailedg": [1, 2, 4], "deviationedg": [1, 2, 4, 5], "load": [1, 2, 3, 4, 12, 13, 56, 81, 90, 109, 119, 151, 192, 218, 229, 248, 261, 338, 344, 345, 553, 557, 571, 575, 595, 598], "nodeload": [1, 2, 3, 4], "support": [1, 2, 3, 4, 12, 13, 81, 82, 121, 122, 127, 153, 157, 218, 220, 263, 267, 274, 416, 500, 546, 560, 582, 588, 589, 595, 598], "nodesupport": [1, 2, 3, 4, 153], "equilibrium": [1, 2, 3, 4, 5, 12, 13, 336, 337, 596, 598], "static_equilibrium": [1, 2, 3, 4, 5, 595], "compas_plott": [1, 2, 3, 4, 5], "plotter": [1, 2, 3, 4, 5, 12, 13, 547, 562, 565, 579, 595, 598], "compa": [1, 2, 3, 4, 5, 27, 77, 159, 213, 595, 596, 597], "geometri": [1, 2, 3, 4, 5, 56, 192, 304, 317, 330, 345, 589], "translat": [1, 2, 3, 4, 5], "instanti": [1, 4], "topolog": [1, 2, 3, 4, 5, 66, 119, 121, 148, 156, 157, 258, 259, 261, 263, 264, 265, 284, 336, 337, 369, 370, 376, 406, 410, 416, 425, 426, 432, 441, 442, 448, 457, 458, 464, 533, 534, 540, 546, 565, 571, 574, 577, 595], "add": [1, 2, 3, 4, 5, 23, 24, 150, 152, 153, 399, 400], "add_nod": [1, 2, 4, 5], "0": [1, 2, 3, 4, 5, 46, 124, 125, 181, 271, 272, 310, 338, 351, 382, 470, 485, 500, 515, 599], "1": [1, 2, 3, 4, 5, 27, 46, 47, 67, 68, 69, 70, 88, 91, 101, 108, 111, 125, 159, 181, 182, 202, 203, 204, 205, 227, 230, 240, 247, 250, 272, 338, 351, 382, 470, 485, 500, 515], "2": [1, 2, 3, 4, 5, 53, 117, 189, 257], "5": [1, 2, 3, 4, 5, 46, 124, 125, 181, 271, 272], "3": [1, 2, 4, 5, 65, 67, 68, 69, 70, 201, 202, 203, 204, 205], "edg": [1, 2, 3, 4, 5, 23, 27, 28, 31, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 58, 63, 67, 68, 70, 73, 76, 78, 83, 84, 99, 100, 118, 125, 133, 138, 140, 141, 145, 150, 155, 159, 160, 161, 162, 165, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 194, 199, 202, 203, 205, 208, 211, 212, 214, 215, 221, 222, 223, 238, 239, 259, 260, 264, 272, 280, 283, 287, 289, 290, 294, 297, 303, 304, 323, 329, 330, 351, 357, 366, 368, 369, 370, 375, 376, 388, 476, 491, 506, 515, 521, 530, 532, 533, 534, 539, 540, 550, 551, 553, 555, 556, 568, 569, 571, 573, 574, 595], "add_edg": [1, 2, 4, 5], "length": [1, 2, 4, 43, 44, 125, 178, 179, 272, 323, 351, 530, 595, 598], "forc": [1, 2, 4, 5, 42, 56, 81, 90, 122, 177, 192, 218, 229, 267, 297, 366, 500, 515, 557, 560, 595, 598], "add_support": [1, 2, 3, 4], "add_load": [1, 2, 3, 4], "build": [1, 4, 549, 567, 595], "trail": [1, 2, 3, 4, 5, 23, 150, 153, 155, 156, 157, 162, 172, 212, 223, 258, 264, 265, 266, 283, 323, 515, 530, 595], "automat": [1, 157, 595, 596, 598, 599], "build_trail": [1, 2, 3, 4, 5, 595], "comput": [1, 4, 5, 110, 118, 120, 157, 249, 260, 262, 564, 581], "state": [1, 4, 5, 323], "static": [1, 4, 5, 336, 337, 548, 549, 554, 561, 562, 566, 567, 572, 578, 579, 598], "form": [1, 2, 3, 4, 5, 21, 52, 66, 67, 116, 148, 188, 202, 256, 336, 337, 357, 388, 397, 411, 412, 416, 476, 491, 506, 521, 546, 547, 553, 556, 559, 560, 596, 598, 599], "eta": [1, 2, 4, 5, 336, 337, 406, 410, 416, 546, 595], "1e": [1, 2, 3, 4, 5, 81, 90, 218, 229, 336, 337, 416, 546], "6": [1, 2, 3, 4, 5, 81, 90, 218, 229, 336, 337, 416, 546, 599], "tmax": [1, 2, 4, 5, 336, 337, 406, 410, 416, 546, 595], "100": [1, 2, 3, 4, 5, 124, 271, 336, 337, 416, 546], "verbos": [1, 2, 336, 337], "true": [1, 2, 4, 5, 49, 52, 53, 54, 70, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 98, 99, 100, 101, 113, 116, 117, 129, 130, 155, 172, 185, 188, 189, 190, 205, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 237, 238, 239, 240, 253, 256, 257, 276, 277, 283, 306, 307, 319, 320, 332, 333, 347, 348, 362, 363, 378, 379, 393, 394, 418, 419, 434, 435, 450, 451, 466, 467, 481, 482, 496, 497, 511, 512, 526, 527, 542, 543, 591, 592], "plot": [1, 2, 3, 4, 5, 547, 563, 565, 580], "result": [1, 3, 4, 5, 25, 29, 34, 88, 95, 96, 97, 101, 154, 163, 168, 227, 234, 235, 236, 240], "scene": [1, 2, 3, 4, 5], "nodes": [1, 2, 3, 4, 5], "shift": [1, 4, 5], "transform": [1, 2, 3, 4, 5], "from_vector": [1, 2, 3, 4, 5], "show": [1, 2, 3, 4, 5, 22, 149, 298, 311, 324, 339, 352, 367, 383, 398, 423, 439, 455, 471, 486, 501, 516, 531, 583, 599], "content": 1, "zoom_ext": [1, 2, 3, 4, 5], "data": [2, 3, 25, 26, 29, 30, 34, 49, 52, 53, 57, 59, 60, 64, 77, 88, 95, 96, 97, 101, 113, 116, 117, 123, 128, 129, 130, 146, 147, 154, 155, 158, 163, 164, 168, 172, 185, 188, 189, 193, 195, 196, 200, 213, 227, 234, 235, 236, 240, 253, 256, 257, 270, 275, 276, 277, 283, 295, 296, 299, 300, 301, 302, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 318, 319, 320, 321, 322, 325, 326, 327, 328, 331, 332, 333, 334, 335, 338, 340, 341, 342, 343, 346, 347, 348, 349, 350, 353, 354, 355, 356, 358, 359, 361, 362, 363, 364, 365, 371, 372, 373, 374, 377, 378, 379, 380, 381, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397, 402, 403, 404, 405, 417, 418, 419, 420, 421, 427, 428, 429, 430, 433, 434, 435, 436, 437, 443, 444, 445, 446, 449, 450, 451, 452, 453, 459, 460, 461, 462, 465, 466, 467, 468, 469, 472, 473, 474, 475, 477, 478, 480, 481, 482, 483, 484, 487, 488, 489, 490, 492, 493, 495, 496, 497, 498, 499, 502, 503, 504, 505, 507, 508, 510, 511, 512, 513, 514, 517, 518, 519, 520, 522, 523, 525, 526, 527, 528, 529, 535, 536, 537, 538, 541, 542, 543, 544, 545, 562, 563, 579, 580, 582, 584, 585, 586, 587, 590, 591, 592, 593, 594, 595, 598], "point": [2, 3, 40, 46, 54, 61, 63, 64, 65, 88, 98, 101, 131, 134, 175, 181, 190, 197, 199, 200, 201, 227, 237, 240, 278, 281, 303, 316, 317, 329, 338, 344, 345, 391, 479, 485, 588, 589], "4": [2, 3, 4, 5], "trail_edg": [2, 3, 162], "deviation_edg": [2, 3, 5, 155, 160], "kei": [2, 4, 23, 28, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 52, 55, 63, 72, 74, 75, 76, 79, 80, 81, 82, 86, 87, 90, 91, 92, 93, 94, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 122, 125, 127, 138, 139, 144, 145, 150, 155, 160, 161, 162, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 191, 199, 207, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 223, 225, 226, 229, 230, 231, 232, 233, 241, 242, 243, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 266, 267, 272, 274, 283, 284, 287, 288, 293, 294, 310, 338, 366, 407, 413, 414, 415, 422, 438, 454, 530, 582, 595], "u": [2, 5, 27, 36, 40, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 73, 125, 159, 170, 175, 176, 177, 178, 179, 180, 181, 184, 185, 188, 189, 208, 272, 297, 323], "v": [2, 5, 27, 36, 40, 41, 42, 43, 44, 45, 46, 48, 49, 52, 53, 73, 125, 159, 170, 175, 176, 177, 178, 179, 180, 181, 184, 185, 188, 189, 208, 272, 297, 323, 599], "deviat": [2, 5, 23, 150, 160, 172, 215, 259, 297, 351, 366, 595], "indirect": 2, "set": [2, 38, 39, 47, 50, 51, 52, 53, 61, 68, 70, 102, 103, 111, 112, 114, 115, 116, 117, 138, 139, 173, 174, 182, 186, 187, 188, 189, 197, 203, 205, 241, 242, 250, 252, 254, 255, 256, 257, 287, 288, 366, 416, 422, 438, 454, 530, 546, 595], "loadscal": [2, 3], "reactionscal": [2, 3], "os": 3, "time": [3, 5, 157, 599], "pointconstraint": 3, "trailedgeparamet": 3, "deviationedgeparamet": [3, 4, 5], "here": [3, 599], "path": [3, 59, 64, 77, 123, 129, 134, 195, 200, 213, 270, 276, 281, 301, 306, 314, 319, 327, 332, 342, 347, 355, 362, 373, 378, 386, 393, 404, 418, 429, 434, 445, 450, 461, 466, 474, 481, 489, 496, 504, 511, 519, 526, 537, 542, 586, 591], "dirnam": 3, "__file__": 3, "IN": [3, 600], "abspath": 3, "join": 3, "03_bridge_2d": 3, "json": [3, 59, 60, 129, 130, 147, 195, 196, 276, 277, 296, 301, 302, 306, 307, 309, 314, 315, 319, 320, 322, 327, 328, 332, 333, 335, 342, 343, 347, 348, 350, 355, 356, 362, 363, 365, 373, 374, 378, 379, 381, 386, 387, 393, 394, 396, 404, 405, 418, 419, 421, 429, 430, 434, 435, 437, 445, 446, 450, 451, 453, 461, 462, 466, 467, 469, 474, 475, 481, 482, 484, 489, 490, 496, 497, 499, 504, 505, 511, 512, 514, 519, 520, 526, 527, 529, 537, 538, 542, 543, 545, 586, 587, 591, 592, 594, 595], "from_json": 3, "appli": [3, 56, 81, 90, 109, 119, 151, 192, 218, 229, 248, 261, 344, 582, 589], "gener": [3, 4, 5, 27, 157, 159, 336, 337, 598], "find": [3, 56, 123, 160, 162, 192, 270, 416, 546, 596, 598, 599], "initi": [3, 369, 370, 376, 425, 426, 432, 441, 442, 448, 457, 458, 464, 533, 534, 540], "opt": [3, 5], "defin": [3, 124, 271, 323, 338, 588, 589], "constraint": [3, 4, 5, 397, 399, 408, 411, 412, 414, 546, 595, 598], "nodes_opt": 3, "target_point": 3, "20": 3, "67": 3, "42": 3, "7": [3, 599], "15": 3, "28": 3, "84": 3, "zip": 3, "add_constraint": [3, 4, 5], "paramet": [3, 4, 5, 21, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 70, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 122, 123, 124, 125, 129, 130, 134, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 267, 270, 271, 272, 276, 277, 281, 283, 285, 286, 287, 288, 289, 290, 291, 292, 299, 300, 301, 302, 303, 304, 306, 307, 312, 313, 314, 315, 316, 317, 319, 320, 325, 326, 327, 328, 329, 330, 332, 333, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 353, 354, 355, 356, 362, 363, 366, 369, 370, 371, 372, 373, 374, 376, 378, 379, 384, 385, 386, 387, 393, 394, 400, 402, 403, 404, 405, 407, 409, 413, 415, 416, 418, 419, 422, 425, 426, 427, 428, 429, 430, 432, 434, 435, 438, 441, 442, 443, 444, 445, 446, 448, 450, 451, 454, 457, 458, 459, 460, 461, 462, 464, 466, 467, 472, 473, 474, 475, 481, 482, 487, 488, 489, 490, 496, 497, 502, 503, 504, 505, 511, 512, 517, 518, 519, 520, 526, 527, 530, 533, 534, 535, 536, 537, 538, 540, 542, 543, 546, 547, 548, 549, 555, 558, 562, 565, 566, 567, 573, 576, 579, 582, 584, 585, 586, 587, 588, 589, 591, 592, 595], "add_paramet": [3, 4, 5], "bound_low": [3, 366, 422, 438, 454, 530], "bound_up": [3, 366, 422, 438, 454, 530], "10": [3, 4, 5, 596], "record": 3, "start": [3, 5, 40, 41, 43, 45, 46, 48, 61, 123, 131, 157, 175, 176, 178, 180, 181, 184, 197, 266, 270, 278, 597, 599], "form_opt": [3, 4, 5], "solve_nlopt": [3, 4, 5, 595], "algorithm": [3, 5, 31, 55, 56, 78, 165, 191, 192, 214, 336, 337, 416, 546, 595], "slsqp": [3, 4, 416, 546], "iter": [3, 5, 49, 90, 113, 124, 155, 156, 172, 185, 229, 253, 269, 271, 283, 284, 336, 337, 416, 546, 595], "ep": [3, 5, 416, 546], "print": [3, 4, 5, 336, 337], "out": [3, 4, 5, 336, 337, 599, 600], "f": [3, 5], "number_of_paramet": [3, 5], "number_of_constraint": [3, 5], "elaps": [3, 5], "final": [3, 5, 599], "valu": [3, 4, 5, 38, 39, 42, 46, 50, 51, 52, 88, 101, 102, 103, 105, 107, 114, 115, 116, 138, 139, 140, 141, 142, 143, 173, 174, 177, 181, 186, 187, 188, 227, 240, 241, 242, 244, 246, 254, 255, 256, 287, 288, 289, 290, 291, 292, 369, 370, 376, 416, 425, 426, 432, 441, 442, 448, 457, 458, 464, 515, 533, 534, 540, 546, 595], "object": [3, 4, 5, 22, 25, 30, 31, 34, 38, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 78, 83, 84, 85, 95, 97, 98, 99, 100, 124, 128, 129, 130, 134, 146, 147, 149, 151, 153, 154, 164, 165, 168, 173, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 214, 221, 222, 224, 234, 236, 237, 238, 239, 271, 275, 276, 277, 281, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 365, 367, 371, 372, 373, 374, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 392, 393, 394, 395, 396, 397, 398, 402, 403, 404, 405, 406, 410, 417, 418, 419, 420, 421, 423, 427, 428, 429, 430, 433, 434, 435, 436, 437, 439, 443, 444, 445, 446, 449, 450, 451, 452, 453, 455, 459, 460, 461, 462, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 524, 525, 526, 527, 528, 529, 531, 535, 536, 537, 538, 541, 542, 543, 544, 545, 554, 572, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 599], "function": [3, 4, 5, 38, 39, 50, 51, 52, 53, 83, 99, 102, 103, 114, 115, 117, 124, 157, 173, 174, 186, 187, 188, 189, 221, 238, 241, 242, 254, 255, 257, 271, 336, 337, 406, 410], "penalti": [3, 4, 5, 595], "norm": [3, 4, 5], "gradient": [3, 4, 5, 406, 416, 546, 595], "gradient_norm": [3, 4, 5, 595], "figsiz": [3, 4, 5], "16": [3, 4, 5, 599], "9": [3, 4, 5], "t": [3, 4, 5, 46, 125, 153, 181, 272, 599], "40": 3, "target": [3, 351, 358, 382, 389, 470, 477, 485, 492, 493, 500, 507, 515, 522, 598], "x": [3, 5, 422], "y": [3, 5, 438], "z": [3, 85, 224, 454], "size": [3, 47, 91, 111, 182, 230, 250], "facecolor": 3, "90": 3, "math": [4, 5], "sqrt": 4, "trailedgeforceconstraint": [4, 5], "width": 4, "height": 4, "auto": [4, 5], "auxiliari": [4, 5, 155, 156, 157, 212, 258, 284, 595], "auxiliary_trail": [4, 5, 157, 595], "minim": [4, 410], "axiliari": [4, 5], "goal": [4, 399, 414], "auxiliary_trail_edg": [4, 5, 595], "should": [4, 5, 40, 52, 53, 56, 116, 117, 155, 172, 175, 188, 189, 192, 256, 257, 283, 562, 579], "small": 4, "number": [4, 5, 31, 32, 33, 35, 65, 68, 70, 118, 119, 120, 121, 124, 165, 166, 167, 169, 201, 203, 205, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 271, 336, 337, 408, 409, 416, 546], "total": 4, "format": [4, 25, 29, 34, 72, 86, 88, 95, 96, 97, 101, 106, 126, 130, 154, 163, 168, 207, 225, 227, 234, 235, 236, 240, 245, 273, 277, 307, 320, 333, 348, 363, 379, 394, 419, 435, 451, 467, 482, 497, 512, 527, 543, 592, 595], "ns": [4, 5], "show_nodetext": 4, "nodetext": 4, "show_edgetext": 4, "edgetext": 4, "pad": [4, 5], "pi": 5, "co": 5, "sin": 5, "numpi": [5, 337], "np": 5, "util": 5, "pairwis": 5, "creat": [5, 25, 29, 34, 58, 62, 95, 96, 97, 132, 154, 163, 168, 194, 198, 234, 235, 236, 279, 303, 304, 316, 317, 329, 330, 344, 345, 411, 412, 548, 566, 588, 589, 595], "diamet": 5, "num_sid": 5, "onli": [5, 54, 70, 79, 98, 190, 205, 216, 237, 411, 412, 416, 546, 588, 589, 595, 598, 599], "even": 5, "appendix_length": 5, "tension_forc": 5, "compression_forc": 5, "bound": [5, 369, 370, 411, 425, 426, 441, 442, 457, 458, 533, 534, 564, 581], "test": [5, 212, 215, 220, 223], "subdivis": 5, "assert": 5, "remov": [5, 414, 415, 595], "last": [5, 157, 599], "theta": 5, "linspac": 5, "radiu": 5, "i": [5, 145, 294], "enumer": 5, "perimet": 5, "tension": [5, 596, 598], "list": [5, 21, 25, 28, 29, 34, 39, 40, 41, 45, 46, 47, 48, 50, 51, 55, 56, 58, 61, 63, 68, 70, 75, 76, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 101, 103, 104, 108, 109, 110, 111, 114, 115, 122, 123, 124, 131, 133, 135, 145, 148, 154, 156, 160, 161, 162, 163, 168, 174, 175, 176, 180, 181, 182, 184, 186, 187, 191, 192, 194, 197, 199, 203, 205, 210, 211, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 240, 242, 243, 247, 248, 249, 250, 254, 255, 267, 270, 271, 278, 280, 282, 284, 294, 303, 316, 329, 338, 344, 360, 494, 509, 524, 546, 548, 549, 566, 567, 588, 595], "rang": [5, 46, 52, 116, 125, 181, 188, 256, 272], "intern": [5, 336, 337, 598], "ar": [5, 56, 125, 157, 192, 272, 416, 546, 595, 597, 598, 599], "half_num_sid": 5, "int": [5, 31, 32, 33, 35, 47, 65, 68, 70, 75, 76, 81, 82, 87, 90, 91, 109, 111, 118, 119, 120, 121, 122, 124, 127, 139, 145, 160, 162, 165, 166, 167, 169, 182, 201, 203, 205, 210, 211, 218, 219, 220, 226, 229, 230, 248, 250, 251, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 288, 294, 336, 337, 338, 357, 388, 416, 476, 491, 506, 521, 546, 555, 558, 573, 576, 582], "auxiliary_trail_length": [5, 595], "zero": [5, 85, 224], "all": [5, 26, 39, 51, 55, 85, 89, 90, 103, 155, 156, 158, 172, 174, 187, 191, 224, 228, 229, 242, 266, 283, 284, 595, 599, 600], "allow": [5, 599], "chang": [5, 88, 101, 227, 240, 595], "low_bound": 5, "up_bound": 5, "edge_forc": 5, "lbfg": [5, 416, 546], "1000": 5, "45": 5, "A": [6, 21, 27, 31, 39, 50, 51, 52, 54, 55, 61, 63, 64, 65, 72, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 98, 99, 100, 103, 106, 109, 114, 115, 116, 122, 123, 124, 132, 133, 134, 137, 140, 141, 142, 143, 145, 148, 151, 153, 157, 159, 160, 162, 165, 174, 186, 187, 188, 190, 191, 197, 199, 200, 201, 207, 210, 211, 213, 214, 216, 218, 219, 220, 221, 222, 224, 225, 226, 228, 230, 231, 232, 233, 237, 238, 239, 242, 245, 248, 254, 255, 256, 267, 270, 271, 279, 280, 281, 284, 286, 289, 290, 291, 292, 294, 297, 304, 310, 316, 317, 323, 330, 336, 337, 338, 344, 345, 360, 407, 413, 416, 494, 509, 524, 546, 558, 576, 582, 588, 589, 597, 598, 600], "b": [6, 597, 598], "tubular": [6, 597, 598], "3d": [6, 595, 597, 598], "c": [6, 88, 101, 227, 240, 597, 598, 599, 600], "circular": [6, 597, 598], "dome": [6, 595, 597, 598], "d": [6, 88, 101, 227, 240, 596, 597, 598], "jessen": [6, 597, 598], "e": [6, 145, 294, 323, 597, 598], "spiral": [6, 595, 597, 598], "staircas": [6, 595, 597, 598], "download": [7, 8, 9, 10, 11, 599], "rhino": [7, 22, 149, 298, 304, 311, 317, 324, 330, 339, 345, 352, 367, 383, 398, 423, 439, 455, 471, 486, 501, 516, 531, 562, 579, 583, 589, 595, 598, 599], "file": [7, 8, 9, 10, 11, 59, 60, 64, 129, 134, 195, 196, 200, 276, 281, 301, 302, 306, 314, 315, 319, 327, 328, 332, 342, 343, 347, 355, 356, 362, 373, 374, 378, 386, 387, 393, 404, 405, 418, 429, 430, 434, 445, 446, 450, 461, 462, 466, 474, 475, 481, 489, 490, 496, 504, 505, 511, 519, 520, 526, 537, 538, 542, 586, 587, 591, 595, 600], "grasshopp": [7, 8, 9, 10, 11, 22, 149, 298, 311, 324, 339, 352, 367, 383, 398, 423, 439, 455, 471, 486, 501, 516, 531, 562, 579, 583, 595, 597, 598], "class": [21, 148, 297, 310, 323, 338, 351, 366, 382, 397, 422, 438, 454, 470, 485, 500, 515, 530, 547, 565, 582, 595], "arg": [21, 148, 316, 317, 360, 494, 509, 524], "kwarg": [21, 52, 116, 148, 188, 256, 297, 303, 304, 310, 316, 317, 323, 329, 330, 338, 360, 397, 494, 509, 524, 547, 548, 549, 565, 566, 567, 582], "sourc": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 305, 306, 307, 308, 309, 310, 311, 312, 318, 319, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 348, 349, 350, 351, 352, 353, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 590, 591, 592, 593, 594, 598], "base": [21, 66, 148, 297, 310, 323, 338, 351, 366, 382, 397, 416, 422, 438, 454, 470, 485, 500, 515, 530, 546, 547, 565, 582, 595], "The": [21, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 64, 65, 67, 68, 69, 70, 72, 73, 74, 79, 80, 81, 86, 90, 91, 92, 93, 94, 102, 103, 104, 106, 108, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 146, 147, 148, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 215, 216, 217, 218, 223, 225, 229, 230, 231, 232, 233, 241, 242, 243, 245, 247, 249, 250, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 284, 285, 286, 287, 288, 295, 296, 299, 300, 301, 302, 303, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 402, 403, 404, 405, 406, 408, 409, 410, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 562, 565, 566, 567, 579, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600], "heart": [21, 148], "life": [21, 148], "argument": [21, 52, 124, 140, 141, 142, 143, 148, 188, 271, 289, 290, 291, 292, 303, 304, 316, 317, 329, 330, 360, 494, 509, 524, 548, 549, 566, 567, 595], "dict": [21, 39, 49, 51, 52, 53, 57, 63, 72, 75, 76, 86, 87, 103, 106, 113, 115, 116, 117, 128, 130, 138, 139, 140, 141, 142, 143, 145, 146, 148, 155, 172, 174, 185, 187, 188, 189, 193, 199, 207, 210, 211, 225, 226, 242, 245, 253, 255, 256, 257, 275, 277, 283, 287, 288, 289, 290, 291, 292, 294, 295, 300, 303, 304, 305, 307, 308, 313, 316, 317, 318, 320, 321, 326, 329, 330, 331, 333, 334, 341, 346, 348, 349, 354, 360, 361, 363, 364, 372, 377, 379, 380, 385, 392, 394, 395, 403, 417, 419, 420, 428, 433, 435, 436, 444, 449, 451, 452, 460, 465, 467, 468, 473, 480, 482, 483, 488, 494, 495, 497, 498, 503, 509, 510, 512, 513, 518, 524, 525, 527, 528, 536, 541, 543, 544, 548, 549, 555, 558, 566, 567, 573, 576, 585, 590, 592, 593], "keyword": [21, 148, 303, 304, 316, 317, 329, 330, 548, 549, 566, 567], "return": [21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 150, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 371, 372, 373, 374, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 402, 403, 404, 405, 416, 417, 418, 419, 420, 421, 427, 428, 429, 430, 433, 434, 435, 436, 437, 443, 444, 445, 446, 449, 450, 451, 452, 453, 459, 460, 461, 462, 465, 466, 467, 468, 469, 472, 473, 474, 475, 476, 477, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 555, 558, 561, 562, 563, 564, 566, 567, 568, 569, 570, 573, 576, 578, 579, 580, 581, 582, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595], "method": [21, 148, 297, 310, 323, 338, 351, 366, 382, 397, 416, 422, 438, 454, 470, 485, 500, 515, 530, 546, 547, 554, 565, 572, 582, 595], "inherit": [21, 148, 297, 310, 323, 338, 351, 366, 382, 397, 422, 438, 454, 470, 485, 500, 515, 530, 547, 565, 582], "represent": [22, 128, 129, 130, 147, 149, 275, 276, 277, 296, 298, 305, 306, 307, 309, 311, 318, 319, 320, 322, 324, 331, 332, 333, 335, 339, 346, 347, 348, 350, 352, 361, 362, 363, 365, 367, 377, 378, 379, 381, 383, 392, 393, 394, 396, 398, 417, 418, 419, 421, 423, 433, 434, 435, 437, 439, 449, 450, 451, 453, 455, 465, 466, 467, 469, 471, 480, 481, 482, 484, 486, 495, 496, 497, 499, 501, 510, 511, 512, 514, 516, 525, 526, 527, 529, 531, 541, 542, 543, 545, 583, 590, 591, 592, 594], "string": [22, 59, 60, 64, 72, 86, 106, 129, 130, 134, 149, 195, 196, 200, 207, 225, 245, 276, 277, 281, 298, 301, 302, 306, 307, 311, 314, 315, 319, 320, 324, 327, 328, 332, 333, 339, 342, 343, 347, 348, 352, 355, 356, 362, 363, 367, 373, 374, 378, 379, 383, 386, 387, 393, 394, 398, 404, 405, 418, 419, 423, 429, 430, 434, 435, 439, 445, 446, 450, 451, 455, 461, 462, 466, 467, 471, 474, 475, 481, 482, 486, 489, 490, 496, 497, 501, 504, 505, 511, 512, 516, 519, 520, 526, 527, 531, 537, 538, 542, 543, 583, 586, 587, 591, 592], "an": [23, 30, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 53, 56, 57, 59, 60, 64, 83, 99, 102, 114, 115, 119, 121, 128, 129, 130, 134, 138, 150, 156, 157, 164, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 186, 187, 189, 192, 193, 195, 196, 200, 212, 215, 219, 221, 223, 238, 241, 254, 255, 261, 263, 275, 276, 277, 281, 284, 287, 299, 300, 301, 302, 303, 304, 305, 306, 307, 312, 313, 314, 315, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 333, 336, 337, 340, 341, 342, 343, 346, 347, 348, 353, 354, 355, 356, 357, 361, 362, 363, 366, 371, 372, 373, 374, 377, 378, 379, 384, 385, 386, 387, 388, 392, 393, 394, 397, 402, 403, 404, 405, 415, 416, 417, 418, 419, 422, 427, 428, 429, 430, 433, 434, 435, 438, 443, 444, 445, 446, 449, 450, 451, 454, 459, 460, 461, 462, 465, 466, 467, 472, 473, 474, 475, 476, 480, 481, 482, 487, 488, 489, 490, 491, 495, 496, 497, 502, 503, 504, 505, 506, 510, 511, 512, 517, 518, 519, 520, 521, 525, 526, 527, 530, 535, 536, 537, 538, 541, 542, 543, 547, 548, 549, 554, 555, 562, 565, 566, 567, 572, 573, 579, 584, 585, 586, 587, 590, 591, 592, 595, 598, 599, 600], "tupl": [23, 28, 38, 39, 42, 44, 47, 49, 50, 51, 52, 53, 55, 58, 61, 63, 67, 68, 76, 113, 116, 117, 131, 133, 138, 145, 150, 155, 161, 172, 173, 174, 177, 179, 182, 183, 185, 186, 187, 188, 189, 191, 194, 197, 199, 202, 203, 211, 212, 215, 223, 253, 256, 257, 278, 280, 283, 287, 294, 303, 316, 317, 329, 357, 388, 476, 491, 506, 521, 555, 564, 573, 581, 595], "doubl": [24, 152, 599], "rtype": [25, 29, 34, 88, 95, 96, 97, 101, 154, 163, 168, 227, 234, 235, 236, 240], "arrai": [25, 29, 34, 87, 88, 95, 96, 97, 101, 145, 154, 163, 168, 226, 227, 234, 235, 236, 240, 294, 411, 412], "adjac": [25, 95, 154, 234], "matrix": [25, 29, 34, 88, 95, 96, 97, 101, 154, 163, 168, 227, 234, 235, 236, 240], "network": [25, 26, 27, 29, 31, 34, 36, 49, 54, 55, 56, 61, 63, 64, 65, 73, 74, 77, 78, 83, 84, 85, 88, 89, 95, 96, 97, 98, 99, 100, 101, 113, 123, 124, 131, 133, 134, 135, 136, 137, 154, 158, 159, 163, 165, 168, 170, 185, 190, 191, 192, 197, 199, 200, 201, 208, 209, 213, 214, 221, 222, 224, 227, 228, 234, 235, 236, 237, 238, 239, 240, 253, 270, 271, 278, 280, 281, 282, 285, 286, 550, 568], "datastructur": [25, 27, 29, 34, 77, 88, 95, 96, 97, 101, 154, 159, 163, 168, 213, 227, 234, 235, 236, 240], "obj": [25, 27, 34, 38, 50, 64, 77, 95, 97, 102, 114, 134, 154, 159, 168, 173, 186, 200, 213, 234, 236, 241, 254, 281], "get": [25, 27, 34, 38, 39, 42, 44, 47, 50, 51, 52, 53, 67, 68, 69, 70, 71, 77, 95, 97, 102, 103, 107, 109, 111, 112, 114, 115, 116, 117, 122, 154, 159, 168, 173, 174, 177, 179, 182, 183, 186, 187, 188, 189, 202, 203, 204, 205, 206, 213, 234, 236, 241, 242, 246, 248, 250, 251, 252, 254, 255, 256, 257, 267, 493, 597], "liter": [25, 29, 34, 88, 95, 96, 97, 101, 154, 163, 168, 227, 234, 235, 236, 240, 562, 579], "csc": [25, 29, 34, 88, 95, 96, 97, 101, 154, 163, 168, 227, 234, 235, 236, 240], "csr": [25, 29, 34, 88, 95, 96, 97, 101, 154, 163, 168, 227, 234, 235, 236, 240], "coo": [25, 29, 34, 88, 95, 96, 97, 101, 154, 163, 168, 227, 234, 235, 236, 240], "option": [25, 29, 30, 34, 38, 39, 40, 46, 47, 49, 50, 51, 52, 53, 54, 56, 61, 64, 65, 70, 72, 73, 86, 88, 91, 95, 96, 97, 98, 101, 102, 103, 104, 106, 111, 113, 114, 115, 116, 117, 124, 125, 129, 130, 140, 141, 142, 143, 154, 163, 164, 168, 173, 174, 175, 181, 182, 185, 186, 187, 188, 189, 190, 192, 197, 200, 201, 205, 207, 208, 225, 227, 230, 234, 235, 236, 237, 240, 241, 242, 243, 245, 250, 253, 254, 255, 256, 257, 271, 272, 276, 277, 289, 290, 291, 292, 299, 306, 307, 312, 319, 320, 325, 332, 333, 336, 337, 340, 347, 348, 353, 362, 363, 371, 378, 379, 384, 393, 394, 402, 416, 418, 419, 427, 434, 435, 443, 450, 451, 459, 466, 467, 472, 481, 482, 487, 496, 497, 502, 511, 512, 517, 526, 527, 535, 542, 543, 546, 548, 549, 555, 558, 562, 566, 567, 573, 576, 579, 584, 591, 592], "array_lik": [25, 29, 34, 88, 95, 96, 97, 101, 154, 163, 168, 227, 234, 235, 236, 240], "construct": [25, 29, 34, 57, 59, 60, 61, 63, 64, 65, 66, 88, 95, 96, 97, 101, 154, 163, 168, 193, 195, 196, 197, 199, 200, 201, 227, 234, 235, 236, 240, 300, 301, 302, 313, 314, 315, 326, 327, 328, 341, 342, 343, 354, 355, 356, 372, 373, 374, 385, 386, 387, 403, 404, 405, 428, 429, 430, 444, 445, 446, 460, 461, 462, 473, 474, 475, 488, 489, 490, 503, 504, 505, 518, 519, 520, 536, 537, 538, 585, 586, 587], "none": [26, 27, 30, 36, 37, 38, 39, 50, 51, 52, 54, 56, 61, 64, 72, 86, 98, 102, 103, 106, 112, 114, 115, 116, 124, 129, 134, 136, 138, 140, 141, 142, 143, 158, 159, 164, 170, 171, 173, 174, 186, 187, 188, 190, 192, 197, 200, 207, 225, 237, 241, 242, 245, 252, 254, 255, 256, 271, 276, 281, 285, 287, 289, 290, 291, 292, 299, 306, 310, 312, 319, 323, 325, 332, 336, 337, 340, 347, 351, 353, 362, 366, 371, 378, 382, 384, 393, 402, 416, 418, 422, 427, 434, 438, 443, 450, 454, 459, 466, 470, 472, 481, 485, 487, 496, 500, 502, 511, 515, 517, 526, 530, 535, 542, 546, 550, 551, 552, 555, 558, 561, 562, 563, 568, 569, 570, 573, 576, 578, 579, 580, 584, 591, 595], "cl": [27, 30, 159, 164, 299, 312, 325, 340, 353, 371, 384, 402, 427, 443, 459, 472, 487, 502, 517, 535, 584], "graph": [27, 37, 58, 62, 118, 120, 126, 132, 157, 159, 171, 194, 198, 260, 262, 273, 279], "g": [27, 159, 323], "h": [27, 159], "same": [27, 56, 159, 192, 598], "vertic": [27, 56, 77, 85, 159, 192, 213, 224], "whose": [27, 159, 588, 589], "consist": [27, 159], "present": [27, 73, 74, 159, 208, 209], "refer": [27, 159, 416, 546, 598], "wolfram": [27, 159], "mathworld": [27, 159], "avail": [27, 83, 99, 156, 159, 221, 238, 599], "http": [27, 83, 99, 159, 221, 238, 596], "com": [27, 159], "graphcompl": [27, 159], "html": [27, 159], "exampl": [27, 36, 37, 53, 56, 77, 117, 159, 170, 171, 189, 192, 213, 257, 595, 598], "network_compl": [27, 159], "from_obj": [27, 77, 159, 213], "line": [27, 54, 56, 61, 64, 77, 83, 98, 99, 131, 159, 190, 192, 197, 200, 213, 221, 237, 238, 278, 303, 304, 329, 330, 382, 599], "ani": [27, 39, 49, 50, 51, 52, 53, 56, 103, 113, 114, 115, 116, 117, 140, 141, 142, 143, 159, 174, 185, 186, 187, 188, 189, 192, 242, 253, 254, 255, 256, 257, 284, 289, 290, 291, 292, 548, 549, 566, 567, 598, 600], "has_edg": [27, 159], "direct": [27, 41, 46, 56, 62, 73, 159, 176, 181, 192, 198, 208, 338, 345, 595], "fals": [27, 49, 52, 53, 54, 70, 73, 74, 77, 78, 79, 80, 81, 82, 83, 85, 88, 98, 99, 101, 113, 116, 117, 129, 130, 155, 157, 159, 172, 185, 188, 189, 190, 205, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 227, 237, 238, 240, 253, 256, 257, 276, 277, 283, 306, 307, 319, 320, 332, 333, 336, 337, 347, 348, 362, 363, 378, 379, 393, 394, 418, 419, 434, 435, 450, 451, 466, 467, 481, 482, 496, 497, 511, 512, 526, 527, 542, 543, 591, 592, 595], "connect": [28, 29, 61, 64, 65, 70, 77, 80, 96, 160, 161, 162, 163, 197, 200, 201, 205, 213, 217, 235, 599, 600], "hashabl": [28, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 63, 67, 68, 69, 70, 72, 73, 74, 75, 76, 79, 80, 86, 87, 89, 91, 92, 93, 94, 98, 102, 103, 104, 106, 108, 110, 111, 113, 114, 115, 116, 117, 123, 125, 133, 138, 145, 161, 166, 167, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 199, 202, 203, 204, 205, 207, 208, 209, 210, 211, 216, 217, 225, 226, 228, 230, 231, 232, 233, 237, 241, 242, 243, 245, 247, 249, 250, 253, 254, 255, 256, 257, 270, 272, 280, 287, 294], "identifi": [28, 32, 33, 35, 36, 37, 38, 39, 47, 49, 50, 51, 52, 53, 55, 58, 67, 68, 69, 70, 73, 74, 79, 80, 87, 89, 91, 92, 93, 94, 102, 103, 104, 108, 110, 111, 113, 114, 115, 116, 117, 123, 138, 139, 161, 166, 167, 169, 170, 171, 173, 174, 182, 185, 186, 187, 188, 189, 191, 194, 202, 203, 204, 205, 208, 209, 216, 217, 226, 228, 230, 231, 232, 233, 241, 242, 243, 247, 249, 250, 253, 254, 255, 256, 257, 270, 287, 288, 595], "make": [30, 157, 164, 299, 312, 325, 340, 351, 353, 371, 384, 402, 427, 443, 459, 472, 487, 500, 502, 515, 517, 535, 584, 599], "independ": [30, 137, 164, 286, 299, 312, 325, 340, 353, 371, 384, 402, 427, 443, 459, 472, 487, 502, 517, 535, 584], "type": [30, 56, 57, 59, 60, 122, 164, 192, 193, 195, 196, 267, 299, 300, 301, 302, 312, 313, 314, 315, 325, 326, 327, 328, 340, 341, 342, 343, 353, 354, 355, 356, 371, 372, 373, 374, 384, 385, 386, 387, 402, 403, 404, 405, 427, 428, 429, 430, 443, 444, 445, 446, 459, 460, 461, 462, 472, 473, 474, 475, 487, 488, 489, 490, 502, 503, 504, 505, 517, 518, 519, 520, 535, 536, 537, 538, 548, 549, 562, 566, 567, 579, 584, 585, 586, 587, 595, 599], "default": [30, 81, 90, 138, 139, 140, 141, 142, 143, 155, 164, 172, 218, 229, 283, 287, 288, 289, 290, 291, 292, 299, 312, 325, 336, 337, 340, 353, 371, 384, 402, 416, 427, 443, 459, 472, 487, 502, 517, 535, 546, 584, 595], "current": [30, 88, 101, 164, 227, 240, 299, 312, 325, 340, 353, 358, 371, 384, 389, 402, 427, 443, 459, 472, 477, 487, 492, 502, 507, 517, 522, 535, 551, 552, 564, 569, 570, 581, 584], "thi": [30, 31, 55, 56, 57, 59, 60, 78, 83, 99, 157, 164, 165, 191, 192, 193, 195, 196, 214, 221, 238, 284, 299, 300, 301, 302, 312, 313, 314, 315, 325, 326, 327, 328, 336, 337, 340, 341, 342, 343, 353, 354, 355, 356, 369, 370, 371, 372, 373, 374, 384, 385, 386, 387, 402, 403, 404, 405, 416, 425, 426, 427, 428, 429, 430, 441, 442, 443, 444, 445, 446, 457, 458, 459, 460, 461, 462, 472, 473, 474, 475, 487, 488, 489, 490, 502, 503, 504, 505, 517, 518, 519, 520, 533, 534, 535, 536, 537, 538, 546, 584, 585, 586, 587, 595, 599, 600], "count": [31, 165], "cross": [31, 55, 78, 83, 84, 99, 100, 165, 191, 214, 221, 222, 238, 239, 575], "pair": [31, 38, 39, 52, 55, 58, 61, 67, 72, 75, 76, 78, 86, 87, 103, 106, 116, 131, 133, 145, 165, 173, 174, 188, 191, 194, 197, 202, 207, 210, 211, 214, 225, 226, 242, 245, 256, 278, 280, 294, 548, 562, 566, 579], "note": [31, 55, 56, 77, 78, 79, 83, 88, 99, 101, 136, 137, 138, 139, 153, 156, 157, 165, 191, 192, 213, 214, 216, 221, 227, 238, 240, 284, 285, 286, 287, 288, 323, 369, 370, 425, 426, 441, 442, 457, 458, 533, 534, 588, 589, 596], "assum": [31, 55, 78, 165, 191, 214, 599], "li": [31, 55, 78, 85, 165, 191, 214, 224], "xy": [31, 55, 78, 85, 165, 191, 214, 224], "plane": [31, 54, 55, 78, 83, 84, 85, 98, 99, 100, 165, 190, 191, 214, 221, 222, 224, 237, 238, 239, 323, 470, 595], "neighbor": [32, 33, 35, 56, 79, 93, 94, 110, 124, 125, 166, 167, 169, 192, 216, 232, 233, 249, 271, 272], "numer": [33, 167, 416, 546, 598], "incom": [33, 93, 167, 232], "degre": [34, 65, 97, 168, 201, 236], "outgo": [35, 94, 169, 233], "delet": [36, 37, 170, 171, 595], "first": [36, 73, 125, 157, 170, 208, 272, 416, 546, 595, 599], "second": [36, 73, 125, 170, 208, 272], "name": [38, 39, 50, 51, 52, 102, 103, 114, 115, 116, 138, 139, 140, 141, 142, 143, 173, 174, 186, 187, 188, 241, 242, 254, 255, 256, 287, 288, 289, 290, 291, 292, 360, 368, 416, 424, 440, 456, 494, 509, 524, 532, 546, 599], "attribut": [38, 39, 49, 50, 51, 52, 53, 102, 103, 113, 114, 115, 116, 117, 138, 139, 140, 141, 142, 143, 155, 172, 173, 174, 185, 186, 187, 188, 189, 241, 242, 253, 254, 255, 256, 257, 283, 287, 288, 289, 290, 291, 292, 368, 424, 440, 456, 532, 595], "str": [38, 39, 40, 49, 50, 51, 52, 53, 60, 61, 64, 72, 86, 102, 103, 104, 106, 113, 114, 115, 116, 117, 125, 126, 130, 138, 139, 140, 141, 142, 143, 147, 173, 174, 175, 185, 186, 187, 188, 189, 196, 197, 200, 207, 225, 241, 242, 243, 245, 253, 254, 255, 256, 257, 272, 273, 277, 287, 288, 289, 290, 291, 292, 296, 302, 307, 309, 315, 320, 322, 328, 333, 335, 343, 348, 350, 356, 363, 365, 374, 379, 381, 387, 394, 396, 405, 416, 419, 421, 430, 435, 437, 446, 451, 453, 462, 467, 469, 475, 482, 484, 490, 497, 499, 505, 512, 514, 520, 527, 529, 538, 543, 545, 546, 548, 549, 555, 558, 566, 567, 573, 576, 587, 592, 594], "when": [38, 102, 173, 241, 595, 599], "us": [38, 39, 50, 51, 53, 54, 56, 61, 64, 67, 68, 69, 70, 72, 83, 86, 88, 98, 99, 101, 102, 103, 106, 114, 115, 117, 173, 174, 186, 187, 189, 190, 192, 197, 200, 202, 203, 204, 205, 207, 221, 225, 227, 237, 238, 240, 241, 242, 245, 254, 255, 257, 337, 416, 546, 548, 563, 566, 580, 595, 596, 597, 598, 599, 600], "setter": [38, 39, 50, 51, 102, 103, 114, 115, 173, 174, 186, 187, 241, 242, 254, 255, 595], "rais": [38, 39, 50, 51, 54, 83, 98, 99, 102, 103, 114, 115, 124, 125, 138, 139, 146, 147, 173, 174, 186, 187, 190, 221, 237, 238, 241, 242, 254, 255, 271, 272, 287, 288, 295, 296, 308, 309, 321, 322, 334, 335, 349, 350, 364, 365, 380, 381, 395, 396, 420, 421, 436, 437, 452, 453, 468, 469, 483, 484, 498, 499, 513, 514, 528, 529, 544, 545, 593, 594, 595], "keyerror": [38, 39, 50, 51, 102, 103, 114, 115, 138, 139, 173, 174, 186, 187, 241, 242, 254, 255, 287, 288], "If": [38, 39, 46, 49, 50, 51, 52, 53, 54, 70, 73, 83, 88, 98, 99, 101, 102, 103, 113, 114, 115, 116, 117, 124, 125, 129, 130, 138, 139, 160, 162, 173, 174, 181, 185, 186, 187, 188, 189, 190, 205, 208, 221, 227, 237, 238, 240, 241, 242, 253, 254, 255, 256, 257, 271, 272, 276, 277, 287, 288, 306, 307, 319, 320, 323, 332, 333, 336, 337, 347, 348, 362, 363, 378, 379, 393, 394, 416, 418, 419, 434, 435, 450, 451, 466, 467, 481, 482, 496, 497, 511, 512, 526, 527, 542, 543, 546, 591, 592, 596, 597, 599], "doe": [38, 39, 50, 51, 102, 103, 114, 115, 138, 139, 173, 174, 186, 187, 241, 242, 254, 255, 287, 288, 598], "exist": [38, 39, 50, 51, 77, 83, 99, 102, 103, 114, 115, 138, 139, 173, 174, 186, 187, 213, 221, 238, 241, 242, 254, 255, 284, 287, 288], "multipl": [39, 50, 51, 103, 114, 115, 174, 186, 187, 242, 254, 255, 397], "empti": [39, 51, 103, 160, 162, 174, 187, 242], "dictionari": [39, 57, 63, 72, 75, 76, 86, 87, 103, 106, 140, 141, 142, 143, 145, 174, 193, 199, 207, 210, 211, 225, 226, 242, 245, 289, 290, 291, 292, 294, 300, 313, 326, 341, 354, 360, 372, 385, 403, 407, 413, 428, 444, 460, 473, 488, 494, 503, 509, 518, 524, 536, 585, 595], "correspond": [39, 51, 72, 76, 86, 87, 103, 106, 115, 145, 174, 187, 207, 211, 225, 226, 242, 245, 255, 294, 548, 562, 566, 579], "provid": [39, 52, 57, 115, 124, 174, 188, 193, 255, 271, 300, 313, 326, 341, 354, 372, 385, 403, 428, 444, 460, 473, 488, 503, 518, 536, 548, 566, 585, 598, 600], "ax": [40, 104, 175, 243, 563, 580, 595], "xyz": [40, 45, 46, 71, 88, 101, 104, 109, 112, 133, 144, 175, 180, 181, 206, 227, 240, 243, 248, 252, 280, 293, 303, 310, 316, 329, 338, 344, 382, 470, 485, 588, 589], "coordin": [40, 45, 46, 61, 63, 85, 104, 110, 112, 131, 133, 135, 175, 180, 181, 197, 199, 224, 243, 249, 252, 278, 280, 282, 303, 316, 329, 344, 422, 438, 454, 564, 581, 588, 589], "end": [40, 41, 43, 45, 46, 48, 61, 123, 131, 153, 175, 176, 178, 180, 181, 184, 197, 270, 278, 303, 329], "along": [40, 46, 125, 175, 181, 272], "which": [40, 52, 53, 56, 116, 117, 175, 188, 189, 192, 256, 257, 562, 579], "includ": [40, 175, 284, 595, 600], "float": [40, 41, 42, 43, 44, 45, 46, 48, 61, 63, 72, 81, 86, 90, 104, 106, 108, 110, 124, 125, 131, 133, 135, 175, 176, 177, 178, 179, 180, 181, 184, 197, 199, 207, 218, 225, 229, 243, 245, 247, 249, 271, 272, 278, 280, 282, 336, 337, 338, 344, 358, 389, 416, 477, 492, 507, 522, 546, 564, 581, 588], "vector": [41, 46, 48, 88, 101, 108, 109, 122, 176, 181, 184, 227, 240, 247, 248, 267, 338, 344, 345, 389, 477, 492, 500, 507], "locat": [45, 46, 180, 181], "midpoint": [45, 180], "outsid": [46, 56, 181, 192], "lie": [46, 181], "random": [47, 65, 67, 68, 69, 70, 111, 182, 201, 202, 203, 204, 205, 250], "sampl": [47, 111, 182, 250], "over": [49, 90, 113, 155, 156, 172, 185, 229, 253, 269, 283, 284], "bool": [49, 52, 53, 54, 70, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 98, 99, 100, 101, 113, 116, 117, 129, 130, 155, 157, 172, 185, 188, 189, 190, 205, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 237, 238, 239, 240, 253, 256, 257, 276, 277, 283, 306, 307, 319, 320, 332, 333, 336, 337, 347, 348, 362, 363, 378, 379, 393, 394, 418, 419, 434, 435, 450, 451, 466, 467, 481, 482, 496, 497, 511, 512, 526, 527, 542, 543, 591, 592], "yield": [49, 52, 53, 90, 113, 116, 117, 127, 155, 156, 172, 185, 188, 189, 229, 253, 256, 257, 266, 268, 269, 274, 283, 284], "addit": [49, 52, 53, 83, 99, 113, 116, 117, 140, 141, 142, 143, 185, 188, 189, 221, 238, 253, 256, 257, 289, 290, 291, 292, 316, 317, 360, 494, 509, 524], "next": [49, 52, 53, 90, 113, 116, 117, 127, 155, 156, 172, 185, 188, 189, 229, 253, 256, 257, 266, 269, 274, 283, 284, 336, 337, 598, 599], "its": [49, 52, 53, 108, 116, 117, 124, 125, 128, 146, 147, 185, 188, 189, 247, 256, 257, 271, 272, 275, 295, 296, 305, 308, 309, 316, 318, 321, 322, 331, 334, 335, 346, 349, 350, 361, 364, 365, 377, 380, 381, 392, 395, 396, 401, 417, 420, 421, 433, 436, 437, 449, 452, 453, 465, 468, 469, 480, 483, 484, 495, 498, 499, 510, 513, 514, 525, 528, 529, 541, 544, 545, 590, 593, 594], "attr": [49, 52, 53, 113, 185, 188, 189, 253], "contain": [50, 51, 57, 59, 60, 64, 73, 115, 129, 186, 187, 193, 195, 196, 200, 208, 255, 276, 300, 301, 302, 306, 313, 314, 315, 319, 326, 327, 328, 332, 341, 342, 343, 347, 354, 355, 356, 362, 372, 373, 374, 378, 385, 386, 387, 393, 403, 404, 405, 418, 428, 429, 430, 434, 444, 445, 446, 450, 460, 461, 462, 466, 473, 474, 475, 481, 488, 489, 490, 496, 503, 504, 505, 511, 518, 519, 520, 526, 536, 537, 538, 542, 585, 586, 587, 591], "per": [50, 51, 65, 115, 186, 187, 201, 255, 411, 412], "request": [50, 51, 103, 186, 187, 242], "condit": [52, 53, 116, 117, 188, 189, 256, 257, 600], "certain": [52, 53, 72, 86, 106, 116, 117, 188, 189, 207, 225, 245, 256, 257], "can": [52, 83, 99, 116, 188, 221, 238, 256, 595, 599], "min": [52, 116, 188, 256], "max": [52, 116, 188, 256], "predic": [53, 117, 189, 257], "lambda": [53, 117, 189, 257], "callabl": [53, 117, 124, 189, 257, 271], "you": [53, 117, 189, 257, 596, 597, 598, 599], "want": [53, 117, 189, 257, 599], "evalu": [53, 117, 189, 257], "take": [53, 56, 117, 189, 192, 257, 412], "fix": [54, 98, 124, 153, 190, 237, 271, 595], "straightlin": [54, 98, 190, 237], "emb": [54, 98, 190, 237], "two": [54, 55, 77, 98, 123, 156, 157, 190, 191, 213, 237, 270, 303, 329, 599], "straight": [54, 56, 83, 98, 99, 190, 192, 221, 237, 238], "embed": [54, 56, 83, 84, 98, 99, 100, 190, 192, 221, 222, 237, 238, 239], "wa": [54, 98, 190, 237, 595, 599], "success": [54, 98, 190, 237], "otherwis": [54, 73, 77, 78, 81, 82, 83, 84, 85, 98, 99, 100, 190, 208, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 237, 238, 239, 588, 589, 600], "importerror": [54, 83, 98, 99, 190, 221, 237, 238], "networkx": [54, 62, 98, 132, 190, 198, 237, 279], "instal": [54, 83, 98, 99, 190, 221, 237, 238, 595, 598], "each": [55, 56, 114, 133, 191, 192, 254, 280], "repres": [55, 61, 133, 191, 197, 280], "vertex": [55, 56, 67, 76, 145, 191, 192, 202, 211, 294], "breakpoint": [56, 192], "face": [56, 192], "break": [56, 192], "found": [56, 192], "primarili": [56, 192], "up": [56, 86, 106, 192, 225, 245, 599], "between": [56, 65, 123, 192, 201, 270, 358, 389, 477, 492, 507, 522], "specif": [56, 73, 74, 80, 192, 208, 209, 217, 599], "For": [56, 192, 548, 549, 566, 567], "applic": [56, 192, 345], "involv": [56, 192], "dual": [56, 192], "where": [56, 119, 127, 192, 261, 274, 344, 582, 588, 589], "extern": [56, 192], "reaction": [56, 122, 192, 267, 500, 560, 595, 598], "input": [56, 192, 595], "essenti": [56, 192], "wall": [56, 192], "follow": [56, 192, 416, 546, 599, 600], "maze": [56, 192], "solv": [56, 192, 416, 546, 598], "It": [56, 83, 99, 192, 221, 238], "reli": [56, 192], "repes": [56, 192], "determin": [56, 192], "order": [56, 157, 192, 284, 412], "around": [56, 192], "alwai": [56, 192], "turn": [56, 192], "classmethod": [57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 193, 194, 195, 196, 197, 198, 199, 200, 201, 300, 301, 302, 303, 304, 313, 314, 315, 316, 317, 326, 327, 328, 329, 330, 341, 342, 343, 344, 345, 354, 355, 356, 372, 373, 374, 385, 386, 387, 403, 404, 405, 428, 429, 430, 444, 445, 446, 460, 461, 462, 473, 474, 475, 488, 489, 490, 503, 504, 505, 518, 519, 520, 536, 537, 538, 585, 586, 587, 588, 589], "instanc": [57, 58, 59, 60, 62, 132, 193, 194, 195, 196, 198, 279, 300, 301, 302, 313, 314, 315, 326, 327, 328, 341, 342, 343, 354, 355, 356, 372, 373, 374, 385, 386, 387, 403, 404, 405, 428, 429, 430, 444, 445, 446, 460, 461, 462, 473, 474, 475, 488, 489, 490, 503, 504, 505, 518, 519, 520, 536, 537, 538, 585, 586, 587], "ha": [57, 59, 60, 78, 79, 127, 193, 195, 196, 214, 216, 274, 300, 301, 302, 313, 314, 315, 326, 327, 328, 341, 342, 343, 354, 355, 356, 372, 373, 374, 385, 386, 387, 403, 404, 405, 428, 429, 430, 444, 445, 446, 460, 461, 462, 473, 474, 475, 488, 489, 490, 503, 504, 505, 518, 519, 520, 536, 537, 538, 585, 586, 587, 588, 589, 599], "correct": [57, 59, 60, 193, 195, 196, 300, 301, 302, 313, 314, 315, 326, 327, 328, 341, 342, 343, 354, 355, 356, 372, 373, 374, 385, 386, 387, 403, 404, 405, 428, 429, 430, 444, 445, 446, 460, 461, 462, 473, 474, 475, 488, 489, 490, 503, 504, 505, 518, 519, 520, 536, 537, 538, 585, 586, 587], "schema": [57, 59, 60, 128, 146, 147, 193, 195, 196, 275, 295, 296, 300, 301, 302, 305, 308, 309, 313, 314, 315, 318, 321, 322, 326, 327, 328, 331, 334, 335, 341, 342, 343, 346, 349, 350, 354, 355, 356, 361, 364, 365, 372, 373, 374, 377, 380, 381, 385, 386, 387, 392, 395, 396, 403, 404, 405, 417, 420, 421, 428, 429, 430, 433, 436, 437, 444, 445, 446, 449, 452, 453, 460, 461, 462, 465, 468, 469, 473, 474, 475, 480, 483, 484, 488, 489, 490, 495, 498, 499, 503, 504, 505, 510, 513, 514, 518, 519, 520, 525, 528, 529, 536, 537, 538, 541, 544, 545, 585, 586, 587, 590, 593, 594], "new": [58, 62, 132, 194, 198, 279, 599], "inform": [58, 194], "about": [58, 194, 597], "filepath": [59, 64, 129, 134, 195, 200, 276, 281, 301, 306, 314, 319, 327, 332, 342, 347, 355, 362, 373, 378, 386, 393, 404, 418, 429, 434, 445, 450, 461, 466, 474, 481, 489, 496, 504, 511, 519, 526, 537, 542, 586, 591], "serial": [59, 60, 129, 130, 195, 196, 276, 277, 301, 302, 306, 307, 314, 315, 319, 320, 327, 328, 332, 333, 342, 343, 347, 348, 355, 356, 362, 363, 373, 374, 378, 379, 386, 387, 393, 394, 404, 405, 418, 419, 429, 430, 434, 435, 445, 446, 450, 451, 461, 462, 466, 467, 474, 475, 481, 482, 489, 490, 496, 497, 504, 505, 511, 512, 519, 520, 526, 527, 537, 538, 542, 543, 586, 587, 591, 592, 595], "like": [59, 64, 129, 134, 195, 200, 276, 281, 301, 306, 314, 319, 327, 332, 342, 347, 355, 362, 373, 378, 386, 393, 404, 418, 429, 434, 445, 450, 461, 466, 474, 481, 489, 496, 504, 511, 519, 526, 537, 542, 586, 591, 598, 599], "url": [59, 64, 195, 200, 301, 314, 327, 342, 355, 373, 386, 404, 429, 445, 461, 474, 489, 504, 519, 537, 586, 596], "precis": [61, 64, 72, 86, 106, 197, 200, 207, 225, 245], "geometr": [61, 64, 72, 86, 106, 197, 200, 207, 225, 245], "map": [61, 64, 72, 75, 76, 86, 87, 106, 145, 197, 200, 207, 210, 211, 225, 226, 245, 294, 407, 413, 548, 555, 558, 566, 573, 576], "digraph": [62, 132, 198, 279], "specifi": [63, 72, 86, 106, 199, 207, 225, 245, 595], "hshabl": [63, 199], "cloud": [65, 201], "pointcloud": [65, 201], "deprec": [67, 68, 69, 70, 202, 203, 204, 205, 595], "sinc": [67, 68, 69, 70, 202, 203, 204, 205], "version": [67, 68, 69, 70, 202, 203, 204, 205, 595, 599], "13": [67, 68, 69, 70, 202, 203, 204, 205], "edge_sampl": [67, 68, 202, 203], "instead": [67, 68, 69, 70, 137, 202, 203, 204, 205, 286, 595, 599], "n": [68, 70, 111, 203, 205, 250, 599], "node_sampl": [69, 70, 204, 205], "exclude_leav": [70, 205], "exclud": [70, 205], "leav": [70, 205], "one": [70, 78, 79, 205, 214, 216, 336, 337, 411, 412, 598, 599], "verifi": [73, 74, 77, 78, 79, 80, 84, 85, 100, 208, 209, 213, 214, 216, 217, 222, 224, 239, 401], "taken": [73, 208], "account": [73, 208], "indic": [75, 133, 210, 280, 407, 413, 599], "index": [75, 76, 87, 145, 210, 211, 226, 294], "uv": [76, 145, 211, 294], "everi": [77, 124, 157, 213, 271, 336, 337], "them": [77, 213], "network_is_connect": [77, 213], "least": [78, 156, 214, 416, 546], "leaf": [79, 216], "min_forc": [81, 90, 218, 229], "06": [81, 90, 218, 229, 336, 337, 416, 546], "check": [81, 82, 83, 99, 105, 218, 219, 221, 238, 244, 595], "larg": [81, 90, 218, 229], "enough": [81, 90, 218, 229], "minimum": [81, 90, 218, 229], "magnitud": [81, 90, 218, 229, 338, 345], "consid": [81, 90, 218, 229], "flag": [81, 82, 157, 212, 215, 218, 219, 220, 223, 336, 337, 599], "packag": [83, 99, 221, 238], "drawn": [83, 99, 221, 238], "without": [83, 84, 99, 100, 221, 222, 238, 239, 600], "shown": [83, 99, 221, 238], "furthermor": [83, 99, 221, 238], "python": [83, 99, 221, 238, 597, 598, 599], "bind": [83, 99, 221, 238], "suit": [83, 99, 221, 238], "anaconda": [83, 99, 221, 238, 599], "org": [83, 99, 221, 238, 596], "conda": [83, 99, 221, 238, 599], "forg": [83, 99, 221, 238], "fase": [84, 100, 222, 239], "normal": [88, 101, 227, 240], "laplacian": [88, 101, 108, 227, 240, 247], "entri": [88, 101, 227, 240, 411, 412], "diagon": [88, 101, 227, 240], "l": [88, 101, 227, 240], "dot": [88, 101, 227, 240], "centroid": [88, 101, 108, 110, 124, 227, 240, 247, 249, 271], "therefor": [88, 101, 227, 240], "By": [88, 101, 227, 240], "sign": [88, 101, 227, 240, 323, 595], "dsiplac": [88, 101, 227, 240], "could": [88, 101, 227, 240], "more": [88, 101, 227, 240, 416, 546], "natur": [88, 101, 227, 240], "wai": [88, 101, 227, 240], "ring": [91, 108, 230, 247], "compon": [104, 109, 243, 248, 595, 599], "neighborhood": [108, 247], "load_vector": [109, 248], "match": [116, 117, 256, 257, 500, 548, 549, 566, 567, 588, 589], "assign": [121, 127, 251, 263, 274, 582, 588, 589], "residu": [122, 267], "shortest": [123, 270], "lead": [123, 270], "kmax": [124, 271], "damp": [124, 271], "callback": [124, 271, 336, 337], "callback_arg": [124, 271], "move": [124, 271, 416, 546, 598], "free": [124, 271, 595, 600], "mesh": [124, 271], "maximum": [124, 271, 336, 337, 416, 546], "factor": [124, 271], "user": [124, 271, 595], "execut": [124, 271], "after": [124, 271], "pass": [124, 271], "except": [124, 125, 147, 271, 272, 296, 309, 322, 335, 350, 365, 381, 396, 421, 437, 453, 469, 484, 499, 514, 529, 545, 594], "split": [125, 272, 595], "insert": [125, 272], "posit": [125, 272, 336, 337, 338, 344, 382, 470, 485, 588, 589], "valueerror": [125, 272], "been": [127, 274, 599], "convert": [128, 275, 305, 318, 331, 346, 361, 377, 392, 417, 433, 449, 465, 480, 495, 510, 525, 541, 590, 595], "nativ": [128, 275, 305, 318, 331, 346, 361, 377, 392, 417, 433, 449, 465, 480, 495, 510, 525, 541, 590, 598], "describ": [128, 275, 303, 305, 316, 318, 329, 331, 346, 361, 377, 392, 417, 433, 449, 465, 480, 495, 510, 525, 541, 590], "pretti": [129, 130, 276, 277, 306, 307, 319, 320, 332, 333, 347, 348, 362, 363, 378, 379, 393, 394, 418, 419, 434, 435, 450, 451, 466, 467, 481, 482, 496, 497, 511, 512, 526, 527, 542, 543, 591, 592], "human": [129, 276, 306, 319, 332, 347, 362, 378, 393, 418, 434, 450, 466, 481, 496, 511, 526, 542, 591], "readabl": [129, 276, 306, 319, 332, 347, 362, 378, 393, 418, 434, 450, 466, 481, 496, 511, 526, 542, 591], "s": [130, 146, 147, 277, 295, 296, 303, 307, 308, 309, 320, 321, 322, 329, 333, 334, 335, 348, 349, 350, 363, 364, 365, 369, 370, 379, 380, 381, 394, 395, 396, 419, 420, 421, 425, 426, 435, 436, 437, 441, 442, 451, 452, 453, 457, 458, 467, 468, 469, 482, 483, 484, 497, 498, 499, 512, 513, 514, 527, 528, 529, 533, 534, 543, 544, 545, 592, 593, 594, 599], "newli": [132, 279], "write": [134, 281], "modifi": [136, 137, 144, 285, 286, 293, 397, 600], "place": [136, 285], "copi": [137, 286, 600], "origin": [137, 157, 219, 266, 286, 422, 438, 454], "unset": [138, 139, 287, 288], "implicitli": [138, 139, 287, 288], "back": [138, 139, 287, 288], "store": [138, 139, 287, 288], "attr_dict": [140, 141, 142, 143, 289, 290, 291, 292], "kwattr": [140, 141, 142, 143, 289, 290, 291, 292], "updat": [140, 141, 142, 143, 289, 290, 291, 292, 563, 580, 595], "compil": [140, 141, 142, 143, 289, 290, 291, 292], "remain": [140, 141, 142, 143, 289, 290, 291, 292], "valid": [146, 147, 295, 296, 308, 309, 321, 322, 334, 335, 349, 350, 364, 365, 380, 381, 395, 396, 420, 421, 436, 437, 452, 453, 468, 469, 483, 484, 498, 499, 513, 514, 528, 529, 544, 545, 593, 594], "against": [146, 147, 295, 296, 308, 309, 321, 322, 334, 335, 336, 337, 349, 350, 364, 365, 380, 381, 395, 396, 420, 421, 436, 437, 452, 453, 468, 469, 483, 484, 493, 498, 499, 513, 514, 528, 529, 544, 545, 593, 594], "schemaerror": [146, 295, 308, 321, 334, 349, 364, 380, 395, 420, 436, 452, 468, 483, 498, 513, 528, 544, 593], "jsonschema": [147, 296, 309, 322, 335, 350, 365, 381, 396, 421, 437, 453, 469, 484, 499, 514, 529, 545, 594], "validationerror": [147, 296, 309, 322, 335, 350, 365, 381, 396, 421, 437, 453, 469, 484, 499, 514, 529, 545, 594], "veri": 148, "mark": [153, 336, 337], "continu": [153, 599], "thei": [153, 595, 599], "aren": 153, "simultan": [155, 172, 283, 598], "process": 157, "travers": 157, "begin": 157, "sequenc": [157, 183, 251, 268, 284], "characterist": 157, "append": 157, "unassign": 157, "part": [157, 599], "previou": 157, "recalcul": 157, "call": [157, 595, 599], "attach": [160, 162], "given": [183, 549, 567], "whether": [212, 215, 223, 600], "k": 251, "largest": 268, "extra": [303, 304, 316, 317, 329, 330, 360, 494, 509, 524, 595], "rhino_lin": [304, 330], "rhino_point": [317, 345, 589], "point3d": [317, 589], "overrid": 323, "absolut": [323, 369, 370, 425, 426, 441, 442, 457, 458, 533, 534], "howev": [323, 598], "combinatori": [323, 596, 598], "preserv": 323, "todo": 323, "addexplicit": 323, "signatur": [323, 595], "constructor": 323, "run": [336, 337, 416, 546, 598, 599], "distanc": [336, 337, 358, 389, 477, 492, 507, 522], "threshold": [336, 337, 416, 546], "converg": [336, 337, 416, 546], "compar": [336, 337, 493], "sum": [336, 337], "hit": [336, 337, 416, 546, 599], "befor": [336, 337, 599], "consum": [336, 337], "calcul": [336, 337, 369, 370, 406, 425, 426, 441, 442, 457, 458, 533, 534, 595], "stop": [336, 337, 416, 546], "earli": [336, 337, 416, 546], "oper": [336, 337, 598], "formdiagram": [336, 337, 416, 546, 547, 588, 589], "rhino_vector": 345, "vector3d": 345, "encod": 345, "weight": [351, 382, 470, 485, 500, 515], "floatconstraint": [351, 515, 595], "reach": [351, 360, 494, 509, 515, 524], "error": [358, 389, 477, 492, 507, 522, 595, 599], "squar": [358, 389, 416, 477, 492, 507, 522, 546], "differ": [358, 389, 477, 492, 507, 522, 598], "edgeparamet": [366, 530], "parametr": [368, 424, 440, 456, 532], "lower": [369, 425, 441, 457, 533], "minu": [369, 425, 441, 457, 533], "upper": [370, 426, 442, 458, 534], "plu": [370, 426, 442, 458, 534], "vectorconstraint": [382, 470, 485, 500, 595], "pull": [382, 470, 485], "rai": 382, "meet": [397, 598], "problem": [400, 401, 416, 598], "sane": 401, "mind": 401, "ad": [408, 595], "grad_func": 410, "paremet": 412, "care": 412, "keep": [412, 595, 599], "nlopt": [416, 546, 595], "local": [416, 546], "sequenti": [416, 546], "program": [416, 546, 599], "low": [416, 546], "storag": [416, 546], "broyden": [416, 546], "fletcher": [416, 546], "goldfarb": [416, 546], "shanno": [416, 546], "auglag": [416, 546], "augment": [416, 546], "lagrangian": [416, 546], "mma": [416, 546], "asymptot": [416, 546], "tnewton": [416, 546], "precondit": [416, 546], "truncat": [416, 546], "newton": [416, 546], "document": [416, 546, 595, 599, 600], "detail": [416, 546], "theoret": [416, 546], "underpin": [416, 546], "ignor": [416, 546, 595], "until": [416, 546], "exhaust": [416, 546], "cem": [416, 546, 596, 597], "nodeparamet": [422, 438, 454], "constrain": [546, 596, 598, 599], "task": 546, "through": 546, "proxi": 546, "server": 546, "hyperspac": 546, "tunnel": 546, "item": [547, 548, 549, 562, 565, 566, 567, 579], "networkartist": [547, 565], "artist": [547, 548, 549, 562, 565, 566, 567, 579, 595], "draw": [547, 554, 555, 556, 557, 558, 559, 560, 565, 572, 573, 574, 575, 576, 577, 595], "form_diagram": 547, "collect": [548, 549, 554, 566, 567, 572, 599], "relev": [548, 549, 566, 567], "see": [548, 549, 566, 567], "accord": [548, 566], "item_artist": [548, 566], "regist": [548, 566], "artist_typ": [549, 562, 567, 579], "clear": [551, 552, 569, 570], "canva": [551, 552, 569, 570, 599], "label": [553, 555, 558, 571, 573, 576], "entir": [554, 572], "text": [555, 558, 573, 576], "select": [555, 558, 573, 576], "act": 557, "view": [561, 564, 578, 581], "item_typ": [562, 579], "context": [562, 579], "compat": [562, 579, 595], "blender": [562, 579, 598], "visual": [562, 563, 579, 580, 599], "limit": [563, 580, 599, 600], "corner": [564, 581], "box": [564, 581], "topology_diagram": 565, "inscrib": 575, "circl": 575, "node_support": 582, "notabl": 595, "project": [595, 596], "adher": 595, "semant": 595, "ghpython": [595, 599], "jenssen": 595, "tube": 595, "implement": 595, "is_node_support": 595, "renam": 595, "endg": 595, "search": 595, "gh": [595, 599], "topologyartist": 595, "formartist": 595, "registr": 595, "via": [595, 598], "plugin": [595, 598], "global": [595, 598], "color": 595, "dark": 595, "blue": 595, "grai": 595, "mechan": 595, "compli": 595, "bug": 595, "topologyplott": 595, "formplott": 595, "serializ": 595, "pin": 595, "depend": [595, 598, 599], "8": [595, 599], "due": 595, "networkplott": 595, "displai": 595, "green": 595, "light": 595, "assembl": 595, "ghplugin": 595, "wrap": 595, "edgesearch": 595, "output": 595, "drop": [595, 599], "ld": 595, "subscript": 595, "skip": 595, "assembletopologydiagram": 595, "draw_arrow": 595, "_draw_load": 595, "_draw_load_arrow": 595, "arrow": 595, "export": 595, "draw_trail": 595, "topologyartistcompon": 595, "number_of_trail_edg": 595, "number_of_deviation_edg": 595, "__repr__": 595, "edge_kei": 595, "node_kei": 595, "replac": [595, 599], "noderesult": 595, "wit": 595, "supportnoderesult": 595, "merg": [595, 600], "access": 595, "expos": 595, "hard": 595, "code": [595, 596, 598, 599], "ghcompon": 595, "constrainedformfind": 595, "frame": [595, 598], "rhinoplan": 595, "to_compa": 595, "planeconstraint": 595, "formfind": 595, "eps_min": 595, "equilibrium_st": 595, "equilibrium_state_numpi": 595, "draw_seg": 595, "scheme": 595, "draw_edg": 595, "tight": 595, "autoscal": 595, "save": 595, "overcrop": 595, "imag": 595, "custom": 595, "form_plotter_proxi": 595, "topology_plotter_proxi": 595, "polygon": 595, "static_equilibrium_numpi": 595, "took": 595, "temporari": 595, "patch": 595, "deviationedgelengthconstraint": 595, "autograd": 595, "creation": 595, "is_auxiliary_trail_edg": 595, "filter": 595, "number_of_auxiliary_trail": 595, "properti": 595, "auxiliary_trail_vector": 595, "full": 595, "under": 595, "anyth": 595, "longer": [595, 599], "reflect": 595, "immut": 595, "children": 595, "refactor": 595, "folder": 595, "nodemixin": 595, "node_xyz": 595, "rhino_instal": 595, "streamlin": 595, "symlink": 595, "src": 595, "ghuser": [595, 599], "gitignor": 595, "uninstal": [595, 599], "tag": 595, "regex": 595, "bumpvers": 595, "cfg": 595, "md": 595, "rst": 595, "research": 596, "pleas": [596, 599], "our": [596, 598, 599], "paper": 596, "preprint": 596, "misc": 596, "pastrana_constrainedformfinding_2021": 596, "titl": 596, "differenti": [596, 598], "pastrana": [596, 598, 600], "rafael": [596, 598, 600], "ohlbrock": [596, 598], "patrick": 596, "ol": [596, 598], "acunto": [596, 598], "pierluigi": [596, 598], "parascho": [596, 598], "stefana": [596, 598], "year": 596, "2021": [596, 600], "arxiv": 596, "ab": 596, "2111": 596, "02607": 596, "eprint": 596, "archiveprefix": 596, "And": 596, "repositori": 596, "softwar": [596, 598, 600], "model": [596, 598, 599], "framework": [596, 598], "doi": 596, "5281": 596, "zenodo": 596, "5705740": 596, "arpastrana": 596, "github": 596, "io": 596, "_cem": 596, "arpj": 596, "princeton": [596, 598], "arch": 596, "ethz": 596, "ch": 596, "oleohlbrock": 596, "pierluigidacunto": 596, "tum": 596, "de": 596, "edu": 596, "stefanaparascho": 596, "excit": 597, "mai": [597, 599], "help": 597, "approach": 598, "spatial": 598, "bar": 598, "subject": [598, 600], "combin": 598, "design": 598, "encapsul": 598, "open": 598, "tool": 598, "enabl": 598, "formul": 598, "solut": 598, "plain": 598, "mix": 598, "explor": 598, "wider": 598, "spectrum": 598, "typolog": 598, "space": 598, "go": [598, 599], "beyond": 598, "convent": 598, "catalog": 598, "shell": 598, "cabl": 598, "net": 598, "effici": 598, "priori": 598, "best": 598, "fit": [598, 600], "shape": 598, "restrain": 598, "control": 598, "usabl": 598, "across": 598, "system": 598, "window": [598, 599], "maco": [598, 599], "linux": [598, 599], "perhap": 598, "dai": [598, 599], "also": 598, "metavers": 598, "cad": 598, "work": [598, 599], "necessari": 598, "interfac": 598, "seamlessli": 598, "insid": 598, "popular": 598, "environ": 598, "As": [598, 599], "extens": 598, "offer": 598, "integr": 598, "exchang": 598, "other": [598, 599, 600], "ecosystem": 598, "those": [598, 599], "slider": 598, "person": [598, 600], "worri": 598, "ship": 598, "too": 598, "precook": 598, "readili": 598, "engin": [598, 599], "your": 598, "spaghetti": 598, "pipelin": 598, "develop": 598, "endors": 598, "introduct": 598, "api": 598, "changelog": 598, "cite": 598, "licens": 598, "three": 599, "step": 599, "we": 599, "have": 599, "machin": 599, "command": 599, "prompt": 599, "termin": 599, "chose": 599, "spacecowboi": 599, "prefer": 599, "bubbl": 599, "isol": 599, "In": 599, "word": 599, "what": 599, "happen": 599, "stai": 599, "liner": 599, "To": 599, "everyth": 599, "enter": 599, "celebr": 599, "There": 599, "complex": 599, "easier": 599, "do": [599, 600], "few": 599, "mous": 599, "click": 599, "hundr": 599, "bit": 599, "familiar": 599, "addition": 599, "close": 599, "sure": 599, "alreadi": 599, "proceed": 599, "case": 599, "older": 599, "m": 599, "compas_rhino": 599, "compani": 599, "let": 599, "compas_ghpython": 599, "were": 599, "wonder": 599, "launch": 599, "onto": 599, "send": 599, "pictur": 599, "onc": 599, "forget": 599, "who": 599, "don": 599, "know": 599, "consequ": 599, "NOT": [599, 600], "past": 599, "latest": 599, "upgrad": 599, "altern": 599, "switch": 599, "had": 599, "mit": 600, "copyright": 600, "2020": 600, "permiss": 600, "herebi": 600, "grant": 600, "charg": 600, "obtain": 600, "associ": 600, "deal": 600, "restrict": 600, "right": 600, "publish": 600, "distribut": 600, "sublicens": 600, "sell": 600, "permit": 600, "whom": 600, "furnish": 600, "so": 600, "abov": 600, "notic": 600, "shall": 600, "substanti": 600, "portion": 600, "THE": 600, "IS": 600, "AS": 600, "warranti": 600, "OF": 600, "kind": 600, "express": 600, "OR": 600, "impli": 600, "BUT": 600, "TO": 600, "merchant": 600, "FOR": 600, "particular": 600, "purpos": 600, "AND": 600, "noninfring": 600, "NO": 600, "event": 600, "author": 600, "holder": 600, "BE": 600, "liabl": 600, "claim": 600, "damag": 600, "liabil": 600, "action": 600, "contract": 600, "tort": 600, "aris": 600, "WITH": 600}, "objects": {"": [[13, 0, 0, "-", "compas_cem"]], "compas_cem": [[14, 0, 0, "-", "diagrams"], [15, 0, 0, "-", "elements"], [16, 0, 0, "-", "equilibrium"], [17, 0, 0, "-", "loads"], [18, 0, 0, "-", "optimization"], [19, 0, 0, "-", "plotters"], [20, 0, 0, "-", "supports"]], "compas_cem.diagrams": [[21, 1, 1, "", "FormDiagram"], [148, 1, 1, "", "TopologyDiagram"]], "compas_cem.diagrams.FormDiagram": [[22, 2, 1, "", "ToString"], [23, 2, 1, "", "add_edge"], [24, 2, 1, "", "add_node"], [25, 2, 1, "", "adjacency_matrix"], [26, 2, 1, "", "clear"], [27, 2, 1, "", "complement"], [28, 2, 1, "", "connected_edges"], [29, 2, 1, "", "connectivity_matrix"], [30, 2, 1, "", "copy"], [31, 2, 1, "", "count_crossings"], [32, 2, 1, "", "degree"], [33, 2, 1, "", "degree_in"], [34, 2, 1, "", "degree_matrix"], [35, 2, 1, "", "degree_out"], [36, 2, 1, "", "delete_edge"], [37, 2, 1, "", "delete_node"], [38, 2, 1, "", "edge_attribute"], [39, 2, 1, "", "edge_attributes"], [40, 2, 1, "", "edge_coordinates"], [41, 2, 1, "", "edge_direction"], [42, 2, 1, "", "edge_force"], [43, 2, 1, "", "edge_length"], [44, 2, 1, "", "edge_length_2"], [45, 2, 1, "", "edge_midpoint"], [46, 2, 1, "", "edge_point"], [47, 2, 1, "", "edge_sample"], [48, 2, 1, "", "edge_vector"], [49, 2, 1, "", "edges"], [50, 2, 1, "", "edges_attribute"], [51, 2, 1, "", "edges_attributes"], [52, 2, 1, "", "edges_where"], [53, 2, 1, "", "edges_where_predicate"], [54, 2, 1, "", "embed_in_plane"], [55, 2, 1, "", "find_crossings"], [56, 2, 1, "", "find_cycles"], [57, 2, 1, "", "from_data"], [58, 2, 1, "", "from_edges"], [59, 2, 1, "", "from_json"], [60, 2, 1, "", "from_jsonstring"], [61, 2, 1, "", "from_lines"], [62, 2, 1, "", "from_networkx"], [63, 2, 1, "", "from_nodes_and_edges"], [64, 2, 1, "", "from_obj"], [65, 2, 1, "", "from_pointcloud"], [66, 2, 1, "", "from_topology_diagram"], [67, 2, 1, "", "get_any_edge"], [68, 2, 1, "", "get_any_edges"], [69, 2, 1, "", "get_any_node"], [70, 2, 1, "", "get_any_nodes"], [71, 2, 1, "", "gkey"], [72, 2, 1, "", "gkey_key"], [73, 2, 1, "", "has_edge"], [74, 2, 1, "", "has_node"], [75, 2, 1, "", "index_key"], [76, 2, 1, "", "index_uv"], [77, 2, 1, "", "is_connected"], [78, 2, 1, "", "is_crossed"], [79, 2, 1, "", "is_leaf"], [80, 2, 1, "", "is_node_connected"], [81, 2, 1, "", "is_node_loaded"], [82, 2, 1, "", "is_node_support"], [83, 2, 1, "", "is_planar"], [84, 2, 1, "", "is_planar_embedding"], [85, 2, 1, "", "is_xy"], [86, 2, 1, "", "key_gkey"], [87, 2, 1, "", "key_index"], [88, 2, 1, "", "laplacian_matrix"], [89, 2, 1, "", "leaves"], [90, 2, 1, "", "loaded_nodes"], [91, 2, 1, "", "neighborhood"], [92, 2, 1, "", "neighbors"], [93, 2, 1, "", "neighbors_in"], [94, 2, 1, "", "neighbors_out"], [95, 2, 1, "", "network_adjacency_matrix"], [96, 2, 1, "", "network_connectivity_matrix"], [97, 2, 1, "", "network_degree_matrix"], [98, 2, 1, "", "network_embed_in_plane"], [99, 2, 1, "", "network_is_planar"], [100, 2, 1, "", "network_is_planar_embedding"], [101, 2, 1, "", "network_laplacian_matrix"], [102, 2, 1, "", "node_attribute"], [103, 2, 1, "", "node_attributes"], [104, 2, 1, "", "node_coordinates"], [105, 2, 1, "", "node_exists"], [106, 2, 1, "", "node_gkey"], [107, 2, 1, "", "node_key"], [108, 2, 1, "", "node_laplacian"], [109, 2, 1, "", "node_load"], [110, 2, 1, "", "node_neighborhood_centroid"], [111, 2, 1, "", "node_sample"], [112, 2, 1, "", "node_xyz"], [113, 2, 1, "", "nodes"], [114, 2, 1, "", "nodes_attribute"], [115, 2, 1, "", "nodes_attributes"], [116, 2, 1, "", "nodes_where"], [117, 2, 1, "", "nodes_where_predicate"], [118, 2, 1, "", "number_of_edges"], [119, 2, 1, "", "number_of_loaded_nodes"], [120, 2, 1, "", "number_of_nodes"], [121, 2, 1, "", "number_of_support_nodes"], [122, 2, 1, "", "reaction_force"], [123, 2, 1, "", "shortest_path"], [124, 2, 1, "", "smooth"], [125, 2, 1, "", "split_edge"], [126, 2, 1, "", "summary"], [127, 2, 1, "", "support_nodes"], [128, 2, 1, "", "to_data"], [129, 2, 1, "", "to_json"], [130, 2, 1, "", "to_jsonstring"], [131, 2, 1, "", "to_lines"], [132, 2, 1, "", "to_networkx"], [133, 2, 1, "", "to_nodes_and_edges"], [134, 2, 1, "", "to_obj"], [135, 2, 1, "", "to_points"], [136, 2, 1, "", "transform"], [137, 2, 1, "", "transformed"], [138, 2, 1, "", "unset_edge_attribute"], [139, 2, 1, "", "unset_node_attribute"], [140, 2, 1, "", "update_dea"], [141, 2, 1, "", "update_default_edge_attributes"], [142, 2, 1, "", "update_default_node_attributes"], [143, 2, 1, "", "update_dna"], [144, 2, 1, "", "update_node_xyz"], [145, 2, 1, "", "uv_index"], [146, 2, 1, "", "validate_data"], [147, 2, 1, "", "validate_json"]], "compas_cem.diagrams.TopologyDiagram": [[149, 2, 1, "", "ToString"], [150, 2, 1, "", "add_edge"], [151, 2, 1, "", "add_load"], [152, 2, 1, "", "add_node"], [153, 2, 1, "", "add_support"], [154, 2, 1, "", "adjacency_matrix"], [155, 2, 1, "", "auxiliary_trail_edges"], [156, 2, 1, "", "auxiliary_trails"], [157, 2, 1, "", "build_trails"], [158, 2, 1, "", "clear"], [159, 2, 1, "", "complement"], [160, 2, 1, "", "connected_deviation_edges"], [161, 2, 1, "", "connected_edges"], [162, 2, 1, "", "connected_trail_edges"], [163, 2, 1, "", "connectivity_matrix"], [164, 2, 1, "", "copy"], [165, 2, 1, "", "count_crossings"], [166, 2, 1, "", "degree"], [167, 2, 1, "", "degree_in"], [168, 2, 1, "", "degree_matrix"], [169, 2, 1, "", "degree_out"], [170, 2, 1, "", "delete_edge"], [171, 2, 1, "", "delete_node"], [172, 2, 1, "", "deviation_edges"], [173, 2, 1, "", "edge_attribute"], [174, 2, 1, "", "edge_attributes"], [175, 2, 1, "", "edge_coordinates"], [176, 2, 1, "", "edge_direction"], [177, 2, 1, "", "edge_force"], [178, 2, 1, "", "edge_length"], [179, 2, 1, "", "edge_length_2"], [180, 2, 1, "", "edge_midpoint"], [181, 2, 1, "", "edge_point"], [182, 2, 1, "", "edge_sample"], [183, 2, 1, "", "edge_sequence"], [184, 2, 1, "", "edge_vector"], [185, 2, 1, "", "edges"], [186, 2, 1, "", "edges_attribute"], [187, 2, 1, "", "edges_attributes"], [188, 2, 1, "", "edges_where"], [189, 2, 1, "", "edges_where_predicate"], [190, 2, 1, "", "embed_in_plane"], [191, 2, 1, "", "find_crossings"], [192, 2, 1, "", "find_cycles"], [193, 2, 1, "", "from_data"], [194, 2, 1, "", "from_edges"], [195, 2, 1, "", "from_json"], [196, 2, 1, "", "from_jsonstring"], [197, 2, 1, "", "from_lines"], [198, 2, 1, "", "from_networkx"], [199, 2, 1, "", "from_nodes_and_edges"], [200, 2, 1, "", "from_obj"], [201, 2, 1, "", "from_pointcloud"], [202, 2, 1, "", "get_any_edge"], [203, 2, 1, "", "get_any_edges"], [204, 2, 1, "", "get_any_node"], [205, 2, 1, "", "get_any_nodes"], [206, 2, 1, "", "gkey"], [207, 2, 1, "", "gkey_key"], [208, 2, 1, "", "has_edge"], [209, 2, 1, "", "has_node"], [210, 2, 1, "", "index_key"], [211, 2, 1, "", "index_uv"], [212, 2, 1, "", "is_auxiliary_trail_edge"], [213, 2, 1, "", "is_connected"], [214, 2, 1, "", "is_crossed"], [215, 2, 1, "", "is_deviation_edge"], [216, 2, 1, "", "is_leaf"], [217, 2, 1, "", "is_node_connected"], [218, 2, 1, "", "is_node_loaded"], [219, 2, 1, "", "is_node_origin"], [220, 2, 1, "", "is_node_support"], [221, 2, 1, "", "is_planar"], [222, 2, 1, "", "is_planar_embedding"], [223, 2, 1, "", "is_trail_edge"], [224, 2, 1, "", "is_xy"], [225, 2, 1, "", "key_gkey"], [226, 2, 1, "", "key_index"], [227, 2, 1, "", "laplacian_matrix"], [228, 2, 1, "", "leaves"], [229, 2, 1, "", "loaded_nodes"], [230, 2, 1, "", "neighborhood"], [231, 2, 1, "", "neighbors"], [232, 2, 1, "", "neighbors_in"], [233, 2, 1, "", "neighbors_out"], [234, 2, 1, "", "network_adjacency_matrix"], [235, 2, 1, "", "network_connectivity_matrix"], [236, 2, 1, "", "network_degree_matrix"], [237, 2, 1, "", "network_embed_in_plane"], [238, 2, 1, "", "network_is_planar"], [239, 2, 1, "", "network_is_planar_embedding"], [240, 2, 1, "", "network_laplacian_matrix"], [241, 2, 1, "", "node_attribute"], [242, 2, 1, "", "node_attributes"], [243, 2, 1, "", "node_coordinates"], [244, 2, 1, "", "node_exists"], [245, 2, 1, "", "node_gkey"], [246, 2, 1, "", "node_key"], [247, 2, 1, "", "node_laplacian"], [248, 2, 1, "", "node_load"], [249, 2, 1, "", "node_neighborhood_centroid"], [250, 2, 1, "", "node_sample"], [251, 2, 1, "", "node_sequence"], [252, 2, 1, "", "node_xyz"], [253, 2, 1, "", "nodes"], [254, 2, 1, "", "nodes_attribute"], [255, 2, 1, "", "nodes_attributes"], [256, 2, 1, "", "nodes_where"], [257, 2, 1, "", "nodes_where_predicate"], [258, 2, 1, "", "number_of_auxiliary_trails"], [259, 2, 1, "", "number_of_deviation_edges"], [260, 2, 1, "", "number_of_edges"], [261, 2, 1, "", "number_of_loaded_nodes"], [262, 2, 1, "", "number_of_nodes"], [263, 2, 1, "", "number_of_support_nodes"], [264, 2, 1, "", "number_of_trail_edges"], [265, 2, 1, "", "number_of_trails"], [266, 2, 1, "", "origin_nodes"], [267, 2, 1, "", "reaction_force"], [268, 2, 1, "", "sequence_max"], [269, 2, 1, "", "sequences"], [270, 2, 1, "", "shortest_path"], [271, 2, 1, "", "smooth"], [272, 2, 1, "", "split_edge"], [273, 2, 1, "", "summary"], [274, 2, 1, "", "support_nodes"], [275, 2, 1, "", "to_data"], [276, 2, 1, "", "to_json"], [277, 2, 1, "", "to_jsonstring"], [278, 2, 1, "", "to_lines"], [279, 2, 1, "", "to_networkx"], [280, 2, 1, "", "to_nodes_and_edges"], [281, 2, 1, "", "to_obj"], [282, 2, 1, "", "to_points"], [283, 2, 1, "", "trail_edges"], [284, 2, 1, "", "trails"], [285, 2, 1, "", "transform"], [286, 2, 1, "", "transformed"], [287, 2, 1, "", "unset_edge_attribute"], [288, 2, 1, "", "unset_node_attribute"], [289, 2, 1, "", "update_dea"], [290, 2, 1, "", "update_default_edge_attributes"], [291, 2, 1, "", "update_default_node_attributes"], [292, 2, 1, "", "update_dna"], [293, 2, 1, "", "update_node_xyz"], [294, 2, 1, "", "uv_index"], [295, 2, 1, "", "validate_data"], [296, 2, 1, "", "validate_json"]], "compas_cem.elements": [[297, 1, 1, "", "DeviationEdge"], [310, 1, 1, "", "Node"], [323, 1, 1, "", "TrailEdge"]], "compas_cem.elements.DeviationEdge": [[298, 2, 1, "", "ToString"], [299, 2, 1, "", "copy"], [300, 2, 1, "", "from_data"], [301, 2, 1, "", "from_json"], [302, 2, 1, "", "from_jsonstring"], [303, 2, 1, "", "from_line"], [304, 2, 1, "", "from_rhino_line"], [305, 2, 1, "", "to_data"], [306, 2, 1, "", "to_json"], [307, 2, 1, "", "to_jsonstring"], [308, 2, 1, "", "validate_data"], [309, 2, 1, "", "validate_json"]], "compas_cem.elements.Node": [[311, 2, 1, "", "ToString"], [312, 2, 1, "", "copy"], [313, 2, 1, "", "from_data"], [314, 2, 1, "", "from_json"], [315, 2, 1, "", "from_jsonstring"], [316, 2, 1, "", "from_point"], [317, 2, 1, "", "from_rhino_point"], [318, 2, 1, "", "to_data"], [319, 2, 1, "", "to_json"], [320, 2, 1, "", "to_jsonstring"], [321, 2, 1, "", "validate_data"], [322, 2, 1, "", "validate_json"]], "compas_cem.elements.TrailEdge": [[324, 2, 1, "", "ToString"], [325, 2, 1, "", "copy"], [326, 2, 1, "", "from_data"], [327, 2, 1, "", "from_json"], [328, 2, 1, "", "from_jsonstring"], [329, 2, 1, "", "from_line"], [330, 2, 1, "", "from_rhino_line"], [331, 2, 1, "", "to_data"], [332, 2, 1, "", "to_json"], [333, 2, 1, "", "to_jsonstring"], [334, 2, 1, "", "validate_data"], [335, 2, 1, "", "validate_json"]], "compas_cem.equilibrium": [[336, 3, 1, "", "static_equilibrium"], [337, 3, 1, "", "static_equilibrium_numpy"]], "compas_cem.loads": [[338, 1, 1, "", "NodeLoad"]], "compas_cem.loads.NodeLoad": [[339, 2, 1, "", "ToString"], [340, 2, 1, "", "copy"], [341, 2, 1, "", "from_data"], [342, 2, 1, "", "from_json"], [343, 2, 1, "", "from_jsonstring"], [344, 2, 1, "", "from_point_and_vector"], [345, 2, 1, "", "from_rhino_point_and_vector"], [346, 2, 1, "", "to_data"], [347, 2, 1, "", "to_json"], [348, 2, 1, "", "to_jsonstring"], [349, 2, 1, "", "validate_data"], [350, 2, 1, "", "validate_json"]], "compas_cem.optimization": [[351, 1, 1, "", "DeviationEdgeLengthConstraint"], [366, 1, 1, "", "DeviationEdgeParameter"], [382, 1, 1, "", "LineConstraint"], [397, 1, 1, "", "Optimizer"], [422, 1, 1, "", "OriginNodeXParameter"], [438, 1, 1, "", "OriginNodeYParameter"], [454, 1, 1, "", "OriginNodeZParameter"], [470, 1, 1, "", "PlaneConstraint"], [485, 1, 1, "", "PointConstraint"], [500, 1, 1, "", "ReactionForceConstraint"], [515, 1, 1, "", "TrailEdgeForceConstraint"], [530, 1, 1, "", "TrailEdgeParameter"], [546, 3, 1, "", "solve_nlopt_proxy"]], "compas_cem.optimization.DeviationEdgeLengthConstraint": [[352, 2, 1, "", "ToString"], [353, 2, 1, "", "copy"], [354, 2, 1, "", "from_data"], [355, 2, 1, "", "from_json"], [356, 2, 1, "", "from_jsonstring"], [357, 2, 1, "", "key"], [358, 2, 1, "", "penalty"], [359, 2, 1, "", "reference"], [360, 2, 1, "", "target"], [361, 2, 1, "", "to_data"], [362, 2, 1, "", "to_json"], [363, 2, 1, "", "to_jsonstring"], [364, 2, 1, "", "validate_data"], [365, 2, 1, "", "validate_json"]], "compas_cem.optimization.DeviationEdgeParameter": [[367, 2, 1, "", "ToString"], [368, 2, 1, "", "attr_name"], [369, 2, 1, "", "bound_low"], [370, 2, 1, "", "bound_up"], [371, 2, 1, "", "copy"], [372, 2, 1, "", "from_data"], [373, 2, 1, "", "from_json"], [374, 2, 1, "", "from_jsonstring"], [375, 2, 1, "", "key"], [376, 2, 1, "", "start_value"], [377, 2, 1, "", "to_data"], [378, 2, 1, "", "to_json"], [379, 2, 1, "", "to_jsonstring"], [380, 2, 1, "", "validate_data"], [381, 2, 1, "", "validate_json"]], "compas_cem.optimization.LineConstraint": [[383, 2, 1, "", "ToString"], [384, 2, 1, "", "copy"], [385, 2, 1, "", "from_data"], [386, 2, 1, "", "from_json"], [387, 2, 1, "", "from_jsonstring"], [388, 2, 1, "", "key"], [389, 2, 1, "", "penalty"], [390, 2, 1, "", "reference"], [391, 2, 1, "", "target"], [392, 2, 1, "", "to_data"], [393, 2, 1, "", "to_json"], [394, 2, 1, "", "to_jsonstring"], [395, 2, 1, "", "validate_data"], [396, 2, 1, "", "validate_json"]], "compas_cem.optimization.Optimizer": [[398, 2, 1, "", "ToString"], [399, 2, 1, "", "add_constraint"], [400, 2, 1, "", "add_parameter"], [401, 2, 1, "", "check_optimization_sanity"], [402, 2, 1, "", "copy"], [403, 2, 1, "", "from_data"], [404, 2, 1, "", "from_json"], [405, 2, 1, "", "from_jsonstring"], [406, 2, 1, "", "gradient_func"], [407, 2, 1, "", "index_parameter"], [408, 2, 1, "", "number_of_constraints"], [409, 2, 1, "", "number_of_parameters"], [410, 2, 1, "", "objective_func"], [411, 2, 1, "", "optimization_bounds"], [412, 2, 1, "", "optimization_parameters"], [413, 2, 1, "", "parameter_index"], [414, 2, 1, "", "remove_constraint"], [415, 2, 1, "", "remove_parameter"], [416, 2, 1, "", "solve_nlopt"], [417, 2, 1, "", "to_data"], [418, 2, 1, "", "to_json"], [419, 2, 1, "", "to_jsonstring"], [420, 2, 1, "", "validate_data"], [421, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeXParameter": [[423, 2, 1, "", "ToString"], [424, 2, 1, "", "attr_name"], [425, 2, 1, "", "bound_low"], [426, 2, 1, "", "bound_up"], [427, 2, 1, "", "copy"], [428, 2, 1, "", "from_data"], [429, 2, 1, "", "from_json"], [430, 2, 1, "", "from_jsonstring"], [431, 2, 1, "", "key"], [432, 2, 1, "", "start_value"], [433, 2, 1, "", "to_data"], [434, 2, 1, "", "to_json"], [435, 2, 1, "", "to_jsonstring"], [436, 2, 1, "", "validate_data"], [437, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeYParameter": [[439, 2, 1, "", "ToString"], [440, 2, 1, "", "attr_name"], [441, 2, 1, "", "bound_low"], [442, 2, 1, "", "bound_up"], [443, 2, 1, "", "copy"], [444, 2, 1, "", "from_data"], [445, 2, 1, "", "from_json"], [446, 2, 1, "", "from_jsonstring"], [447, 2, 1, "", "key"], [448, 2, 1, "", "start_value"], [449, 2, 1, "", "to_data"], [450, 2, 1, "", "to_json"], [451, 2, 1, "", "to_jsonstring"], [452, 2, 1, "", "validate_data"], [453, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeZParameter": [[455, 2, 1, "", "ToString"], [456, 2, 1, "", "attr_name"], [457, 2, 1, "", "bound_low"], [458, 2, 1, "", "bound_up"], [459, 2, 1, "", "copy"], [460, 2, 1, "", "from_data"], [461, 2, 1, "", "from_json"], [462, 2, 1, "", "from_jsonstring"], [463, 2, 1, "", "key"], [464, 2, 1, "", "start_value"], [465, 2, 1, "", "to_data"], [466, 2, 1, "", "to_json"], [467, 2, 1, "", "to_jsonstring"], [468, 2, 1, "", "validate_data"], [469, 2, 1, "", "validate_json"]], "compas_cem.optimization.PlaneConstraint": [[471, 2, 1, "", "ToString"], [472, 2, 1, "", "copy"], [473, 2, 1, "", "from_data"], [474, 2, 1, "", "from_json"], [475, 2, 1, "", "from_jsonstring"], [476, 2, 1, "", "key"], [477, 2, 1, "", "penalty"], [478, 2, 1, "", "reference"], [479, 2, 1, "", "target"], [480, 2, 1, "", "to_data"], [481, 2, 1, "", "to_json"], [482, 2, 1, "", "to_jsonstring"], [483, 2, 1, "", "validate_data"], [484, 2, 1, "", "validate_json"]], "compas_cem.optimization.PointConstraint": [[486, 2, 1, "", "ToString"], [487, 2, 1, "", "copy"], [488, 2, 1, "", "from_data"], [489, 2, 1, "", "from_json"], [490, 2, 1, "", "from_jsonstring"], [491, 2, 1, "", "key"], [492, 2, 1, "", "penalty"], [493, 2, 1, "", "reference"], [494, 2, 1, "", "target"], [495, 2, 1, "", "to_data"], [496, 2, 1, "", "to_json"], [497, 2, 1, "", "to_jsonstring"], [498, 2, 1, "", "validate_data"], [499, 2, 1, "", "validate_json"]], "compas_cem.optimization.ReactionForceConstraint": [[501, 2, 1, "", "ToString"], [502, 2, 1, "", "copy"], [503, 2, 1, "", "from_data"], [504, 2, 1, "", "from_json"], [505, 2, 1, "", "from_jsonstring"], [506, 2, 1, "", "key"], [507, 2, 1, "", "penalty"], [508, 2, 1, "", "reference"], [509, 2, 1, "", "target"], [510, 2, 1, "", "to_data"], [511, 2, 1, "", "to_json"], [512, 2, 1, "", "to_jsonstring"], [513, 2, 1, "", "validate_data"], [514, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeForceConstraint": [[516, 2, 1, "", "ToString"], [517, 2, 1, "", "copy"], [518, 2, 1, "", "from_data"], [519, 2, 1, "", "from_json"], [520, 2, 1, "", "from_jsonstring"], [521, 2, 1, "", "key"], [522, 2, 1, "", "penalty"], [523, 2, 1, "", "reference"], [524, 2, 1, "", "target"], [525, 2, 1, "", "to_data"], [526, 2, 1, "", "to_json"], [527, 2, 1, "", "to_jsonstring"], [528, 2, 1, "", "validate_data"], [529, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeParameter": [[531, 2, 1, "", "ToString"], [532, 2, 1, "", "attr_name"], [533, 2, 1, "", "bound_low"], [534, 2, 1, "", "bound_up"], [535, 2, 1, "", "copy"], [536, 2, 1, "", "from_data"], [537, 2, 1, "", "from_json"], [538, 2, 1, "", "from_jsonstring"], [539, 2, 1, "", "key"], [540, 2, 1, "", "start_value"], [541, 2, 1, "", "to_data"], [542, 2, 1, "", "to_json"], [543, 2, 1, "", "to_jsonstring"], [544, 2, 1, "", "validate_data"], [545, 2, 1, "", "validate_json"]], "compas_cem.plotters": [[547, 1, 1, "", "FormArtist"], [565, 1, 1, "", "TopologyArtist"]], "compas_cem.plotters.FormArtist": [[548, 2, 1, "", "build"], [549, 2, 1, "", "build_as"], [550, 2, 1, "", "clear"], [551, 2, 1, "", "clear_edges"], [552, 2, 1, "", "clear_nodes"], [553, 2, 1, "", "draw"], [554, 2, 1, "", "draw_collection"], [555, 2, 1, "", "draw_edgelabels"], [556, 2, 1, "", "draw_edges"], [557, 2, 1, "", "draw_loads"], [558, 2, 1, "", "draw_nodelabels"], [559, 2, 1, "", "draw_nodes"], [560, 2, 1, "", "draw_reactions"], [561, 2, 1, "", "redraw"], [562, 2, 1, "", "register"], [563, 2, 1, "", "update_data"], [564, 2, 1, "", "viewbox"]], "compas_cem.plotters.TopologyArtist": [[566, 2, 1, "", "build"], [567, 2, 1, "", "build_as"], [568, 2, 1, "", "clear"], [569, 2, 1, "", "clear_edges"], [570, 2, 1, "", "clear_nodes"], [571, 2, 1, "", "draw"], [572, 2, 1, "", "draw_collection"], [573, 2, 1, "", "draw_edgelabels"], [574, 2, 1, "", "draw_edges"], [575, 2, 1, "", "draw_loads"], [576, 2, 1, "", "draw_nodelabels"], [577, 2, 1, "", "draw_nodes"], [578, 2, 1, "", "redraw"], [579, 2, 1, "", "register"], [580, 2, 1, "", "update_data"], [581, 2, 1, "", "viewbox"]], "compas_cem.supports": [[582, 1, 1, "", "NodeSupport"]], "compas_cem.supports.NodeSupport": [[583, 2, 1, "", "ToString"], [584, 2, 1, "", "copy"], [585, 2, 1, "", "from_data"], [586, 2, 1, "", "from_json"], [587, 2, 1, "", "from_jsonstring"], [588, 2, 1, "", "from_point"], [589, 2, 1, "", "from_rhino_point"], [590, 2, 1, "", "to_data"], [591, 2, 1, "", "to_json"], [592, 2, 1, "", "to_jsonstring"], [593, 2, 1, "", "validate_data"], [594, 2, 1, "", "validate_json"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"python": 0, "01": 1, "simpl": 1, "compress": 1, "structur": [1, 4], "02": 2, "brace": 2, "tower": 2, "2d": [2, 3, 4, 7], "03": 3, "bridg": [3, 7, 8], "optim": [3, 18, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421], "04": 4, "tree": 4, "05": 5, "planar": 5, "tensegr": [5, 10], "wheel": 5, "grasshopp": [6, 599], "A": 7, "b": 8, "tubular": 8, "3d": 8, "c": 9, "circular": 9, "dome": 9, "d": 10, "jessen": 10, "e": 11, "spiral": 11, "staircas": 11, "api": 12, "refer": [12, 359, 390, 478, 493, 508, 523], "compas_cem": [13, 14, 15, 16, 17, 18, 19, 20], "diagram": 14, "element": 15, "edg": [15, 49, 185], "node": [15, 113, 253, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "equilibrium": 16, "load": 17, "constraint": 18, "paramet": 18, "plotter": 19, "class": 19, "support": 20, "formdiagram": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "tostr": [22, 149, 298, 311, 324, 339, 352, 367, 383, 398, 423, 439, 455, 471, 486, 501, 516, 531, 583], "add_edg": [23, 150], "add_nod": [24, 152], "adjacency_matrix": [25, 154], "clear": [26, 158, 550, 568], "complement": [27, 159], "connected_edg": [28, 161], "connectivity_matrix": [29, 163], "copi": [30, 164, 299, 312, 325, 340, 353, 371, 384, 402, 427, 443, 459, 472, 487, 502, 517, 535, 584], "count_cross": [31, 165], "degre": [32, 166], "degree_in": [33, 167], "degree_matrix": [34, 168], "degree_out": [35, 169], "delete_edg": [36, 170], "delete_nod": [37, 171], "edge_attribut": [38, 39, 173, 174], "edge_coordin": [40, 175], "edge_direct": [41, 176], "edge_forc": [42, 177], "edge_length": [43, 178], "edge_length_2": [44, 179], "edge_midpoint": [45, 180], "edge_point": [46, 181], "edge_sampl": [47, 182], "edge_vector": [48, 184], "edges_attribut": [50, 51, 186, 187], "edges_wher": [52, 188], "edges_where_pred": [53, 189], "embed_in_plan": [54, 190], "find_cross": [55, 191], "find_cycl": [56, 192], "from_data": [57, 193, 300, 313, 326, 341, 354, 372, 385, 403, 428, 444, 460, 473, 488, 503, 518, 536, 585], "from_edg": [58, 194], "from_json": [59, 195, 301, 314, 327, 342, 355, 373, 386, 404, 429, 445, 461, 474, 489, 504, 519, 537, 586], "from_jsonstr": [60, 196, 302, 315, 328, 343, 356, 374, 387, 405, 430, 446, 462, 475, 490, 505, 520, 538, 587], "from_lin": [61, 197, 303, 329], "from_networkx": [62, 198], "from_nodes_and_edg": [63, 199], "from_obj": [64, 200], "from_pointcloud": [65, 201], "from_topology_diagram": 66, "get_any_edg": [67, 68, 202, 203], "get_any_nod": [69, 70, 204, 205], "gkei": [71, 206], "gkey_kei": [72, 207], "has_edg": [73, 208], "has_nod": [74, 209], "index_kei": [75, 210], "index_uv": [76, 211], "is_connect": [77, 213], "is_cross": [78, 214], "is_leaf": [79, 216], "is_node_connect": [80, 217], "is_node_load": [81, 218], "is_node_support": [82, 220], "is_planar": [83, 221], "is_planar_embed": [84, 222], "is_xi": [85, 224], "key_gkei": [86, 225], "key_index": [87, 226], "laplacian_matrix": [88, 227], "leav": [89, 228], "loaded_nod": [90, 229], "neighborhood": [91, 230], "neighbor": [92, 231], "neighbors_in": [93, 232], "neighbors_out": [94, 233], "network_adjacency_matrix": [95, 234], "network_connectivity_matrix": [96, 235], "network_degree_matrix": [97, 236], "network_embed_in_plan": [98, 237], "network_is_planar": [99, 238], "network_is_planar_embed": [100, 239], "network_laplacian_matrix": [101, 240], "node_attribut": [102, 103, 241, 242], "node_coordin": [104, 243], "node_exist": [105, 244], "node_gkei": [106, 245], "node_kei": [107, 246], "node_laplacian": [108, 247], "node_load": [109, 248], "node_neighborhood_centroid": [110, 249], "node_sampl": [111, 250], "node_xyz": [112, 252], "nodes_attribut": [114, 115, 254, 255], "nodes_wher": [116, 256], "nodes_where_pred": [117, 257], "number_of_edg": [118, 260], "number_of_loaded_nod": [119, 261], "number_of_nod": [120, 262], "number_of_support_nod": [121, 263], "reaction_forc": [122, 267], "shortest_path": [123, 270], "smooth": [124, 271], "split_edg": [125, 272], "summari": [126, 273], "support_nod": [127, 274], "to_data": [128, 275, 305, 318, 331, 346, 361, 377, 392, 417, 433, 449, 465, 480, 495, 510, 525, 541, 590], "to_json": [129, 276, 306, 319, 332, 347, 362, 378, 393, 418, 434, 450, 466, 481, 496, 511, 526, 542, 591], "to_jsonstr": [130, 277, 307, 320, 333, 348, 363, 379, 394, 419, 435, 451, 467, 482, 497, 512, 527, 543, 592], "to_lin": [131, 278], "to_networkx": [132, 279], "to_nodes_and_edg": [133, 280], "to_obj": [134, 281], "to_point": [135, 282], "transform": [136, 137, 285, 286], "unset_edge_attribut": [138, 287], "unset_node_attribut": [139, 288], "update_dea": [140, 289], "update_default_edge_attribut": [141, 290], "update_default_node_attribut": [142, 291], "update_dna": [143, 292], "update_node_xyz": [144, 293], "uv_index": [145, 294], "validate_data": [146, 295, 308, 321, 334, 349, 364, 380, 395, 420, 436, 452, 468, 483, 498, 513, 528, 544, 593], "validate_json": [147, 296, 309, 322, 335, 350, 365, 381, 396, 421, 437, 453, 469, 484, 499, 514, 529, 545, 594], "topologydiagram": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296], "add_load": 151, "add_support": 153, "auxiliary_trail_edg": 155, "auxiliary_trail": 156, "build_trail": 157, "connected_deviation_edg": 160, "connected_trail_edg": 162, "deviation_edg": 172, "edge_sequ": 183, "is_auxiliary_trail_edg": 212, "is_deviation_edg": 215, "is_node_origin": 219, "is_trail_edg": 223, "node_sequ": 251, "number_of_auxiliary_trail": 258, "number_of_deviation_edg": 259, "number_of_trail_edg": 264, "number_of_trail": 265, "origin_nod": 266, "sequence_max": 268, "sequenc": 269, "trail_edg": 283, "trail": 284, "deviationedg": [297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309], "from_rhino_lin": [304, 330], "from_point": [316, 588], "from_rhino_point": [317, 589], "trailedg": [323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "static_equilibrium": 336, "static_equilibrium_numpi": 337, "nodeload": [338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350], "from_point_and_vector": 344, "from_rhino_point_and_vector": 345, "deviationedgelengthconstraint": [351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365], "kei": [357, 375, 388, 431, 447, 463, 476, 491, 506, 521, 539], "penalti": [358, 389, 477, 492, 507, 522], "target": [360, 391, 479, 494, 509, 524], "deviationedgeparamet": [366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381], "attr_nam": [368, 424, 440, 456, 532], "bound_low": [369, 425, 441, 457, 533], "bound_up": [370, 426, 442, 458, 534], "start_valu": [376, 432, 448, 464, 540], "lineconstraint": [382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "add_constraint": 399, "add_paramet": 400, "check_optimization_san": 401, "gradient_func": 406, "index_paramet": 407, "number_of_constraint": 408, "number_of_paramet": 409, "objective_func": 410, "optimization_bound": 411, "optimization_paramet": 412, "parameter_index": 413, "remove_constraint": 414, "remove_paramet": 415, "solve_nlopt": 416, "originnodexparamet": [422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "originnodeyparamet": [438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "originnodezparamet": [454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "planeconstraint": [470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484], "pointconstraint": [485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499], "reactionforceconstraint": [500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514], "trailedgeforceconstraint": [515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "trailedgeparamet": [530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545], "solve_nlopt_proxi": 546, "formartist": [547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564], "build": [548, 566], "build_a": [549, 567], "clear_edg": [551, 569], "clear_nod": [552, 570], "draw": [553, 571], "draw_collect": [554, 572], "draw_edgelabel": [555, 573], "draw_edg": [556, 574], "draw_load": [557, 575], "draw_nodelabel": [558, 576], "draw_nod": [559, 577], "draw_react": 560, "redraw": [561, 578], "regist": [562, 579], "update_data": [563, 580], "viewbox": [564, 581], "topologyartist": [565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581], "nodesupport": [582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "changelog": 595, "unreleas": 595, "0": 595, "2": [595, 599], "1": [595, 599], "15": 595, "14": 595, "13": 595, "12": 595, "11": 595, "9": 595, "6": 595, "4": 595, "3": [595, 599], "cite": 596, "author": 596, "exampl": 597, "compa": [598, 599], "cem": [598, 599], "main": 598, "featur": 598, "credit": 598, "tabl": 598, "content": 598, "instal": 599, "creat": 599, "virtual": 599, "environ": 599, "activ": 599, "via": 599, "pip": 599, "plugin": 599, "remov": 599, "ani": 599, "leftov": 599, "link": 599, "check": 599, "your": 599, "updat": 599, "licens": 600}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})