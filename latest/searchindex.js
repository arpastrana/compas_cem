Search.setIndex({"docnames": ["_examples/01_python", "_examples/01_python/01", "_examples/01_python/02", "_examples/01_python/03", "_examples/01_python/04", "_examples/01_python/05", "_examples/02_ghpython", "_examples/02_ghpython/bridge_2d", "_examples/02_ghpython/bridge_3d", "_examples/02_ghpython/dome", "_examples/02_ghpython/jessen", "_examples/02_ghpython/spiral", "api", "api/compas_cem", "api/compas_cem.diagrams", "api/compas_cem.elements", "api/compas_cem.equilibrium", "api/compas_cem.loads", "api/compas_cem.optimization", "api/compas_cem.plotters", "api/compas_cem.supports", "api/compas_cem.viewers", "api/generated/compas_cem.diagrams.FormDiagram", "api/generated/compas_cem.diagrams.FormDiagram.ToString", "api/generated/compas_cem.diagrams.FormDiagram.add_edge", "api/generated/compas_cem.diagrams.FormDiagram.add_node", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.clear", "api/generated/compas_cem.diagrams.FormDiagram.complement", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.copy", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings", "api/generated/compas_cem.diagrams.FormDiagram.degree", "api/generated/compas_cem.diagrams.FormDiagram.degree_in", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.degree_out", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge", "api/generated/compas_cem.diagrams.FormDiagram.delete_node", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction", "api/generated/compas_cem.diagrams.FormDiagram.edge_force", "api/generated/compas_cem.diagrams.FormDiagram.edge_length", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.FormDiagram.edge_point", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector", "api/generated/compas_cem.diagrams.FormDiagram.edges", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edges_where", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles", "api/generated/compas_cem.diagrams.FormDiagram.from_data", "api/generated/compas_cem.diagrams.FormDiagram.from_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_json", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.from_lines", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_obj", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.FormDiagram.gkey", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key", "api/generated/compas_cem.diagrams.FormDiagram.has_edge", "api/generated/compas_cem.diagrams.FormDiagram.has_node", "api/generated/compas_cem.diagrams.FormDiagram.index_key", "api/generated/compas_cem.diagrams.FormDiagram.index_uv", "api/generated/compas_cem.diagrams.FormDiagram.is_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed", "api/generated/compas_cem.diagrams.FormDiagram.is_edge_supported", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support", "api/generated/compas_cem.diagrams.FormDiagram.is_planar", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.is_xy", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey", "api/generated/compas_cem.diagrams.FormDiagram.key_index", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.leaves", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood", "api/generated/compas_cem.diagrams.FormDiagram.neighbors", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.node_exists", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey", "api/generated/compas_cem.diagrams.FormDiagram.node_key", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian", "api/generated/compas_cem.diagrams.FormDiagram.node_load", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.FormDiagram.node_sample", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.nodes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force", "api/generated/compas_cem.diagrams.FormDiagram.sha256", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path", "api/generated/compas_cem.diagrams.FormDiagram.smooth", "api/generated/compas_cem.diagrams.FormDiagram.split_edge", "api/generated/compas_cem.diagrams.FormDiagram.summary", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.to_data", "api/generated/compas_cem.diagrams.FormDiagram.to_json", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.to_lines", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.to_obj", "api/generated/compas_cem.diagrams.FormDiagram.to_points", "api/generated/compas_cem.diagrams.FormDiagram.transform", "api/generated/compas_cem.diagrams.FormDiagram.transformed", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.update_dea", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_dna", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.uv_index", "api/generated/compas_cem.diagrams.FormDiagram.validate_data", "api/generated/compas_cem.diagrams.FormDiagram.validate_json", "api/generated/compas_cem.diagrams.TopologyDiagram", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.clear", "api/generated/compas_cem.diagrams.TopologyDiagram.complement", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.copy", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.degree", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.direct_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector", "api/generated/compas_cem.diagrams.TopologyDiagram.edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data", "api/generated/compas_cem.diagrams.TopologyDiagram.from_dualquadmesh", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node", "api/generated/compas_cem.diagrams.TopologyDiagram.has_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv", "api/generated/compas_cem.diagrams.TopologyDiagram.indirect_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_direct_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_edge_supported", "api/generated/compas_cem.diagrams.TopologyDiagram.is_indirect_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_direct_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_indirect_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_last", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.sha256", "api/generated/compas_cem.diagrams.TopologyDiagram.shift_trail", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.summary", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points", "api/generated/compas_cem.diagrams.TopologyDiagram.trail", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.trails", "api/generated/compas_cem.diagrams.TopologyDiagram.trails_sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.transform", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json", "api/generated/compas_cem.elements.DeviationEdge", "api/generated/compas_cem.elements.DeviationEdge.ToString", "api/generated/compas_cem.elements.DeviationEdge.copy", "api/generated/compas_cem.elements.DeviationEdge.from_data", "api/generated/compas_cem.elements.DeviationEdge.from_json", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.from_line", "api/generated/compas_cem.elements.DeviationEdge.sha256", "api/generated/compas_cem.elements.DeviationEdge.to_data", "api/generated/compas_cem.elements.DeviationEdge.to_json", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.validate_data", "api/generated/compas_cem.elements.DeviationEdge.validate_json", "api/generated/compas_cem.elements.Node", "api/generated/compas_cem.elements.Node.ToString", "api/generated/compas_cem.elements.Node.copy", "api/generated/compas_cem.elements.Node.from_data", "api/generated/compas_cem.elements.Node.from_json", "api/generated/compas_cem.elements.Node.from_jsonstring", "api/generated/compas_cem.elements.Node.from_point", "api/generated/compas_cem.elements.Node.sha256", "api/generated/compas_cem.elements.Node.to_data", "api/generated/compas_cem.elements.Node.to_json", "api/generated/compas_cem.elements.Node.to_jsonstring", "api/generated/compas_cem.elements.Node.validate_data", "api/generated/compas_cem.elements.Node.validate_json", "api/generated/compas_cem.elements.TrailEdge", "api/generated/compas_cem.elements.TrailEdge.ToString", "api/generated/compas_cem.elements.TrailEdge.copy", "api/generated/compas_cem.elements.TrailEdge.from_data", "api/generated/compas_cem.elements.TrailEdge.from_json", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring", "api/generated/compas_cem.elements.TrailEdge.from_line", "api/generated/compas_cem.elements.TrailEdge.sha256", "api/generated/compas_cem.elements.TrailEdge.to_data", "api/generated/compas_cem.elements.TrailEdge.to_json", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring", "api/generated/compas_cem.elements.TrailEdge.validate_data", "api/generated/compas_cem.elements.TrailEdge.validate_json", "api/generated/compas_cem.equilibrium.static_equilibrium", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy", "api/generated/compas_cem.loads.NodeLoad", "api/generated/compas_cem.loads.NodeLoad.ToString", "api/generated/compas_cem.loads.NodeLoad.copy", "api/generated/compas_cem.loads.NodeLoad.from_data", "api/generated/compas_cem.loads.NodeLoad.from_json", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector", "api/generated/compas_cem.loads.NodeLoad.sha256", "api/generated/compas_cem.loads.NodeLoad.to_data", "api/generated/compas_cem.loads.NodeLoad.to_json", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring", "api/generated/compas_cem.loads.NodeLoad.validate_data", "api/generated/compas_cem.loads.NodeLoad.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.sha256", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key", "api/generated/compas_cem.optimization.DeviationEdgeParameter.sha256", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json", "api/generated/compas_cem.optimization.LineConstraint", "api/generated/compas_cem.optimization.LineConstraint.ToString", "api/generated/compas_cem.optimization.LineConstraint.copy", "api/generated/compas_cem.optimization.LineConstraint.from_data", "api/generated/compas_cem.optimization.LineConstraint.from_json", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.key", "api/generated/compas_cem.optimization.LineConstraint.penalty", "api/generated/compas_cem.optimization.LineConstraint.reference", "api/generated/compas_cem.optimization.LineConstraint.sha256", "api/generated/compas_cem.optimization.LineConstraint.target", "api/generated/compas_cem.optimization.LineConstraint.to_data", "api/generated/compas_cem.optimization.LineConstraint.to_json", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.validate_data", "api/generated/compas_cem.optimization.LineConstraint.validate_json", "api/generated/compas_cem.optimization.NodeLoadXParameter", "api/generated/compas_cem.optimization.NodeLoadXParameter.ToString", "api/generated/compas_cem.optimization.NodeLoadXParameter.attr_name", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_low", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_up", "api/generated/compas_cem.optimization.NodeLoadXParameter.copy", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_data", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_json", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_jsonstring", "api/generated/compas_cem.optimization.NodeLoadXParameter.key", "api/generated/compas_cem.optimization.NodeLoadXParameter.sha256", "api/generated/compas_cem.optimization.NodeLoadXParameter.start_value", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_data", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_json", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_jsonstring", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_data", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_json", "api/generated/compas_cem.optimization.NodeLoadYParameter", "api/generated/compas_cem.optimization.NodeLoadYParameter.ToString", "api/generated/compas_cem.optimization.NodeLoadYParameter.attr_name", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_low", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_up", "api/generated/compas_cem.optimization.NodeLoadYParameter.copy", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_data", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_json", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_jsonstring", "api/generated/compas_cem.optimization.NodeLoadYParameter.key", "api/generated/compas_cem.optimization.NodeLoadYParameter.sha256", "api/generated/compas_cem.optimization.NodeLoadYParameter.start_value", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_data", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_json", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_jsonstring", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_data", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_json", "api/generated/compas_cem.optimization.NodeLoadZParameter", "api/generated/compas_cem.optimization.NodeLoadZParameter.ToString", "api/generated/compas_cem.optimization.NodeLoadZParameter.attr_name", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_low", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_up", "api/generated/compas_cem.optimization.NodeLoadZParameter.copy", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_data", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_json", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_jsonstring", "api/generated/compas_cem.optimization.NodeLoadZParameter.key", "api/generated/compas_cem.optimization.NodeLoadZParameter.sha256", "api/generated/compas_cem.optimization.NodeLoadZParameter.start_value", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_data", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_json", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_jsonstring", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_data", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_json", "api/generated/compas_cem.optimization.Optimizer", "api/generated/compas_cem.optimization.Optimizer.ToString", "api/generated/compas_cem.optimization.Optimizer.add_constraint", "api/generated/compas_cem.optimization.Optimizer.add_parameter", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity", "api/generated/compas_cem.optimization.Optimizer.copy", "api/generated/compas_cem.optimization.Optimizer.from_data", "api/generated/compas_cem.optimization.Optimizer.from_json", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring", "api/generated/compas_cem.optimization.Optimizer.gradient_func", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters", "api/generated/compas_cem.optimization.Optimizer.objective_func", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters", "api/generated/compas_cem.optimization.Optimizer.remove_constraint", "api/generated/compas_cem.optimization.Optimizer.remove_parameter", "api/generated/compas_cem.optimization.Optimizer.sha256", "api/generated/compas_cem.optimization.Optimizer.solve", "api/generated/compas_cem.optimization.Optimizer.to_data", "api/generated/compas_cem.optimization.Optimizer.to_json", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring", "api/generated/compas_cem.optimization.Optimizer.validate_data", "api/generated/compas_cem.optimization.Optimizer.validate_json", "api/generated/compas_cem.optimization.OriginNodeXParameter", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.key", "api/generated/compas_cem.optimization.OriginNodeXParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeYParameter", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.key", "api/generated/compas_cem.optimization.OriginNodeYParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeZParameter", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.key", "api/generated/compas_cem.optimization.OriginNodeZParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json", "api/generated/compas_cem.optimization.PlaneConstraint", "api/generated/compas_cem.optimization.PlaneConstraint.ToString", "api/generated/compas_cem.optimization.PlaneConstraint.copy", "api/generated/compas_cem.optimization.PlaneConstraint.from_data", "api/generated/compas_cem.optimization.PlaneConstraint.from_json", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.key", "api/generated/compas_cem.optimization.PlaneConstraint.penalty", "api/generated/compas_cem.optimization.PlaneConstraint.reference", "api/generated/compas_cem.optimization.PlaneConstraint.sha256", "api/generated/compas_cem.optimization.PlaneConstraint.target", "api/generated/compas_cem.optimization.PlaneConstraint.to_data", "api/generated/compas_cem.optimization.PlaneConstraint.to_json", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json", "api/generated/compas_cem.optimization.PointConstraint", "api/generated/compas_cem.optimization.PointConstraint.ToString", "api/generated/compas_cem.optimization.PointConstraint.copy", "api/generated/compas_cem.optimization.PointConstraint.from_data", "api/generated/compas_cem.optimization.PointConstraint.from_json", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.key", "api/generated/compas_cem.optimization.PointConstraint.penalty", "api/generated/compas_cem.optimization.PointConstraint.reference", "api/generated/compas_cem.optimization.PointConstraint.sha256", "api/generated/compas_cem.optimization.PointConstraint.target", "api/generated/compas_cem.optimization.PointConstraint.to_data", "api/generated/compas_cem.optimization.PointConstraint.to_json", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.validate_data", "api/generated/compas_cem.optimization.PointConstraint.validate_json", "api/generated/compas_cem.optimization.ReactionForceConstraint", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.key", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference", "api/generated/compas_cem.optimization.ReactionForceConstraint.sha256", "api/generated/compas_cem.optimization.ReactionForceConstraint.target", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.sha256", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeParameter", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.key", "api/generated/compas_cem.optimization.TrailEdgeParameter.sha256", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json", "api/generated/compas_cem.optimization.solve_proxy", "api/generated/compas_cem.plotters.FormArtist", "api/generated/compas_cem.plotters.FormArtist.build", "api/generated/compas_cem.plotters.FormArtist.build_as", "api/generated/compas_cem.plotters.FormArtist.clear", "api/generated/compas_cem.plotters.FormArtist.clear_edges", "api/generated/compas_cem.plotters.FormArtist.clear_nodes", "api/generated/compas_cem.plotters.FormArtist.draw", "api/generated/compas_cem.plotters.FormArtist.draw_collection", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels", "api/generated/compas_cem.plotters.FormArtist.draw_edges", "api/generated/compas_cem.plotters.FormArtist.draw_loads", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels", "api/generated/compas_cem.plotters.FormArtist.draw_nodes", "api/generated/compas_cem.plotters.FormArtist.draw_reactions", "api/generated/compas_cem.plotters.FormArtist.redraw", "api/generated/compas_cem.plotters.FormArtist.register", "api/generated/compas_cem.plotters.FormArtist.update_data", "api/generated/compas_cem.plotters.FormArtist.viewbox", "api/generated/compas_cem.plotters.Plotter", "api/generated/compas_cem.plotters.Plotter.add", "api/generated/compas_cem.plotters.Plotter.add_from_list", "api/generated/compas_cem.plotters.Plotter.draw", "api/generated/compas_cem.plotters.Plotter.find", "api/generated/compas_cem.plotters.Plotter.on", "api/generated/compas_cem.plotters.Plotter.pause", "api/generated/compas_cem.plotters.Plotter.redraw", "api/generated/compas_cem.plotters.Plotter.register_listener", "api/generated/compas_cem.plotters.Plotter.save", "api/generated/compas_cem.plotters.Plotter.show", "api/generated/compas_cem.plotters.Plotter.zoom_extents", "api/generated/compas_cem.plotters.TopologyArtist", "api/generated/compas_cem.plotters.TopologyArtist.build", "api/generated/compas_cem.plotters.TopologyArtist.build_as", "api/generated/compas_cem.plotters.TopologyArtist.clear", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes", "api/generated/compas_cem.plotters.TopologyArtist.draw", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes", "api/generated/compas_cem.plotters.TopologyArtist.redraw", "api/generated/compas_cem.plotters.TopologyArtist.register", "api/generated/compas_cem.plotters.TopologyArtist.update_data", "api/generated/compas_cem.plotters.TopologyArtist.viewbox", "api/generated/compas_cem.supports.NodeSupport", "api/generated/compas_cem.supports.NodeSupport.ToString", "api/generated/compas_cem.supports.NodeSupport.copy", "api/generated/compas_cem.supports.NodeSupport.from_data", "api/generated/compas_cem.supports.NodeSupport.from_json", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring", "api/generated/compas_cem.supports.NodeSupport.from_point", "api/generated/compas_cem.supports.NodeSupport.sha256", "api/generated/compas_cem.supports.NodeSupport.to_data", "api/generated/compas_cem.supports.NodeSupport.to_json", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring", "api/generated/compas_cem.supports.NodeSupport.validate_data", "api/generated/compas_cem.supports.NodeSupport.validate_json", "changelog", "citing", "examples", "index", "installation", "license"], "filenames": ["_examples/01_python.rst", "_examples/01_python/01.rst", "_examples/01_python/02.rst", "_examples/01_python/03.rst", "_examples/01_python/04.rst", "_examples/01_python/05.rst", "_examples/02_ghpython.rst", "_examples/02_ghpython/bridge_2d.rst", "_examples/02_ghpython/bridge_3d.rst", "_examples/02_ghpython/dome.rst", "_examples/02_ghpython/jessen.rst", "_examples/02_ghpython/spiral.rst", "api.rst", "api/compas_cem.rst", "api/compas_cem.diagrams.rst", "api/compas_cem.elements.rst", "api/compas_cem.equilibrium.rst", "api/compas_cem.loads.rst", "api/compas_cem.optimization.rst", "api/compas_cem.plotters.rst", "api/compas_cem.supports.rst", "api/compas_cem.viewers.rst", "api/generated/compas_cem.diagrams.FormDiagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.ToString.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.clear.rst", "api/generated/compas_cem.diagrams.FormDiagram.complement.rst", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.copy.rst", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_edge_supported.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.leaves.rst", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_load.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.sha256.rst", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.FormDiagram.smooth.rst", "api/generated/compas_cem.diagrams.FormDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.summary.rst", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_points.rst", "api/generated/compas_cem.diagrams.FormDiagram.transform.rst", "api/generated/compas_cem.diagrams.FormDiagram.transformed.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.clear.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.complement.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.copy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.direct_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_dualquadmesh.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.indirect_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_direct_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_edge_supported.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_indirect_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_direct_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_indirect_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_last.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sha256.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.shift_trail.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.summary.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trails_sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transform.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json.rst", "api/generated/compas_cem.elements.DeviationEdge.rst", "api/generated/compas_cem.elements.DeviationEdge.ToString.rst", "api/generated/compas_cem.elements.DeviationEdge.copy.rst", "api/generated/compas_cem.elements.DeviationEdge.from_data.rst", "api/generated/compas_cem.elements.DeviationEdge.from_json.rst", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.from_line.rst", "api/generated/compas_cem.elements.DeviationEdge.sha256.rst", "api/generated/compas_cem.elements.DeviationEdge.to_data.rst", "api/generated/compas_cem.elements.DeviationEdge.to_json.rst", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_data.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_json.rst", "api/generated/compas_cem.elements.Node.rst", "api/generated/compas_cem.elements.Node.ToString.rst", "api/generated/compas_cem.elements.Node.copy.rst", "api/generated/compas_cem.elements.Node.from_data.rst", "api/generated/compas_cem.elements.Node.from_json.rst", "api/generated/compas_cem.elements.Node.from_jsonstring.rst", "api/generated/compas_cem.elements.Node.from_point.rst", "api/generated/compas_cem.elements.Node.sha256.rst", "api/generated/compas_cem.elements.Node.to_data.rst", "api/generated/compas_cem.elements.Node.to_json.rst", "api/generated/compas_cem.elements.Node.to_jsonstring.rst", "api/generated/compas_cem.elements.Node.validate_data.rst", "api/generated/compas_cem.elements.Node.validate_json.rst", "api/generated/compas_cem.elements.TrailEdge.rst", "api/generated/compas_cem.elements.TrailEdge.ToString.rst", "api/generated/compas_cem.elements.TrailEdge.copy.rst", "api/generated/compas_cem.elements.TrailEdge.from_data.rst", "api/generated/compas_cem.elements.TrailEdge.from_json.rst", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.from_line.rst", "api/generated/compas_cem.elements.TrailEdge.sha256.rst", "api/generated/compas_cem.elements.TrailEdge.to_data.rst", "api/generated/compas_cem.elements.TrailEdge.to_json.rst", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.validate_data.rst", "api/generated/compas_cem.elements.TrailEdge.validate_json.rst", "api/generated/compas_cem.equilibrium.static_equilibrium.rst", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy.rst", "api/generated/compas_cem.loads.NodeLoad.rst", "api/generated/compas_cem.loads.NodeLoad.ToString.rst", "api/generated/compas_cem.loads.NodeLoad.copy.rst", "api/generated/compas_cem.loads.NodeLoad.from_data.rst", "api/generated/compas_cem.loads.NodeLoad.from_json.rst", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector.rst", "api/generated/compas_cem.loads.NodeLoad.sha256.rst", "api/generated/compas_cem.loads.NodeLoad.to_data.rst", "api/generated/compas_cem.loads.NodeLoad.to_json.rst", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.validate_data.rst", "api/generated/compas_cem.loads.NodeLoad.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.sha256.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.sha256.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.LineConstraint.rst", "api/generated/compas_cem.optimization.LineConstraint.ToString.rst", "api/generated/compas_cem.optimization.LineConstraint.copy.rst", "api/generated/compas_cem.optimization.LineConstraint.from_data.rst", "api/generated/compas_cem.optimization.LineConstraint.from_json.rst", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.key.rst", "api/generated/compas_cem.optimization.LineConstraint.penalty.rst", "api/generated/compas_cem.optimization.LineConstraint.reference.rst", "api/generated/compas_cem.optimization.LineConstraint.sha256.rst", "api/generated/compas_cem.optimization.LineConstraint.target.rst", "api/generated/compas_cem.optimization.LineConstraint.to_data.rst", "api/generated/compas_cem.optimization.LineConstraint.to_json.rst", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_data.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_json.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.ToString.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.attr_name.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_low.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_up.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.copy.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_data.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_json.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.key.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.sha256.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.start_value.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_data.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_json.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_data.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_json.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.ToString.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.attr_name.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_low.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_up.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.copy.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_data.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_json.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.key.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.sha256.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.start_value.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_data.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_json.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_data.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_json.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.ToString.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.attr_name.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_low.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_up.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.copy.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_data.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_json.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.key.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.sha256.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.start_value.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_data.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_json.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_data.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_json.rst", "api/generated/compas_cem.optimization.Optimizer.rst", "api/generated/compas_cem.optimization.Optimizer.ToString.rst", "api/generated/compas_cem.optimization.Optimizer.add_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.add_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity.rst", "api/generated/compas_cem.optimization.Optimizer.copy.rst", "api/generated/compas_cem.optimization.Optimizer.from_data.rst", "api/generated/compas_cem.optimization.Optimizer.from_json.rst", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.gradient_func.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.objective_func.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.remove_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.remove_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.sha256.rst", "api/generated/compas_cem.optimization.Optimizer.solve.rst", "api/generated/compas_cem.optimization.Optimizer.to_data.rst", "api/generated/compas_cem.optimization.Optimizer.to_json.rst", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.validate_data.rst", "api/generated/compas_cem.optimization.Optimizer.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.rst", "api/generated/compas_cem.optimization.PlaneConstraint.ToString.rst", "api/generated/compas_cem.optimization.PlaneConstraint.copy.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.key.rst", "api/generated/compas_cem.optimization.PlaneConstraint.penalty.rst", "api/generated/compas_cem.optimization.PlaneConstraint.reference.rst", "api/generated/compas_cem.optimization.PlaneConstraint.sha256.rst", "api/generated/compas_cem.optimization.PlaneConstraint.target.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json.rst", "api/generated/compas_cem.optimization.PointConstraint.rst", "api/generated/compas_cem.optimization.PointConstraint.ToString.rst", "api/generated/compas_cem.optimization.PointConstraint.copy.rst", "api/generated/compas_cem.optimization.PointConstraint.from_data.rst", "api/generated/compas_cem.optimization.PointConstraint.from_json.rst", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.key.rst", "api/generated/compas_cem.optimization.PointConstraint.penalty.rst", "api/generated/compas_cem.optimization.PointConstraint.reference.rst", "api/generated/compas_cem.optimization.PointConstraint.sha256.rst", "api/generated/compas_cem.optimization.PointConstraint.target.rst", "api/generated/compas_cem.optimization.PointConstraint.to_data.rst", "api/generated/compas_cem.optimization.PointConstraint.to_json.rst", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.key.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.sha256.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.target.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.sha256.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.key.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.sha256.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.solve_proxy.rst", "api/generated/compas_cem.plotters.FormArtist.rst", "api/generated/compas_cem.plotters.FormArtist.build.rst", "api/generated/compas_cem.plotters.FormArtist.build_as.rst", "api/generated/compas_cem.plotters.FormArtist.clear.rst", "api/generated/compas_cem.plotters.FormArtist.clear_edges.rst", "api/generated/compas_cem.plotters.FormArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw.rst", "api/generated/compas_cem.plotters.FormArtist.draw_collection.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edges.rst", "api/generated/compas_cem.plotters.FormArtist.draw_loads.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw_reactions.rst", "api/generated/compas_cem.plotters.FormArtist.redraw.rst", "api/generated/compas_cem.plotters.FormArtist.register.rst", "api/generated/compas_cem.plotters.FormArtist.update_data.rst", "api/generated/compas_cem.plotters.FormArtist.viewbox.rst", "api/generated/compas_cem.plotters.Plotter.rst", "api/generated/compas_cem.plotters.Plotter.add.rst", "api/generated/compas_cem.plotters.Plotter.add_from_list.rst", "api/generated/compas_cem.plotters.Plotter.draw.rst", "api/generated/compas_cem.plotters.Plotter.find.rst", "api/generated/compas_cem.plotters.Plotter.on.rst", "api/generated/compas_cem.plotters.Plotter.pause.rst", "api/generated/compas_cem.plotters.Plotter.redraw.rst", "api/generated/compas_cem.plotters.Plotter.register_listener.rst", "api/generated/compas_cem.plotters.Plotter.save.rst", "api/generated/compas_cem.plotters.Plotter.show.rst", "api/generated/compas_cem.plotters.Plotter.zoom_extents.rst", "api/generated/compas_cem.plotters.TopologyArtist.rst", "api/generated/compas_cem.plotters.TopologyArtist.build.rst", "api/generated/compas_cem.plotters.TopologyArtist.build_as.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.redraw.rst", "api/generated/compas_cem.plotters.TopologyArtist.register.rst", "api/generated/compas_cem.plotters.TopologyArtist.update_data.rst", "api/generated/compas_cem.plotters.TopologyArtist.viewbox.rst", "api/generated/compas_cem.supports.NodeSupport.rst", "api/generated/compas_cem.supports.NodeSupport.ToString.rst", "api/generated/compas_cem.supports.NodeSupport.copy.rst", "api/generated/compas_cem.supports.NodeSupport.from_data.rst", "api/generated/compas_cem.supports.NodeSupport.from_json.rst", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.from_point.rst", "api/generated/compas_cem.supports.NodeSupport.sha256.rst", "api/generated/compas_cem.supports.NodeSupport.to_data.rst", "api/generated/compas_cem.supports.NodeSupport.to_json.rst", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.validate_data.rst", "api/generated/compas_cem.supports.NodeSupport.validate_json.rst", "changelog.rst", "citing.rst", "examples.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["Python", "01. Simple Compression Structure", "02. Braced Tower in 2D", "03. Bridge Optimization in 2D", "04. Tree Structure in 2D", "05. Planar Tensegrity Wheel", "Grasshopper", "A. Bridge in 2D", "B. Tubular Bridge in 3D", "C. Circular Dome", "D. Jessen Tensegrity", "E. Spiral Staircase", "API Reference", "compas_cem", "compas_cem.diagrams", "compas_cem.elements", "compas_cem.equilibrium", "compas_cem.loads", "compas_cem.optimization", "compas_cem.plotters", "compas_cem.supports", "compas_cem.viewers", "FormDiagram", "FormDiagram.ToString", "FormDiagram.add_edge", "FormDiagram.add_node", "FormDiagram.adjacency_matrix", "FormDiagram.clear", "FormDiagram.complement", "FormDiagram.connected_edges", "FormDiagram.connectivity_matrix", "FormDiagram.copy", "FormDiagram.count_crossings", "FormDiagram.degree", "FormDiagram.degree_in", "FormDiagram.degree_matrix", "FormDiagram.degree_out", "FormDiagram.delete_edge", "FormDiagram.delete_node", "FormDiagram.edge_attribute", "FormDiagram.edge_attributes", "FormDiagram.edge_coordinates", "FormDiagram.edge_direction", "FormDiagram.edge_force", "FormDiagram.edge_length", "FormDiagram.edge_length_2", "FormDiagram.edge_midpoint", "FormDiagram.edge_point", "FormDiagram.edge_sample", "FormDiagram.edge_vector", "FormDiagram.edges", "FormDiagram.edges_attribute", "FormDiagram.edges_attributes", "FormDiagram.edges_where", "FormDiagram.edges_where_predicate", "FormDiagram.embed_in_plane", "FormDiagram.find_crossings", "FormDiagram.find_cycles", "FormDiagram.from_data", "FormDiagram.from_edges", "FormDiagram.from_json", "FormDiagram.from_jsonstring", "FormDiagram.from_lines", "FormDiagram.from_networkx", "FormDiagram.from_nodes_and_edges", "FormDiagram.from_obj", "FormDiagram.from_pointcloud", "FormDiagram.from_topology_diagram", "FormDiagram.get_any_edge", "FormDiagram.get_any_edges", "FormDiagram.get_any_node", "FormDiagram.get_any_nodes", "FormDiagram.gkey", "FormDiagram.gkey_key", "FormDiagram.has_edge", "FormDiagram.has_node", "FormDiagram.index_key", "FormDiagram.index_uv", "FormDiagram.is_connected", "FormDiagram.is_crossed", "FormDiagram.is_edge_supported", "FormDiagram.is_leaf", "FormDiagram.is_node_connected", "FormDiagram.is_node_loaded", "FormDiagram.is_node_support", "FormDiagram.is_planar", "FormDiagram.is_planar_embedding", "FormDiagram.is_xy", "FormDiagram.key_gkey", "FormDiagram.key_index", "FormDiagram.laplacian_matrix", "FormDiagram.leaves", "FormDiagram.loaded_nodes", "FormDiagram.neighborhood", "FormDiagram.neighbors", "FormDiagram.neighbors_in", "FormDiagram.neighbors_out", "FormDiagram.network_adjacency_matrix", "FormDiagram.network_connectivity_matrix", "FormDiagram.network_degree_matrix", "FormDiagram.network_embed_in_plane", "FormDiagram.network_is_planar", "FormDiagram.network_is_planar_embedding", "FormDiagram.network_laplacian_matrix", "FormDiagram.node_attribute", "FormDiagram.node_attributes", "FormDiagram.node_coordinates", "FormDiagram.node_exists", "FormDiagram.node_gkey", "FormDiagram.node_key", "FormDiagram.node_laplacian", "FormDiagram.node_load", "FormDiagram.node_neighborhood_centroid", "FormDiagram.node_sample", "FormDiagram.node_xyz", "FormDiagram.nodes", "FormDiagram.nodes_attribute", "FormDiagram.nodes_attributes", "FormDiagram.nodes_where", "FormDiagram.nodes_where_predicate", "FormDiagram.number_of_edges", "FormDiagram.number_of_loaded_nodes", "FormDiagram.number_of_nodes", "FormDiagram.number_of_support_nodes", "FormDiagram.reaction_force", "FormDiagram.sha256", "FormDiagram.shortest_path", "FormDiagram.smooth", "FormDiagram.split_edge", "FormDiagram.summary", "FormDiagram.support_nodes", "FormDiagram.to_data", "FormDiagram.to_json", "FormDiagram.to_jsonstring", "FormDiagram.to_lines", "FormDiagram.to_networkx", "FormDiagram.to_nodes_and_edges", "FormDiagram.to_obj", "FormDiagram.to_points", "FormDiagram.transform", "FormDiagram.transformed", "FormDiagram.unset_edge_attribute", "FormDiagram.unset_node_attribute", "FormDiagram.update_dea", "FormDiagram.update_default_edge_attributes", "FormDiagram.update_default_node_attributes", "FormDiagram.update_dna", "FormDiagram.update_node_xyz", "FormDiagram.uv_index", "FormDiagram.validate_data", "FormDiagram.validate_json", "TopologyDiagram", "TopologyDiagram.ToString", "TopologyDiagram.add_edge", "TopologyDiagram.add_load", "TopologyDiagram.add_node", "TopologyDiagram.add_support", "TopologyDiagram.adjacency_matrix", "TopologyDiagram.auxiliary_trail_edges", "TopologyDiagram.auxiliary_trails", "TopologyDiagram.build_trails", "TopologyDiagram.clear", "TopologyDiagram.complement", "TopologyDiagram.connected_deviation_edges", "TopologyDiagram.connected_edges", "TopologyDiagram.connected_trail_edges", "TopologyDiagram.connectivity_matrix", "TopologyDiagram.copy", "TopologyDiagram.count_crossings", "TopologyDiagram.degree", "TopologyDiagram.degree_in", "TopologyDiagram.degree_matrix", "TopologyDiagram.degree_out", "TopologyDiagram.delete_edge", "TopologyDiagram.delete_node", "TopologyDiagram.deviation_edges", "TopologyDiagram.direct_deviation_edges", "TopologyDiagram.edge_attribute", "TopologyDiagram.edge_attributes", "TopologyDiagram.edge_coordinates", "TopologyDiagram.edge_direction", "TopologyDiagram.edge_force", "TopologyDiagram.edge_length", "TopologyDiagram.edge_length_2", "TopologyDiagram.edge_midpoint", "TopologyDiagram.edge_point", "TopologyDiagram.edge_sample", "TopologyDiagram.edge_sequence", "TopologyDiagram.edge_vector", "TopologyDiagram.edges", "TopologyDiagram.edges_attribute", "TopologyDiagram.edges_attributes", "TopologyDiagram.edges_where", "TopologyDiagram.edges_where_predicate", "TopologyDiagram.embed_in_plane", "TopologyDiagram.find_crossings", "TopologyDiagram.find_cycles", "TopologyDiagram.from_data", "TopologyDiagram.from_dualquadmesh", "TopologyDiagram.from_edges", "TopologyDiagram.from_json", "TopologyDiagram.from_jsonstring", "TopologyDiagram.from_lines", "TopologyDiagram.from_networkx", "TopologyDiagram.from_nodes_and_edges", "TopologyDiagram.from_obj", "TopologyDiagram.from_pointcloud", "TopologyDiagram.get_any_edge", "TopologyDiagram.get_any_edges", "TopologyDiagram.get_any_node", "TopologyDiagram.get_any_nodes", "TopologyDiagram.gkey", "TopologyDiagram.gkey_key", "TopologyDiagram.has_edge", "TopologyDiagram.has_node", "TopologyDiagram.has_trails", "TopologyDiagram.index_key", "TopologyDiagram.index_uv", "TopologyDiagram.indirect_deviation_edges", "TopologyDiagram.is_auxiliary_trail_edge", "TopologyDiagram.is_connected", "TopologyDiagram.is_crossed", "TopologyDiagram.is_deviation_edge", "TopologyDiagram.is_direct_deviation_edge", "TopologyDiagram.is_edge_supported", "TopologyDiagram.is_indirect_deviation_edge", "TopologyDiagram.is_leaf", "TopologyDiagram.is_node_connected", "TopologyDiagram.is_node_loaded", "TopologyDiagram.is_node_origin", "TopologyDiagram.is_node_support", "TopologyDiagram.is_planar", "TopologyDiagram.is_planar_embedding", "TopologyDiagram.is_trail_edge", "TopologyDiagram.is_xy", "TopologyDiagram.key_gkey", "TopologyDiagram.key_index", "TopologyDiagram.laplacian_matrix", "TopologyDiagram.leaves", "TopologyDiagram.loaded_nodes", "TopologyDiagram.neighborhood", "TopologyDiagram.neighbors", "TopologyDiagram.neighbors_in", "TopologyDiagram.neighbors_out", "TopologyDiagram.network_adjacency_matrix", "TopologyDiagram.network_connectivity_matrix", "TopologyDiagram.network_degree_matrix", "TopologyDiagram.network_embed_in_plane", "TopologyDiagram.network_is_planar", "TopologyDiagram.network_is_planar_embedding", "TopologyDiagram.network_laplacian_matrix", "TopologyDiagram.node_attribute", "TopologyDiagram.node_attributes", "TopologyDiagram.node_coordinates", "TopologyDiagram.node_exists", "TopologyDiagram.node_gkey", "TopologyDiagram.node_key", "TopologyDiagram.node_laplacian", "TopologyDiagram.node_load", "TopologyDiagram.node_neighborhood_centroid", "TopologyDiagram.node_sample", "TopologyDiagram.node_sequence", "TopologyDiagram.node_xyz", "TopologyDiagram.nodes", "TopologyDiagram.nodes_attribute", "TopologyDiagram.nodes_attributes", "TopologyDiagram.nodes_where", "TopologyDiagram.nodes_where_predicate", "TopologyDiagram.number_of_auxiliary_trails", "TopologyDiagram.number_of_deviation_edges", "TopologyDiagram.number_of_direct_deviation_edges", "TopologyDiagram.number_of_edges", "TopologyDiagram.number_of_indirect_deviation_edges", "TopologyDiagram.number_of_loaded_nodes", "TopologyDiagram.number_of_nodes", "TopologyDiagram.number_of_sequences", "TopologyDiagram.number_of_support_nodes", "TopologyDiagram.number_of_trail_edges", "TopologyDiagram.number_of_trails", "TopologyDiagram.origin_nodes", "TopologyDiagram.reaction_force", "TopologyDiagram.sequence_last", "TopologyDiagram.sequences", "TopologyDiagram.sha256", "TopologyDiagram.shift_trail", "TopologyDiagram.shortest_path", "TopologyDiagram.smooth", "TopologyDiagram.split_edge", "TopologyDiagram.summary", "TopologyDiagram.support_nodes", "TopologyDiagram.to_data", "TopologyDiagram.to_json", "TopologyDiagram.to_jsonstring", "TopologyDiagram.to_lines", "TopologyDiagram.to_networkx", "TopologyDiagram.to_nodes_and_edges", "TopologyDiagram.to_obj", "TopologyDiagram.to_points", "TopologyDiagram.trail", "TopologyDiagram.trail_edges", "TopologyDiagram.trail_sequences", "TopologyDiagram.trails", "TopologyDiagram.trails_sequences", "TopologyDiagram.transform", "TopologyDiagram.transformed", "TopologyDiagram.unset_edge_attribute", "TopologyDiagram.unset_node_attribute", "TopologyDiagram.update_dea", "TopologyDiagram.update_default_edge_attributes", "TopologyDiagram.update_default_node_attributes", "TopologyDiagram.update_dna", "TopologyDiagram.update_node_xyz", "TopologyDiagram.uv_index", "TopologyDiagram.validate_data", "TopologyDiagram.validate_json", "DeviationEdge", "DeviationEdge.ToString", "DeviationEdge.copy", "DeviationEdge.from_data", "DeviationEdge.from_json", "DeviationEdge.from_jsonstring", "DeviationEdge.from_line", "DeviationEdge.sha256", "DeviationEdge.to_data", "DeviationEdge.to_json", "DeviationEdge.to_jsonstring", "DeviationEdge.validate_data", "DeviationEdge.validate_json", "Node", "Node.ToString", "Node.copy", "Node.from_data", "Node.from_json", "Node.from_jsonstring", "Node.from_point", "Node.sha256", "Node.to_data", "Node.to_json", "Node.to_jsonstring", "Node.validate_data", "Node.validate_json", "TrailEdge", "TrailEdge.ToString", "TrailEdge.copy", "TrailEdge.from_data", "TrailEdge.from_json", "TrailEdge.from_jsonstring", "TrailEdge.from_line", "TrailEdge.sha256", "TrailEdge.to_data", "TrailEdge.to_json", "TrailEdge.to_jsonstring", "TrailEdge.validate_data", "TrailEdge.validate_json", "static_equilibrium", "static_equilibrium_numpy", "NodeLoad", "NodeLoad.ToString", "NodeLoad.copy", "NodeLoad.from_data", "NodeLoad.from_json", "NodeLoad.from_jsonstring", "NodeLoad.from_point_and_vector", "NodeLoad.sha256", "NodeLoad.to_data", "NodeLoad.to_json", "NodeLoad.to_jsonstring", "NodeLoad.validate_data", "NodeLoad.validate_json", "DeviationEdgeLengthConstraint", "DeviationEdgeLengthConstraint.ToString", "DeviationEdgeLengthConstraint.copy", "DeviationEdgeLengthConstraint.from_data", "DeviationEdgeLengthConstraint.from_json", "DeviationEdgeLengthConstraint.from_jsonstring", "DeviationEdgeLengthConstraint.key", "DeviationEdgeLengthConstraint.penalty", "DeviationEdgeLengthConstraint.reference", "DeviationEdgeLengthConstraint.sha256", "DeviationEdgeLengthConstraint.target", "DeviationEdgeLengthConstraint.to_data", "DeviationEdgeLengthConstraint.to_json", "DeviationEdgeLengthConstraint.to_jsonstring", "DeviationEdgeLengthConstraint.validate_data", "DeviationEdgeLengthConstraint.validate_json", "DeviationEdgeParameter", "DeviationEdgeParameter.ToString", "DeviationEdgeParameter.attr_name", "DeviationEdgeParameter.bound_low", "DeviationEdgeParameter.bound_up", "DeviationEdgeParameter.copy", "DeviationEdgeParameter.from_data", "DeviationEdgeParameter.from_json", "DeviationEdgeParameter.from_jsonstring", "DeviationEdgeParameter.key", "DeviationEdgeParameter.sha256", "DeviationEdgeParameter.start_value", "DeviationEdgeParameter.to_data", "DeviationEdgeParameter.to_json", "DeviationEdgeParameter.to_jsonstring", "DeviationEdgeParameter.validate_data", "DeviationEdgeParameter.validate_json", "LineConstraint", "LineConstraint.ToString", "LineConstraint.copy", "LineConstraint.from_data", "LineConstraint.from_json", "LineConstraint.from_jsonstring", "LineConstraint.key", "LineConstraint.penalty", "LineConstraint.reference", "LineConstraint.sha256", "LineConstraint.target", "LineConstraint.to_data", "LineConstraint.to_json", "LineConstraint.to_jsonstring", "LineConstraint.validate_data", "LineConstraint.validate_json", "NodeLoadXParameter", "NodeLoadXParameter.ToString", "NodeLoadXParameter.attr_name", "NodeLoadXParameter.bound_low", "NodeLoadXParameter.bound_up", "NodeLoadXParameter.copy", "NodeLoadXParameter.from_data", "NodeLoadXParameter.from_json", "NodeLoadXParameter.from_jsonstring", "NodeLoadXParameter.key", "NodeLoadXParameter.sha256", "NodeLoadXParameter.start_value", "NodeLoadXParameter.to_data", "NodeLoadXParameter.to_json", "NodeLoadXParameter.to_jsonstring", "NodeLoadXParameter.validate_data", "NodeLoadXParameter.validate_json", "NodeLoadYParameter", "NodeLoadYParameter.ToString", "NodeLoadYParameter.attr_name", "NodeLoadYParameter.bound_low", "NodeLoadYParameter.bound_up", "NodeLoadYParameter.copy", "NodeLoadYParameter.from_data", "NodeLoadYParameter.from_json", "NodeLoadYParameter.from_jsonstring", "NodeLoadYParameter.key", "NodeLoadYParameter.sha256", "NodeLoadYParameter.start_value", "NodeLoadYParameter.to_data", "NodeLoadYParameter.to_json", "NodeLoadYParameter.to_jsonstring", "NodeLoadYParameter.validate_data", "NodeLoadYParameter.validate_json", "NodeLoadZParameter", "NodeLoadZParameter.ToString", "NodeLoadZParameter.attr_name", "NodeLoadZParameter.bound_low", "NodeLoadZParameter.bound_up", "NodeLoadZParameter.copy", "NodeLoadZParameter.from_data", "NodeLoadZParameter.from_json", "NodeLoadZParameter.from_jsonstring", "NodeLoadZParameter.key", "NodeLoadZParameter.sha256", "NodeLoadZParameter.start_value", "NodeLoadZParameter.to_data", "NodeLoadZParameter.to_json", "NodeLoadZParameter.to_jsonstring", "NodeLoadZParameter.validate_data", "NodeLoadZParameter.validate_json", "Optimizer", "Optimizer.ToString", "Optimizer.add_constraint", "Optimizer.add_parameter", "Optimizer.check_optimization_sanity", "Optimizer.copy", "Optimizer.from_data", "Optimizer.from_json", "Optimizer.from_jsonstring", "Optimizer.gradient_func", "Optimizer.number_of_constraints", "Optimizer.number_of_parameters", "Optimizer.objective_func", "Optimizer.optimization_bounds", "Optimizer.optimization_parameters", "Optimizer.remove_constraint", "Optimizer.remove_parameter", "Optimizer.sha256", "Optimizer.solve", "Optimizer.to_data", "Optimizer.to_json", "Optimizer.to_jsonstring", "Optimizer.validate_data", "Optimizer.validate_json", "OriginNodeXParameter", "OriginNodeXParameter.ToString", "OriginNodeXParameter.attr_name", "OriginNodeXParameter.bound_low", "OriginNodeXParameter.bound_up", "OriginNodeXParameter.copy", "OriginNodeXParameter.from_data", "OriginNodeXParameter.from_json", "OriginNodeXParameter.from_jsonstring", "OriginNodeXParameter.key", "OriginNodeXParameter.sha256", "OriginNodeXParameter.start_value", "OriginNodeXParameter.to_data", "OriginNodeXParameter.to_json", "OriginNodeXParameter.to_jsonstring", "OriginNodeXParameter.validate_data", "OriginNodeXParameter.validate_json", "OriginNodeYParameter", "OriginNodeYParameter.ToString", "OriginNodeYParameter.attr_name", "OriginNodeYParameter.bound_low", "OriginNodeYParameter.bound_up", "OriginNodeYParameter.copy", "OriginNodeYParameter.from_data", "OriginNodeYParameter.from_json", "OriginNodeYParameter.from_jsonstring", "OriginNodeYParameter.key", "OriginNodeYParameter.sha256", "OriginNodeYParameter.start_value", "OriginNodeYParameter.to_data", "OriginNodeYParameter.to_json", "OriginNodeYParameter.to_jsonstring", "OriginNodeYParameter.validate_data", "OriginNodeYParameter.validate_json", "OriginNodeZParameter", "OriginNodeZParameter.ToString", "OriginNodeZParameter.attr_name", "OriginNodeZParameter.bound_low", "OriginNodeZParameter.bound_up", "OriginNodeZParameter.copy", "OriginNodeZParameter.from_data", "OriginNodeZParameter.from_json", "OriginNodeZParameter.from_jsonstring", "OriginNodeZParameter.key", "OriginNodeZParameter.sha256", "OriginNodeZParameter.start_value", "OriginNodeZParameter.to_data", "OriginNodeZParameter.to_json", "OriginNodeZParameter.to_jsonstring", "OriginNodeZParameter.validate_data", "OriginNodeZParameter.validate_json", "PlaneConstraint", "PlaneConstraint.ToString", "PlaneConstraint.copy", "PlaneConstraint.from_data", "PlaneConstraint.from_json", "PlaneConstraint.from_jsonstring", "PlaneConstraint.key", "PlaneConstraint.penalty", "PlaneConstraint.reference", "PlaneConstraint.sha256", "PlaneConstraint.target", "PlaneConstraint.to_data", "PlaneConstraint.to_json", "PlaneConstraint.to_jsonstring", "PlaneConstraint.validate_data", "PlaneConstraint.validate_json", "PointConstraint", "PointConstraint.ToString", "PointConstraint.copy", "PointConstraint.from_data", "PointConstraint.from_json", "PointConstraint.from_jsonstring", "PointConstraint.key", "PointConstraint.penalty", "PointConstraint.reference", "PointConstraint.sha256", "PointConstraint.target", "PointConstraint.to_data", "PointConstraint.to_json", "PointConstraint.to_jsonstring", "PointConstraint.validate_data", "PointConstraint.validate_json", "ReactionForceConstraint", "ReactionForceConstraint.ToString", "ReactionForceConstraint.copy", "ReactionForceConstraint.from_data", "ReactionForceConstraint.from_json", "ReactionForceConstraint.from_jsonstring", "ReactionForceConstraint.key", "ReactionForceConstraint.penalty", "ReactionForceConstraint.reference", "ReactionForceConstraint.sha256", "ReactionForceConstraint.target", "ReactionForceConstraint.to_data", "ReactionForceConstraint.to_json", "ReactionForceConstraint.to_jsonstring", "ReactionForceConstraint.validate_data", "ReactionForceConstraint.validate_json", "TrailEdgeForceConstraint", "TrailEdgeForceConstraint.ToString", "TrailEdgeForceConstraint.copy", "TrailEdgeForceConstraint.from_data", "TrailEdgeForceConstraint.from_json", "TrailEdgeForceConstraint.from_jsonstring", "TrailEdgeForceConstraint.key", "TrailEdgeForceConstraint.penalty", "TrailEdgeForceConstraint.reference", "TrailEdgeForceConstraint.sha256", "TrailEdgeForceConstraint.target", "TrailEdgeForceConstraint.to_data", "TrailEdgeForceConstraint.to_json", "TrailEdgeForceConstraint.to_jsonstring", "TrailEdgeForceConstraint.validate_data", "TrailEdgeForceConstraint.validate_json", "TrailEdgeParameter", "TrailEdgeParameter.ToString", "TrailEdgeParameter.attr_name", "TrailEdgeParameter.bound_low", "TrailEdgeParameter.bound_up", "TrailEdgeParameter.copy", "TrailEdgeParameter.from_data", "TrailEdgeParameter.from_json", "TrailEdgeParameter.from_jsonstring", "TrailEdgeParameter.key", "TrailEdgeParameter.sha256", "TrailEdgeParameter.start_value", "TrailEdgeParameter.to_data", "TrailEdgeParameter.to_json", "TrailEdgeParameter.to_jsonstring", "TrailEdgeParameter.validate_data", "TrailEdgeParameter.validate_json", "solve_proxy", "FormArtist", "FormArtist.build", "FormArtist.build_as", "FormArtist.clear", "FormArtist.clear_edges", "FormArtist.clear_nodes", "FormArtist.draw", "FormArtist.draw_collection", "FormArtist.draw_edgelabels", "FormArtist.draw_edges", "FormArtist.draw_loads", "FormArtist.draw_nodelabels", "FormArtist.draw_nodes", "FormArtist.draw_reactions", "FormArtist.redraw", "FormArtist.register", "FormArtist.update_data", "FormArtist.viewbox", "Plotter", "Plotter.add", "Plotter.add_from_list", "Plotter.draw", "Plotter.find", "Plotter.on", "Plotter.pause", "Plotter.redraw", "Plotter.register_listener", "Plotter.save", "Plotter.show", "Plotter.zoom_extents", "TopologyArtist", "TopologyArtist.build", "TopologyArtist.build_as", "TopologyArtist.clear", "TopologyArtist.clear_edges", "TopologyArtist.clear_nodes", "TopologyArtist.draw", "TopologyArtist.draw_collection", "TopologyArtist.draw_edgelabels", "TopologyArtist.draw_edges", "TopologyArtist.draw_loads", "TopologyArtist.draw_nodelabels", "TopologyArtist.draw_nodes", "TopologyArtist.redraw", "TopologyArtist.register", "TopologyArtist.update_data", "TopologyArtist.viewbox", "NodeSupport", "NodeSupport.ToString", "NodeSupport.copy", "NodeSupport.from_data", "NodeSupport.from_json", "NodeSupport.from_jsonstring", "NodeSupport.from_point", "NodeSupport.sha256", "NodeSupport.to_data", "NodeSupport.to_json", "NodeSupport.to_jsonstring", "NodeSupport.validate_data", "NodeSupport.validate_json", "Changelog", "Citing", "Examples", "COMPAS CEM", "Installation", "License"], "terms": {"01": [0, 688, 689], "simpl": [0, 688, 689, 690], "compress": [0, 5, 198, 687, 688, 689], "structur": [0, 30, 57, 78, 90, 98, 103, 126, 166, 196, 220, 237, 245, 250, 285, 645, 646, 648, 687, 688, 689, 690], "02": [0, 688, 689], "brace": [0, 688, 689], "tower": [0, 688, 689], "2d": [0, 6, 643, 672, 686, 688, 689], "03": [0, 688, 689], "bridg": [0, 6, 686, 688, 689], "optim": [0, 4, 5, 12, 13, 369, 385, 388, 389, 396, 402, 418, 421, 422, 429, 435, 438, 439, 446, 452, 455, 456, 463, 493, 496, 497, 504, 510, 513, 514, 521, 527, 530, 531, 538, 544, 560, 576, 592, 608, 611, 612, 619, 625, 686, 688, 689], "04": [0, 688, 689], "tree": [0, 688, 689], "05": [0, 688, 689], "planar": [0, 57, 85, 101, 196, 231, 248, 688, 689, 690], "tensegr": [0, 6, 686, 688, 689], "wheel": [0, 688, 689], "from": [1, 2, 3, 4, 5, 26, 28, 30, 35, 37, 38, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 78, 90, 97, 98, 99, 103, 110, 125, 126, 135, 157, 160, 162, 166, 171, 173, 174, 188, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 220, 237, 244, 245, 246, 250, 257, 283, 285, 294, 318, 319, 320, 321, 322, 331, 332, 333, 334, 335, 344, 345, 346, 347, 348, 354, 355, 359, 360, 361, 362, 363, 372, 373, 374, 378, 391, 392, 393, 395, 405, 406, 407, 411, 424, 425, 426, 428, 441, 442, 443, 445, 458, 459, 460, 462, 475, 476, 477, 478, 484, 486, 499, 500, 501, 503, 516, 517, 518, 520, 533, 534, 535, 537, 547, 548, 549, 553, 563, 564, 565, 569, 579, 580, 581, 585, 595, 596, 597, 601, 614, 615, 616, 618, 630, 631, 646, 660, 661, 676, 677, 678, 679, 680, 686, 690, 691], "compa": [1, 2, 3, 4, 5, 28, 78, 125, 162, 220, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 645, 646, 680, 686, 687, 688], "geometri": [1, 2, 3, 4, 5, 57, 196, 645, 646, 648], "import": [1, 2, 3, 4, 5, 28, 78, 125, 162, 220, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680, 686, 690], "translat": [1, 2, 3, 4, 5], "compas_cem": [1, 2, 3, 4, 5, 12, 22, 151, 315, 328, 341, 354, 355, 356, 369, 385, 402, 418, 435, 452, 469, 487, 493, 510, 527, 544, 560, 576, 592, 608, 625, 626, 644, 656, 673, 686, 687, 689, 690], "diagram": [1, 2, 3, 4, 5, 12, 13, 22, 57, 67, 121, 123, 151, 159, 160, 175, 176, 196, 198, 215, 218, 268, 269, 270, 272, 273, 275, 276, 277, 278, 281, 282, 299, 300, 301, 354, 355, 375, 387, 394, 408, 420, 427, 437, 444, 454, 461, 469, 487, 495, 502, 512, 519, 529, 536, 550, 566, 582, 598, 610, 617, 625, 626, 632, 635, 636, 638, 639, 656, 662, 665, 668, 679, 686, 689], "topologydiagram": [1, 2, 3, 4, 5, 354, 355, 487, 625, 656, 686], "element": [1, 2, 4, 5, 12, 13, 24, 153, 315, 328, 341, 686, 689], "node": [1, 2, 3, 4, 5, 25, 26, 29, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 49, 54, 59, 64, 66, 70, 71, 73, 74, 75, 76, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 130, 136, 142, 145, 146, 155, 156, 157, 159, 160, 163, 164, 165, 169, 170, 171, 172, 173, 174, 177, 179, 180, 182, 184, 185, 187, 188, 193, 199, 204, 206, 209, 210, 212, 213, 214, 216, 224, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 273, 274, 276, 279, 280, 282, 284, 285, 286, 287, 289, 295, 298, 300, 301, 302, 306, 309, 310, 354, 355, 356, 375, 402, 408, 418, 429, 435, 446, 452, 463, 493, 504, 510, 521, 527, 538, 544, 550, 560, 566, 576, 582, 598, 629, 631, 632, 636, 637, 638, 659, 661, 662, 666, 667, 668, 673, 679, 686], "trailedg": [1, 2, 4], "deviationedg": [1, 2, 4, 5], "load": [1, 2, 3, 4, 12, 13, 57, 83, 92, 111, 121, 154, 196, 228, 239, 258, 273, 356, 362, 418, 435, 452, 632, 636, 662, 666, 686, 689], "nodeload": [1, 2, 3, 4, 686], "support": [1, 2, 3, 4, 12, 13, 80, 83, 84, 123, 130, 156, 160, 198, 224, 228, 230, 276, 289, 298, 487, 576, 625, 639, 673, 679, 686, 689], "nodesupport": [1, 2, 3, 4, 156, 686], "equilibrium": [1, 2, 3, 4, 5, 12, 13, 354, 355, 686, 687, 689], "static_equilibrium": [1, 2, 3, 4, 5, 686], "plotter": [1, 2, 3, 4, 5, 12, 13, 626, 641, 656, 670, 686, 689], "instanti": [1, 4, 388, 389, 421, 422, 438, 439, 455, 456, 496, 497, 513, 514, 530, 531, 611, 612], "topologi": [1, 2, 3, 4, 5, 67, 121, 123, 151, 159, 160, 198, 215, 268, 269, 270, 272, 273, 275, 276, 277, 278, 281, 282, 301, 354, 355, 388, 389, 396, 421, 422, 429, 438, 439, 446, 455, 456, 463, 478, 481, 482, 483, 487, 496, 497, 504, 513, 514, 521, 530, 531, 538, 611, 612, 619, 625, 656, 662, 665, 668, 686], "add": [1, 2, 3, 4, 5, 24, 25, 153, 155, 156, 471, 472, 646], "add_nod": [1, 2, 4, 5], "0": [1, 2, 3, 4, 5, 47, 125, 127, 128, 185, 198, 283, 286, 287, 322, 328, 335, 348, 356, 363, 369, 378, 395, 402, 411, 428, 445, 462, 486, 503, 520, 537, 544, 553, 560, 569, 576, 585, 592, 601, 618, 653, 680, 690], "1": [1, 2, 3, 4, 5, 28, 47, 48, 68, 69, 70, 71, 90, 93, 103, 110, 113, 125, 128, 162, 185, 186, 198, 207, 208, 209, 210, 237, 240, 250, 257, 260, 283, 284, 287, 322, 335, 348, 356, 363, 369, 378, 395, 402, 411, 428, 445, 462, 486, 503, 520, 537, 544, 553, 560, 569, 576, 585, 592, 601, 618, 652, 653, 680], "2": [1, 2, 3, 4, 5, 54, 119, 193, 267, 652, 653], "5": [1, 2, 3, 4, 5, 47, 127, 128, 185, 286, 287], "3": [1, 2, 4, 5, 66, 68, 69, 70, 71, 206, 207, 208, 209, 210, 284, 487], "edg": [1, 2, 3, 4, 5, 24, 28, 29, 32, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 59, 64, 68, 69, 71, 74, 77, 79, 80, 85, 86, 101, 102, 120, 128, 136, 141, 143, 144, 148, 153, 158, 162, 163, 164, 165, 168, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 198, 199, 204, 207, 208, 210, 213, 217, 218, 219, 221, 222, 223, 224, 225, 231, 232, 233, 248, 249, 269, 270, 271, 272, 277, 287, 295, 299, 305, 307, 308, 312, 315, 321, 341, 347, 369, 375, 385, 389, 396, 408, 422, 439, 456, 497, 514, 531, 550, 566, 582, 592, 598, 608, 612, 619, 629, 630, 632, 634, 635, 659, 660, 662, 664, 665, 686], "add_edg": [1, 2, 4, 5], "length": [1, 2, 4, 44, 45, 128, 182, 183, 198, 287, 341, 369, 608, 686, 689], "forc": [1, 2, 4, 5, 43, 57, 83, 92, 124, 181, 196, 198, 228, 239, 280, 315, 385, 576, 592, 636, 639, 686, 689], "add_support": [1, 2, 3, 4], "add_load": [1, 2, 3, 4], "build": [1, 4, 628, 658, 686, 690], "trail": [1, 2, 3, 4, 5, 24, 153, 156, 158, 159, 160, 165, 198, 215, 219, 233, 268, 277, 278, 279, 284, 299, 300, 302, 341, 592, 608, 686], "automat": [1, 160, 487, 686, 687, 689, 690], "build_trail": [1, 2, 3, 4, 5, 686], "comput": [1, 4, 5, 112, 120, 122, 125, 160, 259, 271, 274, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 487, 503, 520, 537, 553, 569, 585, 601, 618, 643, 672, 680, 686], "state": [1, 4, 5, 198, 341], "static": [1, 4, 5, 354, 355, 627, 628, 633, 640, 641, 657, 658, 663, 669, 670, 689], "form": [1, 2, 3, 4, 5, 22, 53, 67, 68, 118, 151, 192, 207, 266, 354, 355, 375, 408, 469, 487, 550, 566, 582, 598, 625, 626, 632, 635, 638, 639, 687, 689, 690], "eta": [1, 2, 4, 5, 354, 355, 478, 481, 487, 625, 686], "1e": [1, 2, 3, 4, 5, 83, 92, 228, 239, 354, 355, 487, 625], "6": [1, 2, 3, 4, 5, 83, 92, 228, 239, 354, 355, 487, 625, 690], "tmax": [1, 2, 4, 5, 354, 355, 478, 481, 487, 625, 686], "100": [1, 2, 3, 4, 5, 127, 286, 354, 355, 487, 625], "verbos": [1, 2, 3, 4, 5, 354, 355, 487], "true": [1, 2, 3, 4, 5, 50, 53, 54, 55, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 100, 101, 102, 103, 115, 118, 119, 125, 132, 133, 158, 175, 176, 189, 192, 193, 194, 210, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 247, 248, 249, 250, 263, 266, 267, 283, 291, 292, 299, 322, 324, 325, 335, 337, 338, 348, 350, 351, 363, 365, 366, 378, 381, 382, 395, 398, 399, 411, 414, 415, 428, 431, 432, 445, 448, 449, 462, 465, 466, 486, 487, 489, 490, 503, 506, 507, 520, 523, 524, 537, 540, 541, 553, 556, 557, 569, 572, 573, 585, 588, 589, 601, 604, 605, 618, 621, 622, 680, 682, 683], "plot": [1, 2, 3, 4, 5, 626, 642, 645, 647, 648, 649, 650, 651, 653, 654, 656, 671], "result": [1, 4, 5, 26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 237, 244, 245, 246, 250], "scene": [1, 2, 3, 4, 5], "nodes": [1, 2, 3, 4, 5], "shift": [1, 4, 5, 284], "transform": [1, 2, 3, 4, 5], "from_vector": [1, 2, 3, 4, 5], "show_edgetext": [1, 4], "edgetext": [1, 4], "show": [1, 2, 3, 4, 5, 690], "content": 1, "zoom_ext": [1, 2, 3, 4, 5], "data": [2, 3, 26, 27, 30, 31, 35, 50, 53, 54, 58, 60, 61, 65, 78, 90, 97, 98, 99, 103, 115, 118, 119, 125, 126, 131, 132, 133, 149, 150, 157, 158, 161, 166, 167, 171, 175, 176, 189, 192, 193, 197, 200, 201, 205, 218, 220, 237, 244, 245, 246, 250, 263, 266, 267, 283, 285, 290, 291, 292, 299, 313, 314, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 356, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 376, 377, 378, 380, 381, 382, 383, 384, 390, 391, 392, 393, 395, 397, 398, 399, 400, 401, 404, 405, 406, 407, 409, 410, 411, 413, 414, 415, 416, 417, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 474, 475, 476, 477, 486, 488, 489, 490, 491, 492, 498, 499, 500, 501, 503, 505, 506, 507, 508, 509, 515, 516, 517, 518, 520, 522, 523, 524, 525, 526, 532, 533, 534, 535, 537, 539, 540, 541, 542, 543, 546, 547, 548, 549, 551, 552, 553, 555, 556, 557, 558, 559, 562, 563, 564, 565, 567, 568, 569, 571, 572, 573, 574, 575, 578, 579, 580, 581, 583, 584, 585, 587, 588, 589, 590, 591, 594, 595, 596, 597, 599, 600, 601, 603, 604, 605, 606, 607, 613, 614, 615, 616, 618, 620, 621, 622, 623, 624, 641, 642, 645, 646, 648, 670, 671, 673, 675, 676, 677, 678, 680, 681, 682, 683, 684, 685, 686, 689], "point": [2, 3, 41, 47, 55, 62, 64, 65, 66, 90, 100, 103, 134, 137, 179, 185, 194, 202, 204, 205, 206, 237, 247, 250, 293, 296, 321, 334, 347, 356, 362, 412, 554, 560, 679], "4": [2, 3, 4, 5], "trail_edg": [2, 3, 165], "deviation_edg": [2, 3, 5, 158, 163, 176, 218], "kei": [2, 4, 24, 29, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 53, 56, 64, 73, 75, 76, 77, 80, 81, 82, 83, 84, 88, 89, 92, 93, 94, 95, 96, 104, 105, 106, 108, 110, 111, 112, 114, 115, 116, 117, 118, 124, 128, 130, 141, 142, 147, 148, 153, 158, 159, 163, 164, 165, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 192, 195, 204, 212, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 235, 236, 239, 240, 241, 242, 243, 251, 252, 253, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 275, 279, 280, 281, 282, 284, 287, 289, 298, 299, 300, 301, 302, 305, 306, 311, 312, 328, 356, 385, 418, 435, 452, 493, 510, 527, 608, 673, 686], "u": [2, 5, 28, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 74, 128, 162, 173, 179, 180, 181, 182, 183, 184, 185, 188, 189, 192, 193, 213, 287, 315, 341], "v": [2, 5, 28, 37, 41, 42, 43, 44, 45, 46, 47, 49, 50, 53, 54, 74, 128, 162, 173, 179, 180, 181, 182, 183, 184, 185, 188, 189, 192, 193, 213, 287, 315, 341, 690], "deviat": [2, 5, 24, 153, 163, 175, 176, 198, 218, 222, 223, 225, 269, 270, 272, 315, 369, 385, 686], "indirect": [2, 218, 225, 686], "set": [2, 39, 40, 48, 51, 52, 53, 54, 62, 69, 71, 104, 105, 113, 114, 116, 117, 118, 119, 141, 142, 177, 178, 186, 190, 191, 192, 193, 202, 208, 210, 251, 252, 260, 262, 264, 265, 266, 267, 305, 306, 385, 388, 389, 418, 421, 422, 435, 438, 439, 452, 455, 456, 493, 496, 497, 510, 513, 514, 527, 530, 531, 608, 611, 612, 686], "loadscal": [2, 3], "reactionscal": [2, 3], "o": 3, "time": [3, 5, 160, 625, 651, 686, 690], "pointconstraint": 3, "trailedgeparamet": 3, "deviationedgeparamet": [3, 4, 5], "here": [3, 690], "path": [3, 60, 65, 78, 126, 132, 137, 200, 205, 220, 285, 291, 296, 319, 324, 332, 337, 345, 350, 360, 365, 373, 381, 392, 398, 406, 414, 425, 431, 442, 448, 459, 465, 476, 489, 500, 506, 517, 523, 534, 540, 548, 556, 564, 572, 580, 588, 596, 604, 615, 621, 653, 677, 682], "dirnam": 3, "__file__": 3, "IN": [3, 691], "abspath": 3, "join": 3, "03_bridge_2d": 3, "json": [3, 60, 61, 132, 133, 150, 200, 201, 291, 292, 314, 319, 320, 324, 325, 327, 332, 333, 337, 338, 340, 345, 346, 350, 351, 353, 360, 361, 365, 366, 368, 373, 374, 381, 382, 384, 392, 393, 398, 399, 401, 406, 407, 414, 415, 417, 425, 426, 431, 432, 434, 442, 443, 448, 449, 451, 459, 460, 465, 466, 468, 476, 477, 489, 490, 492, 500, 501, 506, 507, 509, 517, 518, 523, 524, 526, 534, 535, 540, 541, 543, 548, 549, 556, 557, 559, 564, 565, 572, 573, 575, 580, 581, 588, 589, 591, 596, 597, 604, 605, 607, 615, 616, 621, 622, 624, 677, 678, 682, 683, 685, 686], "from_json": 3, "appli": [3, 57, 83, 92, 111, 121, 154, 196, 228, 239, 258, 273, 356, 362, 673, 686], "gener": [3, 4, 5, 28, 160, 162, 198, 354, 355, 689], "find": [3, 57, 126, 163, 165, 196, 285, 487, 625, 687, 689, 690], "initi": [3, 396, 429, 446, 463, 504, 521, 538, 619], "opt": [3, 5], "defin": [3, 127, 134, 286, 293, 341, 356, 679], "constraint": [3, 4, 5, 469, 471, 479, 482, 483, 484, 625, 686, 689], "nodes_opt": 3, "target_point": 3, "20": 3, "67": 3, "42": 3, "7": [3, 690], "15": 3, "28": 3, "84": 3, "zip": 3, "add_constraint": [3, 4, 5], "paramet": [3, 4, 5, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 212, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 280, 282, 283, 284, 285, 286, 287, 291, 292, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 317, 318, 319, 320, 321, 322, 324, 325, 330, 331, 332, 333, 334, 335, 337, 338, 343, 344, 345, 346, 347, 348, 350, 351, 354, 355, 356, 358, 359, 360, 361, 362, 363, 365, 366, 371, 372, 373, 374, 378, 381, 382, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 404, 405, 406, 407, 411, 414, 415, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 435, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 452, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 472, 474, 475, 476, 477, 480, 485, 486, 487, 489, 490, 493, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 527, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 546, 547, 548, 549, 553, 556, 557, 562, 563, 564, 565, 569, 572, 573, 578, 579, 580, 581, 585, 588, 589, 594, 595, 596, 597, 601, 604, 605, 608, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 625, 626, 627, 628, 634, 637, 641, 645, 650, 651, 652, 653, 655, 656, 657, 658, 664, 667, 670, 673, 675, 676, 677, 678, 679, 680, 682, 683, 686], "add_paramet": [3, 4, 5], "bound_low": [3, 385, 418, 435, 452, 493, 510, 527, 608], "bound_up": [3, 385, 418, 435, 452, 493, 510, 527, 608], "10": [3, 4, 5, 687], "form_opt": [3, 4, 5], "solv": [3, 4, 5, 57, 196, 625, 686, 689, 690], "algorithm": [3, 5, 32, 56, 57, 79, 125, 168, 195, 196, 221, 283, 322, 335, 348, 354, 355, 363, 378, 395, 411, 428, 445, 462, 486, 487, 503, 520, 537, 553, 569, 585, 601, 618, 625, 680, 686], "slsqp": [3, 4, 487, 625], "iter": [3, 4, 50, 92, 115, 127, 158, 159, 175, 176, 189, 218, 239, 263, 282, 286, 299, 301, 354, 355, 487, 625, 686], "ep": [3, 4, 487, 625], "figsiz": [3, 4, 5], "16": [3, 4, 5, 690], "9": [3, 4, 5], "t": [3, 4, 5, 47, 128, 156, 185, 287, 690], "40": 3, "target": [3, 369, 376, 402, 409, 544, 551, 560, 567, 568, 576, 583, 592, 599, 686, 689], "x": [3, 5, 418, 493, 686], "y": [3, 5, 435, 510, 686], "z": [3, 87, 125, 234, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 452, 462, 486, 503, 520, 527, 537, 553, 569, 585, 601, 618, 680, 686], "size": [3, 48, 93, 113, 186, 240, 260, 487, 686], "facecolor": 3, "90": 3, "math": [4, 5], "sqrt": 4, "trailedgeforceconstraint": [4, 5], "width": [4, 686], "height": 4, "auto": [4, 5], "auxiliari": [4, 5, 158, 159, 160, 219, 268, 301, 686], "auxiliary_trail": [4, 5, 160, 686], "minim": [4, 481], "axiliari": [4, 5], "goal": [4, 471], "auxiliary_trail_edg": [4, 5, 686], "n": [4, 5, 69, 71, 113, 208, 210, 260, 690], "show_nodetext": 4, "nodetext": 4, "pad": [4, 5, 655], "pi": 5, "co": 5, "sin": 5, "numpi": [5, 355, 690], "np": 5, "util": 5, "pairwis": 5, "creat": [5, 26, 30, 35, 59, 63, 97, 98, 99, 135, 157, 166, 171, 199, 203, 244, 245, 246, 294, 300, 302, 321, 334, 347, 362, 482, 483, 627, 657, 679, 686], "diamet": 5, "num_sid": 5, "onli": [5, 55, 71, 81, 100, 194, 210, 226, 247, 482, 483, 487, 625, 644, 679, 686, 689, 690], "even": 5, "number": [5, 32, 33, 34, 36, 66, 69, 71, 120, 121, 122, 123, 127, 168, 169, 170, 172, 206, 208, 210, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 286, 354, 355, 479, 480, 487, 625], "appendix_length": 5, "tension_forc": 5, "compression_forc": 5, "bound": [5, 388, 389, 421, 422, 438, 439, 455, 456, 482, 496, 497, 513, 514, 530, 531, 611, 612, 643, 655, 672], "grad_method": 5, "ad": [5, 479, 487, 686], "test": [5, 219, 222, 223, 225, 230, 233], "subdivis": 5, "i": [5, 28, 39, 40, 47, 50, 51, 52, 53, 54, 55, 57, 62, 65, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 90, 100, 101, 102, 103, 104, 105, 115, 116, 117, 118, 119, 121, 127, 128, 139, 140, 148, 159, 160, 162, 163, 165, 177, 178, 185, 189, 190, 191, 192, 193, 194, 196, 202, 205, 213, 214, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 247, 248, 249, 250, 251, 252, 261, 263, 264, 265, 266, 267, 273, 282, 284, 286, 287, 298, 301, 303, 304, 312, 341, 354, 355, 388, 389, 421, 422, 438, 439, 455, 456, 473, 487, 496, 497, 513, 514, 530, 531, 611, 612, 625, 627, 657, 686, 689, 690, 691], "assert": 5, "remov": [5, 484, 485, 686], "last": [5, 160, 281, 298, 354, 690], "theta": 5, "linspac": 5, "radiu": 5, "enumer": 5, "perimet": 5, "tension": [5, 198, 687, 689], "list": [5, 22, 26, 29, 30, 35, 40, 41, 42, 46, 47, 48, 49, 51, 52, 56, 57, 59, 62, 64, 69, 71, 76, 77, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 103, 105, 106, 110, 111, 112, 113, 116, 117, 124, 126, 127, 134, 136, 138, 148, 151, 157, 159, 163, 164, 165, 166, 171, 178, 179, 180, 184, 185, 186, 188, 190, 191, 195, 196, 198, 199, 202, 204, 208, 210, 216, 217, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 250, 252, 253, 257, 258, 259, 260, 264, 265, 280, 285, 286, 293, 295, 297, 298, 301, 312, 321, 334, 347, 356, 362, 625, 627, 628, 646, 657, 658, 679, 686], "rang": [5, 47, 53, 118, 128, 185, 192, 266, 287, 686], "intern": [5, 198, 354, 355, 689], "ar": [5, 23, 57, 128, 152, 160, 196, 287, 298, 300, 302, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 487, 494, 511, 528, 545, 561, 577, 593, 609, 625, 674, 686, 688, 689, 690], "half_num_sid": 5, "int": [5, 32, 33, 34, 36, 48, 66, 69, 71, 76, 77, 83, 84, 89, 92, 93, 111, 113, 120, 121, 122, 123, 124, 127, 130, 142, 148, 159, 163, 165, 168, 169, 170, 172, 186, 198, 206, 208, 210, 216, 217, 228, 229, 230, 236, 239, 240, 258, 260, 261, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 289, 298, 300, 301, 302, 306, 312, 354, 355, 356, 375, 408, 487, 550, 566, 582, 598, 625, 634, 637, 649, 655, 664, 667, 673], "auxiliary_trail_length": [5, 686], "should": [5, 41, 53, 54, 57, 118, 119, 158, 175, 176, 179, 192, 193, 196, 218, 266, 267, 299, 641, 670], "zero": [5, 87, 234], "all": [5, 27, 40, 52, 56, 87, 91, 92, 105, 158, 159, 161, 175, 176, 178, 191, 195, 198, 218, 234, 238, 239, 252, 279, 282, 284, 299, 301, 302, 354, 647, 653, 655, 686, 690, 691], "allow": [5, 690], "chang": [5, 90, 103, 237, 250, 686], "lbfg": [5, 487, 625], "grad": [5, 487], "45": 5, "A": [6, 22, 28, 32, 40, 51, 52, 53, 55, 56, 62, 64, 65, 66, 73, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 100, 101, 102, 105, 108, 111, 116, 117, 118, 124, 126, 127, 134, 135, 136, 137, 138, 140, 143, 144, 145, 146, 148, 151, 154, 156, 160, 162, 163, 165, 168, 178, 190, 191, 192, 194, 195, 198, 202, 204, 205, 206, 212, 216, 217, 220, 221, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 240, 241, 242, 243, 247, 248, 249, 252, 255, 258, 264, 265, 266, 280, 285, 286, 293, 294, 295, 296, 297, 300, 301, 302, 304, 307, 308, 309, 310, 312, 315, 328, 334, 341, 354, 355, 356, 362, 487, 625, 637, 644, 645, 667, 673, 679, 686, 688, 689, 691], "b": [6, 688, 689], "tubular": [6, 688, 689], "3d": [6, 686, 688, 689], "c": [6, 90, 103, 237, 250, 688, 689, 690, 691], "circular": [6, 688, 689], "dome": [6, 686, 688, 689], "d": [6, 90, 103, 237, 250, 687, 688, 689], "jessen": [6, 688, 689], "e": [6, 148, 312, 341, 688, 689], "spiral": [6, 686, 688, 689], "staircas": [6, 686, 688, 689], "download": [7, 8, 9, 10, 11, 690], "rhino": [7, 23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 641, 670, 674, 686, 689, 690], "file": [7, 8, 9, 10, 11, 60, 61, 65, 132, 137, 200, 201, 205, 291, 296, 319, 320, 324, 332, 333, 337, 345, 346, 350, 360, 361, 365, 373, 374, 381, 392, 393, 398, 406, 407, 414, 425, 426, 431, 442, 443, 448, 459, 460, 465, 476, 477, 489, 500, 501, 506, 517, 518, 523, 534, 535, 540, 548, 549, 556, 564, 565, 572, 580, 581, 588, 596, 597, 604, 615, 616, 621, 653, 677, 678, 682, 686, 691], "grasshopp": [7, 8, 9, 10, 11, 23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 641, 670, 674, 686, 688, 689], "viewer": [12, 13, 644, 686, 689], "class": [22, 23, 151, 152, 315, 316, 328, 329, 341, 342, 356, 357, 369, 370, 385, 386, 402, 403, 418, 419, 435, 436, 452, 453, 469, 470, 493, 494, 510, 511, 527, 528, 544, 545, 560, 561, 576, 577, 592, 593, 608, 609, 626, 644, 656, 673, 674, 686], "arg": [22, 151, 334, 379, 570, 586, 602, 644], "kwarg": [22, 53, 118, 151, 192, 266, 315, 321, 328, 334, 341, 347, 356, 379, 469, 570, 586, 602, 626, 627, 628, 644, 645, 646, 653, 656, 657, 658, 673], "sourc": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 322, 323, 324, 325, 326, 327, 328, 329, 330, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 363, 364, 365, 366, 367, 368, 369, 370, 371, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 680, 681, 682, 683, 684, 685, 689], "base": [22, 67, 151, 315, 328, 341, 356, 369, 385, 402, 418, 435, 452, 469, 487, 493, 510, 527, 544, 560, 576, 592, 608, 625, 626, 644, 656, 673, 686], "The": [22, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 65, 66, 68, 69, 70, 71, 73, 74, 75, 81, 82, 83, 88, 92, 93, 94, 95, 96, 104, 105, 106, 108, 110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 139, 140, 141, 142, 149, 150, 151, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 213, 214, 218, 219, 222, 223, 225, 226, 227, 228, 233, 235, 239, 240, 241, 242, 243, 251, 252, 253, 255, 257, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 298, 299, 300, 301, 303, 304, 305, 306, 313, 314, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 379, 380, 381, 382, 383, 384, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 474, 475, 476, 477, 478, 479, 480, 481, 487, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 543, 546, 547, 548, 549, 550, 551, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 578, 579, 580, 581, 582, 583, 586, 587, 588, 589, 590, 591, 594, 595, 596, 597, 598, 599, 602, 603, 604, 605, 606, 607, 610, 611, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 641, 650, 652, 656, 657, 658, 670, 673, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 689, 690, 691], "heart": [22, 151], "life": [22, 151], "argument": [22, 53, 127, 143, 144, 145, 146, 151, 192, 286, 307, 308, 309, 310, 321, 334, 347, 627, 628, 657, 658, 686], "dict": [22, 40, 50, 52, 53, 54, 58, 64, 73, 76, 77, 88, 89, 105, 108, 115, 117, 118, 119, 131, 133, 141, 142, 143, 144, 145, 146, 148, 149, 151, 158, 175, 176, 178, 189, 191, 192, 193, 197, 204, 212, 216, 217, 218, 235, 236, 252, 255, 263, 265, 266, 267, 290, 292, 299, 300, 302, 305, 306, 307, 308, 309, 310, 312, 313, 318, 321, 323, 325, 326, 331, 334, 336, 338, 339, 344, 347, 349, 351, 352, 359, 364, 366, 367, 372, 380, 382, 383, 391, 397, 399, 400, 405, 413, 415, 416, 424, 430, 432, 433, 441, 447, 449, 450, 458, 464, 466, 467, 475, 488, 490, 491, 499, 505, 507, 508, 516, 522, 524, 525, 533, 539, 541, 542, 547, 555, 557, 558, 563, 571, 573, 574, 579, 587, 589, 590, 595, 603, 605, 606, 614, 620, 622, 623, 627, 628, 634, 637, 657, 658, 664, 667, 676, 681, 683, 684], "keyword": [22, 151, 321, 334, 347, 627, 628, 657, 658], "return": [22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 153, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 388, 389, 390, 391, 392, 393, 395, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 411, 413, 414, 415, 416, 417, 421, 422, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 438, 439, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 474, 475, 476, 477, 486, 487, 488, 489, 490, 491, 492, 496, 497, 498, 499, 500, 501, 503, 505, 506, 507, 508, 509, 513, 514, 515, 516, 517, 518, 520, 522, 523, 524, 525, 526, 530, 531, 532, 533, 534, 535, 537, 539, 540, 541, 542, 543, 546, 547, 548, 549, 550, 551, 553, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 567, 569, 571, 572, 573, 574, 575, 578, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 594, 595, 596, 597, 598, 599, 601, 603, 604, 605, 606, 607, 611, 612, 613, 614, 615, 616, 618, 620, 621, 622, 623, 624, 625, 627, 628, 629, 630, 631, 634, 637, 640, 641, 642, 643, 645, 652, 657, 658, 659, 660, 661, 664, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686], "method": [22, 23, 151, 152, 315, 316, 328, 329, 341, 342, 356, 357, 369, 370, 385, 386, 402, 403, 418, 419, 435, 436, 452, 453, 469, 470, 487, 493, 494, 510, 511, 527, 528, 544, 545, 560, 561, 576, 577, 592, 593, 608, 609, 625, 626, 633, 644, 649, 656, 663, 673, 674, 686], "inherit": [22, 151, 198, 315, 328, 341, 356, 369, 385, 402, 418, 435, 452, 469, 493, 510, 527, 544, 560, 576, 592, 608, 626, 644, 656, 673], "convert": [23, 131, 152, 290, 316, 323, 329, 336, 342, 349, 357, 364, 370, 380, 386, 397, 403, 413, 419, 430, 436, 447, 453, 464, 470, 488, 494, 505, 511, 522, 528, 539, 545, 555, 561, 571, 577, 587, 593, 603, 609, 620, 674, 681, 686], "instanc": [23, 58, 59, 60, 61, 63, 135, 152, 197, 199, 200, 201, 203, 294, 316, 318, 319, 320, 329, 331, 332, 333, 342, 344, 345, 346, 357, 359, 360, 361, 370, 372, 373, 374, 386, 391, 392, 393, 403, 405, 406, 407, 419, 424, 425, 426, 436, 441, 442, 443, 453, 458, 459, 460, 470, 475, 476, 477, 494, 499, 500, 501, 511, 516, 517, 518, 528, 533, 534, 535, 545, 547, 548, 549, 561, 563, 564, 565, 577, 579, 580, 581, 593, 595, 596, 597, 609, 614, 615, 616, 674, 676, 677, 678], "string": [23, 60, 61, 65, 73, 88, 108, 132, 133, 137, 152, 200, 201, 205, 212, 235, 255, 291, 292, 296, 316, 319, 320, 324, 325, 329, 332, 333, 337, 338, 342, 345, 346, 350, 351, 357, 360, 361, 365, 366, 370, 373, 374, 381, 382, 386, 392, 393, 398, 399, 403, 406, 407, 414, 415, 419, 425, 426, 431, 432, 436, 442, 443, 448, 449, 453, 459, 460, 465, 466, 470, 476, 477, 489, 490, 494, 500, 501, 506, 507, 511, 517, 518, 523, 524, 528, 534, 535, 540, 541, 545, 548, 549, 556, 557, 561, 564, 565, 572, 573, 577, 580, 581, 588, 589, 593, 596, 597, 604, 605, 609, 615, 616, 621, 622, 674, 677, 678, 682, 683], "thi": [23, 31, 32, 56, 57, 58, 60, 61, 79, 85, 101, 152, 160, 167, 168, 195, 196, 197, 200, 201, 221, 231, 248, 284, 301, 316, 317, 318, 319, 320, 329, 330, 331, 332, 333, 342, 343, 344, 345, 346, 354, 355, 357, 358, 359, 360, 361, 370, 371, 372, 373, 374, 386, 388, 389, 390, 391, 392, 393, 403, 404, 405, 406, 407, 419, 421, 422, 423, 424, 425, 426, 436, 438, 439, 440, 441, 442, 443, 453, 455, 456, 457, 458, 459, 460, 470, 474, 475, 476, 477, 487, 494, 496, 497, 498, 499, 500, 501, 511, 513, 514, 515, 516, 517, 518, 528, 530, 531, 532, 533, 534, 535, 545, 546, 547, 548, 549, 561, 562, 563, 564, 565, 577, 578, 579, 580, 581, 593, 594, 595, 596, 597, 609, 611, 612, 613, 614, 615, 616, 644, 674, 675, 676, 677, 678, 686, 690, 691], "exist": [23, 39, 40, 51, 52, 78, 85, 101, 104, 105, 116, 117, 141, 142, 152, 177, 178, 190, 191, 220, 231, 248, 251, 252, 264, 265, 301, 305, 306, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 644, 674, 686], "net": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674, 689], "compat": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 641, 670, 674, 686], "when": [23, 39, 104, 152, 177, 251, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674, 686, 690], "us": [23, 39, 40, 51, 52, 54, 55, 57, 62, 65, 68, 69, 70, 71, 73, 85, 88, 90, 100, 101, 103, 104, 105, 108, 116, 117, 119, 125, 152, 177, 178, 190, 191, 193, 194, 196, 202, 205, 207, 208, 209, 210, 212, 231, 235, 237, 247, 248, 250, 251, 252, 255, 264, 265, 267, 283, 316, 322, 329, 335, 342, 348, 355, 357, 363, 370, 378, 386, 395, 403, 411, 419, 428, 436, 445, 453, 462, 470, 486, 487, 494, 503, 511, 520, 528, 537, 545, 553, 561, 569, 577, 585, 593, 601, 609, 618, 625, 627, 642, 645, 657, 671, 674, 680, 686, 687, 688, 689, 690, 691], "ironpython": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "implicit": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "convers": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "usual": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "take": [23, 54, 57, 119, 152, 193, 196, 267, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 483, 494, 511, 528, 545, 561, 577, 593, 609, 674, 686], "place": [23, 139, 152, 303, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "cpython": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "kick": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "its": [23, 50, 53, 54, 110, 118, 119, 127, 128, 131, 149, 150, 152, 189, 192, 193, 257, 266, 267, 286, 287, 290, 298, 313, 314, 316, 323, 326, 327, 329, 334, 336, 339, 340, 342, 349, 352, 353, 357, 364, 367, 368, 370, 380, 383, 384, 386, 397, 400, 401, 403, 413, 416, 417, 419, 430, 433, 434, 436, 447, 450, 451, 453, 464, 467, 468, 470, 473, 488, 491, 492, 494, 505, 508, 509, 511, 522, 525, 526, 528, 539, 542, 543, 545, 555, 558, 559, 561, 571, 574, 575, 577, 587, 590, 591, 593, 603, 606, 607, 609, 620, 623, 624, 674, 681, 684, 685], "default": [23, 31, 83, 92, 141, 142, 143, 144, 145, 146, 152, 158, 159, 167, 175, 176, 198, 218, 228, 239, 282, 299, 301, 305, 306, 307, 308, 309, 310, 316, 317, 329, 330, 342, 343, 354, 355, 357, 358, 370, 371, 386, 390, 403, 404, 419, 423, 436, 440, 453, 457, 470, 474, 487, 494, 498, 511, 515, 528, 532, 545, 546, 561, 562, 577, 578, 593, 594, 609, 613, 625, 674, 675, 686], "print": [23, 152, 316, 329, 342, 354, 355, 357, 370, 386, 403, 419, 436, 453, 470, 487, 494, 511, 528, 545, 561, 577, 593, 609, 674], "self": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "gettyp": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "fullnam": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "similar": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "overrid": [23, 152, 316, 329, 341, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "object": [23, 26, 31, 32, 35, 39, 55, 56, 57, 58, 60, 61, 62, 64, 65, 66, 79, 85, 86, 87, 97, 99, 100, 101, 102, 127, 131, 132, 133, 137, 149, 150, 152, 154, 156, 157, 167, 168, 171, 177, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 221, 231, 232, 234, 244, 246, 247, 248, 249, 286, 290, 291, 292, 296, 313, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 380, 381, 382, 383, 384, 386, 390, 391, 392, 393, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 413, 414, 415, 416, 417, 419, 423, 424, 425, 426, 430, 431, 432, 433, 434, 436, 440, 441, 442, 443, 447, 448, 449, 450, 451, 453, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 474, 475, 476, 477, 478, 481, 487, 488, 489, 490, 491, 492, 494, 498, 499, 500, 501, 505, 506, 507, 508, 509, 511, 515, 516, 517, 518, 522, 523, 524, 525, 526, 528, 532, 533, 534, 535, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 603, 604, 605, 606, 607, 609, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 633, 644, 645, 646, 647, 648, 655, 663, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 690], "fix": [23, 55, 100, 127, 152, 156, 194, 247, 286, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674, 686], "make": [23, 31, 152, 160, 167, 316, 317, 329, 330, 342, 343, 357, 358, 369, 370, 371, 386, 390, 403, 404, 419, 423, 436, 440, 453, 457, 470, 474, 494, 498, 511, 515, 528, 532, 545, 546, 561, 562, 576, 577, 578, 592, 593, 594, 609, 613, 674, 675, 690], "displai": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 654, 674, 686], "proper": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "represent": [23, 131, 132, 133, 150, 152, 290, 291, 292, 314, 316, 323, 324, 325, 327, 329, 336, 337, 338, 340, 342, 349, 350, 351, 353, 357, 364, 365, 366, 368, 370, 380, 381, 382, 384, 386, 397, 398, 399, 401, 403, 413, 414, 415, 417, 419, 430, 431, 432, 434, 436, 447, 448, 449, 451, 453, 464, 465, 466, 468, 470, 488, 489, 490, 492, 494, 505, 506, 507, 509, 511, 522, 523, 524, 526, 528, 539, 540, 541, 543, 545, 555, 556, 557, 559, 561, 571, 572, 573, 575, 577, 587, 588, 589, 591, 593, 603, 604, 605, 607, 609, 620, 621, 622, 624, 674, 681, 682, 683, 685], "connect": [23, 29, 30, 62, 65, 66, 71, 78, 82, 98, 152, 163, 164, 165, 166, 202, 205, 206, 210, 220, 227, 245, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674, 690, 691], "panel": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "other": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674, 689, 690, 691], "type": [23, 31, 57, 58, 60, 61, 124, 152, 167, 196, 197, 200, 201, 280, 316, 317, 318, 319, 320, 329, 330, 331, 332, 333, 342, 343, 344, 345, 346, 357, 358, 359, 360, 361, 370, 371, 372, 373, 374, 386, 390, 391, 392, 393, 403, 404, 405, 406, 407, 419, 423, 424, 425, 426, 436, 440, 441, 442, 443, 453, 457, 458, 459, 460, 470, 474, 475, 476, 477, 494, 498, 499, 500, 501, 511, 515, 516, 517, 518, 528, 532, 533, 534, 535, 545, 546, 547, 548, 549, 561, 562, 563, 564, 565, 577, 578, 579, 580, 581, 593, 594, 595, 596, 597, 609, 613, 614, 615, 616, 627, 628, 641, 645, 657, 658, 670, 674, 675, 676, 677, 678, 686, 690], "output": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 487, 494, 511, 528, 545, 561, 577, 593, 609, 625, 674, 686], "an": [24, 31, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 52, 54, 57, 58, 60, 61, 65, 80, 85, 101, 104, 116, 117, 121, 123, 131, 132, 133, 137, 141, 153, 159, 160, 167, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 190, 191, 193, 196, 197, 200, 201, 205, 219, 222, 224, 229, 231, 233, 248, 251, 264, 265, 273, 276, 290, 291, 292, 296, 298, 301, 305, 317, 318, 319, 320, 321, 323, 324, 325, 330, 331, 332, 333, 336, 337, 338, 343, 344, 345, 346, 347, 349, 350, 351, 354, 355, 358, 359, 360, 361, 364, 365, 366, 371, 372, 373, 374, 375, 380, 381, 382, 385, 390, 391, 392, 393, 397, 398, 399, 404, 405, 406, 407, 408, 413, 414, 415, 418, 423, 424, 425, 426, 430, 431, 432, 435, 440, 441, 442, 443, 447, 448, 449, 452, 457, 458, 459, 460, 464, 465, 466, 469, 474, 475, 476, 477, 485, 488, 489, 490, 493, 498, 499, 500, 501, 505, 506, 507, 510, 515, 516, 517, 518, 522, 523, 524, 527, 532, 533, 534, 535, 539, 540, 541, 546, 547, 548, 549, 550, 555, 556, 557, 562, 563, 564, 565, 566, 571, 572, 573, 578, 579, 580, 581, 582, 587, 588, 589, 594, 595, 596, 597, 598, 603, 604, 605, 608, 613, 614, 615, 616, 620, 621, 622, 626, 627, 628, 633, 634, 641, 653, 656, 657, 658, 663, 664, 670, 675, 676, 677, 678, 681, 682, 683, 686, 689, 690, 691], "tupl": [24, 29, 39, 40, 43, 45, 48, 50, 51, 52, 53, 54, 56, 59, 62, 64, 68, 69, 77, 80, 115, 118, 119, 134, 136, 141, 148, 153, 158, 159, 164, 175, 176, 177, 178, 181, 183, 186, 187, 189, 190, 191, 192, 193, 195, 199, 202, 204, 207, 208, 217, 218, 219, 222, 223, 224, 225, 233, 263, 266, 267, 282, 293, 295, 299, 301, 305, 312, 321, 334, 347, 375, 408, 550, 566, 582, 598, 634, 643, 664, 672, 686], "doubl": [25, 155, 690], "rtype": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 237, 244, 245, 246, 250], "arrai": [26, 30, 35, 89, 90, 97, 98, 99, 103, 148, 157, 166, 171, 236, 237, 244, 245, 246, 250, 312, 482, 483], "adjac": [26, 97, 157, 244], "matrix": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 237, 244, 245, 246, 250], "network": [26, 27, 28, 30, 32, 35, 37, 50, 55, 56, 57, 62, 64, 65, 66, 74, 75, 78, 79, 85, 86, 87, 90, 91, 97, 98, 99, 100, 101, 102, 103, 115, 126, 127, 134, 136, 137, 138, 139, 140, 157, 161, 162, 166, 168, 171, 173, 189, 194, 195, 196, 202, 204, 205, 206, 213, 214, 220, 221, 231, 232, 234, 237, 238, 244, 245, 246, 247, 248, 249, 250, 263, 285, 286, 293, 295, 296, 297, 303, 304, 629, 645, 648, 659], "datastructur": [26, 28, 30, 35, 78, 90, 97, 98, 99, 103, 125, 157, 162, 166, 171, 220, 237, 244, 245, 246, 250, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "obj": [26, 28, 35, 39, 51, 65, 78, 97, 99, 104, 116, 125, 137, 157, 162, 171, 177, 190, 205, 220, 244, 246, 251, 264, 283, 296, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "get": [26, 28, 35, 39, 40, 43, 45, 48, 51, 52, 53, 54, 68, 69, 70, 71, 72, 78, 97, 99, 104, 105, 109, 111, 113, 114, 116, 117, 118, 119, 124, 125, 157, 162, 171, 177, 178, 181, 183, 186, 187, 190, 191, 192, 193, 207, 208, 209, 210, 211, 220, 244, 246, 251, 252, 256, 258, 260, 261, 262, 264, 265, 266, 267, 280, 283, 298, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 568, 569, 585, 601, 618, 680, 688], "liter": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 237, 244, 245, 246, 250, 641, 670], "csc": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 237, 244, 245, 246, 250], "csr": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 237, 244, 245, 246, 250], "coo": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 237, 244, 245, 246, 250], "option": [26, 30, 31, 35, 39, 40, 41, 47, 48, 50, 51, 52, 53, 54, 55, 57, 62, 65, 66, 71, 73, 74, 88, 90, 93, 97, 98, 99, 100, 103, 104, 105, 106, 108, 113, 115, 116, 117, 118, 119, 125, 127, 128, 132, 133, 143, 144, 145, 146, 157, 159, 166, 167, 171, 177, 178, 179, 185, 186, 189, 190, 191, 192, 193, 194, 196, 198, 202, 205, 206, 210, 212, 213, 235, 237, 240, 244, 245, 246, 247, 250, 251, 252, 253, 255, 260, 263, 264, 265, 266, 267, 282, 283, 286, 287, 291, 292, 301, 307, 308, 309, 310, 317, 322, 324, 325, 330, 335, 337, 338, 343, 348, 350, 351, 354, 355, 358, 363, 365, 366, 371, 378, 381, 382, 390, 395, 398, 399, 404, 411, 414, 415, 423, 428, 431, 432, 440, 445, 448, 449, 457, 462, 465, 466, 474, 486, 487, 489, 490, 498, 503, 506, 507, 515, 520, 523, 524, 532, 537, 540, 541, 546, 553, 556, 557, 562, 569, 572, 573, 578, 585, 588, 589, 594, 601, 604, 605, 613, 618, 621, 622, 625, 627, 628, 634, 637, 641, 645, 647, 649, 651, 653, 655, 657, 658, 664, 667, 670, 675, 680, 682, 683, 690], "format": [26, 30, 35, 73, 88, 90, 97, 98, 99, 103, 108, 125, 129, 133, 157, 166, 171, 212, 235, 237, 244, 245, 246, 250, 255, 283, 288, 292, 322, 325, 335, 338, 348, 351, 363, 366, 378, 382, 395, 399, 411, 415, 428, 432, 445, 449, 462, 466, 486, 490, 503, 507, 520, 524, 537, 541, 553, 557, 569, 573, 585, 589, 601, 605, 618, 622, 680, 683, 686], "array_lik": [26, 30, 35, 90, 97, 98, 99, 103, 157, 166, 171, 237, 244, 245, 246, 250], "construct": [26, 30, 35, 58, 60, 61, 62, 64, 65, 66, 67, 90, 97, 98, 99, 103, 157, 166, 171, 197, 200, 201, 202, 204, 205, 206, 237, 244, 245, 246, 250, 318, 319, 320, 331, 332, 333, 344, 345, 346, 359, 360, 361, 372, 373, 374, 391, 392, 393, 405, 406, 407, 424, 425, 426, 441, 442, 443, 458, 459, 460, 475, 476, 477, 499, 500, 501, 516, 517, 518, 533, 534, 535, 547, 548, 549, 563, 564, 565, 579, 580, 581, 595, 596, 597, 614, 615, 616, 676, 677, 678], "none": [27, 28, 31, 37, 38, 39, 40, 51, 52, 53, 55, 57, 62, 65, 73, 88, 100, 104, 105, 108, 114, 116, 117, 118, 127, 132, 137, 139, 141, 143, 144, 145, 146, 161, 162, 167, 173, 174, 177, 178, 190, 191, 192, 194, 196, 198, 202, 205, 212, 235, 247, 251, 252, 255, 262, 264, 265, 266, 286, 291, 296, 303, 305, 307, 308, 309, 310, 317, 324, 328, 330, 337, 341, 343, 350, 354, 355, 358, 365, 369, 371, 381, 385, 388, 389, 390, 398, 402, 404, 414, 418, 421, 422, 423, 431, 435, 438, 439, 440, 448, 452, 455, 456, 457, 465, 474, 489, 493, 496, 497, 498, 506, 510, 513, 514, 515, 523, 527, 530, 531, 532, 540, 544, 546, 556, 560, 562, 572, 576, 578, 588, 592, 594, 604, 608, 611, 612, 613, 621, 629, 630, 631, 634, 637, 640, 641, 642, 645, 647, 649, 650, 651, 652, 653, 654, 655, 659, 660, 661, 664, 667, 669, 670, 671, 675, 682, 686], "cl": [28, 31, 162, 167, 317, 330, 343, 358, 371, 390, 404, 423, 440, 457, 474, 498, 515, 532, 546, 562, 578, 594, 613, 675], "graph": [28, 38, 59, 63, 120, 122, 129, 135, 160, 162, 174, 199, 203, 271, 274, 288, 294], "g": [28, 162, 341], "h": [28, 162], "same": [28, 57, 162, 196, 689], "vertic": [28, 57, 78, 87, 138, 162, 196, 220, 234, 297], "whose": [28, 162, 679], "consist": [28, 162, 644], "present": [28, 74, 75, 162, 213, 214], "refer": [28, 162, 487, 625, 652, 653, 689, 690], "wolfram": [28, 162], "mathworld": [28, 162], "avail": [28, 85, 101, 159, 162, 231, 248, 302, 487, 690], "http": [28, 85, 101, 162, 231, 248, 652, 653, 687], "com": [28, 162], "graphcompl": [28, 162], "html": [28, 162, 652, 653], "exampl": [28, 37, 38, 54, 57, 78, 119, 125, 162, 173, 174, 193, 196, 220, 267, 283, 284, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680, 686, 689], "network_compl": [28, 162], "from_obj": [28, 78, 125, 162, 220, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "line": [28, 55, 57, 62, 65, 78, 85, 100, 101, 134, 162, 194, 196, 202, 205, 220, 231, 247, 248, 293, 321, 347, 402, 690], "ani": [28, 40, 50, 51, 52, 53, 54, 57, 80, 105, 115, 116, 117, 118, 119, 143, 144, 145, 146, 162, 178, 189, 190, 191, 192, 193, 196, 224, 252, 263, 264, 265, 266, 267, 301, 307, 308, 309, 310, 627, 628, 657, 658, 689, 691], "has_edg": [28, 162], "direct": [28, 42, 47, 57, 63, 74, 162, 176, 180, 185, 196, 203, 213, 223, 270, 272, 356, 686], "fals": [28, 50, 53, 54, 55, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 100, 101, 103, 115, 118, 119, 125, 132, 133, 158, 159, 160, 162, 175, 176, 189, 192, 193, 194, 210, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 237, 247, 248, 250, 263, 266, 267, 282, 283, 291, 292, 299, 301, 322, 324, 325, 335, 337, 338, 348, 350, 351, 354, 355, 363, 365, 366, 378, 381, 382, 395, 398, 399, 411, 414, 415, 428, 431, 432, 445, 448, 449, 462, 465, 466, 486, 487, 489, 490, 503, 506, 507, 520, 523, 524, 537, 540, 541, 553, 556, 557, 569, 572, 573, 585, 588, 589, 601, 604, 605, 618, 621, 622, 649, 680, 682, 683, 686], "hashabl": [29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 64, 68, 69, 70, 71, 73, 74, 75, 76, 77, 81, 82, 88, 89, 91, 93, 94, 95, 96, 100, 104, 105, 106, 108, 110, 112, 113, 115, 116, 117, 118, 119, 126, 128, 136, 141, 148, 164, 169, 170, 172, 173, 174, 177, 178, 179, 180, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 199, 204, 207, 208, 209, 210, 212, 213, 214, 216, 217, 226, 227, 235, 236, 238, 240, 241, 242, 243, 247, 251, 252, 253, 255, 257, 259, 260, 263, 264, 265, 266, 267, 285, 287, 295, 305, 312], "identifi": [29, 33, 34, 36, 37, 38, 39, 40, 48, 50, 51, 52, 53, 54, 56, 59, 68, 69, 70, 71, 74, 75, 81, 82, 89, 91, 93, 94, 95, 96, 104, 105, 106, 110, 112, 113, 115, 116, 117, 118, 119, 126, 141, 142, 164, 169, 170, 172, 173, 174, 177, 178, 186, 189, 190, 191, 192, 193, 195, 199, 207, 208, 209, 210, 213, 214, 226, 227, 236, 238, 240, 241, 242, 243, 251, 252, 253, 257, 259, 260, 263, 264, 265, 266, 267, 285, 305, 306, 686], "independ": [31, 140, 167, 304, 317, 330, 343, 358, 371, 390, 404, 423, 440, 457, 474, 498, 515, 532, 546, 562, 578, 594, 613, 675], "current": [31, 90, 103, 167, 237, 250, 284, 317, 330, 343, 358, 371, 376, 390, 404, 409, 423, 440, 457, 474, 487, 498, 515, 532, 546, 551, 562, 567, 578, 583, 594, 599, 613, 630, 631, 643, 660, 661, 672, 675], "count": [32, 168], "cross": [32, 56, 79, 85, 86, 101, 102, 168, 195, 221, 231, 232, 248, 249, 666], "pair": [32, 39, 40, 53, 56, 59, 62, 68, 73, 76, 77, 79, 88, 89, 105, 108, 118, 134, 136, 148, 168, 177, 178, 192, 195, 199, 202, 207, 212, 216, 217, 221, 235, 236, 252, 255, 266, 293, 295, 312, 627, 641, 657, 670], "note": [32, 56, 57, 78, 79, 81, 85, 90, 101, 103, 139, 140, 141, 142, 156, 159, 160, 168, 195, 196, 220, 221, 226, 231, 237, 248, 250, 301, 303, 304, 305, 306, 341, 388, 389, 421, 422, 438, 439, 455, 456, 496, 497, 513, 514, 530, 531, 611, 612, 652, 653, 679], "assum": [32, 56, 79, 168, 195, 221, 690], "li": [32, 56, 79, 87, 168, 195, 221, 234], "xy": [32, 56, 79, 87, 168, 195, 221, 234], "plane": [32, 55, 56, 79, 85, 86, 87, 100, 101, 102, 168, 194, 195, 221, 231, 232, 234, 247, 248, 249, 341, 544, 686], "neighbor": [33, 34, 36, 57, 81, 95, 96, 112, 127, 128, 169, 170, 172, 196, 226, 242, 243, 259, 286, 287], "numer": [34, 170, 487, 625, 689], "incom": [34, 95, 170, 242], "degre": [35, 66, 99, 171, 206, 246], "outgo": [36, 96, 172, 243], "delet": [37, 38, 173, 174, 686], "first": [37, 74, 128, 160, 173, 213, 287, 298, 487, 625, 686, 690], "second": [37, 74, 128, 173, 213, 287, 650, 651], "name": [39, 40, 51, 52, 53, 104, 105, 116, 117, 118, 141, 142, 143, 144, 145, 146, 177, 178, 190, 191, 192, 251, 252, 264, 265, 266, 305, 306, 307, 308, 309, 310, 387, 420, 437, 454, 487, 495, 512, 529, 610, 625, 690], "valu": [39, 40, 43, 47, 51, 52, 53, 90, 103, 104, 105, 107, 109, 116, 117, 118, 141, 142, 143, 144, 145, 146, 177, 178, 181, 185, 190, 191, 192, 198, 237, 250, 251, 252, 254, 256, 264, 265, 266, 300, 302, 305, 306, 307, 308, 309, 310, 379, 388, 389, 396, 421, 422, 429, 438, 439, 446, 455, 456, 463, 487, 496, 497, 504, 513, 514, 521, 530, 531, 538, 592, 602, 611, 612, 619, 625, 686], "attribut": [39, 40, 50, 51, 52, 53, 54, 104, 105, 115, 116, 117, 118, 119, 141, 142, 143, 144, 145, 146, 158, 175, 176, 177, 178, 189, 190, 191, 192, 193, 218, 251, 252, 263, 264, 265, 266, 267, 299, 305, 306, 307, 308, 309, 310, 387, 420, 437, 454, 495, 512, 529, 610, 686], "str": [39, 40, 41, 50, 51, 52, 53, 54, 61, 62, 65, 73, 88, 104, 105, 106, 108, 115, 116, 117, 118, 119, 125, 128, 129, 133, 141, 142, 143, 144, 145, 146, 150, 177, 178, 179, 189, 190, 191, 192, 193, 201, 202, 205, 212, 235, 251, 252, 253, 255, 263, 264, 265, 266, 267, 283, 287, 288, 292, 305, 306, 307, 308, 309, 310, 314, 320, 322, 325, 327, 333, 335, 338, 340, 346, 348, 351, 353, 361, 363, 366, 368, 374, 378, 382, 384, 393, 395, 399, 401, 407, 411, 415, 417, 426, 428, 432, 434, 443, 445, 449, 451, 460, 462, 466, 468, 477, 486, 487, 490, 492, 501, 503, 507, 509, 518, 520, 524, 526, 535, 537, 541, 543, 549, 553, 557, 559, 565, 569, 573, 575, 581, 585, 589, 591, 597, 601, 605, 607, 616, 618, 622, 624, 625, 627, 628, 634, 637, 649, 653, 657, 658, 664, 667, 678, 680, 683, 685], "function": [39, 40, 51, 52, 53, 54, 85, 101, 104, 105, 116, 117, 119, 127, 160, 177, 178, 190, 191, 192, 193, 231, 248, 251, 252, 264, 265, 267, 286, 354, 355, 478, 481, 487, 625, 649], "setter": [39, 40, 51, 52, 104, 105, 116, 117, 177, 178, 190, 191, 251, 252, 264, 265, 686], "rais": [39, 40, 51, 52, 55, 85, 100, 101, 104, 105, 116, 117, 127, 128, 141, 142, 149, 150, 177, 178, 190, 191, 194, 231, 247, 248, 251, 252, 264, 265, 286, 287, 305, 306, 313, 314, 326, 327, 339, 340, 352, 353, 367, 368, 383, 384, 400, 401, 416, 417, 433, 434, 450, 451, 467, 468, 491, 492, 508, 509, 525, 526, 542, 543, 558, 559, 574, 575, 590, 591, 606, 607, 623, 624, 684, 685, 686], "keyerror": [39, 40, 51, 52, 104, 105, 116, 117, 141, 142, 177, 178, 190, 191, 251, 252, 264, 265, 305, 306], "If": [39, 40, 47, 50, 51, 52, 53, 54, 55, 71, 74, 85, 90, 100, 101, 103, 104, 105, 115, 116, 117, 118, 119, 125, 127, 128, 132, 133, 141, 142, 163, 165, 177, 178, 185, 189, 190, 191, 192, 193, 194, 198, 210, 213, 231, 237, 247, 248, 250, 251, 252, 263, 264, 265, 266, 267, 283, 286, 287, 291, 292, 305, 306, 322, 324, 325, 335, 337, 338, 341, 348, 350, 351, 354, 355, 363, 365, 366, 378, 381, 382, 388, 389, 395, 398, 399, 411, 414, 415, 421, 422, 428, 431, 432, 438, 439, 445, 448, 449, 455, 456, 462, 465, 466, 486, 487, 489, 490, 496, 497, 503, 506, 507, 513, 514, 520, 523, 524, 530, 531, 537, 540, 541, 553, 556, 557, 569, 572, 573, 585, 588, 589, 601, 604, 605, 611, 612, 618, 621, 622, 625, 680, 682, 683, 687, 688, 690], "doe": [39, 40, 51, 52, 104, 105, 116, 117, 141, 142, 177, 178, 190, 191, 251, 252, 264, 265, 305, 306, 689], "multipl": [40, 51, 52, 105, 116, 117, 178, 190, 191, 252, 264, 265, 469, 646], "empti": [40, 52, 105, 163, 165, 178, 191, 252], "dictionari": [40, 58, 64, 73, 76, 77, 88, 89, 105, 108, 143, 144, 145, 146, 148, 178, 197, 204, 212, 216, 217, 235, 236, 252, 255, 300, 302, 307, 308, 309, 310, 312, 318, 331, 344, 359, 372, 391, 405, 424, 441, 458, 475, 499, 516, 533, 547, 563, 579, 595, 614, 676, 686], "correspond": [40, 52, 73, 77, 88, 89, 105, 108, 117, 148, 178, 191, 212, 217, 235, 236, 252, 255, 265, 282, 312, 627, 641, 657, 670], "provid": [40, 53, 58, 117, 127, 178, 192, 197, 265, 286, 318, 331, 344, 359, 372, 391, 405, 424, 441, 458, 475, 499, 516, 533, 547, 563, 579, 595, 614, 627, 657, 676, 689, 691], "ax": [41, 106, 179, 253, 642, 671, 686], "xyz": [41, 46, 47, 72, 90, 103, 106, 111, 114, 136, 147, 179, 184, 185, 211, 237, 250, 253, 258, 262, 295, 311, 321, 328, 334, 347, 356, 362, 402, 544, 560, 679], "coordin": [41, 46, 47, 62, 64, 87, 106, 112, 114, 134, 136, 138, 179, 184, 185, 202, 204, 234, 253, 259, 262, 293, 295, 297, 321, 334, 347, 362, 493, 510, 527, 643, 672, 679], "start": [41, 42, 44, 46, 47, 49, 62, 126, 134, 160, 179, 180, 182, 184, 185, 188, 202, 279, 284, 285, 293, 388, 389, 421, 422, 438, 439, 455, 456, 496, 497, 513, 514, 530, 531, 611, 612, 686, 688, 690], "end": [41, 42, 44, 46, 47, 49, 62, 126, 134, 156, 179, 180, 182, 184, 185, 188, 202, 285, 293, 321, 347], "along": [41, 47, 128, 179, 185, 287], "which": [41, 53, 54, 57, 118, 119, 179, 192, 193, 196, 266, 267, 298, 641, 670], "includ": [41, 179, 647, 686, 691], "float": [41, 42, 43, 44, 45, 46, 47, 49, 62, 64, 73, 83, 88, 92, 106, 108, 110, 112, 127, 128, 134, 136, 138, 179, 180, 181, 182, 183, 184, 185, 188, 198, 202, 204, 212, 228, 235, 239, 253, 255, 257, 259, 286, 287, 293, 295, 297, 354, 355, 356, 362, 376, 379, 388, 389, 409, 421, 422, 438, 439, 455, 456, 487, 496, 497, 513, 514, 530, 531, 551, 567, 583, 599, 602, 611, 612, 625, 643, 647, 650, 651, 672, 679], "vector": [42, 47, 49, 90, 103, 110, 111, 124, 180, 185, 188, 237, 250, 257, 258, 280, 356, 362, 409, 551, 567, 570, 576, 583, 586], "locat": [46, 47, 184, 185], "midpoint": [46, 184], "outsid": [47, 57, 185, 196], "lie": [47, 185], "random": [48, 66, 68, 69, 70, 71, 113, 186, 206, 207, 208, 209, 210, 260], "sampl": [48, 113, 186, 260], "over": [50, 92, 115, 158, 159, 175, 176, 189, 218, 239, 263, 282, 299, 301, 686], "bool": [50, 53, 54, 55, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 100, 101, 102, 103, 115, 118, 119, 125, 132, 133, 158, 159, 160, 175, 176, 189, 192, 193, 194, 210, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 247, 248, 249, 250, 263, 266, 267, 282, 283, 291, 292, 299, 301, 322, 324, 325, 335, 337, 338, 348, 350, 351, 354, 355, 363, 365, 366, 378, 381, 382, 395, 398, 399, 411, 414, 415, 428, 431, 432, 445, 448, 449, 462, 465, 466, 486, 487, 489, 490, 503, 506, 507, 520, 523, 524, 537, 540, 541, 553, 556, 557, 569, 572, 573, 585, 588, 589, 601, 604, 605, 618, 621, 622, 649, 680, 682, 683], "yield": [50, 53, 54, 92, 115, 118, 119, 130, 158, 159, 175, 176, 189, 192, 193, 218, 239, 263, 266, 267, 279, 282, 289, 299, 301], "addit": [50, 53, 54, 85, 101, 115, 118, 119, 143, 144, 145, 146, 189, 192, 193, 231, 248, 263, 266, 267, 307, 308, 309, 310, 334], "next": [50, 53, 54, 92, 115, 118, 119, 130, 158, 159, 175, 176, 189, 192, 193, 218, 239, 263, 266, 267, 279, 282, 289, 299, 301, 354, 355, 686, 689, 690], "attr": [50, 53, 54, 115, 189, 192, 193, 263], "contain": [51, 52, 58, 60, 61, 65, 74, 117, 132, 190, 191, 197, 200, 201, 205, 213, 265, 291, 318, 319, 320, 324, 331, 332, 333, 337, 344, 345, 346, 350, 359, 360, 361, 365, 372, 373, 374, 381, 391, 392, 393, 398, 405, 406, 407, 414, 424, 425, 426, 431, 441, 442, 443, 448, 458, 459, 460, 465, 475, 476, 477, 489, 499, 500, 501, 506, 516, 517, 518, 523, 533, 534, 535, 540, 547, 548, 549, 556, 563, 564, 565, 572, 579, 580, 581, 588, 595, 596, 597, 604, 614, 615, 616, 621, 676, 677, 678, 682], "per": [51, 52, 66, 117, 190, 191, 206, 265, 482, 483, 625], "request": [51, 52, 105, 190, 191, 252], "condit": [53, 54, 118, 119, 192, 193, 266, 267, 691], "certain": [53, 54, 73, 88, 108, 118, 119, 192, 193, 212, 235, 255, 266, 267], "can": [53, 85, 101, 118, 192, 231, 248, 266, 686, 690], "min": [53, 118, 192, 266], "max": [53, 118, 192, 266], "predic": [54, 119, 193, 267], "lambda": [54, 119, 193, 267], "callabl": [54, 119, 127, 193, 267, 286, 649, 652], "you": [54, 119, 193, 267, 687, 688, 689, 690], "want": [54, 119, 193, 267, 690], "evalu": [54, 119, 193, 267], "straightlin": [55, 100, 194, 247], "emb": [55, 100, 194, 247], "two": [55, 56, 78, 100, 126, 159, 160, 194, 195, 220, 247, 285, 321, 347, 690], "straight": [55, 57, 85, 100, 101, 194, 196, 231, 247, 248], "embed": [55, 57, 85, 86, 100, 101, 102, 194, 196, 231, 232, 247, 248, 249], "wa": [55, 100, 194, 247, 686, 690], "success": [55, 100, 194, 247], "otherwis": [55, 74, 78, 79, 80, 83, 84, 85, 86, 87, 100, 101, 102, 159, 194, 213, 215, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 247, 248, 249, 282, 301, 388, 389, 421, 422, 438, 439, 455, 456, 487, 496, 497, 513, 514, 530, 531, 611, 612, 679, 691], "importerror": [55, 85, 100, 101, 194, 231, 247, 248], "networkx": [55, 63, 100, 135, 194, 203, 247, 294], "instal": [55, 85, 100, 101, 194, 231, 247, 248, 686, 689], "each": [56, 57, 116, 134, 136, 195, 196, 264, 293, 295], "repres": [56, 62, 136, 195, 198, 202, 295], "vertex": [56, 57, 68, 77, 148, 195, 196, 198, 207, 217, 312], "breakpoint": [57, 196], "face": [57, 125, 196, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "break": [57, 196], "found": [57, 196, 625], "primarili": [57, 196], "up": [57, 88, 108, 196, 235, 255, 686, 690], "between": [57, 66, 126, 196, 206, 285, 300, 302, 376, 409, 551, 567, 583, 599], "specif": [57, 74, 75, 82, 196, 213, 214, 227, 690], "For": [57, 196, 284, 627, 628, 652, 653, 657, 658], "applic": [57, 196], "involv": [57, 196], "dual": [57, 196, 198], "where": [57, 121, 130, 196, 273, 289, 362, 673, 679, 686], "extern": [57, 196], "reaction": [57, 124, 196, 280, 576, 639, 686, 689], "input": [57, 196, 198, 686], "essenti": [57, 196], "wall": [57, 196], "follow": [57, 196, 487, 625, 690, 691], "maze": [57, 196], "It": [57, 85, 101, 196, 231, 248, 487], "reli": [57, 196], "repes": [57, 196], "determin": [57, 196], "order": [57, 160, 196, 282, 301, 483], "around": [57, 196, 655], "alwai": [57, 196], "turn": [57, 196], "classmethod": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 318, 319, 320, 321, 331, 332, 333, 334, 344, 345, 346, 347, 359, 360, 361, 362, 372, 373, 374, 391, 392, 393, 405, 406, 407, 424, 425, 426, 441, 442, 443, 458, 459, 460, 475, 476, 477, 499, 500, 501, 516, 517, 518, 533, 534, 535, 547, 548, 549, 563, 564, 565, 579, 580, 581, 595, 596, 597, 614, 615, 616, 676, 677, 678, 679], "ha": [58, 60, 61, 79, 81, 130, 197, 200, 201, 215, 221, 226, 289, 318, 319, 320, 331, 332, 333, 344, 345, 346, 359, 360, 361, 372, 373, 374, 391, 392, 393, 405, 406, 407, 424, 425, 426, 441, 442, 443, 458, 459, 460, 475, 476, 477, 499, 500, 501, 516, 517, 518, 533, 534, 535, 547, 548, 549, 563, 564, 565, 579, 580, 581, 595, 596, 597, 614, 615, 616, 676, 677, 678, 679, 686, 690], "correct": [58, 60, 61, 197, 200, 201, 318, 319, 320, 331, 332, 333, 344, 345, 346, 359, 360, 361, 372, 373, 374, 391, 392, 393, 405, 406, 407, 424, 425, 426, 441, 442, 443, 458, 459, 460, 475, 476, 477, 499, 500, 501, 516, 517, 518, 533, 534, 535, 547, 548, 549, 563, 564, 565, 579, 580, 581, 595, 596, 597, 614, 615, 616, 676, 677, 678], "schema": [58, 60, 61, 131, 149, 150, 197, 200, 201, 290, 313, 314, 318, 319, 320, 323, 326, 327, 331, 332, 333, 336, 339, 340, 344, 345, 346, 349, 352, 353, 359, 360, 361, 364, 367, 368, 372, 373, 374, 380, 383, 384, 391, 392, 393, 397, 400, 401, 405, 406, 407, 413, 416, 417, 424, 425, 426, 430, 433, 434, 441, 442, 443, 447, 450, 451, 458, 459, 460, 464, 467, 468, 475, 476, 477, 488, 491, 492, 499, 500, 501, 505, 508, 509, 516, 517, 518, 522, 525, 526, 533, 534, 535, 539, 542, 543, 547, 548, 549, 555, 558, 559, 563, 564, 565, 571, 574, 575, 579, 580, 581, 587, 590, 591, 595, 596, 597, 603, 606, 607, 614, 615, 616, 620, 623, 624, 676, 677, 678, 681, 684, 685], "new": [59, 63, 135, 199, 203, 284, 294, 690], "inform": [59, 199, 652], "about": [59, 199, 688], "filepath": [60, 65, 132, 137, 200, 205, 291, 296, 319, 324, 332, 337, 345, 350, 360, 365, 373, 381, 392, 398, 406, 414, 425, 431, 442, 448, 459, 465, 476, 489, 500, 506, 517, 523, 534, 540, 548, 556, 564, 572, 580, 588, 596, 604, 615, 621, 653, 677, 682], "serial": [60, 61, 132, 133, 200, 201, 291, 292, 319, 320, 324, 325, 332, 333, 337, 338, 345, 346, 350, 351, 360, 361, 365, 366, 373, 374, 381, 382, 392, 393, 398, 399, 406, 407, 414, 415, 425, 426, 431, 432, 442, 443, 448, 449, 459, 460, 465, 466, 476, 477, 489, 490, 500, 501, 506, 507, 517, 518, 523, 524, 534, 535, 540, 541, 548, 549, 556, 557, 564, 565, 572, 573, 580, 581, 588, 589, 596, 597, 604, 605, 615, 616, 621, 622, 677, 678, 682, 683, 686], "like": [60, 65, 132, 137, 200, 205, 291, 296, 319, 324, 332, 337, 345, 350, 360, 365, 373, 381, 392, 398, 406, 414, 425, 431, 442, 448, 459, 465, 476, 489, 500, 506, 517, 523, 534, 540, 548, 556, 564, 572, 580, 588, 596, 604, 615, 621, 677, 682, 689, 690], "url": [60, 65, 200, 205, 319, 332, 345, 360, 373, 392, 406, 425, 442, 459, 476, 500, 517, 534, 548, 564, 580, 596, 615, 677, 687], "precis": [62, 65, 73, 88, 108, 202, 205, 212, 235, 255], "geometr": [62, 65, 73, 88, 108, 202, 205, 212, 235, 255, 645], "map": [62, 65, 73, 76, 77, 88, 89, 108, 148, 202, 205, 212, 216, 217, 235, 236, 255, 300, 302, 312, 627, 634, 637, 657, 664, 667, 686], "digraph": [63, 135, 203, 294], "specifi": [64, 73, 88, 108, 204, 212, 235, 255, 650, 686], "hshabl": [64, 204], "cloud": [66, 206], "pointcloud": [66, 206], "deprec": [68, 69, 70, 71, 207, 208, 209, 210, 686], "sinc": [68, 69, 70, 71, 207, 208, 209, 210], "version": [68, 69, 70, 71, 125, 207, 208, 209, 210, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680, 686, 690], "13": [68, 69, 70, 71, 207, 208, 209, 210], "edge_sampl": [68, 69, 207, 208], "instead": [68, 69, 70, 71, 140, 207, 208, 209, 210, 304, 686, 690], "node_sampl": [70, 71, 209, 210], "exclude_leav": [71, 210], "exclud": [71, 210], "leav": [71, 210], "one": [71, 79, 81, 210, 215, 221, 226, 354, 355, 356, 482, 483, 686, 689, 690], "verifi": [74, 75, 78, 79, 81, 82, 86, 87, 102, 213, 214, 220, 221, 226, 227, 232, 234, 249, 473], "taken": [74, 213], "account": [74, 213], "indic": [76, 136, 198, 216, 295, 690], "index": [76, 77, 89, 148, 216, 217, 236, 312], "uv": [77, 148, 217, 312], "everi": [78, 127, 160, 220, 286, 354, 355, 686], "them": [78, 220], "network_is_connect": [78, 220], "least": [79, 215, 221, 487, 625], "check": [80, 83, 84, 85, 101, 107, 215, 224, 228, 229, 231, 248, 254, 686], "flag": [80, 83, 84, 160, 215, 219, 222, 223, 224, 225, 228, 229, 230, 233, 354, 355, 487, 686, 690], "leaf": [81, 226], "min_forc": [83, 92, 228, 239], "06": [83, 92, 228, 239, 354, 355, 487, 625], "larg": [83, 92, 228, 239], "enough": [83, 92, 228, 239], "minimum": [83, 92, 228, 239], "magnitud": [83, 92, 228, 239, 356], "consid": [83, 92, 228, 239], "packag": [85, 101, 231, 248], "drawn": [85, 101, 231, 248], "without": [85, 86, 101, 102, 231, 232, 248, 249, 691], "shown": [85, 101, 231, 248], "furthermor": [85, 101, 231, 248], "python": [85, 101, 231, 248, 688, 689, 690], "bind": [85, 101, 231, 248], "suit": [85, 101, 231, 248], "anaconda": [85, 101, 231, 248, 690], "org": [85, 101, 231, 248, 652, 653, 687], "conda": [85, 101, 231, 248], "forg": [85, 101, 231, 248, 690], "fase": [86, 102, 232, 249], "normal": [90, 103, 237, 250], "laplacian": [90, 103, 110, 237, 250, 257], "entri": [90, 103, 237, 250, 482, 483], "diagon": [90, 103, 237, 250], "l": [90, 103, 237, 250], "dot": [90, 103, 237, 250], "centroid": [90, 103, 110, 112, 127, 237, 250, 257, 259, 286], "therefor": [90, 103, 237, 250], "By": [90, 103, 237, 250], "sign": [90, 103, 237, 250, 341, 686], "dsiplac": [90, 103, 237, 250], "could": [90, 103, 237, 250], "more": [90, 103, 237, 250, 487, 625, 652, 686], "natur": [90, 103, 237, 250], "wai": [90, 103, 237, 250, 690], "ring": [93, 110, 240, 257], "compon": [106, 111, 253, 258, 418, 435, 452, 686, 690], "neighborhood": [110, 257], "load_vector": [111, 258], "match": [118, 119, 266, 267, 576, 627, 628, 657, 658, 679], "assign": [123, 130, 261, 276, 289, 673, 679, 686], "residu": [124, 280, 686], "as_str": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "hash": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "comparison": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "dure": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 650, 680], "control": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680, 689], "digest": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "hexadecim": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "rather": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "than": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680, 686], "byte": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "mesh": [125, 127, 198, 283, 286, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 645, 648, 680], "v1": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "v2": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "vertex_attribut": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "vertex_sampl": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "v3": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "shortest": [126, 285], "lead": [126, 285], "kmax": [127, 286, 354, 686], "damp": [127, 286], "callback": [127, 286, 354, 355, 649], "callback_arg": [127, 286], "move": [127, 286, 487, 625, 689], "free": [127, 286, 686, 691], "maximum": [127, 286, 354, 355, 487, 625], "factor": [127, 286], "user": [127, 286, 652, 686, 690], "execut": [127, 286], "after": [127, 286], "pass": [127, 286, 690], "except": [127, 128, 150, 286, 287, 314, 327, 340, 353, 368, 384, 401, 417, 434, 451, 468, 492, 509, 526, 543, 559, 575, 591, 607, 624, 685], "split": [128, 287, 686], "insert": [128, 287], "posit": [128, 287, 354, 355, 356, 362, 402, 544, 560, 679, 686], "valueerror": [128, 287], "been": [130, 289, 690], "nativ": [131, 290, 323, 336, 349, 364, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 681, 689], "describ": [131, 290, 321, 323, 334, 336, 347, 349, 364, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 681], "pretti": [132, 133, 291, 292, 324, 325, 337, 338, 350, 351, 365, 366, 381, 382, 398, 399, 414, 415, 431, 432, 448, 449, 465, 466, 489, 490, 506, 507, 523, 524, 540, 541, 556, 557, 572, 573, 588, 589, 604, 605, 621, 622, 682, 683], "human": [132, 291, 324, 337, 350, 365, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 682], "readabl": [132, 291, 324, 337, 350, 365, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 682], "": [133, 149, 150, 292, 313, 314, 321, 325, 326, 327, 338, 339, 340, 347, 351, 352, 353, 366, 367, 368, 382, 383, 384, 399, 400, 401, 415, 416, 417, 432, 433, 434, 449, 450, 451, 466, 467, 468, 490, 491, 492, 507, 508, 509, 524, 525, 526, 541, 542, 543, 557, 558, 559, 573, 574, 575, 589, 590, 591, 605, 606, 607, 622, 623, 624, 683, 684, 685, 690], "newli": [135, 294], "write": [137, 296], "modifi": [139, 140, 147, 303, 304, 311, 469, 691], "copi": [140, 304, 691], "origin": [140, 160, 229, 279, 284, 298, 304, 493, 510, 527, 686], "unset": [141, 142, 305, 306], "implicitli": [141, 142, 305, 306], "back": [141, 142, 305, 306], "store": [141, 142, 305, 306], "attr_dict": [143, 144, 145, 146, 307, 308, 309, 310], "kwattr": [143, 144, 145, 146, 307, 308, 309, 310], "updat": [143, 144, 145, 146, 307, 308, 309, 310, 642, 651, 671, 686], "compil": [143, 144, 145, 146, 307, 308, 309, 310], "remain": [143, 144, 145, 146, 307, 308, 309, 310], "valid": [149, 150, 313, 314, 326, 327, 339, 340, 352, 353, 367, 368, 383, 384, 400, 401, 416, 417, 433, 434, 450, 451, 467, 468, 491, 492, 508, 509, 525, 526, 542, 543, 558, 559, 574, 575, 590, 591, 606, 607, 623, 624, 684, 685], "against": [149, 150, 313, 314, 326, 327, 339, 340, 352, 353, 354, 355, 367, 368, 383, 384, 400, 401, 416, 417, 433, 434, 450, 451, 467, 468, 491, 492, 508, 509, 525, 526, 542, 543, 558, 559, 568, 574, 575, 590, 591, 606, 607, 623, 624, 684, 685], "schemaerror": [149, 313, 326, 339, 352, 367, 383, 400, 416, 433, 450, 467, 491, 508, 525, 542, 558, 574, 590, 606, 623, 684], "jsonschema": [150, 314, 327, 340, 353, 368, 384, 401, 417, 434, 451, 468, 492, 509, 526, 543, 559, 575, 591, 607, 624, 685], "validationerror": [150, 314, 327, 340, 353, 368, 384, 401, 417, 434, 451, 468, 492, 509, 526, 543, 559, 575, 591, 607, 624, 685], "meshmixin": 151, "veri": 151, "mark": [156, 354, 355], "continu": [156, 690], "thei": [156, 686, 690], "aren": 156, "simultan": [158, 175, 176, 218, 299, 689], "aux_trail": 159, "helper": 159, "process": [160, 487], "travers": 160, "begin": 160, "sequenc": [160, 187, 261, 275, 281, 284, 300, 301, 302, 354, 686], "characterist": 160, "append": 160, "unassign": 160, "part": [160, 690], "previou": 160, "recalcul": 160, "call": [160, 686, 690], "attach": [163, 165], "given": [187, 284, 628, 658], "trail_length": 198, "trail_stat": 198, "deviation_forc": 198, "deviation_st": 198, "quad": 198, "quadmesh": 198, "mean": 198, "whether": [219, 222, 233, 691], "k": [261, 284], "equival": [275, 298], "largest": 275, "ascend": 282, "becom": [284, 487], "sort": 298, "sequence_map": 300, "wherein": [300, 302], "too": [301, 689], "sequences_map": 302, "extra": [321, 334, 347, 655, 686], "absolut": [341, 388, 389, 421, 422, 438, 439, 455, 456, 496, 497, 513, 514, 530, 531, 611, 612], "howev": [341, 689], "combinatori": [341, 687, 689], "preserv": 341, "todo": 341, "addexplicit": 341, "signatur": [341, 686], "constructor": 341, "calcul": [354, 355, 388, 389, 421, 422, 438, 439, 455, 456, 478, 487, 496, 497, 513, 514, 530, 531, 611, 612, 686], "smaller": 354, "ignor": [354, 487, 686], "run": [354, 355, 487, 625, 689, 690], "distanc": [354, 355, 376, 409, 551, 567, 583, 599], "threshold": [354, 355, 487, 625], "converg": [354, 355, 487, 625, 686], "compar": [354, 355, 568], "sum": [354, 355], "hit": [354, 355, 487, 625, 690], "befor": [354, 355, 690], "consum": [354, 355], "stop": [354, 355, 487, 625], "earli": [354, 355, 487, 625], "out": [354, 355, 690, 691], "oper": [354, 355, 689], "formdiagram": [354, 355, 487, 625, 626, 679], "weight": [369, 402, 544, 560, 576, 592], "floatconstraint": [369, 592, 686], "reach": [369, 592], "error": [376, 409, 551, 567, 583, 599, 686, 690], "squar": [376, 409, 487, 551, 567, 583, 599, 625], "differ": [376, 409, 487, 551, 567, 583, 599, 686, 689], "edgeparamet": [385, 608], "parametr": [387, 420, 437, 454, 495, 512, 529, 610, 686], "lower": [388, 421, 438, 455, 496, 513, 530, 611], "minu": [388, 421, 438, 455, 496, 513, 530, 611], "inf": [388, 389, 421, 422, 438, 439, 455, 456, 496, 497, 513, 514, 530, 531, 611, 612], "upper": [389, 422, 439, 456, 497, 514, 531, 612], "plu": [389, 422, 439, 456, 497, 514, 531, 612], "vectorconstraint": [402, 544, 560, 576, 686], "pull": [402, 544, 560], "rai": 402, "nodeparamet": [418, 435, 452, 493, 510, 527], "meet": [469, 689], "problem": [472, 473, 487, 625, 689, 690], "sane": 473, "mind": 473, "grad_f": 478, "step_siz": [478, 487], "gradient": [478, 487, 625, 686], "grad_func": 481, "paremet": 483, "care": 483, "keep": [483, 686, 690], "ckei": 484, "pkei": 485, "kappa": [487, 625, 686], "08": [487, 625], "constrain": [487, 625, 687, 689, 690], "local": [487, 625], "sequenti": [487, 625], "program": [487, 625, 690], "low": [487, 625], "storag": [487, 625], "broyden": [487, 625], "fletcher": [487, 625], "goldfarb": [487, 625], "shanno": [487, 625], "mma": [487, 625], "asymptot": [487, 625], "tnewton": [487, 625], "precondit": [487, 625], "truncat": [487, 625], "newton": [487, 625], "auglag": [487, 625], "augment": [487, 625], "lagrangian": [487, 625], "var": [487, 625, 686], "limit": [487, 625, 642, 671, 690, 691], "memori": [487, 625], "variabl": [487, 625], "metric": [487, 625], "nlopt": [487, 625, 686], "document": [487, 625, 686, 690, 691], "detail": [487, 625], "theoret": [487, 625], "underpin": [487, 625], "differenti": [487, 687, 689], "fd": 487, "finit": [487, 686], "norm": [487, 625], "8": [487, 625, 686], "step": [487, 690], "via": [487, 686, 689], "activ": 487, "cem": [487, 625, 686, 687, 688], "statist": 487, "through": [625, 690], "proxi": 625, "hyperspac": 625, "tunnel": 625, "final": [625, 690], "grad_norm": 625, "cummul": 625, "elaps": 625, "durat": [625, 650], "total": 625, "millisecond": 625, "statu": 625, "item": [626, 627, 628, 641, 645, 646, 648, 656, 657, 658, 670], "networkartist": [626, 656], "artist": [626, 627, 628, 641, 645, 656, 657, 658, 670, 686], "draw": [626, 633, 634, 635, 636, 637, 638, 639, 645, 656, 663, 664, 665, 666, 667, 668, 686], "form_diagram": 626, "collect": [627, 628, 633, 657, 658, 663, 690], "relev": [627, 628, 657, 658], "see": [627, 628, 652, 653, 657, 658], "accord": [627, 657], "item_artist": [627, 657], "regist": [627, 652, 657], "artist_typ": [628, 641, 658, 670], "clear": [630, 631, 660, 661], "canva": [630, 631, 660, 661, 690], "label": [632, 634, 637, 662, 664, 667], "entir": [633, 663], "text": [634, 637, 664, 667], "select": [634, 637, 664, 667], "act": 636, "view": [640, 643, 655, 669, 672], "item_typ": [641, 670], "context": [641, 670], "blender": [641, 670, 689], "visual": [641, 642, 670, 671, 690], "corner": [643, 672], "box": [643, 655, 672], "thin": 644, "wrapper": 644, "compas_plott": 644, "api": [644, 652, 653, 689], "union": [645, 648], "primit": [645, 648], "plotterartist": [645, 646, 648], "paus": [647, 651], "interv": [649, 650], "frame": [649, 686, 689], "record": 649, "dpi": 649, "150": 649, "decor": 649, "dynam": 649, "amount": 651, "listen": 652, "pick": 652, "event": [652, 691], "handler": 652, "doc": 652, "mpl_connect": 652, "handl": 652, "matplotlib": [652, 653], "backend_bases_api": 652, "backend_bas": 652, "figurecanvasbas": 652, "event_handl": 652, "full": [653, 686], "overview": 653, "configur": 653, "pyplot_api": 653, "pyplot": 653, "savefig": 653, "zoom": 655, "topology_diagram": 656, "inscrib": 666, "circl": 666, "node_support": 673, "notabl": 686, "project": [686, 687], "adher": 686, "semant": 686, "moveoriginnod": 686, "gh": [686, 690], "implement": 686, "shifttrail": 686, "number_of_sequ": 686, "enabl": [686, 689], "trails_sequ": 686, "trail_sequ": 686, "shift_trail": 686, "from_dualquadmesh": 686, "color": 686, "klast": 686, "explicit": 686, "ghpython": [686, 690], "formartist": 686, "topologyartist": 686, "prevent": 686, "nan": 686, "equilibrium_state_numpi": 686, "mise": 686, "solve_proxi": 686, "constrainedformfind": 686, "treshold": 686, "is_edge_support": 686, "folder": 686, "prefix": 686, "compascem": 686, "renam": 686, "solve_nlopt": 686, "refactor": 686, "intersect": 686, "static_equilibrium_numpi": 686, "bug": 686, "equilibrium_st": 686, "undefin": 686, "solve_nlopt_proxi": 686, "diagramobject": 686, "topologydiagramobject": 686, "formdiagramobject": 686, "proxyserv": 686, "acceler": 686, "__str__": 686, "nlopt_statu": 686, "better": 686, "interpret": 686, "registr": 686, "creation": 686, "caus": 686, "old": 686, "compas_rhino": [686, 690], "rhinoplan": 686, "from_geometri": 686, "from_rhino_point_and_vector": 686, "from_rhino_point": 686, "from_rhino_lin": 686, "ghdata": 686, "jenssen": 686, "tube": 686, "is_node_support": 686, "search": 686, "plugin": [686, 689], "global": [686, 689], "dark": 686, "blue": 686, "grai": 686, "mechan": 686, "compli": 686, "topologyplott": 686, "formplott": 686, "serializ": 686, "pin": 686, "depend": [686, 689, 690], "due": 686, "networkplott": 686, "green": 686, "light": 686, "assembl": 686, "ghplugin": 686, "wrap": 686, "edgesearch": 686, "drop": [686, 690], "ld": 686, "subscript": 686, "skip": 686, "assembletopologydiagram": 686, "draw_arrow": 686, "_draw_load": 686, "_draw_load_arrow": 686, "arrow": 686, "export": 686, "draw_trail": 686, "topologyartistcompon": 686, "number_of_trail_edg": 686, "number_of_deviation_edg": 686, "__repr__": 686, "edge_kei": 686, "node_kei": 686, "replac": [686, 690], "noderesult": 686, "wit": 686, "supportnoderesult": 686, "merg": [686, 691], "access": 686, "gradient_norm": 686, "expos": 686, "hard": 686, "code": [686, 687, 689, 690], "ghcompon": 686, "to_compa": 686, "planeconstraint": 686, "formfind": 686, "eps_min": 686, "draw_seg": 686, "scheme": 686, "draw_edg": 686, "tight": 686, "autoscal": 686, "save": 686, "overcrop": 686, "imag": 686, "custom": 686, "form_plotter_proxi": 686, "topology_plotter_proxi": 686, "polygon": 686, "took": 686, "temporari": 686, "patch": 686, "deviationedgelengthconstraint": 686, "autograd": 686, "is_auxiliary_trail_edg": 686, "filter": 686, "number_of_auxiliary_trail": 686, "properti": 686, "auxiliary_trail_vector": 686, "under": 686, "anyth": 686, "longer": [686, 690], "reflect": 686, "immut": 686, "children": 686, "penalti": 686, "nodemixin": 686, "node_xyz": 686, "rhino_instal": 686, "streamlin": 686, "symlink": 686, "src": 686, "ghuser": [686, 690], "gitignor": 686, "uninstal": [686, 690], "tag": 686, "regex": 686, "bumpvers": 686, "cfg": 686, "md": 686, "rst": 686, "research": 687, "pleas": [687, 690], "our": [687, 689, 690], "paper": 687, "preprint": 687, "misc": 687, "pastrana_constrainedformfinding_2021": 687, "titl": 687, "pastrana": [687, 689, 691], "rafael": [687, 689, 691], "ohlbrock": [687, 689], "patrick": 687, "ol": [687, 689], "acunto": [687, 689], "pierluigi": [687, 689], "parascho": [687, 689], "stefana": [687, 689], "year": 687, "2021": [687, 691], "arxiv": 687, "ab": 687, "2111": 687, "02607": 687, "eprint": 687, "archiveprefix": 687, "And": 687, "repositori": 687, "softwar": [687, 689, 691], "model": [687, 689, 690], "framework": [687, 689], "doi": 687, "5281": 687, "zenodo": 687, "5705740": 687, "arpastrana": 687, "github": 687, "io": 687, "_cem": 687, "arpj": 687, "princeton": [687, 689], "arch": 687, "ethz": 687, "ch": 687, "oleohlbrock": 687, "pierluigidacunto": 687, "tum": 687, "de": 687, "edu": 687, "stefanaparascho": 687, "excit": 688, "mai": [688, 690], "help": 688, "approach": 689, "spatial": 689, "bar": 689, "subject": [689, 691], "combin": 689, "design": 689, "encapsul": 689, "open": 689, "tool": [689, 690], "formul": 689, "solut": 689, "plain": 689, "mix": 689, "explor": 689, "wider": 689, "spectrum": 689, "typologi": 689, "space": 689, "go": [689, 690], "beyond": 689, "convent": 689, "catalog": 689, "shell": 689, "cabl": 689, "effici": 689, "priori": 689, "best": 689, "fit": [689, 691], "shape": 689, "restrain": 689, "usabl": 689, "across": 689, "system": 689, "window": [689, 690], "maco": [689, 690], "linux": [689, 690], "perhap": 689, "dai": [689, 690], "also": 689, "metavers": 689, "cad": 689, "work": [689, 690], "necessari": 689, "interfac": 689, "seamlessli": 689, "insid": 689, "popular": 689, "environ": 689, "As": [689, 690], "extens": [689, 690], "offer": 689, "integr": 689, "exchang": 689, "ecosystem": 689, "those": [689, 690], "slider": 689, "person": [689, 691], "worri": 689, "ship": 689, "precook": 689, "readili": 689, "engin": [689, 690], "your": 689, "spaghetti": 689, "pipelin": 689, "develop": 689, "endors": 689, "introduct": 689, "changelog": 689, "cite": 689, "licens": 689, "four": 690, "we": 690, "have": 690, "machin": 690, "command": 690, "prompt": 690, "termin": 690, "chose": 690, "spacecowboi": 690, "prefer": 690, "bubbl": 690, "isol": 690, "In": 690, "word": 690, "what": 690, "happen": 690, "stai": 690, "requir": 690, "recommend": 690, "consult": 690, "encount": 690, "being": 690, "abl": 690, "microsoft": 690, "miss": 690, "fail": 690, "saniti": 690, "known": 690, "issu": 690, "page": 690, "instruct": 690, "how": 690, "liner": 690, "To": 690, "everyth": 690, "enter": 690, "celebr": 690, "There": 690, "complex": 690, "easier": 690, "do": [690, 691], "few": 690, "mous": 690, "click": 690, "hundr": 690, "bit": 690, "familiar": 690, "addition": 690, "close": 690, "three": 690, "sure": 690, "proceed": 690, "case": 690, "older": 690, "m": 690, "compani": 690, "let": 690, "compas_ghpython": 690, "were": 690, "wonder": 690, "launch": 690, "onto": 690, "send": 690, "pictur": 690, "onc": 690, "forget": 690, "who": 690, "don": 690, "know": 690, "consequ": 690, "alreadi": 690, "NOT": [690, 691], "past": 690, "latest": 690, "upgrad": 690, "altern": 690, "switch": 690, "had": 690, "mit": 691, "copyright": 691, "2020": 691, "permiss": 691, "herebi": 691, "grant": 691, "charg": 691, "obtain": 691, "associ": 691, "deal": 691, "restrict": 691, "right": 691, "publish": 691, "distribut": 691, "sublicens": 691, "sell": 691, "permit": 691, "whom": 691, "furnish": 691, "so": 691, "abov": 691, "notic": 691, "shall": 691, "substanti": 691, "portion": 691, "THE": 691, "AS": 691, "warranti": 691, "OF": 691, "kind": 691, "express": 691, "OR": 691, "impli": 691, "BUT": 691, "TO": 691, "merchant": 691, "FOR": 691, "particular": 691, "purpos": 691, "AND": 691, "noninfring": 691, "NO": 691, "author": 691, "holder": 691, "BE": 691, "liabl": 691, "claim": 691, "damag": 691, "liabil": 691, "action": 691, "contract": 691, "tort": 691, "aris": 691, "WITH": 691}, "objects": {"": [[13, 0, 0, "-", "compas_cem"]], "compas_cem": [[14, 0, 0, "-", "diagrams"], [15, 0, 0, "-", "elements"], [16, 0, 0, "-", "equilibrium"], [17, 0, 0, "-", "loads"], [18, 0, 0, "-", "optimization"], [19, 0, 0, "-", "plotters"], [20, 0, 0, "-", "supports"], [21, 0, 0, "-", "viewers"]], "compas_cem.diagrams": [[22, 1, 1, "", "FormDiagram"], [151, 1, 1, "", "TopologyDiagram"]], "compas_cem.diagrams.FormDiagram": [[23, 2, 1, "", "ToString"], [24, 2, 1, "", "add_edge"], [25, 2, 1, "", "add_node"], [26, 2, 1, "", "adjacency_matrix"], [27, 2, 1, "", "clear"], [28, 2, 1, "", "complement"], [29, 2, 1, "", "connected_edges"], [30, 2, 1, "", "connectivity_matrix"], [31, 2, 1, "", "copy"], [32, 2, 1, "", "count_crossings"], [33, 2, 1, "", "degree"], [34, 2, 1, "", "degree_in"], [35, 2, 1, "", "degree_matrix"], [36, 2, 1, "", "degree_out"], [37, 2, 1, "", "delete_edge"], [38, 2, 1, "", "delete_node"], [39, 2, 1, "", "edge_attribute"], [40, 2, 1, "", "edge_attributes"], [41, 2, 1, "", "edge_coordinates"], [42, 2, 1, "", "edge_direction"], [43, 2, 1, "", "edge_force"], [44, 2, 1, "", "edge_length"], [45, 2, 1, "", "edge_length_2"], [46, 2, 1, "", "edge_midpoint"], [47, 2, 1, "", "edge_point"], [48, 2, 1, "", "edge_sample"], [49, 2, 1, "", "edge_vector"], [50, 2, 1, "", "edges"], [51, 2, 1, "", "edges_attribute"], [52, 2, 1, "", "edges_attributes"], [53, 2, 1, "", "edges_where"], [54, 2, 1, "", "edges_where_predicate"], [55, 2, 1, "", "embed_in_plane"], [56, 2, 1, "", "find_crossings"], [57, 2, 1, "", "find_cycles"], [58, 2, 1, "", "from_data"], [59, 2, 1, "", "from_edges"], [60, 2, 1, "", "from_json"], [61, 2, 1, "", "from_jsonstring"], [62, 2, 1, "", "from_lines"], [63, 2, 1, "", "from_networkx"], [64, 2, 1, "", "from_nodes_and_edges"], [65, 2, 1, "", "from_obj"], [66, 2, 1, "", "from_pointcloud"], [67, 2, 1, "", "from_topology_diagram"], [68, 2, 1, "", "get_any_edge"], [69, 2, 1, "", "get_any_edges"], [70, 2, 1, "", "get_any_node"], [71, 2, 1, "", "get_any_nodes"], [72, 2, 1, "", "gkey"], [73, 2, 1, "", "gkey_key"], [74, 2, 1, "", "has_edge"], [75, 2, 1, "", "has_node"], [76, 2, 1, "", "index_key"], [77, 2, 1, "", "index_uv"], [78, 2, 1, "", "is_connected"], [79, 2, 1, "", "is_crossed"], [80, 2, 1, "", "is_edge_supported"], [81, 2, 1, "", "is_leaf"], [82, 2, 1, "", "is_node_connected"], [83, 2, 1, "", "is_node_loaded"], [84, 2, 1, "", "is_node_support"], [85, 2, 1, "", "is_planar"], [86, 2, 1, "", "is_planar_embedding"], [87, 2, 1, "", "is_xy"], [88, 2, 1, "", "key_gkey"], [89, 2, 1, "", "key_index"], [90, 2, 1, "", "laplacian_matrix"], [91, 2, 1, "", "leaves"], [92, 2, 1, "", "loaded_nodes"], [93, 2, 1, "", "neighborhood"], [94, 2, 1, "", "neighbors"], [95, 2, 1, "", "neighbors_in"], [96, 2, 1, "", "neighbors_out"], [97, 2, 1, "", "network_adjacency_matrix"], [98, 2, 1, "", "network_connectivity_matrix"], [99, 2, 1, "", "network_degree_matrix"], [100, 2, 1, "", "network_embed_in_plane"], [101, 2, 1, "", "network_is_planar"], [102, 2, 1, "", "network_is_planar_embedding"], [103, 2, 1, "", "network_laplacian_matrix"], [104, 2, 1, "", "node_attribute"], [105, 2, 1, "", "node_attributes"], [106, 2, 1, "", "node_coordinates"], [107, 2, 1, "", "node_exists"], [108, 2, 1, "", "node_gkey"], [109, 2, 1, "", "node_key"], [110, 2, 1, "", "node_laplacian"], [111, 2, 1, "", "node_load"], [112, 2, 1, "", "node_neighborhood_centroid"], [113, 2, 1, "", "node_sample"], [114, 2, 1, "", "node_xyz"], [115, 2, 1, "", "nodes"], [116, 2, 1, "", "nodes_attribute"], [117, 2, 1, "", "nodes_attributes"], [118, 2, 1, "", "nodes_where"], [119, 2, 1, "", "nodes_where_predicate"], [120, 2, 1, "", "number_of_edges"], [121, 2, 1, "", "number_of_loaded_nodes"], [122, 2, 1, "", "number_of_nodes"], [123, 2, 1, "", "number_of_support_nodes"], [124, 2, 1, "", "reaction_force"], [125, 2, 1, "", "sha256"], [126, 2, 1, "", "shortest_path"], [127, 2, 1, "", "smooth"], [128, 2, 1, "", "split_edge"], [129, 2, 1, "", "summary"], [130, 2, 1, "", "support_nodes"], [131, 2, 1, "", "to_data"], [132, 2, 1, "", "to_json"], [133, 2, 1, "", "to_jsonstring"], [134, 2, 1, "", "to_lines"], [135, 2, 1, "", "to_networkx"], [136, 2, 1, "", "to_nodes_and_edges"], [137, 2, 1, "", "to_obj"], [138, 2, 1, "", "to_points"], [139, 2, 1, "", "transform"], [140, 2, 1, "", "transformed"], [141, 2, 1, "", "unset_edge_attribute"], [142, 2, 1, "", "unset_node_attribute"], [143, 2, 1, "", "update_dea"], [144, 2, 1, "", "update_default_edge_attributes"], [145, 2, 1, "", "update_default_node_attributes"], [146, 2, 1, "", "update_dna"], [147, 2, 1, "", "update_node_xyz"], [148, 2, 1, "", "uv_index"], [149, 2, 1, "", "validate_data"], [150, 2, 1, "", "validate_json"]], "compas_cem.diagrams.TopologyDiagram": [[152, 2, 1, "", "ToString"], [153, 2, 1, "", "add_edge"], [154, 2, 1, "", "add_load"], [155, 2, 1, "", "add_node"], [156, 2, 1, "", "add_support"], [157, 2, 1, "", "adjacency_matrix"], [158, 2, 1, "", "auxiliary_trail_edges"], [159, 2, 1, "", "auxiliary_trails"], [160, 2, 1, "", "build_trails"], [161, 2, 1, "", "clear"], [162, 2, 1, "", "complement"], [163, 2, 1, "", "connected_deviation_edges"], [164, 2, 1, "", "connected_edges"], [165, 2, 1, "", "connected_trail_edges"], [166, 2, 1, "", "connectivity_matrix"], [167, 2, 1, "", "copy"], [168, 2, 1, "", "count_crossings"], [169, 2, 1, "", "degree"], [170, 2, 1, "", "degree_in"], [171, 2, 1, "", "degree_matrix"], [172, 2, 1, "", "degree_out"], [173, 2, 1, "", "delete_edge"], [174, 2, 1, "", "delete_node"], [175, 2, 1, "", "deviation_edges"], [176, 2, 1, "", "direct_deviation_edges"], [177, 2, 1, "", "edge_attribute"], [178, 2, 1, "", "edge_attributes"], [179, 2, 1, "", "edge_coordinates"], [180, 2, 1, "", "edge_direction"], [181, 2, 1, "", "edge_force"], [182, 2, 1, "", "edge_length"], [183, 2, 1, "", "edge_length_2"], [184, 2, 1, "", "edge_midpoint"], [185, 2, 1, "", "edge_point"], [186, 2, 1, "", "edge_sample"], [187, 2, 1, "", "edge_sequence"], [188, 2, 1, "", "edge_vector"], [189, 2, 1, "", "edges"], [190, 2, 1, "", "edges_attribute"], [191, 2, 1, "", "edges_attributes"], [192, 2, 1, "", "edges_where"], [193, 2, 1, "", "edges_where_predicate"], [194, 2, 1, "", "embed_in_plane"], [195, 2, 1, "", "find_crossings"], [196, 2, 1, "", "find_cycles"], [197, 2, 1, "", "from_data"], [198, 2, 1, "", "from_dualquadmesh"], [199, 2, 1, "", "from_edges"], [200, 2, 1, "", "from_json"], [201, 2, 1, "", "from_jsonstring"], [202, 2, 1, "", "from_lines"], [203, 2, 1, "", "from_networkx"], [204, 2, 1, "", "from_nodes_and_edges"], [205, 2, 1, "", "from_obj"], [206, 2, 1, "", "from_pointcloud"], [207, 2, 1, "", "get_any_edge"], [208, 2, 1, "", "get_any_edges"], [209, 2, 1, "", "get_any_node"], [210, 2, 1, "", "get_any_nodes"], [211, 2, 1, "", "gkey"], [212, 2, 1, "", "gkey_key"], [213, 2, 1, "", "has_edge"], [214, 2, 1, "", "has_node"], [215, 2, 1, "", "has_trails"], [216, 2, 1, "", "index_key"], [217, 2, 1, "", "index_uv"], [218, 2, 1, "", "indirect_deviation_edges"], [219, 2, 1, "", "is_auxiliary_trail_edge"], [220, 2, 1, "", "is_connected"], [221, 2, 1, "", "is_crossed"], [222, 2, 1, "", "is_deviation_edge"], [223, 2, 1, "", "is_direct_deviation_edge"], [224, 2, 1, "", "is_edge_supported"], [225, 2, 1, "", "is_indirect_deviation_edge"], [226, 2, 1, "", "is_leaf"], [227, 2, 1, "", "is_node_connected"], [228, 2, 1, "", "is_node_loaded"], [229, 2, 1, "", "is_node_origin"], [230, 2, 1, "", "is_node_support"], [231, 2, 1, "", "is_planar"], [232, 2, 1, "", "is_planar_embedding"], [233, 2, 1, "", "is_trail_edge"], [234, 2, 1, "", "is_xy"], [235, 2, 1, "", "key_gkey"], [236, 2, 1, "", "key_index"], [237, 2, 1, "", "laplacian_matrix"], [238, 2, 1, "", "leaves"], [239, 2, 1, "", "loaded_nodes"], [240, 2, 1, "", "neighborhood"], [241, 2, 1, "", "neighbors"], [242, 2, 1, "", "neighbors_in"], [243, 2, 1, "", "neighbors_out"], [244, 2, 1, "", "network_adjacency_matrix"], [245, 2, 1, "", "network_connectivity_matrix"], [246, 2, 1, "", "network_degree_matrix"], [247, 2, 1, "", "network_embed_in_plane"], [248, 2, 1, "", "network_is_planar"], [249, 2, 1, "", "network_is_planar_embedding"], [250, 2, 1, "", "network_laplacian_matrix"], [251, 2, 1, "", "node_attribute"], [252, 2, 1, "", "node_attributes"], [253, 2, 1, "", "node_coordinates"], [254, 2, 1, "", "node_exists"], [255, 2, 1, "", "node_gkey"], [256, 2, 1, "", "node_key"], [257, 2, 1, "", "node_laplacian"], [258, 2, 1, "", "node_load"], [259, 2, 1, "", "node_neighborhood_centroid"], [260, 2, 1, "", "node_sample"], [261, 2, 1, "", "node_sequence"], [262, 2, 1, "", "node_xyz"], [263, 2, 1, "", "nodes"], [264, 2, 1, "", "nodes_attribute"], [265, 2, 1, "", "nodes_attributes"], [266, 2, 1, "", "nodes_where"], [267, 2, 1, "", "nodes_where_predicate"], [268, 2, 1, "", "number_of_auxiliary_trails"], [269, 2, 1, "", "number_of_deviation_edges"], [270, 2, 1, "", "number_of_direct_deviation_edges"], [271, 2, 1, "", "number_of_edges"], [272, 2, 1, "", "number_of_indirect_deviation_edges"], [273, 2, 1, "", "number_of_loaded_nodes"], [274, 2, 1, "", "number_of_nodes"], [275, 2, 1, "", "number_of_sequences"], [276, 2, 1, "", "number_of_support_nodes"], [277, 2, 1, "", "number_of_trail_edges"], [278, 2, 1, "", "number_of_trails"], [279, 2, 1, "", "origin_nodes"], [280, 2, 1, "", "reaction_force"], [281, 2, 1, "", "sequence_last"], [282, 2, 1, "", "sequences"], [283, 2, 1, "", "sha256"], [284, 2, 1, "", "shift_trail"], [285, 2, 1, "", "shortest_path"], [286, 2, 1, "", "smooth"], [287, 2, 1, "", "split_edge"], [288, 2, 1, "", "summary"], [289, 2, 1, "", "support_nodes"], [290, 2, 1, "", "to_data"], [291, 2, 1, "", "to_json"], [292, 2, 1, "", "to_jsonstring"], [293, 2, 1, "", "to_lines"], [294, 2, 1, "", "to_networkx"], [295, 2, 1, "", "to_nodes_and_edges"], [296, 2, 1, "", "to_obj"], [297, 2, 1, "", "to_points"], [298, 2, 1, "", "trail"], [299, 2, 1, "", "trail_edges"], [300, 2, 1, "", "trail_sequences"], [301, 2, 1, "", "trails"], [302, 2, 1, "", "trails_sequences"], [303, 2, 1, "", "transform"], [304, 2, 1, "", "transformed"], [305, 2, 1, "", "unset_edge_attribute"], [306, 2, 1, "", "unset_node_attribute"], [307, 2, 1, "", "update_dea"], [308, 2, 1, "", "update_default_edge_attributes"], [309, 2, 1, "", "update_default_node_attributes"], [310, 2, 1, "", "update_dna"], [311, 2, 1, "", "update_node_xyz"], [312, 2, 1, "", "uv_index"], [313, 2, 1, "", "validate_data"], [314, 2, 1, "", "validate_json"]], "compas_cem.elements": [[315, 1, 1, "", "DeviationEdge"], [328, 1, 1, "", "Node"], [341, 1, 1, "", "TrailEdge"]], "compas_cem.elements.DeviationEdge": [[316, 2, 1, "", "ToString"], [317, 2, 1, "", "copy"], [318, 2, 1, "", "from_data"], [319, 2, 1, "", "from_json"], [320, 2, 1, "", "from_jsonstring"], [321, 2, 1, "", "from_line"], [322, 2, 1, "", "sha256"], [323, 2, 1, "", "to_data"], [324, 2, 1, "", "to_json"], [325, 2, 1, "", "to_jsonstring"], [326, 2, 1, "", "validate_data"], [327, 2, 1, "", "validate_json"]], "compas_cem.elements.Node": [[329, 2, 1, "", "ToString"], [330, 2, 1, "", "copy"], [331, 2, 1, "", "from_data"], [332, 2, 1, "", "from_json"], [333, 2, 1, "", "from_jsonstring"], [334, 2, 1, "", "from_point"], [335, 2, 1, "", "sha256"], [336, 2, 1, "", "to_data"], [337, 2, 1, "", "to_json"], [338, 2, 1, "", "to_jsonstring"], [339, 2, 1, "", "validate_data"], [340, 2, 1, "", "validate_json"]], "compas_cem.elements.TrailEdge": [[342, 2, 1, "", "ToString"], [343, 2, 1, "", "copy"], [344, 2, 1, "", "from_data"], [345, 2, 1, "", "from_json"], [346, 2, 1, "", "from_jsonstring"], [347, 2, 1, "", "from_line"], [348, 2, 1, "", "sha256"], [349, 2, 1, "", "to_data"], [350, 2, 1, "", "to_json"], [351, 2, 1, "", "to_jsonstring"], [352, 2, 1, "", "validate_data"], [353, 2, 1, "", "validate_json"]], "compas_cem.equilibrium": [[354, 3, 1, "", "static_equilibrium"], [355, 3, 1, "", "static_equilibrium_numpy"]], "compas_cem.loads": [[356, 1, 1, "", "NodeLoad"]], "compas_cem.loads.NodeLoad": [[357, 2, 1, "", "ToString"], [358, 2, 1, "", "copy"], [359, 2, 1, "", "from_data"], [360, 2, 1, "", "from_json"], [361, 2, 1, "", "from_jsonstring"], [362, 2, 1, "", "from_point_and_vector"], [363, 2, 1, "", "sha256"], [364, 2, 1, "", "to_data"], [365, 2, 1, "", "to_json"], [366, 2, 1, "", "to_jsonstring"], [367, 2, 1, "", "validate_data"], [368, 2, 1, "", "validate_json"]], "compas_cem.optimization": [[369, 1, 1, "", "DeviationEdgeLengthConstraint"], [385, 1, 1, "", "DeviationEdgeParameter"], [402, 1, 1, "", "LineConstraint"], [418, 1, 1, "", "NodeLoadXParameter"], [435, 1, 1, "", "NodeLoadYParameter"], [452, 1, 1, "", "NodeLoadZParameter"], [469, 1, 1, "", "Optimizer"], [493, 1, 1, "", "OriginNodeXParameter"], [510, 1, 1, "", "OriginNodeYParameter"], [527, 1, 1, "", "OriginNodeZParameter"], [544, 1, 1, "", "PlaneConstraint"], [560, 1, 1, "", "PointConstraint"], [576, 1, 1, "", "ReactionForceConstraint"], [592, 1, 1, "", "TrailEdgeForceConstraint"], [608, 1, 1, "", "TrailEdgeParameter"], [625, 3, 1, "", "solve_proxy"]], "compas_cem.optimization.DeviationEdgeLengthConstraint": [[370, 2, 1, "", "ToString"], [371, 2, 1, "", "copy"], [372, 2, 1, "", "from_data"], [373, 2, 1, "", "from_json"], [374, 2, 1, "", "from_jsonstring"], [375, 2, 1, "", "key"], [376, 2, 1, "", "penalty"], [377, 2, 1, "", "reference"], [378, 2, 1, "", "sha256"], [379, 2, 1, "", "target"], [380, 2, 1, "", "to_data"], [381, 2, 1, "", "to_json"], [382, 2, 1, "", "to_jsonstring"], [383, 2, 1, "", "validate_data"], [384, 2, 1, "", "validate_json"]], "compas_cem.optimization.DeviationEdgeParameter": [[386, 2, 1, "", "ToString"], [387, 2, 1, "", "attr_name"], [388, 2, 1, "", "bound_low"], [389, 2, 1, "", "bound_up"], [390, 2, 1, "", "copy"], [391, 2, 1, "", "from_data"], [392, 2, 1, "", "from_json"], [393, 2, 1, "", "from_jsonstring"], [394, 2, 1, "", "key"], [395, 2, 1, "", "sha256"], [396, 2, 1, "", "start_value"], [397, 2, 1, "", "to_data"], [398, 2, 1, "", "to_json"], [399, 2, 1, "", "to_jsonstring"], [400, 2, 1, "", "validate_data"], [401, 2, 1, "", "validate_json"]], "compas_cem.optimization.LineConstraint": [[403, 2, 1, "", "ToString"], [404, 2, 1, "", "copy"], [405, 2, 1, "", "from_data"], [406, 2, 1, "", "from_json"], [407, 2, 1, "", "from_jsonstring"], [408, 2, 1, "", "key"], [409, 2, 1, "", "penalty"], [410, 2, 1, "", "reference"], [411, 2, 1, "", "sha256"], [412, 2, 1, "", "target"], [413, 2, 1, "", "to_data"], [414, 2, 1, "", "to_json"], [415, 2, 1, "", "to_jsonstring"], [416, 2, 1, "", "validate_data"], [417, 2, 1, "", "validate_json"]], "compas_cem.optimization.NodeLoadXParameter": [[419, 2, 1, "", "ToString"], [420, 2, 1, "", "attr_name"], [421, 2, 1, "", "bound_low"], [422, 2, 1, "", "bound_up"], [423, 2, 1, "", "copy"], [424, 2, 1, "", "from_data"], [425, 2, 1, "", "from_json"], [426, 2, 1, "", "from_jsonstring"], [427, 2, 1, "", "key"], [428, 2, 1, "", "sha256"], [429, 2, 1, "", "start_value"], [430, 2, 1, "", "to_data"], [431, 2, 1, "", "to_json"], [432, 2, 1, "", "to_jsonstring"], [433, 2, 1, "", "validate_data"], [434, 2, 1, "", "validate_json"]], "compas_cem.optimization.NodeLoadYParameter": [[436, 2, 1, "", "ToString"], [437, 2, 1, "", "attr_name"], [438, 2, 1, "", "bound_low"], [439, 2, 1, "", "bound_up"], [440, 2, 1, "", "copy"], [441, 2, 1, "", "from_data"], [442, 2, 1, "", "from_json"], [443, 2, 1, "", "from_jsonstring"], [444, 2, 1, "", "key"], [445, 2, 1, "", "sha256"], [446, 2, 1, "", "start_value"], [447, 2, 1, "", "to_data"], [448, 2, 1, "", "to_json"], [449, 2, 1, "", "to_jsonstring"], [450, 2, 1, "", "validate_data"], [451, 2, 1, "", "validate_json"]], "compas_cem.optimization.NodeLoadZParameter": [[453, 2, 1, "", "ToString"], [454, 2, 1, "", "attr_name"], [455, 2, 1, "", "bound_low"], [456, 2, 1, "", "bound_up"], [457, 2, 1, "", "copy"], [458, 2, 1, "", "from_data"], [459, 2, 1, "", "from_json"], [460, 2, 1, "", "from_jsonstring"], [461, 2, 1, "", "key"], [462, 2, 1, "", "sha256"], [463, 2, 1, "", "start_value"], [464, 2, 1, "", "to_data"], [465, 2, 1, "", "to_json"], [466, 2, 1, "", "to_jsonstring"], [467, 2, 1, "", "validate_data"], [468, 2, 1, "", "validate_json"]], "compas_cem.optimization.Optimizer": [[470, 2, 1, "", "ToString"], [471, 2, 1, "", "add_constraint"], [472, 2, 1, "", "add_parameter"], [473, 2, 1, "", "check_optimization_sanity"], [474, 2, 1, "", "copy"], [475, 2, 1, "", "from_data"], [476, 2, 1, "", "from_json"], [477, 2, 1, "", "from_jsonstring"], [478, 2, 1, "", "gradient_func"], [479, 2, 1, "", "number_of_constraints"], [480, 2, 1, "", "number_of_parameters"], [481, 2, 1, "", "objective_func"], [482, 2, 1, "", "optimization_bounds"], [483, 2, 1, "", "optimization_parameters"], [484, 2, 1, "", "remove_constraint"], [485, 2, 1, "", "remove_parameter"], [486, 2, 1, "", "sha256"], [487, 2, 1, "", "solve"], [488, 2, 1, "", "to_data"], [489, 2, 1, "", "to_json"], [490, 2, 1, "", "to_jsonstring"], [491, 2, 1, "", "validate_data"], [492, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeXParameter": [[494, 2, 1, "", "ToString"], [495, 2, 1, "", "attr_name"], [496, 2, 1, "", "bound_low"], [497, 2, 1, "", "bound_up"], [498, 2, 1, "", "copy"], [499, 2, 1, "", "from_data"], [500, 2, 1, "", "from_json"], [501, 2, 1, "", "from_jsonstring"], [502, 2, 1, "", "key"], [503, 2, 1, "", "sha256"], [504, 2, 1, "", "start_value"], [505, 2, 1, "", "to_data"], [506, 2, 1, "", "to_json"], [507, 2, 1, "", "to_jsonstring"], [508, 2, 1, "", "validate_data"], [509, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeYParameter": [[511, 2, 1, "", "ToString"], [512, 2, 1, "", "attr_name"], [513, 2, 1, "", "bound_low"], [514, 2, 1, "", "bound_up"], [515, 2, 1, "", "copy"], [516, 2, 1, "", "from_data"], [517, 2, 1, "", "from_json"], [518, 2, 1, "", "from_jsonstring"], [519, 2, 1, "", "key"], [520, 2, 1, "", "sha256"], [521, 2, 1, "", "start_value"], [522, 2, 1, "", "to_data"], [523, 2, 1, "", "to_json"], [524, 2, 1, "", "to_jsonstring"], [525, 2, 1, "", "validate_data"], [526, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeZParameter": [[528, 2, 1, "", "ToString"], [529, 2, 1, "", "attr_name"], [530, 2, 1, "", "bound_low"], [531, 2, 1, "", "bound_up"], [532, 2, 1, "", "copy"], [533, 2, 1, "", "from_data"], [534, 2, 1, "", "from_json"], [535, 2, 1, "", "from_jsonstring"], [536, 2, 1, "", "key"], [537, 2, 1, "", "sha256"], [538, 2, 1, "", "start_value"], [539, 2, 1, "", "to_data"], [540, 2, 1, "", "to_json"], [541, 2, 1, "", "to_jsonstring"], [542, 2, 1, "", "validate_data"], [543, 2, 1, "", "validate_json"]], "compas_cem.optimization.PlaneConstraint": [[545, 2, 1, "", "ToString"], [546, 2, 1, "", "copy"], [547, 2, 1, "", "from_data"], [548, 2, 1, "", "from_json"], [549, 2, 1, "", "from_jsonstring"], [550, 2, 1, "", "key"], [551, 2, 1, "", "penalty"], [552, 2, 1, "", "reference"], [553, 2, 1, "", "sha256"], [554, 2, 1, "", "target"], [555, 2, 1, "", "to_data"], [556, 2, 1, "", "to_json"], [557, 2, 1, "", "to_jsonstring"], [558, 2, 1, "", "validate_data"], [559, 2, 1, "", "validate_json"]], "compas_cem.optimization.PointConstraint": [[561, 2, 1, "", "ToString"], [562, 2, 1, "", "copy"], [563, 2, 1, "", "from_data"], [564, 2, 1, "", "from_json"], [565, 2, 1, "", "from_jsonstring"], [566, 2, 1, "", "key"], [567, 2, 1, "", "penalty"], [568, 2, 1, "", "reference"], [569, 2, 1, "", "sha256"], [570, 2, 1, "", "target"], [571, 2, 1, "", "to_data"], [572, 2, 1, "", "to_json"], [573, 2, 1, "", "to_jsonstring"], [574, 2, 1, "", "validate_data"], [575, 2, 1, "", "validate_json"]], "compas_cem.optimization.ReactionForceConstraint": [[577, 2, 1, "", "ToString"], [578, 2, 1, "", "copy"], [579, 2, 1, "", "from_data"], [580, 2, 1, "", "from_json"], [581, 2, 1, "", "from_jsonstring"], [582, 2, 1, "", "key"], [583, 2, 1, "", "penalty"], [584, 2, 1, "", "reference"], [585, 2, 1, "", "sha256"], [586, 2, 1, "", "target"], [587, 2, 1, "", "to_data"], [588, 2, 1, "", "to_json"], [589, 2, 1, "", "to_jsonstring"], [590, 2, 1, "", "validate_data"], [591, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeForceConstraint": [[593, 2, 1, "", "ToString"], [594, 2, 1, "", "copy"], [595, 2, 1, "", "from_data"], [596, 2, 1, "", "from_json"], [597, 2, 1, "", "from_jsonstring"], [598, 2, 1, "", "key"], [599, 2, 1, "", "penalty"], [600, 2, 1, "", "reference"], [601, 2, 1, "", "sha256"], [602, 2, 1, "", "target"], [603, 2, 1, "", "to_data"], [604, 2, 1, "", "to_json"], [605, 2, 1, "", "to_jsonstring"], [606, 2, 1, "", "validate_data"], [607, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeParameter": [[609, 2, 1, "", "ToString"], [610, 2, 1, "", "attr_name"], [611, 2, 1, "", "bound_low"], [612, 2, 1, "", "bound_up"], [613, 2, 1, "", "copy"], [614, 2, 1, "", "from_data"], [615, 2, 1, "", "from_json"], [616, 2, 1, "", "from_jsonstring"], [617, 2, 1, "", "key"], [618, 2, 1, "", "sha256"], [619, 2, 1, "", "start_value"], [620, 2, 1, "", "to_data"], [621, 2, 1, "", "to_json"], [622, 2, 1, "", "to_jsonstring"], [623, 2, 1, "", "validate_data"], [624, 2, 1, "", "validate_json"]], "compas_cem.plotters": [[626, 1, 1, "", "FormArtist"], [644, 1, 1, "", "Plotter"], [656, 1, 1, "", "TopologyArtist"]], "compas_cem.plotters.FormArtist": [[627, 2, 1, "", "build"], [628, 2, 1, "", "build_as"], [629, 2, 1, "", "clear"], [630, 2, 1, "", "clear_edges"], [631, 2, 1, "", "clear_nodes"], [632, 2, 1, "", "draw"], [633, 2, 1, "", "draw_collection"], [634, 2, 1, "", "draw_edgelabels"], [635, 2, 1, "", "draw_edges"], [636, 2, 1, "", "draw_loads"], [637, 2, 1, "", "draw_nodelabels"], [638, 2, 1, "", "draw_nodes"], [639, 2, 1, "", "draw_reactions"], [640, 2, 1, "", "redraw"], [641, 2, 1, "", "register"], [642, 2, 1, "", "update_data"], [643, 2, 1, "", "viewbox"]], "compas_cem.plotters.Plotter": [[645, 2, 1, "", "add"], [646, 2, 1, "", "add_from_list"], [647, 2, 1, "", "draw"], [648, 2, 1, "", "find"], [649, 2, 1, "", "on"], [650, 2, 1, "", "pause"], [651, 2, 1, "", "redraw"], [652, 2, 1, "", "register_listener"], [653, 2, 1, "", "save"], [654, 2, 1, "", "show"], [655, 2, 1, "", "zoom_extents"]], "compas_cem.plotters.TopologyArtist": [[657, 2, 1, "", "build"], [658, 2, 1, "", "build_as"], [659, 2, 1, "", "clear"], [660, 2, 1, "", "clear_edges"], [661, 2, 1, "", "clear_nodes"], [662, 2, 1, "", "draw"], [663, 2, 1, "", "draw_collection"], [664, 2, 1, "", "draw_edgelabels"], [665, 2, 1, "", "draw_edges"], [666, 2, 1, "", "draw_loads"], [667, 2, 1, "", "draw_nodelabels"], [668, 2, 1, "", "draw_nodes"], [669, 2, 1, "", "redraw"], [670, 2, 1, "", "register"], [671, 2, 1, "", "update_data"], [672, 2, 1, "", "viewbox"]], "compas_cem.supports": [[673, 1, 1, "", "NodeSupport"]], "compas_cem.supports.NodeSupport": [[674, 2, 1, "", "ToString"], [675, 2, 1, "", "copy"], [676, 2, 1, "", "from_data"], [677, 2, 1, "", "from_json"], [678, 2, 1, "", "from_jsonstring"], [679, 2, 1, "", "from_point"], [680, 2, 1, "", "sha256"], [681, 2, 1, "", "to_data"], [682, 2, 1, "", "to_json"], [683, 2, 1, "", "to_jsonstring"], [684, 2, 1, "", "validate_data"], [685, 2, 1, "", "validate_json"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"python": 0, "01": 1, "simpl": 1, "compress": 1, "structur": [1, 4], "02": 2, "brace": 2, "tower": 2, "2d": [2, 3, 4, 7], "03": 3, "bridg": [3, 7, 8], "optim": [3, 18, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492], "04": 4, "tree": 4, "05": 5, "planar": 5, "tensegr": [5, 10], "wheel": 5, "grasshopp": [6, 690], "A": 7, "b": 8, "tubular": 8, "3d": 8, "c": 9, "circular": 9, "dome": 9, "d": 10, "jessen": 10, "e": 11, "spiral": 11, "staircas": 11, "api": 12, "refer": [12, 377, 410, 552, 568, 584, 600], "compas_cem": [13, 14, 15, 16, 17, 18, 19, 20, 21], "diagram": 14, "element": 15, "edg": [15, 50, 189], "node": [15, 115, 263, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "equilibrium": 16, "load": 17, "constraint": 18, "paramet": 18, "plotter": [19, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655], "artist": 19, "support": 20, "viewer": 21, "visual": 21, "object": 21, "formdiagram": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150], "tostr": [23, 152, 316, 329, 342, 357, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 674], "add_edg": [24, 153], "add_nod": [25, 155], "adjacency_matrix": [26, 157], "clear": [27, 161, 629, 659], "complement": [28, 162], "connected_edg": [29, 164], "connectivity_matrix": [30, 166], "copi": [31, 167, 317, 330, 343, 358, 371, 390, 404, 423, 440, 457, 474, 498, 515, 532, 546, 562, 578, 594, 613, 675], "count_cross": [32, 168], "degre": [33, 169], "degree_in": [34, 170], "degree_matrix": [35, 171], "degree_out": [36, 172], "delete_edg": [37, 173], "delete_nod": [38, 174], "edge_attribut": [39, 40, 177, 178], "edge_coordin": [41, 179], "edge_direct": [42, 180], "edge_forc": [43, 181], "edge_length": [44, 182], "edge_length_2": [45, 183], "edge_midpoint": [46, 184], "edge_point": [47, 185], "edge_sampl": [48, 186], "edge_vector": [49, 188], "edges_attribut": [51, 52, 190, 191], "edges_wher": [53, 192], "edges_where_pred": [54, 193], "embed_in_plan": [55, 194], "find_cross": [56, 195], "find_cycl": [57, 196], "from_data": [58, 197, 318, 331, 344, 359, 372, 391, 405, 424, 441, 458, 475, 499, 516, 533, 547, 563, 579, 595, 614, 676], "from_edg": [59, 199], "from_json": [60, 200, 319, 332, 345, 360, 373, 392, 406, 425, 442, 459, 476, 500, 517, 534, 548, 564, 580, 596, 615, 677], "from_jsonstr": [61, 201, 320, 333, 346, 361, 374, 393, 407, 426, 443, 460, 477, 501, 518, 535, 549, 565, 581, 597, 616, 678], "from_lin": [62, 202, 321, 347], "from_networkx": [63, 203], "from_nodes_and_edg": [64, 204], "from_obj": [65, 205], "from_pointcloud": [66, 206], "from_topology_diagram": 67, "get_any_edg": [68, 69, 207, 208], "get_any_nod": [70, 71, 209, 210], "gkei": [72, 211], "gkey_kei": [73, 212], "has_edg": [74, 213], "has_nod": [75, 214], "index_kei": [76, 216], "index_uv": [77, 217], "is_connect": [78, 220], "is_cross": [79, 221], "is_edge_support": [80, 224], "is_leaf": [81, 226], "is_node_connect": [82, 227], "is_node_load": [83, 228], "is_node_support": [84, 230], "is_planar": [85, 231], "is_planar_embed": [86, 232], "is_xi": [87, 234], "key_gkei": [88, 235], "key_index": [89, 236], "laplacian_matrix": [90, 237], "leav": [91, 238], "loaded_nod": [92, 239], "neighborhood": [93, 240], "neighbor": [94, 241], "neighbors_in": [95, 242], "neighbors_out": [96, 243], "network_adjacency_matrix": [97, 244], "network_connectivity_matrix": [98, 245], "network_degree_matrix": [99, 246], "network_embed_in_plan": [100, 247], "network_is_planar": [101, 248], "network_is_planar_embed": [102, 249], "network_laplacian_matrix": [103, 250], "node_attribut": [104, 105, 251, 252], "node_coordin": [106, 253], "node_exist": [107, 254], "node_gkei": [108, 255], "node_kei": [109, 256], "node_laplacian": [110, 257], "node_load": [111, 258], "node_neighborhood_centroid": [112, 259], "node_sampl": [113, 260], "node_xyz": [114, 262], "nodes_attribut": [116, 117, 264, 265], "nodes_wher": [118, 266], "nodes_where_pred": [119, 267], "number_of_edg": [120, 271], "number_of_loaded_nod": [121, 273], "number_of_nod": [122, 274], "number_of_support_nod": [123, 276], "reaction_forc": [124, 280], "sha256": [125, 283, 322, 335, 348, 363, 378, 395, 411, 428, 445, 462, 486, 503, 520, 537, 553, 569, 585, 601, 618, 680], "shortest_path": [126, 285], "smooth": [127, 286], "split_edg": [128, 287], "summari": [129, 288], "support_nod": [130, 289], "to_data": [131, 290, 323, 336, 349, 364, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 681], "to_json": [132, 291, 324, 337, 350, 365, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 682], "to_jsonstr": [133, 292, 325, 338, 351, 366, 382, 399, 415, 432, 449, 466, 490, 507, 524, 541, 557, 573, 589, 605, 622, 683], "to_lin": [134, 293], "to_networkx": [135, 294], "to_nodes_and_edg": [136, 295], "to_obj": [137, 296], "to_point": [138, 297], "transform": [139, 140, 303, 304], "unset_edge_attribut": [141, 305], "unset_node_attribut": [142, 306], "update_dea": [143, 307], "update_default_edge_attribut": [144, 308], "update_default_node_attribut": [145, 309], "update_dna": [146, 310], "update_node_xyz": [147, 311], "uv_index": [148, 312], "validate_data": [149, 313, 326, 339, 352, 367, 383, 400, 416, 433, 450, 467, 491, 508, 525, 542, 558, 574, 590, 606, 623, 684], "validate_json": [150, 314, 327, 340, 353, 368, 384, 401, 417, 434, 451, 468, 492, 509, 526, 543, 559, 575, 591, 607, 624, 685], "topologydiagram": [151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "add_load": 154, "add_support": 156, "auxiliary_trail_edg": 158, "auxiliary_trail": 159, "build_trail": 160, "connected_deviation_edg": 163, "connected_trail_edg": 165, "deviation_edg": 175, "direct_deviation_edg": 176, "edge_sequ": 187, "from_dualquadmesh": 198, "has_trail": 215, "indirect_deviation_edg": 218, "is_auxiliary_trail_edg": 219, "is_deviation_edg": 222, "is_direct_deviation_edg": 223, "is_indirect_deviation_edg": 225, "is_node_origin": 229, "is_trail_edg": 233, "node_sequ": 261, "number_of_auxiliary_trail": 268, "number_of_deviation_edg": 269, "number_of_direct_deviation_edg": 270, "number_of_indirect_deviation_edg": 272, "number_of_sequ": 275, "number_of_trail_edg": 277, "number_of_trail": 278, "origin_nod": 279, "sequence_last": 281, "sequenc": 282, "shift_trail": 284, "trail": [298, 301], "trail_edg": 299, "trail_sequ": 300, "trails_sequ": 302, "deviationedg": [315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327], "from_point": [334, 679], "trailedg": [341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353], "static_equilibrium": 354, "static_equilibrium_numpi": 355, "nodeload": [356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368], "from_point_and_vector": 362, "deviationedgelengthconstraint": [369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384], "kei": [375, 394, 408, 427, 444, 461, 502, 519, 536, 550, 566, 582, 598, 617], "penalti": [376, 409, 551, 567, 583, 599], "target": [379, 412, 554, 570, 586, 602], "deviationedgeparamet": [385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "attr_nam": [387, 420, 437, 454, 495, 512, 529, 610], "bound_low": [388, 421, 438, 455, 496, 513, 530, 611], "bound_up": [389, 422, 439, 456, 497, 514, 531, 612], "start_valu": [396, 429, 446, 463, 504, 521, 538, 619], "lineconstraint": [402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "nodeloadxparamet": [418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434], "nodeloadyparamet": [435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451], "nodeloadzparamet": [452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "add_constraint": 471, "add_paramet": 472, "check_optimization_san": 473, "gradient_func": 478, "number_of_constraint": 479, "number_of_paramet": 480, "objective_func": 481, "optimization_bound": 482, "optimization_paramet": 483, "remove_constraint": 484, "remove_paramet": 485, "solv": 487, "originnodexparamet": [493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509], "originnodeyparamet": [510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526], "originnodezparamet": [527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "planeconstraint": [544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559], "pointconstraint": [560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575], "reactionforceconstraint": [576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591], "trailedgeforceconstraint": [592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607], "trailedgeparamet": [608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624], "solve_proxi": 625, "formartist": [626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643], "build": [627, 657], "build_a": [628, 658], "clear_edg": [630, 660], "clear_nod": [631, 661], "draw": [632, 647, 662], "draw_collect": [633, 663], "draw_edgelabel": [634, 664], "draw_edg": [635, 665], "draw_load": [636, 666], "draw_nodelabel": [637, 667], "draw_nod": [638, 668], "draw_react": 639, "redraw": [640, 651, 669], "regist": [641, 670], "update_data": [642, 671], "viewbox": [643, 672], "add": 645, "add_from_list": 646, "find": 648, "paus": 650, "register_listen": 652, "save": 653, "show": 654, "zoom_ext": 655, "topologyartist": [656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672], "nodesupport": [673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685], "changelog": 686, "unreleas": 686, "0": 686, "6": 686, "1": [686, 690], "5": 686, "4": [686, 690], "2": [686, 690], "15": 686, "14": 686, "13": 686, "12": 686, "11": 686, "9": 686, "3": [686, 690], "cite": 687, "author": 687, "exampl": 688, "compa": [689, 690], "cem": [689, 690], "main": 689, "featur": 689, "credit": 689, "tabl": 689, "content": 689, "instal": 690, "creat": 690, "virtual": 690, "environ": 690, "activ": 690, "via": 690, "conda": 690, "pip": 690, "plugin": 690, "remov": 690, "ani": 690, "leftov": 690, "link": 690, "check": 690, "your": 690, "updat": 690, "licens": 691}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})