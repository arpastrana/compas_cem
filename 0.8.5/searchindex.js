Search.setIndex({"docnames": ["_examples/01_python", "_examples/01_python/01", "_examples/01_python/02", "_examples/01_python/03", "_examples/01_python/04", "_examples/01_python/05", "_examples/02_ghpython", "_examples/02_ghpython/bridge_2d", "_examples/02_ghpython/bridge_3d", "_examples/02_ghpython/dome", "_examples/02_ghpython/jessen", "_examples/02_ghpython/spiral", "api", "api/compas_cem", "api/compas_cem.diagrams", "api/compas_cem.elements", "api/compas_cem.equilibrium", "api/compas_cem.loads", "api/compas_cem.optimization", "api/compas_cem.plotters", "api/compas_cem.supports", "api/compas_cem.viewers", "api/generated/compas_cem.diagrams.FormDiagram", "api/generated/compas_cem.diagrams.FormDiagram.ToString", "api/generated/compas_cem.diagrams.FormDiagram.add_edge", "api/generated/compas_cem.diagrams.FormDiagram.add_node", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.clear", "api/generated/compas_cem.diagrams.FormDiagram.complement", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.copy", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings", "api/generated/compas_cem.diagrams.FormDiagram.degree", "api/generated/compas_cem.diagrams.FormDiagram.degree_in", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.degree_out", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge", "api/generated/compas_cem.diagrams.FormDiagram.delete_node", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction", "api/generated/compas_cem.diagrams.FormDiagram.edge_force", "api/generated/compas_cem.diagrams.FormDiagram.edge_length", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.FormDiagram.edge_plane", "api/generated/compas_cem.diagrams.FormDiagram.edge_point", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector", "api/generated/compas_cem.diagrams.FormDiagram.edges", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edges_where", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles", "api/generated/compas_cem.diagrams.FormDiagram.from_data", "api/generated/compas_cem.diagrams.FormDiagram.from_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_equilibrium_state", "api/generated/compas_cem.diagrams.FormDiagram.from_json", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.from_lines", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_obj", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.FormDiagram.gkey", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key", "api/generated/compas_cem.diagrams.FormDiagram.has_edge", "api/generated/compas_cem.diagrams.FormDiagram.has_node", "api/generated/compas_cem.diagrams.FormDiagram.index_key", "api/generated/compas_cem.diagrams.FormDiagram.index_uv", "api/generated/compas_cem.diagrams.FormDiagram.is_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed", "api/generated/compas_cem.diagrams.FormDiagram.is_edge_supported", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support", "api/generated/compas_cem.diagrams.FormDiagram.is_planar", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.is_xy", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey", "api/generated/compas_cem.diagrams.FormDiagram.key_index", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.leaves", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood", "api/generated/compas_cem.diagrams.FormDiagram.neighbors", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.node_exists", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey", "api/generated/compas_cem.diagrams.FormDiagram.node_key", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian", "api/generated/compas_cem.diagrams.FormDiagram.node_load", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.FormDiagram.node_sample", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.nodes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force", "api/generated/compas_cem.diagrams.FormDiagram.sha256", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path", "api/generated/compas_cem.diagrams.FormDiagram.smooth", "api/generated/compas_cem.diagrams.FormDiagram.split_edge", "api/generated/compas_cem.diagrams.FormDiagram.summary", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.to_data", "api/generated/compas_cem.diagrams.FormDiagram.to_json", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.to_lines", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.to_obj", "api/generated/compas_cem.diagrams.FormDiagram.to_points", "api/generated/compas_cem.diagrams.FormDiagram.transform", "api/generated/compas_cem.diagrams.FormDiagram.transformed", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.update_dea", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_dna", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.uv_index", "api/generated/compas_cem.diagrams.FormDiagram.validate_data", "api/generated/compas_cem.diagrams.FormDiagram.validate_json", "api/generated/compas_cem.diagrams.TopologyDiagram", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.clear", "api/generated/compas_cem.diagrams.TopologyDiagram.complement", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.copy", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.degree", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.direct_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector", "api/generated/compas_cem.diagrams.TopologyDiagram.edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data", "api/generated/compas_cem.diagrams.TopologyDiagram.from_dualquadmesh", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node", "api/generated/compas_cem.diagrams.TopologyDiagram.has_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv", "api/generated/compas_cem.diagrams.TopologyDiagram.indirect_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_direct_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_edge_supported", "api/generated/compas_cem.diagrams.TopologyDiagram.is_indirect_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_direct_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_indirect_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_last", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.sha256", "api/generated/compas_cem.diagrams.TopologyDiagram.shift_trail", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.summary", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points", "api/generated/compas_cem.diagrams.TopologyDiagram.trail", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.trails", "api/generated/compas_cem.diagrams.TopologyDiagram.trails_sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.transform", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json", "api/generated/compas_cem.elements.DeviationEdge", "api/generated/compas_cem.elements.DeviationEdge.ToString", "api/generated/compas_cem.elements.DeviationEdge.copy", "api/generated/compas_cem.elements.DeviationEdge.from_data", "api/generated/compas_cem.elements.DeviationEdge.from_json", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.from_line", "api/generated/compas_cem.elements.DeviationEdge.sha256", "api/generated/compas_cem.elements.DeviationEdge.to_data", "api/generated/compas_cem.elements.DeviationEdge.to_json", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.validate_data", "api/generated/compas_cem.elements.DeviationEdge.validate_json", "api/generated/compas_cem.elements.Node", "api/generated/compas_cem.elements.Node.ToString", "api/generated/compas_cem.elements.Node.copy", "api/generated/compas_cem.elements.Node.from_data", "api/generated/compas_cem.elements.Node.from_json", "api/generated/compas_cem.elements.Node.from_jsonstring", "api/generated/compas_cem.elements.Node.from_point", "api/generated/compas_cem.elements.Node.sha256", "api/generated/compas_cem.elements.Node.to_data", "api/generated/compas_cem.elements.Node.to_json", "api/generated/compas_cem.elements.Node.to_jsonstring", "api/generated/compas_cem.elements.Node.validate_data", "api/generated/compas_cem.elements.Node.validate_json", "api/generated/compas_cem.elements.TrailEdge", "api/generated/compas_cem.elements.TrailEdge.ToString", "api/generated/compas_cem.elements.TrailEdge.copy", "api/generated/compas_cem.elements.TrailEdge.from_data", "api/generated/compas_cem.elements.TrailEdge.from_json", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring", "api/generated/compas_cem.elements.TrailEdge.from_line", "api/generated/compas_cem.elements.TrailEdge.sha256", "api/generated/compas_cem.elements.TrailEdge.to_data", "api/generated/compas_cem.elements.TrailEdge.to_json", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring", "api/generated/compas_cem.elements.TrailEdge.validate_data", "api/generated/compas_cem.elements.TrailEdge.validate_json", "api/generated/compas_cem.equilibrium.static_equilibrium", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy", "api/generated/compas_cem.loads.NodeLoad", "api/generated/compas_cem.loads.NodeLoad.ToString", "api/generated/compas_cem.loads.NodeLoad.copy", "api/generated/compas_cem.loads.NodeLoad.from_data", "api/generated/compas_cem.loads.NodeLoad.from_json", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector", "api/generated/compas_cem.loads.NodeLoad.sha256", "api/generated/compas_cem.loads.NodeLoad.to_data", "api/generated/compas_cem.loads.NodeLoad.to_json", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring", "api/generated/compas_cem.loads.NodeLoad.validate_data", "api/generated/compas_cem.loads.NodeLoad.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.sha256", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key", "api/generated/compas_cem.optimization.DeviationEdgeParameter.sha256", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json", "api/generated/compas_cem.optimization.LineConstraint", "api/generated/compas_cem.optimization.LineConstraint.ToString", "api/generated/compas_cem.optimization.LineConstraint.copy", "api/generated/compas_cem.optimization.LineConstraint.from_data", "api/generated/compas_cem.optimization.LineConstraint.from_json", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.key", "api/generated/compas_cem.optimization.LineConstraint.penalty", "api/generated/compas_cem.optimization.LineConstraint.reference", "api/generated/compas_cem.optimization.LineConstraint.sha256", "api/generated/compas_cem.optimization.LineConstraint.target", "api/generated/compas_cem.optimization.LineConstraint.to_data", "api/generated/compas_cem.optimization.LineConstraint.to_json", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.validate_data", "api/generated/compas_cem.optimization.LineConstraint.validate_json", "api/generated/compas_cem.optimization.NodeLoadXParameter", "api/generated/compas_cem.optimization.NodeLoadXParameter.ToString", "api/generated/compas_cem.optimization.NodeLoadXParameter.attr_name", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_low", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_up", "api/generated/compas_cem.optimization.NodeLoadXParameter.copy", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_data", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_json", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_jsonstring", "api/generated/compas_cem.optimization.NodeLoadXParameter.key", "api/generated/compas_cem.optimization.NodeLoadXParameter.sha256", "api/generated/compas_cem.optimization.NodeLoadXParameter.start_value", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_data", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_json", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_jsonstring", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_data", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_json", "api/generated/compas_cem.optimization.NodeLoadYParameter", "api/generated/compas_cem.optimization.NodeLoadYParameter.ToString", "api/generated/compas_cem.optimization.NodeLoadYParameter.attr_name", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_low", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_up", "api/generated/compas_cem.optimization.NodeLoadYParameter.copy", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_data", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_json", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_jsonstring", "api/generated/compas_cem.optimization.NodeLoadYParameter.key", "api/generated/compas_cem.optimization.NodeLoadYParameter.sha256", "api/generated/compas_cem.optimization.NodeLoadYParameter.start_value", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_data", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_json", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_jsonstring", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_data", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_json", "api/generated/compas_cem.optimization.NodeLoadZParameter", "api/generated/compas_cem.optimization.NodeLoadZParameter.ToString", "api/generated/compas_cem.optimization.NodeLoadZParameter.attr_name", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_low", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_up", "api/generated/compas_cem.optimization.NodeLoadZParameter.copy", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_data", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_json", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_jsonstring", "api/generated/compas_cem.optimization.NodeLoadZParameter.key", "api/generated/compas_cem.optimization.NodeLoadZParameter.sha256", "api/generated/compas_cem.optimization.NodeLoadZParameter.start_value", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_data", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_json", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_jsonstring", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_data", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_json", "api/generated/compas_cem.optimization.Optimizer", "api/generated/compas_cem.optimization.Optimizer.ToString", "api/generated/compas_cem.optimization.Optimizer.add_constraint", "api/generated/compas_cem.optimization.Optimizer.add_parameter", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity", "api/generated/compas_cem.optimization.Optimizer.copy", "api/generated/compas_cem.optimization.Optimizer.from_data", "api/generated/compas_cem.optimization.Optimizer.from_json", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring", "api/generated/compas_cem.optimization.Optimizer.gradient_func", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters", "api/generated/compas_cem.optimization.Optimizer.objective_func", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters", "api/generated/compas_cem.optimization.Optimizer.remove_constraint", "api/generated/compas_cem.optimization.Optimizer.remove_parameter", "api/generated/compas_cem.optimization.Optimizer.sha256", "api/generated/compas_cem.optimization.Optimizer.solve", "api/generated/compas_cem.optimization.Optimizer.to_data", "api/generated/compas_cem.optimization.Optimizer.to_json", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring", "api/generated/compas_cem.optimization.Optimizer.validate_data", "api/generated/compas_cem.optimization.Optimizer.validate_json", "api/generated/compas_cem.optimization.OriginNodeXParameter", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.key", "api/generated/compas_cem.optimization.OriginNodeXParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeYParameter", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.key", "api/generated/compas_cem.optimization.OriginNodeYParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeZParameter", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.key", "api/generated/compas_cem.optimization.OriginNodeZParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json", "api/generated/compas_cem.optimization.PlaneConstraint", "api/generated/compas_cem.optimization.PlaneConstraint.ToString", "api/generated/compas_cem.optimization.PlaneConstraint.copy", "api/generated/compas_cem.optimization.PlaneConstraint.from_data", "api/generated/compas_cem.optimization.PlaneConstraint.from_json", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.key", "api/generated/compas_cem.optimization.PlaneConstraint.penalty", "api/generated/compas_cem.optimization.PlaneConstraint.reference", "api/generated/compas_cem.optimization.PlaneConstraint.sha256", "api/generated/compas_cem.optimization.PlaneConstraint.target", "api/generated/compas_cem.optimization.PlaneConstraint.to_data", "api/generated/compas_cem.optimization.PlaneConstraint.to_json", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json", "api/generated/compas_cem.optimization.PointConstraint", "api/generated/compas_cem.optimization.PointConstraint.ToString", "api/generated/compas_cem.optimization.PointConstraint.copy", "api/generated/compas_cem.optimization.PointConstraint.from_data", "api/generated/compas_cem.optimization.PointConstraint.from_json", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.key", "api/generated/compas_cem.optimization.PointConstraint.penalty", "api/generated/compas_cem.optimization.PointConstraint.reference", "api/generated/compas_cem.optimization.PointConstraint.sha256", "api/generated/compas_cem.optimization.PointConstraint.target", "api/generated/compas_cem.optimization.PointConstraint.to_data", "api/generated/compas_cem.optimization.PointConstraint.to_json", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.validate_data", "api/generated/compas_cem.optimization.PointConstraint.validate_json", "api/generated/compas_cem.optimization.ReactionForceConstraint", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.key", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference", "api/generated/compas_cem.optimization.ReactionForceConstraint.sha256", "api/generated/compas_cem.optimization.ReactionForceConstraint.target", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.sha256", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeParameter", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.key", "api/generated/compas_cem.optimization.TrailEdgeParameter.sha256", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json", "api/generated/compas_cem.optimization.solve_proxy", "api/generated/compas_cem.plotters.FormArtist", "api/generated/compas_cem.plotters.FormArtist.build", "api/generated/compas_cem.plotters.FormArtist.build_as", "api/generated/compas_cem.plotters.FormArtist.clear", "api/generated/compas_cem.plotters.FormArtist.clear_edges", "api/generated/compas_cem.plotters.FormArtist.clear_nodes", "api/generated/compas_cem.plotters.FormArtist.draw", "api/generated/compas_cem.plotters.FormArtist.draw_collection", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels", "api/generated/compas_cem.plotters.FormArtist.draw_edges", "api/generated/compas_cem.plotters.FormArtist.draw_loads", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels", "api/generated/compas_cem.plotters.FormArtist.draw_nodes", "api/generated/compas_cem.plotters.FormArtist.draw_reactions", "api/generated/compas_cem.plotters.FormArtist.redraw", "api/generated/compas_cem.plotters.FormArtist.register", "api/generated/compas_cem.plotters.FormArtist.update_data", "api/generated/compas_cem.plotters.FormArtist.viewbox", "api/generated/compas_cem.plotters.Plotter", "api/generated/compas_cem.plotters.Plotter.add", "api/generated/compas_cem.plotters.Plotter.add_from_list", "api/generated/compas_cem.plotters.Plotter.draw", "api/generated/compas_cem.plotters.Plotter.find", "api/generated/compas_cem.plotters.Plotter.on", "api/generated/compas_cem.plotters.Plotter.pause", "api/generated/compas_cem.plotters.Plotter.redraw", "api/generated/compas_cem.plotters.Plotter.register_listener", "api/generated/compas_cem.plotters.Plotter.save", "api/generated/compas_cem.plotters.Plotter.show", "api/generated/compas_cem.plotters.Plotter.zoom_extents", "api/generated/compas_cem.plotters.TopologyArtist", "api/generated/compas_cem.plotters.TopologyArtist.build", "api/generated/compas_cem.plotters.TopologyArtist.build_as", "api/generated/compas_cem.plotters.TopologyArtist.clear", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes", "api/generated/compas_cem.plotters.TopologyArtist.draw", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes", "api/generated/compas_cem.plotters.TopologyArtist.redraw", "api/generated/compas_cem.plotters.TopologyArtist.register", "api/generated/compas_cem.plotters.TopologyArtist.update_data", "api/generated/compas_cem.plotters.TopologyArtist.viewbox", "api/generated/compas_cem.supports.NodeSupport", "api/generated/compas_cem.supports.NodeSupport.ToString", "api/generated/compas_cem.supports.NodeSupport.copy", "api/generated/compas_cem.supports.NodeSupport.from_data", "api/generated/compas_cem.supports.NodeSupport.from_json", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring", "api/generated/compas_cem.supports.NodeSupport.from_point", "api/generated/compas_cem.supports.NodeSupport.sha256", "api/generated/compas_cem.supports.NodeSupport.to_data", "api/generated/compas_cem.supports.NodeSupport.to_json", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring", "api/generated/compas_cem.supports.NodeSupport.validate_data", "api/generated/compas_cem.supports.NodeSupport.validate_json", "changelog", "citing", "examples", "index", "installation", "license"], "filenames": ["_examples/01_python.rst", "_examples/01_python/01.rst", "_examples/01_python/02.rst", "_examples/01_python/03.rst", "_examples/01_python/04.rst", "_examples/01_python/05.rst", "_examples/02_ghpython.rst", "_examples/02_ghpython/bridge_2d.rst", "_examples/02_ghpython/bridge_3d.rst", "_examples/02_ghpython/dome.rst", "_examples/02_ghpython/jessen.rst", "_examples/02_ghpython/spiral.rst", "api.rst", "api/compas_cem.rst", "api/compas_cem.diagrams.rst", "api/compas_cem.elements.rst", "api/compas_cem.equilibrium.rst", "api/compas_cem.loads.rst", "api/compas_cem.optimization.rst", "api/compas_cem.plotters.rst", "api/compas_cem.supports.rst", "api/compas_cem.viewers.rst", "api/generated/compas_cem.diagrams.FormDiagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.ToString.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.clear.rst", "api/generated/compas_cem.diagrams.FormDiagram.complement.rst", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.copy.rst", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_equilibrium_state.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_edge_supported.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.leaves.rst", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_load.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.sha256.rst", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.FormDiagram.smooth.rst", "api/generated/compas_cem.diagrams.FormDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.summary.rst", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_points.rst", "api/generated/compas_cem.diagrams.FormDiagram.transform.rst", "api/generated/compas_cem.diagrams.FormDiagram.transformed.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.clear.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.complement.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.copy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.direct_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_dualquadmesh.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.indirect_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_direct_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_edge_supported.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_indirect_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_direct_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_indirect_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_last.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sha256.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.shift_trail.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.summary.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trails_sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transform.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json.rst", "api/generated/compas_cem.elements.DeviationEdge.rst", "api/generated/compas_cem.elements.DeviationEdge.ToString.rst", "api/generated/compas_cem.elements.DeviationEdge.copy.rst", "api/generated/compas_cem.elements.DeviationEdge.from_data.rst", "api/generated/compas_cem.elements.DeviationEdge.from_json.rst", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.from_line.rst", "api/generated/compas_cem.elements.DeviationEdge.sha256.rst", "api/generated/compas_cem.elements.DeviationEdge.to_data.rst", "api/generated/compas_cem.elements.DeviationEdge.to_json.rst", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_data.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_json.rst", "api/generated/compas_cem.elements.Node.rst", "api/generated/compas_cem.elements.Node.ToString.rst", "api/generated/compas_cem.elements.Node.copy.rst", "api/generated/compas_cem.elements.Node.from_data.rst", "api/generated/compas_cem.elements.Node.from_json.rst", "api/generated/compas_cem.elements.Node.from_jsonstring.rst", "api/generated/compas_cem.elements.Node.from_point.rst", "api/generated/compas_cem.elements.Node.sha256.rst", "api/generated/compas_cem.elements.Node.to_data.rst", "api/generated/compas_cem.elements.Node.to_json.rst", "api/generated/compas_cem.elements.Node.to_jsonstring.rst", "api/generated/compas_cem.elements.Node.validate_data.rst", "api/generated/compas_cem.elements.Node.validate_json.rst", "api/generated/compas_cem.elements.TrailEdge.rst", "api/generated/compas_cem.elements.TrailEdge.ToString.rst", "api/generated/compas_cem.elements.TrailEdge.copy.rst", "api/generated/compas_cem.elements.TrailEdge.from_data.rst", "api/generated/compas_cem.elements.TrailEdge.from_json.rst", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.from_line.rst", "api/generated/compas_cem.elements.TrailEdge.sha256.rst", "api/generated/compas_cem.elements.TrailEdge.to_data.rst", "api/generated/compas_cem.elements.TrailEdge.to_json.rst", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.validate_data.rst", "api/generated/compas_cem.elements.TrailEdge.validate_json.rst", "api/generated/compas_cem.equilibrium.static_equilibrium.rst", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy.rst", "api/generated/compas_cem.loads.NodeLoad.rst", "api/generated/compas_cem.loads.NodeLoad.ToString.rst", "api/generated/compas_cem.loads.NodeLoad.copy.rst", "api/generated/compas_cem.loads.NodeLoad.from_data.rst", "api/generated/compas_cem.loads.NodeLoad.from_json.rst", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector.rst", "api/generated/compas_cem.loads.NodeLoad.sha256.rst", "api/generated/compas_cem.loads.NodeLoad.to_data.rst", "api/generated/compas_cem.loads.NodeLoad.to_json.rst", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.validate_data.rst", "api/generated/compas_cem.loads.NodeLoad.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.sha256.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.sha256.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.LineConstraint.rst", "api/generated/compas_cem.optimization.LineConstraint.ToString.rst", "api/generated/compas_cem.optimization.LineConstraint.copy.rst", "api/generated/compas_cem.optimization.LineConstraint.from_data.rst", "api/generated/compas_cem.optimization.LineConstraint.from_json.rst", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.key.rst", "api/generated/compas_cem.optimization.LineConstraint.penalty.rst", "api/generated/compas_cem.optimization.LineConstraint.reference.rst", "api/generated/compas_cem.optimization.LineConstraint.sha256.rst", "api/generated/compas_cem.optimization.LineConstraint.target.rst", "api/generated/compas_cem.optimization.LineConstraint.to_data.rst", "api/generated/compas_cem.optimization.LineConstraint.to_json.rst", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_data.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_json.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.ToString.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.attr_name.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_low.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_up.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.copy.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_data.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_json.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.key.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.sha256.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.start_value.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_data.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_json.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_data.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_json.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.ToString.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.attr_name.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_low.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_up.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.copy.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_data.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_json.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.key.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.sha256.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.start_value.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_data.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_json.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_data.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_json.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.ToString.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.attr_name.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_low.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_up.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.copy.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_data.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_json.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.key.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.sha256.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.start_value.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_data.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_json.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_data.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_json.rst", "api/generated/compas_cem.optimization.Optimizer.rst", "api/generated/compas_cem.optimization.Optimizer.ToString.rst", "api/generated/compas_cem.optimization.Optimizer.add_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.add_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity.rst", "api/generated/compas_cem.optimization.Optimizer.copy.rst", "api/generated/compas_cem.optimization.Optimizer.from_data.rst", "api/generated/compas_cem.optimization.Optimizer.from_json.rst", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.gradient_func.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.objective_func.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.remove_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.remove_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.sha256.rst", "api/generated/compas_cem.optimization.Optimizer.solve.rst", "api/generated/compas_cem.optimization.Optimizer.to_data.rst", "api/generated/compas_cem.optimization.Optimizer.to_json.rst", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.validate_data.rst", "api/generated/compas_cem.optimization.Optimizer.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.rst", "api/generated/compas_cem.optimization.PlaneConstraint.ToString.rst", "api/generated/compas_cem.optimization.PlaneConstraint.copy.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.key.rst", "api/generated/compas_cem.optimization.PlaneConstraint.penalty.rst", "api/generated/compas_cem.optimization.PlaneConstraint.reference.rst", "api/generated/compas_cem.optimization.PlaneConstraint.sha256.rst", "api/generated/compas_cem.optimization.PlaneConstraint.target.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json.rst", "api/generated/compas_cem.optimization.PointConstraint.rst", "api/generated/compas_cem.optimization.PointConstraint.ToString.rst", "api/generated/compas_cem.optimization.PointConstraint.copy.rst", "api/generated/compas_cem.optimization.PointConstraint.from_data.rst", "api/generated/compas_cem.optimization.PointConstraint.from_json.rst", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.key.rst", "api/generated/compas_cem.optimization.PointConstraint.penalty.rst", "api/generated/compas_cem.optimization.PointConstraint.reference.rst", "api/generated/compas_cem.optimization.PointConstraint.sha256.rst", "api/generated/compas_cem.optimization.PointConstraint.target.rst", "api/generated/compas_cem.optimization.PointConstraint.to_data.rst", "api/generated/compas_cem.optimization.PointConstraint.to_json.rst", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.key.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.sha256.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.target.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.sha256.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.key.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.sha256.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.solve_proxy.rst", "api/generated/compas_cem.plotters.FormArtist.rst", "api/generated/compas_cem.plotters.FormArtist.build.rst", "api/generated/compas_cem.plotters.FormArtist.build_as.rst", "api/generated/compas_cem.plotters.FormArtist.clear.rst", "api/generated/compas_cem.plotters.FormArtist.clear_edges.rst", "api/generated/compas_cem.plotters.FormArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw.rst", "api/generated/compas_cem.plotters.FormArtist.draw_collection.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edges.rst", "api/generated/compas_cem.plotters.FormArtist.draw_loads.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw_reactions.rst", "api/generated/compas_cem.plotters.FormArtist.redraw.rst", "api/generated/compas_cem.plotters.FormArtist.register.rst", "api/generated/compas_cem.plotters.FormArtist.update_data.rst", "api/generated/compas_cem.plotters.FormArtist.viewbox.rst", "api/generated/compas_cem.plotters.Plotter.rst", "api/generated/compas_cem.plotters.Plotter.add.rst", "api/generated/compas_cem.plotters.Plotter.add_from_list.rst", "api/generated/compas_cem.plotters.Plotter.draw.rst", "api/generated/compas_cem.plotters.Plotter.find.rst", "api/generated/compas_cem.plotters.Plotter.on.rst", "api/generated/compas_cem.plotters.Plotter.pause.rst", "api/generated/compas_cem.plotters.Plotter.redraw.rst", "api/generated/compas_cem.plotters.Plotter.register_listener.rst", "api/generated/compas_cem.plotters.Plotter.save.rst", "api/generated/compas_cem.plotters.Plotter.show.rst", "api/generated/compas_cem.plotters.Plotter.zoom_extents.rst", "api/generated/compas_cem.plotters.TopologyArtist.rst", "api/generated/compas_cem.plotters.TopologyArtist.build.rst", "api/generated/compas_cem.plotters.TopologyArtist.build_as.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.redraw.rst", "api/generated/compas_cem.plotters.TopologyArtist.register.rst", "api/generated/compas_cem.plotters.TopologyArtist.update_data.rst", "api/generated/compas_cem.plotters.TopologyArtist.viewbox.rst", "api/generated/compas_cem.supports.NodeSupport.rst", "api/generated/compas_cem.supports.NodeSupport.ToString.rst", "api/generated/compas_cem.supports.NodeSupport.copy.rst", "api/generated/compas_cem.supports.NodeSupport.from_data.rst", "api/generated/compas_cem.supports.NodeSupport.from_json.rst", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.from_point.rst", "api/generated/compas_cem.supports.NodeSupport.sha256.rst", "api/generated/compas_cem.supports.NodeSupport.to_data.rst", "api/generated/compas_cem.supports.NodeSupport.to_json.rst", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.validate_data.rst", "api/generated/compas_cem.supports.NodeSupport.validate_json.rst", "changelog.rst", "citing.rst", "examples.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["Python", "01. Simple Compression Structure", "02. Braced Tower in 2D", "03. Bridge Optimization in 2D", "04. Tree Structure in 2D", "05. Planar Tensegrity Wheel", "Grasshopper", "A. Bridge in 2D", "B. Tubular Bridge in 3D", "C. Circular Dome", "D. Jessen Tensegrity", "E. Spiral Staircase", "API Reference", "compas_cem", "compas_cem.diagrams", "compas_cem.elements", "compas_cem.equilibrium", "compas_cem.loads", "compas_cem.optimization", "compas_cem.plotters", "compas_cem.supports", "compas_cem.viewers", "FormDiagram", "FormDiagram.ToString", "FormDiagram.add_edge", "FormDiagram.add_node", "FormDiagram.adjacency_matrix", "FormDiagram.clear", "FormDiagram.complement", "FormDiagram.connected_edges", "FormDiagram.connectivity_matrix", "FormDiagram.copy", "FormDiagram.count_crossings", "FormDiagram.degree", "FormDiagram.degree_in", "FormDiagram.degree_matrix", "FormDiagram.degree_out", "FormDiagram.delete_edge", "FormDiagram.delete_node", "FormDiagram.edge_attribute", "FormDiagram.edge_attributes", "FormDiagram.edge_coordinates", "FormDiagram.edge_direction", "FormDiagram.edge_force", "FormDiagram.edge_length", "FormDiagram.edge_length_2", "FormDiagram.edge_midpoint", "FormDiagram.edge_plane", "FormDiagram.edge_point", "FormDiagram.edge_sample", "FormDiagram.edge_vector", "FormDiagram.edges", "FormDiagram.edges_attribute", "FormDiagram.edges_attributes", "FormDiagram.edges_where", "FormDiagram.edges_where_predicate", "FormDiagram.embed_in_plane", "FormDiagram.find_crossings", "FormDiagram.find_cycles", "FormDiagram.from_data", "FormDiagram.from_edges", "FormDiagram.from_equilibrium_state", "FormDiagram.from_json", "FormDiagram.from_jsonstring", "FormDiagram.from_lines", "FormDiagram.from_networkx", "FormDiagram.from_nodes_and_edges", "FormDiagram.from_obj", "FormDiagram.from_pointcloud", "FormDiagram.from_topology_diagram", "FormDiagram.get_any_edge", "FormDiagram.get_any_edges", "FormDiagram.get_any_node", "FormDiagram.get_any_nodes", "FormDiagram.gkey", "FormDiagram.gkey_key", "FormDiagram.has_edge", "FormDiagram.has_node", "FormDiagram.index_key", "FormDiagram.index_uv", "FormDiagram.is_connected", "FormDiagram.is_crossed", "FormDiagram.is_edge_supported", "FormDiagram.is_leaf", "FormDiagram.is_node_connected", "FormDiagram.is_node_loaded", "FormDiagram.is_node_support", "FormDiagram.is_planar", "FormDiagram.is_planar_embedding", "FormDiagram.is_xy", "FormDiagram.key_gkey", "FormDiagram.key_index", "FormDiagram.laplacian_matrix", "FormDiagram.leaves", "FormDiagram.loaded_nodes", "FormDiagram.neighborhood", "FormDiagram.neighbors", "FormDiagram.neighbors_in", "FormDiagram.neighbors_out", "FormDiagram.network_adjacency_matrix", "FormDiagram.network_connectivity_matrix", "FormDiagram.network_degree_matrix", "FormDiagram.network_embed_in_plane", "FormDiagram.network_is_planar", "FormDiagram.network_is_planar_embedding", "FormDiagram.network_laplacian_matrix", "FormDiagram.node_attribute", "FormDiagram.node_attributes", "FormDiagram.node_coordinates", "FormDiagram.node_exists", "FormDiagram.node_gkey", "FormDiagram.node_key", "FormDiagram.node_laplacian", "FormDiagram.node_load", "FormDiagram.node_neighborhood_centroid", "FormDiagram.node_sample", "FormDiagram.node_xyz", "FormDiagram.nodes", "FormDiagram.nodes_attribute", "FormDiagram.nodes_attributes", "FormDiagram.nodes_where", "FormDiagram.nodes_where_predicate", "FormDiagram.number_of_edges", "FormDiagram.number_of_loaded_nodes", "FormDiagram.number_of_nodes", "FormDiagram.number_of_support_nodes", "FormDiagram.reaction_force", "FormDiagram.sha256", "FormDiagram.shortest_path", "FormDiagram.smooth", "FormDiagram.split_edge", "FormDiagram.summary", "FormDiagram.support_nodes", "FormDiagram.to_data", "FormDiagram.to_json", "FormDiagram.to_jsonstring", "FormDiagram.to_lines", "FormDiagram.to_networkx", "FormDiagram.to_nodes_and_edges", "FormDiagram.to_obj", "FormDiagram.to_points", "FormDiagram.transform", "FormDiagram.transformed", "FormDiagram.unset_edge_attribute", "FormDiagram.unset_node_attribute", "FormDiagram.update_dea", "FormDiagram.update_default_edge_attributes", "FormDiagram.update_default_node_attributes", "FormDiagram.update_dna", "FormDiagram.update_node_xyz", "FormDiagram.uv_index", "FormDiagram.validate_data", "FormDiagram.validate_json", "TopologyDiagram", "TopologyDiagram.ToString", "TopologyDiagram.add_edge", "TopologyDiagram.add_load", "TopologyDiagram.add_node", "TopologyDiagram.add_support", "TopologyDiagram.adjacency_matrix", "TopologyDiagram.auxiliary_trail_edges", "TopologyDiagram.auxiliary_trails", "TopologyDiagram.build_trails", "TopologyDiagram.clear", "TopologyDiagram.complement", "TopologyDiagram.connected_deviation_edges", "TopologyDiagram.connected_edges", "TopologyDiagram.connected_trail_edges", "TopologyDiagram.connectivity_matrix", "TopologyDiagram.copy", "TopologyDiagram.count_crossings", "TopologyDiagram.degree", "TopologyDiagram.degree_in", "TopologyDiagram.degree_matrix", "TopologyDiagram.degree_out", "TopologyDiagram.delete_edge", "TopologyDiagram.delete_node", "TopologyDiagram.deviation_edges", "TopologyDiagram.direct_deviation_edges", "TopologyDiagram.edge_attribute", "TopologyDiagram.edge_attributes", "TopologyDiagram.edge_coordinates", "TopologyDiagram.edge_direction", "TopologyDiagram.edge_force", "TopologyDiagram.edge_length", "TopologyDiagram.edge_length_2", "TopologyDiagram.edge_midpoint", "TopologyDiagram.edge_plane", "TopologyDiagram.edge_point", "TopologyDiagram.edge_sample", "TopologyDiagram.edge_sequence", "TopologyDiagram.edge_vector", "TopologyDiagram.edges", "TopologyDiagram.edges_attribute", "TopologyDiagram.edges_attributes", "TopologyDiagram.edges_where", "TopologyDiagram.edges_where_predicate", "TopologyDiagram.embed_in_plane", "TopologyDiagram.find_crossings", "TopologyDiagram.find_cycles", "TopologyDiagram.from_data", "TopologyDiagram.from_dualquadmesh", "TopologyDiagram.from_edges", "TopologyDiagram.from_json", "TopologyDiagram.from_jsonstring", "TopologyDiagram.from_lines", "TopologyDiagram.from_networkx", "TopologyDiagram.from_nodes_and_edges", "TopologyDiagram.from_obj", "TopologyDiagram.from_pointcloud", "TopologyDiagram.get_any_edge", "TopologyDiagram.get_any_edges", "TopologyDiagram.get_any_node", "TopologyDiagram.get_any_nodes", "TopologyDiagram.gkey", "TopologyDiagram.gkey_key", "TopologyDiagram.has_edge", "TopologyDiagram.has_node", "TopologyDiagram.has_trails", "TopologyDiagram.index_key", "TopologyDiagram.index_uv", "TopologyDiagram.indirect_deviation_edges", "TopologyDiagram.is_auxiliary_trail_edge", "TopologyDiagram.is_connected", "TopologyDiagram.is_crossed", "TopologyDiagram.is_deviation_edge", "TopologyDiagram.is_direct_deviation_edge", "TopologyDiagram.is_edge_supported", "TopologyDiagram.is_indirect_deviation_edge", "TopologyDiagram.is_leaf", "TopologyDiagram.is_node_connected", "TopologyDiagram.is_node_loaded", "TopologyDiagram.is_node_origin", "TopologyDiagram.is_node_support", "TopologyDiagram.is_planar", "TopologyDiagram.is_planar_embedding", "TopologyDiagram.is_trail_edge", "TopologyDiagram.is_xy", "TopologyDiagram.key_gkey", "TopologyDiagram.key_index", "TopologyDiagram.laplacian_matrix", "TopologyDiagram.leaves", "TopologyDiagram.loaded_nodes", "TopologyDiagram.neighborhood", "TopologyDiagram.neighbors", "TopologyDiagram.neighbors_in", "TopologyDiagram.neighbors_out", "TopologyDiagram.network_adjacency_matrix", "TopologyDiagram.network_connectivity_matrix", "TopologyDiagram.network_degree_matrix", "TopologyDiagram.network_embed_in_plane", "TopologyDiagram.network_is_planar", "TopologyDiagram.network_is_planar_embedding", "TopologyDiagram.network_laplacian_matrix", "TopologyDiagram.node_attribute", "TopologyDiagram.node_attributes", "TopologyDiagram.node_coordinates", "TopologyDiagram.node_exists", "TopologyDiagram.node_gkey", "TopologyDiagram.node_key", "TopologyDiagram.node_laplacian", "TopologyDiagram.node_load", "TopologyDiagram.node_neighborhood_centroid", "TopologyDiagram.node_sample", "TopologyDiagram.node_sequence", "TopologyDiagram.node_xyz", "TopologyDiagram.nodes", "TopologyDiagram.nodes_attribute", "TopologyDiagram.nodes_attributes", "TopologyDiagram.nodes_where", "TopologyDiagram.nodes_where_predicate", "TopologyDiagram.number_of_auxiliary_trails", "TopologyDiagram.number_of_deviation_edges", "TopologyDiagram.number_of_direct_deviation_edges", "TopologyDiagram.number_of_edges", "TopologyDiagram.number_of_indirect_deviation_edges", "TopologyDiagram.number_of_loaded_nodes", "TopologyDiagram.number_of_nodes", "TopologyDiagram.number_of_sequences", "TopologyDiagram.number_of_support_nodes", "TopologyDiagram.number_of_trail_edges", "TopologyDiagram.number_of_trails", "TopologyDiagram.origin_nodes", "TopologyDiagram.reaction_force", "TopologyDiagram.sequence_last", "TopologyDiagram.sequences", "TopologyDiagram.sha256", "TopologyDiagram.shift_trail", "TopologyDiagram.shortest_path", "TopologyDiagram.smooth", "TopologyDiagram.split_edge", "TopologyDiagram.summary", "TopologyDiagram.support_nodes", "TopologyDiagram.to_data", "TopologyDiagram.to_json", "TopologyDiagram.to_jsonstring", "TopologyDiagram.to_lines", "TopologyDiagram.to_networkx", "TopologyDiagram.to_nodes_and_edges", "TopologyDiagram.to_obj", "TopologyDiagram.to_points", "TopologyDiagram.trail", "TopologyDiagram.trail_edges", "TopologyDiagram.trail_sequences", "TopologyDiagram.trails", "TopologyDiagram.trails_sequences", "TopologyDiagram.transform", "TopologyDiagram.transformed", "TopologyDiagram.unset_edge_attribute", "TopologyDiagram.unset_node_attribute", "TopologyDiagram.update_dea", "TopologyDiagram.update_default_edge_attributes", "TopologyDiagram.update_default_node_attributes", "TopologyDiagram.update_dna", "TopologyDiagram.update_node_xyz", "TopologyDiagram.uv_index", "TopologyDiagram.validate_data", "TopologyDiagram.validate_json", "DeviationEdge", "DeviationEdge.ToString", "DeviationEdge.copy", "DeviationEdge.from_data", "DeviationEdge.from_json", "DeviationEdge.from_jsonstring", "DeviationEdge.from_line", "DeviationEdge.sha256", "DeviationEdge.to_data", "DeviationEdge.to_json", "DeviationEdge.to_jsonstring", "DeviationEdge.validate_data", "DeviationEdge.validate_json", "Node", "Node.ToString", "Node.copy", "Node.from_data", "Node.from_json", "Node.from_jsonstring", "Node.from_point", "Node.sha256", "Node.to_data", "Node.to_json", "Node.to_jsonstring", "Node.validate_data", "Node.validate_json", "TrailEdge", "TrailEdge.ToString", "TrailEdge.copy", "TrailEdge.from_data", "TrailEdge.from_json", "TrailEdge.from_jsonstring", "TrailEdge.from_line", "TrailEdge.sha256", "TrailEdge.to_data", "TrailEdge.to_json", "TrailEdge.to_jsonstring", "TrailEdge.validate_data", "TrailEdge.validate_json", "static_equilibrium", "static_equilibrium_numpy", "NodeLoad", "NodeLoad.ToString", "NodeLoad.copy", "NodeLoad.from_data", "NodeLoad.from_json", "NodeLoad.from_jsonstring", "NodeLoad.from_point_and_vector", "NodeLoad.sha256", "NodeLoad.to_data", "NodeLoad.to_json", "NodeLoad.to_jsonstring", "NodeLoad.validate_data", "NodeLoad.validate_json", "DeviationEdgeLengthConstraint", "DeviationEdgeLengthConstraint.ToString", "DeviationEdgeLengthConstraint.copy", "DeviationEdgeLengthConstraint.from_data", "DeviationEdgeLengthConstraint.from_json", "DeviationEdgeLengthConstraint.from_jsonstring", "DeviationEdgeLengthConstraint.key", "DeviationEdgeLengthConstraint.penalty", "DeviationEdgeLengthConstraint.reference", "DeviationEdgeLengthConstraint.sha256", "DeviationEdgeLengthConstraint.target", "DeviationEdgeLengthConstraint.to_data", "DeviationEdgeLengthConstraint.to_json", "DeviationEdgeLengthConstraint.to_jsonstring", "DeviationEdgeLengthConstraint.validate_data", "DeviationEdgeLengthConstraint.validate_json", "DeviationEdgeParameter", "DeviationEdgeParameter.ToString", "DeviationEdgeParameter.attr_name", "DeviationEdgeParameter.bound_low", "DeviationEdgeParameter.bound_up", "DeviationEdgeParameter.copy", "DeviationEdgeParameter.from_data", "DeviationEdgeParameter.from_json", "DeviationEdgeParameter.from_jsonstring", "DeviationEdgeParameter.key", "DeviationEdgeParameter.sha256", "DeviationEdgeParameter.start_value", "DeviationEdgeParameter.to_data", "DeviationEdgeParameter.to_json", "DeviationEdgeParameter.to_jsonstring", "DeviationEdgeParameter.validate_data", "DeviationEdgeParameter.validate_json", "LineConstraint", "LineConstraint.ToString", "LineConstraint.copy", "LineConstraint.from_data", "LineConstraint.from_json", "LineConstraint.from_jsonstring", "LineConstraint.key", "LineConstraint.penalty", "LineConstraint.reference", "LineConstraint.sha256", "LineConstraint.target", "LineConstraint.to_data", "LineConstraint.to_json", "LineConstraint.to_jsonstring", "LineConstraint.validate_data", "LineConstraint.validate_json", "NodeLoadXParameter", "NodeLoadXParameter.ToString", "NodeLoadXParameter.attr_name", "NodeLoadXParameter.bound_low", "NodeLoadXParameter.bound_up", "NodeLoadXParameter.copy", "NodeLoadXParameter.from_data", "NodeLoadXParameter.from_json", "NodeLoadXParameter.from_jsonstring", "NodeLoadXParameter.key", "NodeLoadXParameter.sha256", "NodeLoadXParameter.start_value", "NodeLoadXParameter.to_data", "NodeLoadXParameter.to_json", "NodeLoadXParameter.to_jsonstring", "NodeLoadXParameter.validate_data", "NodeLoadXParameter.validate_json", "NodeLoadYParameter", "NodeLoadYParameter.ToString", "NodeLoadYParameter.attr_name", "NodeLoadYParameter.bound_low", "NodeLoadYParameter.bound_up", "NodeLoadYParameter.copy", "NodeLoadYParameter.from_data", "NodeLoadYParameter.from_json", "NodeLoadYParameter.from_jsonstring", "NodeLoadYParameter.key", "NodeLoadYParameter.sha256", "NodeLoadYParameter.start_value", "NodeLoadYParameter.to_data", "NodeLoadYParameter.to_json", "NodeLoadYParameter.to_jsonstring", "NodeLoadYParameter.validate_data", "NodeLoadYParameter.validate_json", "NodeLoadZParameter", "NodeLoadZParameter.ToString", "NodeLoadZParameter.attr_name", "NodeLoadZParameter.bound_low", "NodeLoadZParameter.bound_up", "NodeLoadZParameter.copy", "NodeLoadZParameter.from_data", "NodeLoadZParameter.from_json", "NodeLoadZParameter.from_jsonstring", "NodeLoadZParameter.key", "NodeLoadZParameter.sha256", "NodeLoadZParameter.start_value", "NodeLoadZParameter.to_data", "NodeLoadZParameter.to_json", "NodeLoadZParameter.to_jsonstring", "NodeLoadZParameter.validate_data", "NodeLoadZParameter.validate_json", "Optimizer", "Optimizer.ToString", "Optimizer.add_constraint", "Optimizer.add_parameter", "Optimizer.check_optimization_sanity", "Optimizer.copy", "Optimizer.from_data", "Optimizer.from_json", "Optimizer.from_jsonstring", "Optimizer.gradient_func", "Optimizer.number_of_constraints", "Optimizer.number_of_parameters", "Optimizer.objective_func", "Optimizer.optimization_bounds", "Optimizer.optimization_parameters", "Optimizer.remove_constraint", "Optimizer.remove_parameter", "Optimizer.sha256", "Optimizer.solve", "Optimizer.to_data", "Optimizer.to_json", "Optimizer.to_jsonstring", "Optimizer.validate_data", "Optimizer.validate_json", "OriginNodeXParameter", "OriginNodeXParameter.ToString", "OriginNodeXParameter.attr_name", "OriginNodeXParameter.bound_low", "OriginNodeXParameter.bound_up", "OriginNodeXParameter.copy", "OriginNodeXParameter.from_data", "OriginNodeXParameter.from_json", "OriginNodeXParameter.from_jsonstring", "OriginNodeXParameter.key", "OriginNodeXParameter.sha256", "OriginNodeXParameter.start_value", "OriginNodeXParameter.to_data", "OriginNodeXParameter.to_json", "OriginNodeXParameter.to_jsonstring", "OriginNodeXParameter.validate_data", "OriginNodeXParameter.validate_json", "OriginNodeYParameter", "OriginNodeYParameter.ToString", "OriginNodeYParameter.attr_name", "OriginNodeYParameter.bound_low", "OriginNodeYParameter.bound_up", "OriginNodeYParameter.copy", "OriginNodeYParameter.from_data", "OriginNodeYParameter.from_json", "OriginNodeYParameter.from_jsonstring", "OriginNodeYParameter.key", "OriginNodeYParameter.sha256", "OriginNodeYParameter.start_value", "OriginNodeYParameter.to_data", "OriginNodeYParameter.to_json", "OriginNodeYParameter.to_jsonstring", "OriginNodeYParameter.validate_data", "OriginNodeYParameter.validate_json", "OriginNodeZParameter", "OriginNodeZParameter.ToString", "OriginNodeZParameter.attr_name", "OriginNodeZParameter.bound_low", "OriginNodeZParameter.bound_up", "OriginNodeZParameter.copy", "OriginNodeZParameter.from_data", "OriginNodeZParameter.from_json", "OriginNodeZParameter.from_jsonstring", "OriginNodeZParameter.key", "OriginNodeZParameter.sha256", "OriginNodeZParameter.start_value", "OriginNodeZParameter.to_data", "OriginNodeZParameter.to_json", "OriginNodeZParameter.to_jsonstring", "OriginNodeZParameter.validate_data", "OriginNodeZParameter.validate_json", "PlaneConstraint", "PlaneConstraint.ToString", "PlaneConstraint.copy", "PlaneConstraint.from_data", "PlaneConstraint.from_json", "PlaneConstraint.from_jsonstring", "PlaneConstraint.key", "PlaneConstraint.penalty", "PlaneConstraint.reference", "PlaneConstraint.sha256", "PlaneConstraint.target", "PlaneConstraint.to_data", "PlaneConstraint.to_json", "PlaneConstraint.to_jsonstring", "PlaneConstraint.validate_data", "PlaneConstraint.validate_json", "PointConstraint", "PointConstraint.ToString", "PointConstraint.copy", "PointConstraint.from_data", "PointConstraint.from_json", "PointConstraint.from_jsonstring", "PointConstraint.key", "PointConstraint.penalty", "PointConstraint.reference", "PointConstraint.sha256", "PointConstraint.target", "PointConstraint.to_data", "PointConstraint.to_json", "PointConstraint.to_jsonstring", "PointConstraint.validate_data", "PointConstraint.validate_json", "ReactionForceConstraint", "ReactionForceConstraint.ToString", "ReactionForceConstraint.copy", "ReactionForceConstraint.from_data", "ReactionForceConstraint.from_json", "ReactionForceConstraint.from_jsonstring", "ReactionForceConstraint.key", "ReactionForceConstraint.penalty", "ReactionForceConstraint.reference", "ReactionForceConstraint.sha256", "ReactionForceConstraint.target", "ReactionForceConstraint.to_data", "ReactionForceConstraint.to_json", "ReactionForceConstraint.to_jsonstring", "ReactionForceConstraint.validate_data", "ReactionForceConstraint.validate_json", "TrailEdgeForceConstraint", "TrailEdgeForceConstraint.ToString", "TrailEdgeForceConstraint.copy", "TrailEdgeForceConstraint.from_data", "TrailEdgeForceConstraint.from_json", "TrailEdgeForceConstraint.from_jsonstring", "TrailEdgeForceConstraint.key", "TrailEdgeForceConstraint.penalty", "TrailEdgeForceConstraint.reference", "TrailEdgeForceConstraint.sha256", "TrailEdgeForceConstraint.target", "TrailEdgeForceConstraint.to_data", "TrailEdgeForceConstraint.to_json", "TrailEdgeForceConstraint.to_jsonstring", "TrailEdgeForceConstraint.validate_data", "TrailEdgeForceConstraint.validate_json", "TrailEdgeParameter", "TrailEdgeParameter.ToString", "TrailEdgeParameter.attr_name", "TrailEdgeParameter.bound_low", "TrailEdgeParameter.bound_up", "TrailEdgeParameter.copy", "TrailEdgeParameter.from_data", "TrailEdgeParameter.from_json", "TrailEdgeParameter.from_jsonstring", "TrailEdgeParameter.key", "TrailEdgeParameter.sha256", "TrailEdgeParameter.start_value", "TrailEdgeParameter.to_data", "TrailEdgeParameter.to_json", "TrailEdgeParameter.to_jsonstring", "TrailEdgeParameter.validate_data", "TrailEdgeParameter.validate_json", "solve_proxy", "FormArtist", "FormArtist.build", "FormArtist.build_as", "FormArtist.clear", "FormArtist.clear_edges", "FormArtist.clear_nodes", "FormArtist.draw", "FormArtist.draw_collection", "FormArtist.draw_edgelabels", "FormArtist.draw_edges", "FormArtist.draw_loads", "FormArtist.draw_nodelabels", "FormArtist.draw_nodes", "FormArtist.draw_reactions", "FormArtist.redraw", "FormArtist.register", "FormArtist.update_data", "FormArtist.viewbox", "Plotter", "Plotter.add", "Plotter.add_from_list", "Plotter.draw", "Plotter.find", "Plotter.on", "Plotter.pause", "Plotter.redraw", "Plotter.register_listener", "Plotter.save", "Plotter.show", "Plotter.zoom_extents", "TopologyArtist", "TopologyArtist.build", "TopologyArtist.build_as", "TopologyArtist.clear", "TopologyArtist.clear_edges", "TopologyArtist.clear_nodes", "TopologyArtist.draw", "TopologyArtist.draw_collection", "TopologyArtist.draw_edgelabels", "TopologyArtist.draw_edges", "TopologyArtist.draw_loads", "TopologyArtist.draw_nodelabels", "TopologyArtist.draw_nodes", "TopologyArtist.redraw", "TopologyArtist.register", "TopologyArtist.update_data", "TopologyArtist.viewbox", "NodeSupport", "NodeSupport.ToString", "NodeSupport.copy", "NodeSupport.from_data", "NodeSupport.from_json", "NodeSupport.from_jsonstring", "NodeSupport.from_point", "NodeSupport.sha256", "NodeSupport.to_data", "NodeSupport.to_json", "NodeSupport.to_jsonstring", "NodeSupport.validate_data", "NodeSupport.validate_json", "Changelog", "Citing", "Examples", "COMPAS CEM", "Installation", "License"], "terms": {"01": [0, 691, 692], "simpl": [0, 691, 692, 693], "compress": [0, 5, 201, 690, 691, 692], "structur": [0, 30, 58, 61, 80, 92, 100, 105, 128, 168, 199, 223, 240, 248, 253, 288, 648, 649, 651, 690, 691, 692, 693], "02": [0, 691, 692], "brace": [0, 691, 692], "tower": [0, 691, 692], "2d": [0, 6, 646, 675, 689, 691, 692], "03": [0, 691, 692], "bridg": [0, 6, 689, 691, 692], "optim": [0, 4, 5, 12, 13, 372, 388, 391, 392, 399, 405, 421, 424, 425, 432, 438, 441, 442, 449, 455, 458, 459, 466, 496, 499, 500, 507, 513, 516, 517, 524, 530, 533, 534, 541, 547, 563, 579, 595, 611, 614, 615, 622, 628, 689, 691, 692], "04": [0, 691, 692], "tree": [0, 691, 692], "05": [0, 691, 692], "planar": [0, 58, 87, 103, 199, 234, 251, 691, 692, 693], "tensegr": [0, 6, 689, 691, 692], "wheel": [0, 691, 692], "from": [1, 2, 3, 4, 5, 26, 28, 30, 35, 37, 38, 50, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 80, 92, 99, 100, 101, 105, 112, 127, 128, 137, 159, 162, 164, 168, 173, 175, 176, 191, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 213, 223, 240, 247, 248, 249, 253, 260, 286, 288, 297, 321, 322, 323, 324, 325, 334, 335, 336, 337, 338, 347, 348, 349, 350, 351, 357, 358, 362, 363, 364, 365, 366, 375, 376, 377, 381, 394, 395, 396, 398, 408, 409, 410, 414, 427, 428, 429, 431, 444, 445, 446, 448, 461, 462, 463, 465, 478, 479, 480, 481, 487, 489, 502, 503, 504, 506, 519, 520, 521, 523, 536, 537, 538, 540, 550, 551, 552, 556, 566, 567, 568, 572, 582, 583, 584, 588, 598, 599, 600, 604, 617, 618, 619, 621, 633, 634, 649, 663, 664, 679, 680, 681, 682, 683, 689, 693, 694], "compa": [1, 2, 3, 4, 5, 28, 80, 127, 164, 223, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 648, 649, 683, 689, 690, 691], "geometri": [1, 2, 3, 4, 5, 58, 199, 648, 649, 651], "import": [1, 2, 3, 4, 5, 28, 80, 127, 164, 223, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683, 689, 693], "translat": [1, 2, 3, 4, 5], "compas_cem": [1, 2, 3, 4, 5, 12, 22, 153, 318, 331, 344, 357, 358, 359, 372, 388, 405, 421, 438, 455, 472, 490, 496, 513, 530, 547, 563, 579, 595, 611, 628, 629, 647, 659, 676, 689, 690, 692, 693], "diagram": [1, 2, 3, 4, 5, 12, 13, 22, 58, 61, 69, 123, 125, 153, 161, 162, 177, 178, 199, 201, 218, 221, 271, 272, 273, 275, 276, 278, 279, 280, 281, 284, 285, 302, 304, 357, 358, 378, 390, 397, 411, 423, 430, 440, 447, 457, 464, 472, 490, 498, 505, 515, 522, 532, 539, 553, 569, 585, 601, 613, 620, 628, 629, 635, 638, 639, 641, 642, 659, 665, 668, 671, 682, 689, 692], "topologydiagram": [1, 2, 3, 4, 5, 357, 358, 490, 628, 659, 689], "element": [1, 2, 4, 5, 12, 13, 24, 155, 318, 331, 344, 689, 692], "node": [1, 2, 3, 4, 5, 25, 26, 29, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 48, 50, 55, 60, 66, 68, 72, 73, 75, 76, 77, 78, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 138, 144, 147, 148, 157, 158, 159, 161, 162, 165, 166, 167, 171, 172, 173, 174, 175, 176, 179, 181, 182, 184, 186, 188, 190, 191, 196, 202, 207, 209, 212, 213, 215, 216, 217, 219, 227, 229, 230, 231, 232, 233, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 276, 277, 279, 282, 283, 285, 287, 288, 289, 290, 292, 298, 301, 303, 304, 305, 309, 312, 313, 357, 358, 359, 378, 405, 411, 421, 432, 438, 449, 455, 466, 496, 507, 513, 524, 530, 541, 547, 553, 563, 569, 579, 585, 601, 632, 634, 635, 639, 640, 641, 662, 664, 665, 669, 670, 671, 676, 682, 689], "trailedg": [1, 2, 4], "deviationedg": [1, 2, 4, 5], "load": [1, 2, 3, 4, 12, 13, 58, 85, 94, 113, 123, 156, 199, 231, 242, 261, 276, 359, 365, 421, 438, 455, 635, 639, 665, 669, 689, 692], "nodeload": [1, 2, 3, 4, 689], "support": [1, 2, 3, 4, 12, 13, 82, 85, 86, 125, 132, 158, 162, 201, 227, 231, 233, 279, 292, 301, 490, 579, 628, 642, 676, 682, 689, 692, 693], "nodesupport": [1, 2, 3, 4, 158, 689], "equilibrium": [1, 2, 3, 4, 5, 12, 13, 61, 357, 358, 689, 690, 692], "static_equilibrium": [1, 2, 3, 4, 5, 689], "plotter": [1, 2, 3, 4, 5, 12, 13, 629, 644, 659, 673, 689, 692], "instanti": [1, 4, 391, 392, 424, 425, 441, 442, 458, 459, 499, 500, 516, 517, 533, 534, 614, 615], "topologi": [1, 2, 3, 4, 5, 69, 123, 125, 153, 161, 162, 201, 218, 271, 272, 273, 275, 276, 278, 279, 280, 281, 284, 285, 304, 357, 358, 391, 392, 399, 424, 425, 432, 441, 442, 449, 458, 459, 466, 481, 484, 485, 486, 490, 499, 500, 507, 516, 517, 524, 533, 534, 541, 614, 615, 622, 628, 659, 665, 668, 671, 689], "add": [1, 2, 3, 4, 5, 24, 25, 155, 157, 158, 474, 475, 649], "add_nod": [1, 2, 4, 5], "0": [1, 2, 3, 4, 5, 48, 127, 129, 130, 188, 201, 286, 289, 290, 325, 331, 338, 351, 359, 366, 372, 381, 398, 405, 414, 431, 448, 465, 489, 506, 523, 540, 547, 556, 563, 572, 579, 588, 595, 604, 621, 656, 683, 693], "1": [1, 2, 3, 4, 5, 28, 48, 49, 70, 71, 72, 73, 92, 95, 105, 112, 115, 127, 130, 164, 188, 189, 201, 210, 211, 212, 213, 240, 243, 253, 260, 263, 286, 287, 290, 325, 338, 351, 359, 366, 372, 381, 398, 405, 414, 431, 448, 465, 489, 506, 523, 540, 547, 556, 563, 572, 579, 588, 595, 604, 621, 655, 656, 683], "2": [1, 2, 3, 4, 5, 55, 121, 196, 270, 655, 656], "5": [1, 2, 3, 4, 5, 48, 129, 130, 188, 289, 290], "3": [1, 2, 4, 5, 68, 70, 71, 72, 73, 209, 210, 211, 212, 213, 287, 490], "edg": [1, 2, 3, 4, 5, 24, 28, 29, 32, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 66, 70, 71, 73, 76, 79, 81, 82, 87, 88, 103, 104, 122, 130, 138, 143, 145, 146, 150, 155, 160, 164, 165, 166, 167, 170, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 201, 202, 207, 210, 211, 213, 216, 220, 221, 222, 224, 225, 226, 227, 228, 234, 235, 236, 251, 252, 272, 273, 274, 275, 280, 290, 298, 302, 308, 310, 311, 315, 318, 324, 344, 350, 372, 378, 388, 392, 399, 411, 425, 442, 459, 500, 517, 534, 553, 569, 585, 595, 601, 611, 615, 622, 632, 633, 635, 637, 638, 662, 663, 665, 667, 668, 689], "add_edg": [1, 2, 4, 5], "length": [1, 2, 4, 44, 45, 130, 184, 185, 201, 290, 344, 372, 611, 689, 692], "forc": [1, 2, 4, 5, 43, 58, 85, 94, 126, 183, 199, 201, 231, 242, 283, 318, 388, 579, 595, 639, 642, 689, 692], "add_support": [1, 2, 3, 4], "add_load": [1, 2, 3, 4], "build": [1, 4, 61, 631, 661, 689, 693], "trail": [1, 2, 3, 4, 5, 24, 155, 158, 160, 161, 162, 167, 201, 218, 222, 236, 271, 280, 281, 282, 287, 302, 303, 305, 344, 595, 611, 689], "automat": [1, 162, 490, 689, 690, 692, 693], "build_trail": [1, 2, 3, 4, 5, 689], "comput": [1, 4, 5, 114, 122, 124, 127, 162, 262, 274, 277, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 490, 506, 523, 540, 556, 572, 588, 604, 621, 646, 675, 683, 689, 690], "state": [1, 4, 5, 61, 201, 344], "static": [1, 4, 5, 357, 358, 630, 631, 636, 643, 644, 660, 661, 666, 672, 673, 692], "form": [1, 2, 3, 4, 5, 22, 54, 61, 69, 70, 120, 153, 195, 210, 269, 305, 357, 358, 378, 411, 472, 490, 553, 569, 585, 601, 628, 629, 635, 638, 641, 642, 690, 692, 693], "eta": [1, 2, 4, 5, 357, 358, 481, 484, 490, 628, 689], "1e": [1, 2, 3, 4, 5, 85, 94, 231, 242, 357, 358, 490, 628], "6": [1, 2, 3, 4, 5, 85, 94, 231, 242, 357, 358, 490, 628, 693], "tmax": [1, 2, 4, 5, 357, 358, 481, 484, 490, 628, 689], "100": [1, 2, 3, 4, 5, 129, 289, 357, 358, 490, 628], "verbos": [1, 2, 3, 4, 5, 357, 358, 490], "true": [1, 2, 3, 4, 5, 51, 54, 55, 56, 73, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 102, 103, 104, 105, 117, 120, 121, 127, 134, 135, 160, 177, 178, 192, 195, 196, 197, 213, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 250, 251, 252, 253, 266, 269, 270, 286, 294, 295, 302, 325, 327, 328, 338, 340, 341, 351, 353, 354, 366, 368, 369, 381, 384, 385, 398, 401, 402, 414, 417, 418, 431, 434, 435, 448, 451, 452, 465, 468, 469, 489, 490, 492, 493, 506, 509, 510, 523, 526, 527, 540, 543, 544, 556, 559, 560, 572, 575, 576, 588, 591, 592, 604, 607, 608, 621, 624, 625, 683, 685, 686], "plot": [1, 2, 3, 4, 5, 629, 645, 648, 650, 651, 652, 653, 654, 656, 657, 659, 674, 689], "result": [1, 4, 5, 26, 30, 35, 92, 99, 100, 101, 105, 159, 168, 173, 240, 247, 248, 249, 253], "scene": [1, 2, 3, 4, 5], "artist": [1, 629, 630, 631, 644, 648, 659, 660, 661, 673, 689], "nodes": [1, 2, 3, 4, 5], "show_nodetext": [1, 4], "show_edgetext": [1, 2, 4], "shift": [1, 4, 5, 287], "transform": [1, 2, 3, 4, 5], "from_vector": [1, 2, 3, 4, 5], "show": [1, 2, 3, 4, 5, 693], "content": 1, "zoom_ext": [1, 2, 3, 4, 5], "data": [2, 3, 26, 27, 30, 31, 35, 51, 54, 55, 59, 62, 63, 67, 80, 92, 99, 100, 101, 105, 117, 120, 121, 127, 128, 133, 134, 135, 151, 152, 159, 160, 163, 168, 169, 173, 177, 178, 192, 195, 196, 200, 203, 204, 208, 221, 223, 240, 247, 248, 249, 253, 266, 269, 270, 286, 288, 293, 294, 295, 302, 316, 317, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 359, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 386, 387, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 426, 427, 428, 429, 431, 433, 434, 435, 436, 437, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 472, 477, 478, 479, 480, 489, 491, 492, 493, 494, 495, 501, 502, 503, 504, 506, 508, 509, 510, 511, 512, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 535, 536, 537, 538, 540, 542, 543, 544, 545, 546, 549, 550, 551, 552, 554, 555, 556, 558, 559, 560, 561, 562, 565, 566, 567, 568, 570, 571, 572, 574, 575, 576, 577, 578, 581, 582, 583, 584, 586, 587, 588, 590, 591, 592, 593, 594, 597, 598, 599, 600, 602, 603, 604, 606, 607, 608, 609, 610, 616, 617, 618, 619, 621, 623, 624, 625, 626, 627, 644, 645, 648, 649, 651, 673, 674, 676, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 692], "point": [2, 3, 41, 48, 56, 64, 66, 67, 68, 92, 102, 105, 136, 139, 181, 188, 197, 205, 207, 208, 209, 240, 250, 253, 296, 299, 324, 337, 350, 359, 365, 415, 557, 563, 682], "4": [2, 3, 4, 5], "trail_edg": [2, 3, 167], "deviation_edg": [2, 3, 5, 160, 165, 178, 221], "kei": [2, 4, 24, 29, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 57, 66, 75, 77, 78, 79, 82, 83, 84, 85, 86, 90, 91, 94, 95, 96, 97, 98, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 126, 130, 132, 143, 144, 149, 150, 155, 160, 161, 165, 166, 167, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 198, 207, 215, 217, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 238, 239, 242, 243, 244, 245, 246, 254, 255, 256, 258, 260, 261, 262, 264, 265, 266, 267, 268, 269, 278, 282, 283, 284, 285, 287, 290, 292, 301, 302, 303, 304, 305, 308, 309, 314, 315, 331, 359, 388, 421, 438, 455, 496, 513, 530, 611, 676, 689], "u": [2, 5, 28, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 76, 130, 164, 175, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 195, 196, 216, 290, 318, 344, 692], "v": [2, 5, 28, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 76, 130, 164, 175, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 195, 196, 216, 290, 318, 344, 693], "deviat": [2, 5, 24, 155, 165, 177, 178, 201, 221, 225, 226, 228, 272, 273, 275, 318, 372, 388, 689], "indirect": [2, 221, 228, 689], "set": [2, 39, 40, 49, 52, 53, 54, 55, 64, 71, 73, 106, 107, 115, 116, 118, 119, 120, 121, 143, 144, 179, 180, 189, 193, 194, 195, 196, 205, 211, 213, 254, 255, 263, 265, 267, 268, 269, 270, 308, 309, 388, 391, 392, 421, 424, 425, 438, 441, 442, 455, 458, 459, 496, 499, 500, 513, 516, 517, 530, 533, 534, 611, 614, 615, 689], "loadscal": [2, 3], "reactionscal": [2, 3], "edgetext": [2, 4], "o": 3, "time": [3, 5, 162, 628, 654, 689, 693], "pointconstraint": 3, "trailedgeparamet": 3, "deviationedgeparamet": [3, 4, 5], "here": [3, 693], "path": [3, 62, 67, 80, 128, 134, 139, 203, 208, 223, 288, 294, 299, 322, 327, 335, 340, 348, 353, 363, 368, 376, 384, 395, 401, 409, 417, 428, 434, 445, 451, 462, 468, 479, 492, 503, 509, 520, 526, 537, 543, 551, 559, 567, 575, 583, 591, 599, 607, 618, 624, 656, 680, 685], "dirnam": 3, "__file__": 3, "IN": [3, 694], "abspath": 3, "join": 3, "03_bridge_2d": 3, "json": [3, 62, 63, 134, 135, 152, 203, 204, 294, 295, 317, 322, 323, 327, 328, 330, 335, 336, 340, 341, 343, 348, 349, 353, 354, 356, 363, 364, 368, 369, 371, 376, 377, 384, 385, 387, 395, 396, 401, 402, 404, 409, 410, 417, 418, 420, 428, 429, 434, 435, 437, 445, 446, 451, 452, 454, 462, 463, 468, 469, 471, 479, 480, 492, 493, 495, 503, 504, 509, 510, 512, 520, 521, 526, 527, 529, 537, 538, 543, 544, 546, 551, 552, 559, 560, 562, 567, 568, 575, 576, 578, 583, 584, 591, 592, 594, 599, 600, 607, 608, 610, 618, 619, 624, 625, 627, 680, 681, 685, 686, 688, 689], "from_json": 3, "appli": [3, 58, 85, 94, 113, 123, 156, 199, 231, 242, 261, 276, 359, 365, 676, 689], "gener": [3, 4, 5, 28, 162, 164, 201, 357, 358, 692], "find": [3, 58, 128, 165, 167, 199, 288, 490, 628, 690, 692, 693], "initi": [3, 399, 432, 449, 466, 507, 524, 541, 622], "opt": [3, 5], "defin": [3, 129, 136, 289, 296, 344, 359, 682], "constraint": [3, 4, 5, 472, 474, 482, 485, 486, 487, 628, 689, 692], "nodes_opt": 3, "target_point": 3, "20": 3, "67": 3, "42": 3, "7": [3, 693], "15": 3, "28": 3, "84": 3, "zip": 3, "add_constraint": [3, 4, 5], "paramet": [3, 4, 5, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 73, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 134, 135, 139, 141, 142, 143, 144, 145, 146, 147, 148, 153, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 283, 285, 286, 287, 288, 289, 290, 294, 295, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 320, 321, 322, 323, 324, 325, 327, 328, 333, 334, 335, 336, 337, 338, 340, 341, 346, 347, 348, 349, 350, 351, 353, 354, 357, 358, 359, 361, 362, 363, 364, 365, 366, 368, 369, 374, 375, 376, 377, 381, 384, 385, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 407, 408, 409, 410, 414, 417, 418, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 438, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 455, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468, 469, 475, 477, 478, 479, 480, 483, 488, 489, 490, 492, 493, 496, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 513, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 549, 550, 551, 552, 556, 559, 560, 565, 566, 567, 568, 572, 575, 576, 581, 582, 583, 584, 588, 591, 592, 597, 598, 599, 600, 604, 607, 608, 611, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 625, 628, 629, 630, 631, 637, 640, 644, 648, 653, 654, 655, 656, 658, 659, 660, 661, 667, 670, 673, 676, 678, 679, 680, 681, 682, 683, 685, 686, 689], "add_paramet": [3, 4, 5], "bound_low": [3, 388, 421, 438, 455, 496, 513, 530, 611], "bound_up": [3, 388, 421, 438, 455, 496, 513, 530, 611], "10": [3, 4, 5, 689, 690, 693], "form_opt": [3, 4, 5], "solv": [3, 4, 5, 58, 199, 628, 689, 692, 693], "algorithm": [3, 5, 32, 57, 58, 81, 127, 170, 198, 199, 224, 286, 325, 338, 351, 357, 358, 366, 381, 398, 414, 431, 448, 465, 489, 490, 506, 523, 540, 556, 572, 588, 604, 621, 628, 683, 689], "slsqp": [3, 4, 490, 628], "iter": [3, 4, 51, 94, 117, 129, 160, 161, 177, 178, 192, 221, 242, 266, 285, 289, 302, 304, 357, 358, 490, 628, 689], "ep": [3, 4, 490, 628], "figsiz": [3, 4, 5], "16": [3, 4, 5, 693], "9": [3, 4, 5], "t": [3, 4, 5, 48, 130, 158, 188, 290, 693], "40": 3, "target": [3, 372, 379, 405, 412, 547, 554, 563, 570, 571, 579, 586, 595, 602, 689, 692], "x": [3, 5, 421, 496, 689], "y": [3, 5, 438, 513, 689], "z": [3, 89, 127, 237, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 455, 465, 489, 506, 523, 530, 540, 556, 572, 588, 604, 621, 683, 689], "size": [3, 49, 95, 115, 189, 243, 263, 490, 689], "facecolor": 3, "90": 3, "math": [4, 5], "sqrt": 4, "trailedgeforceconstraint": [4, 5], "width": [4, 689], "height": 4, "auto": [4, 5], "auxiliari": [4, 5, 160, 161, 162, 222, 271, 304, 689], "auxiliary_trail": [4, 5, 162, 689], "minim": [4, 484], "axiliari": [4, 5], "goal": [4, 474], "auxiliary_trail_edg": [4, 5, 689], "n": [4, 5, 71, 73, 115, 211, 213, 263, 693], "nodetext": 4, "pad": [4, 5, 658], "pi": 5, "co": 5, "sin": 5, "numpi": [5, 358, 689, 693], "np": 5, "util": 5, "pairwis": 5, "creat": [5, 26, 30, 35, 60, 65, 99, 100, 101, 137, 159, 168, 173, 202, 206, 247, 248, 249, 297, 303, 305, 324, 337, 350, 365, 485, 486, 630, 660, 682, 689], "diamet": 5, "num_sid": 5, "onli": [5, 56, 73, 83, 102, 197, 213, 229, 250, 485, 486, 490, 628, 647, 682, 689, 692, 693], "even": 5, "number": [5, 32, 33, 34, 36, 68, 71, 73, 122, 123, 124, 125, 129, 170, 171, 172, 174, 209, 211, 213, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 289, 357, 358, 482, 483, 490, 628], "appendix_length": 5, "tension_forc": 5, "compression_forc": 5, "bound": [5, 391, 392, 424, 425, 441, 442, 458, 459, 485, 499, 500, 516, 517, 533, 534, 614, 615, 646, 658, 675], "grad_method": 5, "ad": [5, 482, 490, 689], "test": [5, 222, 225, 226, 228, 233, 236], "subdivis": 5, "i": [5, 28, 39, 40, 48, 51, 52, 53, 54, 55, 56, 58, 64, 67, 76, 77, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 102, 103, 104, 105, 106, 107, 117, 118, 119, 120, 121, 123, 129, 130, 141, 142, 150, 161, 162, 164, 165, 167, 179, 180, 188, 192, 193, 194, 195, 196, 197, 199, 205, 208, 216, 217, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 250, 251, 252, 253, 254, 255, 264, 266, 267, 268, 269, 270, 276, 285, 287, 289, 290, 301, 304, 306, 307, 315, 344, 357, 358, 391, 392, 424, 425, 441, 442, 458, 459, 476, 490, 499, 500, 516, 517, 533, 534, 614, 615, 628, 630, 660, 689, 692, 693, 694], "assert": 5, "remov": [5, 487, 488, 689], "last": [5, 162, 284, 301, 357, 693], "theta": 5, "linspac": 5, "radiu": 5, "enumer": 5, "perimet": 5, "tension": [5, 201, 690, 692], "list": [5, 22, 26, 29, 30, 35, 40, 41, 42, 46, 48, 49, 50, 52, 53, 57, 58, 60, 64, 66, 71, 73, 78, 79, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 105, 107, 108, 112, 113, 114, 115, 118, 119, 126, 128, 129, 136, 138, 140, 150, 153, 159, 161, 165, 166, 167, 168, 173, 180, 181, 182, 186, 188, 189, 191, 193, 194, 198, 199, 201, 202, 205, 207, 211, 213, 219, 220, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 253, 255, 256, 260, 261, 262, 263, 267, 268, 283, 288, 289, 296, 298, 300, 301, 304, 315, 324, 337, 350, 359, 365, 628, 630, 631, 649, 660, 661, 682, 689], "rang": [5, 48, 54, 120, 130, 188, 195, 269, 290, 689], "intern": [5, 201, 357, 358, 692], "ar": [5, 23, 58, 130, 154, 162, 199, 290, 301, 303, 305, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 490, 497, 514, 531, 548, 564, 580, 596, 612, 628, 677, 689, 691, 692, 693], "half_num_sid": 5, "int": [5, 32, 33, 34, 36, 49, 68, 71, 73, 78, 79, 85, 86, 91, 94, 95, 113, 115, 122, 123, 124, 125, 126, 129, 132, 144, 150, 161, 165, 167, 170, 171, 172, 174, 189, 201, 209, 211, 213, 219, 220, 231, 232, 233, 239, 242, 243, 261, 263, 264, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 292, 301, 303, 304, 305, 309, 315, 357, 358, 359, 378, 411, 490, 553, 569, 585, 601, 628, 637, 640, 652, 658, 667, 670, 676], "auxiliary_trail_length": [5, 689], "should": [5, 41, 54, 55, 58, 120, 121, 160, 177, 178, 181, 195, 196, 199, 221, 269, 270, 302, 644, 673], "zero": [5, 89, 237], "all": [5, 27, 40, 53, 57, 89, 93, 94, 107, 160, 161, 163, 177, 178, 180, 194, 198, 201, 221, 237, 241, 242, 255, 282, 285, 287, 302, 304, 357, 650, 656, 658, 689, 693, 694], "allow": [5, 693], "chang": [5, 92, 105, 240, 253, 689], "lbfg": [5, 490, 628], "grad": [5, 490], "45": 5, "A": [6, 22, 28, 32, 40, 52, 53, 54, 56, 57, 64, 66, 67, 68, 75, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 102, 103, 104, 107, 110, 113, 118, 119, 120, 126, 128, 129, 136, 137, 138, 139, 140, 142, 145, 146, 147, 148, 150, 153, 156, 158, 162, 164, 165, 167, 170, 180, 193, 194, 195, 197, 198, 201, 205, 207, 208, 209, 215, 219, 220, 223, 224, 229, 231, 232, 233, 234, 235, 237, 238, 239, 241, 243, 244, 245, 246, 250, 251, 252, 255, 258, 261, 267, 268, 269, 283, 288, 289, 296, 297, 298, 299, 300, 303, 304, 305, 307, 310, 311, 312, 313, 315, 318, 331, 337, 344, 357, 358, 359, 365, 490, 628, 640, 647, 648, 670, 676, 682, 689, 691, 692, 694], "b": [6, 691, 692], "tubular": [6, 691, 692], "3d": [6, 689, 691, 692], "c": [6, 92, 105, 240, 253, 691, 692, 693, 694], "circular": [6, 691, 692], "dome": [6, 689, 691, 692], "d": [6, 92, 105, 240, 253, 690, 691, 692], "jessen": [6, 691, 692], "e": [6, 150, 315, 344, 691, 692], "spiral": [6, 689, 691, 692], "staircas": [6, 689, 691, 692], "download": [7, 8, 9, 10, 11, 693], "rhino": [7, 23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 644, 673, 677, 689, 692, 693], "file": [7, 8, 9, 10, 11, 62, 63, 67, 134, 139, 203, 204, 208, 294, 299, 322, 323, 327, 335, 336, 340, 348, 349, 353, 363, 364, 368, 376, 377, 384, 395, 396, 401, 409, 410, 417, 428, 429, 434, 445, 446, 451, 462, 463, 468, 479, 480, 492, 503, 504, 509, 520, 521, 526, 537, 538, 543, 551, 552, 559, 567, 568, 575, 583, 584, 591, 599, 600, 607, 618, 619, 624, 656, 680, 681, 685, 689, 694], "grasshopp": [7, 8, 9, 10, 11, 23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 644, 673, 677, 689, 691, 692], "viewer": [12, 13, 647, 689, 692], "class": [22, 23, 153, 154, 318, 319, 331, 332, 344, 345, 359, 360, 372, 373, 388, 389, 405, 406, 421, 422, 438, 439, 455, 456, 472, 473, 496, 497, 513, 514, 530, 531, 547, 548, 563, 564, 579, 580, 595, 596, 611, 612, 629, 647, 659, 676, 677, 689], "arg": [22, 153, 337, 382, 573, 589, 605, 647], "kwarg": [22, 54, 120, 153, 195, 269, 318, 324, 331, 337, 344, 350, 359, 382, 472, 573, 589, 605, 629, 630, 631, 647, 648, 649, 656, 659, 660, 661, 676], "sourc": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 325, 326, 327, 328, 329, 330, 331, 332, 333, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 366, 367, 368, 369, 370, 371, 372, 373, 374, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 683, 684, 685, 686, 687, 688, 692], "base": [22, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 490, 496, 513, 530, 547, 563, 579, 595, 611, 628, 629, 647, 659, 676, 689], "The": [22, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 67, 68, 70, 71, 72, 73, 75, 76, 77, 83, 84, 85, 90, 94, 95, 96, 97, 98, 106, 107, 108, 110, 112, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 141, 142, 143, 144, 151, 152, 153, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 215, 216, 217, 221, 222, 225, 226, 228, 229, 230, 231, 236, 238, 242, 243, 244, 245, 246, 254, 255, 256, 258, 260, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 317, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 477, 478, 479, 480, 481, 482, 483, 484, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 549, 550, 551, 552, 553, 554, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 581, 582, 583, 584, 585, 586, 589, 590, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 605, 606, 607, 608, 609, 610, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 644, 653, 655, 659, 660, 661, 673, 676, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694], "heart": [22, 153], "life": [22, 153], "argument": [22, 54, 129, 145, 146, 147, 148, 153, 195, 289, 310, 311, 312, 313, 324, 337, 350, 630, 631, 660, 661, 689], "dict": [22, 40, 51, 53, 54, 55, 59, 66, 75, 78, 79, 90, 91, 107, 110, 117, 119, 120, 121, 133, 135, 143, 144, 145, 146, 147, 148, 150, 151, 153, 160, 177, 178, 180, 192, 194, 195, 196, 200, 207, 215, 219, 220, 221, 238, 239, 255, 258, 266, 268, 269, 270, 293, 295, 302, 303, 305, 308, 309, 310, 311, 312, 313, 315, 316, 321, 324, 326, 328, 329, 334, 337, 339, 341, 342, 347, 350, 352, 354, 355, 362, 367, 369, 370, 375, 383, 385, 386, 394, 400, 402, 403, 408, 416, 418, 419, 427, 433, 435, 436, 444, 450, 452, 453, 461, 467, 469, 470, 478, 491, 493, 494, 502, 508, 510, 511, 519, 525, 527, 528, 536, 542, 544, 545, 550, 558, 560, 561, 566, 574, 576, 577, 582, 590, 592, 593, 598, 606, 608, 609, 617, 623, 625, 626, 630, 631, 637, 640, 660, 661, 667, 670, 679, 684, 686, 687], "keyword": [22, 153, 324, 337, 350, 630, 631, 660, 661], "return": [22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 155, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 288, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 310, 311, 312, 313, 315, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 381, 383, 384, 385, 386, 387, 391, 392, 393, 394, 395, 396, 398, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 431, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446, 448, 450, 451, 452, 453, 454, 458, 459, 460, 461, 462, 463, 465, 467, 468, 469, 470, 471, 477, 478, 479, 480, 489, 490, 491, 492, 493, 494, 495, 499, 500, 501, 502, 503, 504, 506, 508, 509, 510, 511, 512, 516, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 533, 534, 535, 536, 537, 538, 540, 542, 543, 544, 545, 546, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 572, 574, 575, 576, 577, 578, 581, 582, 583, 584, 585, 586, 588, 590, 591, 592, 593, 594, 597, 598, 599, 600, 601, 602, 604, 606, 607, 608, 609, 610, 614, 615, 616, 617, 618, 619, 621, 623, 624, 625, 626, 627, 628, 630, 631, 632, 633, 634, 637, 640, 643, 644, 645, 646, 648, 655, 660, 661, 662, 663, 664, 667, 670, 672, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689], "method": [22, 23, 153, 154, 318, 319, 331, 332, 344, 345, 359, 360, 372, 373, 388, 389, 405, 406, 421, 422, 438, 439, 455, 456, 472, 473, 490, 496, 497, 513, 514, 530, 531, 547, 548, 563, 564, 579, 580, 595, 596, 611, 612, 628, 629, 636, 647, 652, 659, 666, 676, 677, 689], "inherit": [22, 153, 201, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 629, 647, 659, 676], "convert": [23, 133, 154, 293, 319, 326, 332, 339, 345, 352, 360, 367, 373, 383, 389, 400, 406, 416, 422, 433, 439, 450, 456, 467, 473, 491, 497, 508, 514, 525, 531, 542, 548, 558, 564, 574, 580, 590, 596, 606, 612, 623, 677, 684, 689], "instanc": [23, 59, 60, 62, 63, 65, 137, 154, 200, 202, 203, 204, 206, 297, 319, 321, 322, 323, 332, 334, 335, 336, 345, 347, 348, 349, 360, 362, 363, 364, 373, 375, 376, 377, 389, 394, 395, 396, 406, 408, 409, 410, 422, 427, 428, 429, 439, 444, 445, 446, 456, 461, 462, 463, 473, 478, 479, 480, 497, 502, 503, 504, 514, 519, 520, 521, 531, 536, 537, 538, 548, 550, 551, 552, 564, 566, 567, 568, 580, 582, 583, 584, 596, 598, 599, 600, 612, 617, 618, 619, 677, 679, 680, 681], "string": [23, 62, 63, 67, 75, 90, 110, 134, 135, 139, 154, 203, 204, 208, 215, 238, 258, 294, 295, 299, 319, 322, 323, 327, 328, 332, 335, 336, 340, 341, 345, 348, 349, 353, 354, 360, 363, 364, 368, 369, 373, 376, 377, 384, 385, 389, 395, 396, 401, 402, 406, 409, 410, 417, 418, 422, 428, 429, 434, 435, 439, 445, 446, 451, 452, 456, 462, 463, 468, 469, 473, 479, 480, 492, 493, 497, 503, 504, 509, 510, 514, 520, 521, 526, 527, 531, 537, 538, 543, 544, 548, 551, 552, 559, 560, 564, 567, 568, 575, 576, 580, 583, 584, 591, 592, 596, 599, 600, 607, 608, 612, 618, 619, 624, 625, 677, 680, 681, 685, 686], "thi": [23, 31, 32, 57, 58, 59, 62, 63, 81, 87, 103, 154, 162, 169, 170, 198, 199, 200, 203, 204, 224, 234, 251, 287, 304, 319, 320, 321, 322, 323, 332, 333, 334, 335, 336, 345, 346, 347, 348, 349, 357, 358, 360, 361, 362, 363, 364, 373, 374, 375, 376, 377, 389, 391, 392, 393, 394, 395, 396, 406, 407, 408, 409, 410, 422, 424, 425, 426, 427, 428, 429, 439, 441, 442, 443, 444, 445, 446, 456, 458, 459, 460, 461, 462, 463, 473, 477, 478, 479, 480, 490, 497, 499, 500, 501, 502, 503, 504, 514, 516, 517, 518, 519, 520, 521, 531, 533, 534, 535, 536, 537, 538, 548, 549, 550, 551, 552, 564, 565, 566, 567, 568, 580, 581, 582, 583, 584, 596, 597, 598, 599, 600, 612, 614, 615, 616, 617, 618, 619, 647, 677, 678, 679, 680, 681, 689, 692, 693, 694], "exist": [23, 39, 40, 52, 53, 80, 87, 103, 106, 107, 118, 119, 143, 144, 154, 179, 180, 193, 194, 223, 234, 251, 254, 255, 267, 268, 304, 308, 309, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 647, 677, 689], "net": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677, 692], "compat": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 644, 673, 677, 689], "when": [23, 39, 106, 154, 179, 254, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677, 689, 693], "us": [23, 39, 40, 52, 53, 55, 56, 58, 64, 67, 70, 71, 72, 73, 75, 87, 90, 92, 102, 103, 105, 106, 107, 110, 118, 119, 121, 127, 154, 179, 180, 193, 194, 196, 197, 199, 205, 208, 210, 211, 212, 213, 215, 234, 238, 240, 250, 251, 253, 254, 255, 258, 267, 268, 270, 286, 319, 325, 332, 338, 345, 351, 358, 360, 366, 373, 381, 389, 398, 406, 414, 422, 431, 439, 448, 456, 465, 473, 489, 490, 497, 506, 514, 523, 531, 540, 548, 556, 564, 572, 580, 588, 596, 604, 612, 621, 628, 630, 645, 648, 660, 674, 677, 683, 689, 690, 691, 692, 693, 694], "ironpython": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "implicit": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "convers": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677, 689], "usual": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "take": [23, 55, 58, 121, 154, 196, 199, 270, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 486, 497, 514, 531, 548, 564, 580, 596, 612, 677, 689], "place": [23, 141, 154, 306, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "cpython": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "kick": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "its": [23, 51, 54, 55, 112, 120, 121, 129, 130, 133, 151, 152, 154, 192, 195, 196, 260, 269, 270, 289, 290, 293, 301, 316, 317, 319, 326, 329, 330, 332, 337, 339, 342, 343, 345, 352, 355, 356, 360, 367, 370, 371, 373, 383, 386, 387, 389, 400, 403, 404, 406, 416, 419, 420, 422, 433, 436, 437, 439, 450, 453, 454, 456, 467, 470, 471, 473, 476, 491, 494, 495, 497, 508, 511, 512, 514, 525, 528, 529, 531, 542, 545, 546, 548, 558, 561, 562, 564, 574, 577, 578, 580, 590, 593, 594, 596, 606, 609, 610, 612, 623, 626, 627, 677, 684, 687, 688], "default": [23, 31, 85, 94, 143, 144, 145, 146, 147, 148, 154, 160, 161, 169, 177, 178, 201, 221, 231, 242, 285, 302, 304, 308, 309, 310, 311, 312, 313, 319, 320, 332, 333, 345, 346, 357, 358, 360, 361, 373, 374, 389, 393, 406, 407, 422, 426, 439, 443, 456, 460, 473, 477, 490, 497, 501, 514, 518, 531, 535, 548, 549, 564, 565, 580, 581, 596, 597, 612, 616, 628, 677, 678, 689], "print": [23, 154, 319, 332, 345, 357, 358, 360, 373, 389, 406, 422, 439, 456, 473, 490, 497, 514, 531, 548, 564, 580, 596, 612, 677], "self": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "gettyp": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "fullnam": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "similar": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "overrid": [23, 154, 319, 332, 344, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "object": [23, 26, 31, 32, 35, 39, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 81, 87, 88, 89, 99, 101, 102, 103, 104, 129, 133, 134, 135, 139, 151, 152, 154, 156, 158, 159, 169, 170, 173, 179, 197, 198, 199, 200, 203, 204, 205, 207, 208, 209, 224, 234, 235, 237, 247, 249, 250, 251, 252, 289, 293, 294, 295, 299, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 383, 384, 385, 386, 387, 389, 393, 394, 395, 396, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 416, 417, 418, 419, 420, 422, 426, 427, 428, 429, 433, 434, 435, 436, 437, 439, 443, 444, 445, 446, 450, 451, 452, 453, 454, 456, 460, 461, 462, 463, 467, 468, 469, 470, 471, 472, 473, 477, 478, 479, 480, 481, 484, 490, 491, 492, 493, 494, 495, 497, 501, 502, 503, 504, 508, 509, 510, 511, 512, 514, 518, 519, 520, 521, 525, 526, 527, 528, 529, 531, 535, 536, 537, 538, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 606, 607, 608, 609, 610, 612, 616, 617, 618, 619, 623, 624, 625, 626, 627, 628, 636, 647, 648, 649, 650, 651, 658, 666, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 688, 689, 693], "fix": [23, 56, 102, 129, 154, 158, 197, 250, 289, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677, 689], "make": [23, 31, 154, 162, 169, 319, 320, 332, 333, 345, 346, 360, 361, 372, 373, 374, 389, 393, 406, 407, 422, 426, 439, 443, 456, 460, 473, 477, 497, 501, 514, 518, 531, 535, 548, 549, 564, 565, 579, 580, 581, 595, 596, 597, 612, 616, 677, 678, 693], "displai": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 657, 677, 689], "proper": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "represent": [23, 133, 134, 135, 152, 154, 293, 294, 295, 317, 319, 326, 327, 328, 330, 332, 339, 340, 341, 343, 345, 352, 353, 354, 356, 360, 367, 368, 369, 371, 373, 383, 384, 385, 387, 389, 400, 401, 402, 404, 406, 416, 417, 418, 420, 422, 433, 434, 435, 437, 439, 450, 451, 452, 454, 456, 467, 468, 469, 471, 473, 491, 492, 493, 495, 497, 508, 509, 510, 512, 514, 525, 526, 527, 529, 531, 542, 543, 544, 546, 548, 558, 559, 560, 562, 564, 574, 575, 576, 578, 580, 590, 591, 592, 594, 596, 606, 607, 608, 610, 612, 623, 624, 625, 627, 677, 684, 685, 686, 688], "connect": [23, 29, 30, 64, 67, 68, 73, 80, 84, 100, 154, 165, 166, 167, 168, 205, 208, 209, 213, 223, 230, 248, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677, 693, 694], "panel": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "other": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677, 692, 693, 694], "type": [23, 31, 58, 59, 62, 63, 126, 154, 169, 199, 200, 203, 204, 283, 319, 320, 321, 322, 323, 332, 333, 334, 335, 336, 345, 346, 347, 348, 349, 360, 361, 362, 363, 364, 373, 374, 375, 376, 377, 389, 393, 394, 395, 396, 406, 407, 408, 409, 410, 422, 426, 427, 428, 429, 439, 443, 444, 445, 446, 456, 460, 461, 462, 463, 473, 477, 478, 479, 480, 497, 501, 502, 503, 504, 514, 518, 519, 520, 521, 531, 535, 536, 537, 538, 548, 549, 550, 551, 552, 564, 565, 566, 567, 568, 580, 581, 582, 583, 584, 596, 597, 598, 599, 600, 612, 616, 617, 618, 619, 630, 631, 644, 648, 660, 661, 673, 677, 678, 679, 680, 681, 689, 693], "output": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 490, 497, 514, 531, 548, 564, 580, 596, 612, 628, 677, 689], "an": [24, 31, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 55, 58, 59, 61, 62, 63, 67, 82, 87, 103, 106, 118, 119, 123, 125, 133, 134, 135, 139, 143, 155, 161, 162, 169, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 194, 196, 199, 200, 203, 204, 208, 222, 225, 227, 232, 234, 236, 251, 254, 267, 268, 276, 279, 293, 294, 295, 299, 301, 304, 308, 320, 321, 322, 323, 324, 326, 327, 328, 333, 334, 335, 336, 339, 340, 341, 346, 347, 348, 349, 350, 352, 353, 354, 357, 358, 361, 362, 363, 364, 367, 368, 369, 374, 375, 376, 377, 378, 383, 384, 385, 388, 393, 394, 395, 396, 400, 401, 402, 407, 408, 409, 410, 411, 416, 417, 418, 421, 426, 427, 428, 429, 433, 434, 435, 438, 443, 444, 445, 446, 450, 451, 452, 455, 460, 461, 462, 463, 467, 468, 469, 472, 477, 478, 479, 480, 488, 491, 492, 493, 496, 501, 502, 503, 504, 508, 509, 510, 513, 518, 519, 520, 521, 525, 526, 527, 530, 535, 536, 537, 538, 542, 543, 544, 549, 550, 551, 552, 553, 558, 559, 560, 565, 566, 567, 568, 569, 574, 575, 576, 581, 582, 583, 584, 585, 590, 591, 592, 597, 598, 599, 600, 601, 606, 607, 608, 611, 616, 617, 618, 619, 623, 624, 625, 629, 630, 631, 636, 637, 644, 656, 659, 660, 661, 666, 667, 673, 678, 679, 680, 681, 684, 685, 686, 689, 692, 693, 694], "tupl": [24, 29, 39, 40, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 60, 64, 66, 70, 71, 79, 82, 117, 120, 121, 136, 138, 143, 150, 155, 160, 161, 166, 177, 178, 179, 180, 183, 185, 187, 189, 190, 192, 193, 194, 195, 196, 198, 202, 205, 207, 210, 211, 220, 221, 222, 225, 226, 227, 228, 236, 266, 269, 270, 285, 296, 298, 302, 304, 308, 315, 324, 337, 350, 378, 411, 553, 569, 585, 601, 637, 646, 667, 675, 689], "doubl": [25, 157, 693], "rtype": [26, 30, 35, 92, 99, 100, 101, 105, 159, 168, 173, 240, 247, 248, 249, 253], "arrai": [26, 30, 35, 91, 92, 99, 100, 101, 105, 150, 159, 168, 173, 239, 240, 247, 248, 249, 253, 315, 485, 486], "adjac": [26, 99, 159, 247], "matrix": [26, 30, 35, 92, 99, 100, 101, 105, 159, 168, 173, 240, 247, 248, 249, 253], "network": [26, 27, 28, 30, 32, 35, 37, 51, 56, 57, 58, 64, 66, 67, 68, 76, 77, 80, 81, 87, 88, 89, 92, 93, 99, 100, 101, 102, 103, 104, 105, 117, 128, 129, 136, 138, 139, 140, 141, 142, 159, 163, 164, 168, 170, 173, 175, 192, 197, 198, 199, 205, 207, 208, 209, 216, 217, 223, 224, 234, 235, 237, 240, 241, 247, 248, 249, 250, 251, 252, 253, 266, 288, 289, 296, 298, 299, 300, 306, 307, 632, 648, 651, 662], "datastructur": [26, 28, 30, 35, 80, 92, 99, 100, 101, 105, 127, 159, 164, 168, 173, 223, 240, 247, 248, 249, 253, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "obj": [26, 28, 35, 39, 52, 67, 80, 99, 101, 106, 118, 127, 139, 159, 164, 173, 179, 193, 208, 223, 247, 249, 254, 267, 286, 299, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "get": [26, 28, 35, 39, 40, 43, 45, 47, 49, 52, 53, 54, 55, 70, 71, 72, 73, 74, 80, 99, 101, 106, 107, 111, 113, 115, 116, 118, 119, 120, 121, 126, 127, 159, 164, 173, 179, 180, 183, 185, 187, 189, 190, 193, 194, 195, 196, 210, 211, 212, 213, 214, 223, 247, 249, 254, 255, 259, 261, 263, 264, 265, 267, 268, 269, 270, 283, 286, 301, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 571, 572, 588, 604, 621, 683, 691], "liter": [26, 30, 35, 92, 99, 100, 101, 105, 159, 168, 173, 240, 247, 248, 249, 253, 644, 673], "csc": [26, 30, 35, 92, 99, 100, 101, 105, 159, 168, 173, 240, 247, 248, 249, 253], "csr": [26, 30, 35, 92, 99, 100, 101, 105, 159, 168, 173, 240, 247, 248, 249, 253], "coo": [26, 30, 35, 92, 99, 100, 101, 105, 159, 168, 173, 240, 247, 248, 249, 253], "option": [26, 30, 31, 35, 39, 40, 41, 48, 49, 51, 52, 53, 54, 55, 56, 58, 64, 67, 68, 73, 75, 76, 90, 92, 95, 99, 100, 101, 102, 105, 106, 107, 108, 110, 115, 117, 118, 119, 120, 121, 127, 129, 130, 134, 135, 145, 146, 147, 148, 159, 161, 168, 169, 173, 179, 180, 181, 188, 189, 192, 193, 194, 195, 196, 197, 199, 201, 205, 208, 209, 213, 215, 216, 238, 240, 243, 247, 248, 249, 250, 253, 254, 255, 256, 258, 263, 266, 267, 268, 269, 270, 285, 286, 289, 290, 294, 295, 304, 310, 311, 312, 313, 320, 325, 327, 328, 333, 338, 340, 341, 346, 351, 353, 354, 357, 358, 361, 366, 368, 369, 374, 381, 384, 385, 393, 398, 401, 402, 407, 414, 417, 418, 426, 431, 434, 435, 443, 448, 451, 452, 460, 465, 468, 469, 477, 489, 490, 492, 493, 501, 506, 509, 510, 518, 523, 526, 527, 535, 540, 543, 544, 549, 556, 559, 560, 565, 572, 575, 576, 581, 588, 591, 592, 597, 604, 607, 608, 616, 621, 624, 625, 628, 630, 631, 640, 644, 656, 658, 660, 661, 670, 673, 678, 683, 685, 686, 693], "format": [26, 30, 35, 75, 90, 92, 99, 100, 101, 105, 110, 127, 131, 135, 159, 168, 173, 215, 238, 240, 247, 248, 249, 253, 258, 286, 291, 295, 325, 328, 338, 341, 351, 354, 366, 369, 381, 385, 398, 402, 414, 418, 431, 435, 448, 452, 465, 469, 489, 493, 506, 510, 523, 527, 540, 544, 556, 560, 572, 576, 588, 592, 604, 608, 621, 625, 683, 686, 689], "array_lik": [26, 30, 35, 92, 99, 100, 101, 105, 159, 168, 173, 240, 247, 248, 249, 253], "construct": [26, 30, 35, 59, 62, 63, 64, 66, 67, 68, 69, 92, 99, 100, 101, 105, 159, 168, 173, 200, 203, 204, 205, 207, 208, 209, 240, 247, 248, 249, 253, 321, 322, 323, 334, 335, 336, 347, 348, 349, 362, 363, 364, 375, 376, 377, 394, 395, 396, 408, 409, 410, 427, 428, 429, 444, 445, 446, 461, 462, 463, 478, 479, 480, 502, 503, 504, 519, 520, 521, 536, 537, 538, 550, 551, 552, 566, 567, 568, 582, 583, 584, 598, 599, 600, 617, 618, 619, 679, 680, 681], "none": [27, 28, 31, 37, 38, 39, 40, 52, 53, 54, 56, 58, 64, 67, 75, 90, 102, 106, 107, 110, 116, 118, 119, 120, 129, 134, 139, 141, 143, 145, 146, 147, 148, 163, 164, 169, 175, 176, 179, 180, 193, 194, 195, 197, 199, 201, 205, 208, 215, 238, 250, 254, 255, 258, 265, 267, 268, 269, 289, 294, 299, 306, 308, 310, 311, 312, 313, 320, 327, 331, 333, 340, 344, 346, 353, 357, 358, 361, 368, 372, 374, 384, 388, 391, 392, 393, 401, 405, 407, 417, 421, 424, 425, 426, 434, 438, 441, 442, 443, 451, 455, 458, 459, 460, 468, 477, 492, 496, 499, 500, 501, 509, 513, 516, 517, 518, 526, 530, 533, 534, 535, 543, 547, 549, 559, 563, 565, 575, 579, 581, 591, 595, 597, 607, 611, 614, 615, 616, 624, 632, 633, 634, 637, 640, 643, 644, 645, 648, 650, 652, 653, 654, 655, 656, 657, 658, 662, 663, 664, 667, 670, 672, 673, 674, 678, 685, 689], "cl": [28, 31, 164, 169, 320, 333, 346, 361, 374, 393, 407, 426, 443, 460, 477, 501, 518, 535, 549, 565, 581, 597, 616, 678], "graph": [28, 38, 60, 65, 122, 124, 131, 137, 162, 164, 176, 202, 206, 274, 277, 291, 297], "g": [28, 164, 344], "h": [28, 164], "same": [28, 58, 164, 199, 692], "vertic": [28, 58, 80, 89, 140, 164, 199, 223, 237, 300], "whose": [28, 164, 682], "consist": [28, 164, 647], "present": [28, 76, 77, 164, 216, 217], "refer": [28, 164, 490, 628, 655, 656, 692, 693], "wolfram": [28, 164], "mathworld": [28, 164], "avail": [28, 87, 103, 161, 164, 234, 251, 490, 693], "http": [28, 87, 103, 164, 234, 251, 655, 656, 690], "com": [28, 164, 690], "graphcompl": [28, 164], "html": [28, 164, 655, 656], "exampl": [28, 37, 38, 55, 58, 80, 121, 127, 164, 175, 176, 196, 199, 223, 270, 286, 287, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683, 689, 692, 693], "network_compl": [28, 164], "from_obj": [28, 80, 127, 164, 223, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "line": [28, 56, 58, 64, 67, 80, 87, 102, 103, 136, 164, 197, 199, 205, 208, 223, 234, 250, 251, 296, 324, 350, 405, 689, 693], "ani": [28, 40, 51, 52, 53, 54, 55, 58, 82, 107, 117, 118, 119, 120, 121, 145, 146, 147, 148, 164, 180, 192, 193, 194, 195, 196, 199, 227, 255, 266, 267, 268, 269, 270, 304, 310, 311, 312, 313, 630, 631, 660, 661, 692, 694], "has_edg": [28, 164], "direct": [28, 42, 48, 58, 65, 76, 164, 178, 182, 188, 199, 206, 216, 226, 273, 275, 359, 689], "fals": [28, 51, 54, 55, 56, 73, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92, 102, 103, 105, 117, 120, 121, 127, 134, 135, 160, 161, 162, 164, 177, 178, 192, 195, 196, 197, 213, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 240, 250, 251, 253, 266, 269, 270, 285, 286, 294, 295, 302, 304, 325, 327, 328, 338, 340, 341, 351, 353, 354, 357, 358, 366, 368, 369, 381, 384, 385, 398, 401, 402, 414, 417, 418, 431, 434, 435, 448, 451, 452, 465, 468, 469, 489, 490, 492, 493, 506, 509, 510, 523, 526, 527, 540, 543, 544, 556, 559, 560, 572, 575, 576, 588, 591, 592, 604, 607, 608, 621, 624, 625, 652, 683, 685, 686, 689], "hashabl": [29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 83, 84, 90, 91, 93, 95, 96, 97, 98, 102, 106, 107, 108, 110, 112, 114, 115, 117, 118, 119, 120, 121, 128, 130, 138, 143, 150, 166, 171, 172, 174, 175, 176, 179, 180, 181, 182, 184, 186, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 202, 207, 210, 211, 212, 213, 215, 216, 217, 219, 220, 229, 230, 238, 239, 241, 243, 244, 245, 246, 250, 254, 255, 256, 258, 260, 262, 263, 266, 267, 268, 269, 270, 288, 290, 298, 308, 315], "identifi": [29, 33, 34, 36, 37, 38, 39, 40, 49, 51, 52, 53, 54, 55, 57, 60, 70, 71, 72, 73, 76, 77, 83, 84, 91, 93, 95, 96, 97, 98, 106, 107, 108, 112, 114, 115, 117, 118, 119, 120, 121, 128, 143, 144, 166, 171, 172, 174, 175, 176, 179, 180, 189, 192, 193, 194, 195, 196, 198, 202, 210, 211, 212, 213, 216, 217, 229, 230, 239, 241, 243, 244, 245, 246, 254, 255, 256, 260, 262, 263, 266, 267, 268, 269, 270, 288, 308, 309, 689], "independ": [31, 142, 169, 307, 320, 333, 346, 361, 374, 393, 407, 426, 443, 460, 477, 501, 518, 535, 549, 565, 581, 597, 616, 678], "current": [31, 92, 105, 169, 240, 253, 287, 320, 333, 346, 361, 374, 379, 393, 407, 412, 426, 443, 460, 477, 490, 501, 518, 535, 549, 554, 565, 570, 581, 586, 597, 602, 616, 633, 634, 646, 663, 664, 675, 678], "count": [32, 170], "cross": [32, 57, 81, 87, 88, 103, 104, 170, 198, 224, 234, 235, 251, 252, 669], "pair": [32, 39, 40, 54, 57, 60, 64, 70, 75, 78, 79, 81, 90, 91, 107, 110, 120, 136, 138, 150, 170, 179, 180, 195, 198, 202, 205, 210, 215, 219, 220, 224, 238, 239, 255, 258, 269, 296, 298, 315, 630, 644, 660, 673], "note": [32, 57, 58, 80, 81, 83, 87, 92, 103, 105, 141, 142, 143, 144, 158, 161, 162, 170, 198, 199, 223, 224, 229, 234, 240, 251, 253, 304, 306, 307, 308, 309, 344, 391, 392, 424, 425, 441, 442, 458, 459, 499, 500, 516, 517, 533, 534, 614, 615, 655, 656, 682, 693], "assum": [32, 57, 81, 170, 198, 224, 693], "li": [32, 57, 81, 89, 170, 198, 224, 237], "xy": [32, 57, 81, 89, 170, 198, 224, 237], "plane": [32, 47, 56, 57, 81, 87, 88, 89, 102, 103, 104, 170, 187, 197, 198, 224, 234, 235, 237, 250, 251, 252, 344, 547, 689], "neighbor": [33, 34, 36, 58, 83, 97, 98, 114, 129, 130, 171, 172, 174, 199, 229, 245, 246, 262, 289, 290], "numer": [34, 172, 490, 628, 692], "incom": [34, 97, 172, 245], "degre": [35, 68, 101, 173, 209, 249], "outgo": [36, 98, 174, 246], "delet": [37, 38, 175, 176, 689], "first": [37, 76, 130, 162, 175, 216, 290, 301, 490, 628, 689, 693], "second": [37, 76, 130, 175, 216, 290, 653, 654], "name": [39, 40, 52, 53, 54, 106, 107, 118, 119, 120, 143, 144, 145, 146, 147, 148, 179, 180, 193, 194, 195, 254, 255, 267, 268, 269, 308, 309, 310, 311, 312, 313, 390, 423, 440, 457, 490, 498, 515, 532, 613, 628, 693], "valu": [39, 40, 43, 48, 52, 53, 54, 92, 105, 106, 107, 109, 111, 118, 119, 120, 143, 144, 145, 146, 147, 148, 179, 180, 183, 188, 193, 194, 195, 201, 240, 253, 254, 255, 257, 259, 267, 268, 269, 303, 305, 308, 309, 310, 311, 312, 313, 382, 391, 392, 399, 424, 425, 432, 441, 442, 449, 458, 459, 466, 490, 499, 500, 507, 516, 517, 524, 533, 534, 541, 595, 605, 614, 615, 622, 628, 689], "attribut": [39, 40, 51, 52, 53, 54, 55, 106, 107, 117, 118, 119, 120, 121, 143, 144, 145, 146, 147, 148, 160, 177, 178, 179, 180, 192, 193, 194, 195, 196, 221, 254, 255, 266, 267, 268, 269, 270, 302, 308, 309, 310, 311, 312, 313, 390, 423, 440, 457, 498, 515, 532, 613, 689], "str": [39, 40, 41, 51, 52, 53, 54, 55, 63, 64, 67, 75, 90, 106, 107, 108, 110, 117, 118, 119, 120, 121, 127, 130, 131, 135, 143, 144, 145, 146, 147, 148, 152, 179, 180, 181, 192, 193, 194, 195, 196, 204, 205, 208, 215, 238, 254, 255, 256, 258, 266, 267, 268, 269, 270, 286, 290, 291, 295, 308, 309, 310, 311, 312, 313, 317, 323, 325, 328, 330, 336, 338, 341, 343, 349, 351, 354, 356, 364, 366, 369, 371, 377, 381, 385, 387, 396, 398, 402, 404, 410, 414, 418, 420, 429, 431, 435, 437, 446, 448, 452, 454, 463, 465, 469, 471, 480, 489, 490, 493, 495, 504, 506, 510, 512, 521, 523, 527, 529, 538, 540, 544, 546, 552, 556, 560, 562, 568, 572, 576, 578, 584, 588, 592, 594, 600, 604, 608, 610, 619, 621, 625, 627, 628, 630, 631, 637, 640, 652, 656, 660, 661, 667, 670, 681, 683, 686, 688], "function": [39, 40, 52, 53, 54, 55, 87, 103, 106, 107, 118, 119, 121, 129, 162, 179, 180, 193, 194, 195, 196, 234, 251, 254, 255, 267, 268, 270, 289, 357, 358, 481, 484, 490, 628, 652], "setter": [39, 40, 52, 53, 106, 107, 118, 119, 179, 180, 193, 194, 254, 255, 267, 268, 689], "rais": [39, 40, 52, 53, 56, 87, 102, 103, 106, 107, 118, 119, 129, 130, 143, 144, 151, 152, 179, 180, 193, 194, 197, 234, 250, 251, 254, 255, 267, 268, 289, 290, 308, 309, 316, 317, 329, 330, 342, 343, 355, 356, 370, 371, 386, 387, 403, 404, 419, 420, 436, 437, 453, 454, 470, 471, 494, 495, 511, 512, 528, 529, 545, 546, 561, 562, 577, 578, 593, 594, 609, 610, 626, 627, 687, 688, 689], "keyerror": [39, 40, 52, 53, 106, 107, 118, 119, 143, 144, 179, 180, 193, 194, 254, 255, 267, 268, 308, 309], "If": [39, 40, 48, 51, 52, 53, 54, 55, 56, 73, 76, 87, 92, 102, 103, 105, 106, 107, 117, 118, 119, 120, 121, 127, 129, 130, 134, 135, 143, 144, 165, 167, 179, 180, 188, 192, 193, 194, 195, 196, 197, 201, 213, 216, 234, 240, 250, 251, 253, 254, 255, 266, 267, 268, 269, 270, 286, 289, 290, 294, 295, 308, 309, 325, 327, 328, 338, 340, 341, 344, 351, 353, 354, 357, 358, 366, 368, 369, 381, 384, 385, 391, 392, 398, 401, 402, 414, 417, 418, 424, 425, 431, 434, 435, 441, 442, 448, 451, 452, 458, 459, 465, 468, 469, 489, 490, 492, 493, 499, 500, 506, 509, 510, 516, 517, 523, 526, 527, 533, 534, 540, 543, 544, 556, 559, 560, 572, 575, 576, 588, 591, 592, 604, 607, 608, 614, 615, 621, 624, 625, 628, 683, 685, 686, 690, 691, 693], "doe": [39, 40, 52, 53, 106, 107, 118, 119, 143, 144, 179, 180, 193, 194, 254, 255, 267, 268, 308, 309, 692], "multipl": [40, 52, 53, 107, 118, 119, 180, 193, 194, 255, 267, 268, 472, 649], "empti": [40, 53, 107, 165, 167, 180, 194, 255], "dictionari": [40, 59, 66, 75, 78, 79, 90, 91, 107, 110, 145, 146, 147, 148, 150, 180, 200, 207, 215, 219, 220, 238, 239, 255, 258, 303, 305, 310, 311, 312, 313, 315, 321, 334, 347, 362, 375, 394, 408, 427, 444, 461, 478, 502, 519, 536, 550, 566, 582, 598, 617, 679, 689], "correspond": [40, 53, 75, 79, 90, 91, 107, 110, 119, 150, 180, 194, 215, 220, 238, 239, 255, 258, 268, 285, 315, 630, 644, 660, 673], "provid": [40, 54, 59, 119, 129, 180, 195, 200, 268, 289, 321, 334, 347, 362, 375, 394, 408, 427, 444, 461, 478, 502, 519, 536, 550, 566, 582, 598, 617, 630, 660, 679, 692, 694], "ax": [41, 108, 181, 256, 645, 674, 689], "xyz": [41, 46, 48, 74, 92, 105, 108, 113, 116, 138, 149, 181, 186, 188, 214, 240, 253, 256, 261, 265, 298, 314, 324, 331, 337, 350, 359, 365, 405, 547, 563, 682], "coordin": [41, 46, 48, 64, 66, 89, 108, 114, 116, 136, 138, 140, 181, 186, 188, 205, 207, 237, 256, 262, 265, 296, 298, 300, 324, 337, 350, 365, 496, 513, 530, 646, 675, 682], "start": [41, 42, 44, 46, 48, 50, 64, 128, 136, 162, 181, 182, 184, 186, 188, 191, 205, 282, 287, 288, 296, 391, 392, 424, 425, 441, 442, 458, 459, 499, 500, 516, 517, 533, 534, 614, 615, 689, 691, 693], "end": [41, 42, 44, 46, 48, 50, 64, 128, 136, 158, 181, 182, 184, 186, 188, 191, 205, 288, 296, 324, 350], "along": [41, 48, 130, 181, 188, 290], "which": [41, 54, 55, 58, 120, 121, 181, 195, 196, 199, 269, 270, 301, 644, 673], "includ": [41, 181, 650, 689, 694], "float": [41, 42, 43, 44, 45, 46, 48, 50, 64, 66, 75, 85, 90, 94, 108, 110, 112, 114, 129, 130, 136, 138, 140, 181, 182, 183, 184, 185, 186, 188, 191, 201, 205, 207, 215, 231, 238, 242, 256, 258, 260, 262, 289, 290, 296, 298, 300, 357, 358, 359, 365, 379, 382, 391, 392, 412, 424, 425, 441, 442, 458, 459, 490, 499, 500, 516, 517, 533, 534, 554, 570, 586, 602, 605, 614, 615, 628, 646, 650, 653, 654, 675, 682], "vector": [42, 48, 50, 92, 105, 112, 113, 126, 182, 188, 191, 240, 253, 260, 261, 283, 359, 365, 412, 554, 570, 573, 579, 586, 589], "locat": [46, 48, 186, 188], "midpoint": [46, 186], "project": [47, 187, 689, 690], "outsid": [48, 58, 188, 199], "lie": [48, 188], "random": [49, 68, 70, 71, 72, 73, 115, 189, 209, 210, 211, 212, 213, 263], "sampl": [49, 115, 189, 263], "over": [51, 94, 117, 160, 161, 177, 178, 192, 221, 242, 266, 285, 302, 304, 689], "bool": [51, 54, 55, 56, 73, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 102, 103, 104, 105, 117, 120, 121, 127, 134, 135, 160, 161, 162, 177, 178, 192, 195, 196, 197, 213, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 250, 251, 252, 253, 266, 269, 270, 285, 286, 294, 295, 302, 304, 325, 327, 328, 338, 340, 341, 351, 353, 354, 357, 358, 366, 368, 369, 381, 384, 385, 398, 401, 402, 414, 417, 418, 431, 434, 435, 448, 451, 452, 465, 468, 469, 489, 490, 492, 493, 506, 509, 510, 523, 526, 527, 540, 543, 544, 556, 559, 560, 572, 575, 576, 588, 591, 592, 604, 607, 608, 621, 624, 625, 652, 683, 685, 686], "yield": [51, 54, 55, 94, 117, 120, 121, 132, 160, 161, 177, 178, 192, 195, 196, 221, 242, 266, 269, 270, 282, 285, 292, 302, 304], "addit": [51, 54, 55, 87, 103, 117, 120, 121, 145, 146, 147, 148, 192, 195, 196, 234, 251, 266, 269, 270, 310, 311, 312, 313, 337], "next": [51, 54, 55, 94, 117, 120, 121, 132, 160, 161, 177, 178, 192, 195, 196, 221, 242, 266, 269, 270, 282, 285, 292, 302, 304, 357, 358, 689, 692, 693], "attr": [51, 54, 55, 117, 192, 195, 196, 266], "contain": [52, 53, 59, 62, 63, 67, 76, 119, 134, 193, 194, 200, 203, 204, 208, 216, 268, 294, 321, 322, 323, 327, 334, 335, 336, 340, 347, 348, 349, 353, 362, 363, 364, 368, 375, 376, 377, 384, 394, 395, 396, 401, 408, 409, 410, 417, 427, 428, 429, 434, 444, 445, 446, 451, 461, 462, 463, 468, 478, 479, 480, 492, 502, 503, 504, 509, 519, 520, 521, 526, 536, 537, 538, 543, 550, 551, 552, 559, 566, 567, 568, 575, 582, 583, 584, 591, 598, 599, 600, 607, 617, 618, 619, 624, 679, 680, 681, 685], "per": [52, 53, 68, 119, 193, 194, 209, 268, 485, 486, 628], "request": [52, 53, 107, 193, 194, 255], "condit": [54, 55, 120, 121, 195, 196, 269, 270, 694], "certain": [54, 55, 75, 90, 110, 120, 121, 195, 196, 215, 238, 258, 269, 270], "can": [54, 87, 103, 120, 195, 234, 251, 269, 689, 693], "min": [54, 120, 195, 269], "max": [54, 120, 195, 269, 689], "predic": [55, 121, 196, 270], "lambda": [55, 121, 196, 270], "callabl": [55, 121, 129, 196, 270, 289, 652, 655], "you": [55, 121, 196, 270, 690, 691, 692, 693], "want": [55, 121, 196, 270, 693], "evalu": [55, 121, 196, 270], "straightlin": [56, 102, 197, 250], "emb": [56, 102, 197, 250], "two": [56, 57, 80, 102, 128, 161, 162, 197, 198, 223, 250, 288, 324, 350, 689, 693], "straight": [56, 58, 87, 102, 103, 197, 199, 234, 250, 251], "embed": [56, 58, 87, 88, 102, 103, 104, 197, 199, 234, 235, 250, 251, 252], "wa": [56, 102, 197, 250, 689, 693], "success": [56, 102, 197, 250], "otherwis": [56, 76, 80, 81, 82, 85, 86, 87, 88, 89, 102, 103, 104, 161, 197, 216, 218, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 250, 251, 252, 285, 304, 391, 392, 424, 425, 441, 442, 458, 459, 490, 499, 500, 516, 517, 533, 534, 614, 615, 682, 694], "importerror": [56, 87, 102, 103, 197, 234, 250, 251], "networkx": [56, 65, 102, 137, 197, 206, 250, 297], "instal": [56, 87, 102, 103, 197, 234, 250, 251, 689, 692], "each": [57, 58, 118, 136, 138, 198, 199, 267, 296, 298], "repres": [57, 64, 138, 198, 201, 205, 298], "vertex": [57, 58, 70, 79, 150, 198, 199, 201, 210, 220, 315], "breakpoint": [58, 199], "face": [58, 127, 199, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "break": [58, 199], "found": [58, 199, 628], "primarili": [58, 199], "up": [58, 90, 110, 199, 238, 258, 689, 693], "between": [58, 68, 128, 199, 209, 288, 303, 305, 379, 412, 554, 570, 586, 602], "specif": [58, 76, 77, 84, 199, 216, 217, 230, 693], "For": [58, 199, 287, 630, 631, 655, 656, 660, 661], "applic": [58, 199], "involv": [58, 199], "dual": [58, 199, 201], "where": [58, 123, 132, 199, 276, 292, 365, 676, 682, 689], "extern": [58, 199], "reaction": [58, 126, 199, 283, 579, 642, 689, 692], "input": [58, 199, 689], "essenti": [58, 199], "wall": [58, 199], "follow": [58, 199, 490, 628, 693, 694], "maze": [58, 199], "It": [58, 87, 103, 199, 234, 251, 490], "reli": [58, 199], "repes": [58, 199], "determin": [58, 199], "order": [58, 162, 199, 285, 304, 486], "around": [58, 199, 658], "alwai": [58, 199], "turn": [58, 199], "classmethod": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 321, 322, 323, 324, 334, 335, 336, 337, 347, 348, 349, 350, 362, 363, 364, 365, 375, 376, 377, 394, 395, 396, 408, 409, 410, 427, 428, 429, 444, 445, 446, 461, 462, 463, 478, 479, 480, 502, 503, 504, 519, 520, 521, 536, 537, 538, 550, 551, 552, 566, 567, 568, 582, 583, 584, 598, 599, 600, 617, 618, 619, 679, 680, 681, 682], "ha": [59, 62, 63, 81, 83, 132, 200, 203, 204, 218, 224, 229, 292, 305, 321, 322, 323, 334, 335, 336, 347, 348, 349, 362, 363, 364, 375, 376, 377, 394, 395, 396, 408, 409, 410, 427, 428, 429, 444, 445, 446, 461, 462, 463, 478, 479, 480, 502, 503, 504, 519, 520, 521, 536, 537, 538, 550, 551, 552, 566, 567, 568, 582, 583, 584, 598, 599, 600, 617, 618, 619, 679, 680, 681, 682, 689, 692, 693], "correct": [59, 62, 63, 200, 203, 204, 321, 322, 323, 334, 335, 336, 347, 348, 349, 362, 363, 364, 375, 376, 377, 394, 395, 396, 408, 409, 410, 427, 428, 429, 444, 445, 446, 461, 462, 463, 478, 479, 480, 502, 503, 504, 519, 520, 521, 536, 537, 538, 550, 551, 552, 566, 567, 568, 582, 583, 584, 598, 599, 600, 617, 618, 619, 679, 680, 681], "schema": [59, 62, 63, 133, 151, 152, 200, 203, 204, 293, 316, 317, 321, 322, 323, 326, 329, 330, 334, 335, 336, 339, 342, 343, 347, 348, 349, 352, 355, 356, 362, 363, 364, 367, 370, 371, 375, 376, 377, 383, 386, 387, 394, 395, 396, 400, 403, 404, 408, 409, 410, 416, 419, 420, 427, 428, 429, 433, 436, 437, 444, 445, 446, 450, 453, 454, 461, 462, 463, 467, 470, 471, 478, 479, 480, 491, 494, 495, 502, 503, 504, 508, 511, 512, 519, 520, 521, 525, 528, 529, 536, 537, 538, 542, 545, 546, 550, 551, 552, 558, 561, 562, 566, 567, 568, 574, 577, 578, 582, 583, 584, 590, 593, 594, 598, 599, 600, 606, 609, 610, 617, 618, 619, 623, 626, 627, 679, 680, 681, 684, 687, 688], "new": [60, 65, 137, 202, 206, 287, 297, 693], "inform": [60, 202, 655], "about": [60, 202, 691], "eq_stat": 61, "filepath": [62, 67, 134, 139, 203, 208, 294, 299, 322, 327, 335, 340, 348, 353, 363, 368, 376, 384, 395, 401, 409, 417, 428, 434, 445, 451, 462, 468, 479, 492, 503, 509, 520, 526, 537, 543, 551, 559, 567, 575, 583, 591, 599, 607, 618, 624, 656, 680, 685], "serial": [62, 63, 134, 135, 203, 204, 294, 295, 322, 323, 327, 328, 335, 336, 340, 341, 348, 349, 353, 354, 363, 364, 368, 369, 376, 377, 384, 385, 395, 396, 401, 402, 409, 410, 417, 418, 428, 429, 434, 435, 445, 446, 451, 452, 462, 463, 468, 469, 479, 480, 492, 493, 503, 504, 509, 510, 520, 521, 526, 527, 537, 538, 543, 544, 551, 552, 559, 560, 567, 568, 575, 576, 583, 584, 591, 592, 599, 600, 607, 608, 618, 619, 624, 625, 680, 681, 685, 686, 689], "like": [62, 67, 134, 139, 203, 208, 294, 299, 322, 327, 335, 340, 348, 353, 363, 368, 376, 384, 395, 401, 409, 417, 428, 434, 445, 451, 462, 468, 479, 492, 503, 509, 520, 526, 537, 543, 551, 559, 567, 575, 583, 591, 599, 607, 618, 624, 680, 685, 692, 693], "url": [62, 67, 203, 208, 322, 335, 348, 363, 376, 395, 409, 428, 445, 462, 479, 503, 520, 537, 551, 567, 583, 599, 618, 680, 690], "precis": [64, 67, 75, 90, 110, 205, 208, 215, 238, 258], "geometr": [64, 67, 75, 90, 110, 205, 208, 215, 238, 258, 648], "map": [64, 67, 75, 78, 79, 90, 91, 110, 150, 205, 208, 215, 219, 220, 238, 239, 258, 303, 305, 315, 630, 637, 640, 660, 667, 670, 689], "digraph": [65, 137, 206, 297], "specifi": [66, 75, 90, 110, 207, 215, 238, 258, 653, 689], "hshabl": [66, 207], "cloud": [68, 209], "pointcloud": [68, 209], "deprec": [70, 71, 72, 73, 210, 211, 212, 213, 689], "sinc": [70, 71, 72, 73, 210, 211, 212, 213], "version": [70, 71, 72, 73, 127, 210, 211, 212, 213, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683, 689, 693], "13": [70, 71, 72, 73, 210, 211, 212, 213], "edge_sampl": [70, 71, 210, 211], "instead": [70, 71, 72, 73, 142, 210, 211, 212, 213, 307, 689, 693], "node_sampl": [72, 73, 212, 213], "exclude_leav": [73, 213], "exclud": [73, 213], "leav": [73, 213], "one": [73, 81, 83, 213, 218, 224, 229, 357, 358, 359, 485, 486, 689, 692, 693], "verifi": [76, 77, 80, 81, 83, 84, 88, 89, 104, 216, 217, 223, 224, 229, 230, 235, 237, 252, 476], "taken": [76, 216], "account": [76, 216], "indic": [78, 138, 201, 219, 298, 693], "index": [78, 79, 91, 150, 219, 220, 239, 315], "uv": [79, 150, 220, 315], "everi": [80, 129, 162, 223, 289, 357, 358, 689], "them": [80, 223], "network_is_connect": [80, 223], "least": [81, 218, 224, 490, 628], "check": [82, 85, 86, 87, 103, 109, 218, 227, 231, 232, 234, 251, 257, 689], "flag": [82, 85, 86, 162, 218, 222, 225, 226, 227, 228, 231, 232, 233, 236, 357, 358, 490, 689, 693], "leaf": [83, 229], "min_forc": [85, 94, 231, 242], "06": [85, 94, 231, 242, 357, 358, 490, 628], "larg": [85, 94, 231, 242], "enough": [85, 94, 231, 242], "minimum": [85, 94, 231, 242, 689], "magnitud": [85, 94, 231, 242, 359], "consid": [85, 94, 231, 242, 690], "packag": [87, 103, 234, 251], "drawn": [87, 103, 234, 251], "without": [87, 88, 103, 104, 234, 235, 251, 252, 694], "shown": [87, 103, 234, 251], "furthermor": [87, 103, 234, 251], "python": [87, 103, 234, 251, 689, 691, 692, 693], "bind": [87, 103, 234, 251], "suit": [87, 103, 234, 251], "anaconda": [87, 103, 234, 251, 693], "org": [87, 103, 234, 251, 655, 656], "conda": [87, 103, 234, 251], "forg": [87, 103, 234, 251, 693], "fase": [88, 104, 235, 252], "normal": [92, 105, 240, 253], "laplacian": [92, 105, 112, 240, 253, 260], "entri": [92, 105, 240, 253, 485, 486], "diagon": [92, 105, 240, 253], "l": [92, 105, 240, 253], "dot": [92, 105, 240, 253], "centroid": [92, 105, 112, 114, 129, 240, 253, 260, 262, 289], "therefor": [92, 105, 240, 253], "By": [92, 105, 240, 253], "sign": [92, 105, 240, 253, 344, 689], "dsiplac": [92, 105, 240, 253], "could": [92, 105, 240, 253], "more": [92, 105, 240, 253, 490, 628, 655, 689], "natur": [92, 105, 240, 253], "wai": [92, 105, 240, 253, 693], "ring": [95, 112, 243, 260], "compon": [108, 113, 256, 261, 421, 438, 455, 689, 693], "neighborhood": [112, 260], "load_vector": [113, 261], "match": [120, 121, 269, 270, 579, 630, 631, 660, 661, 682], "assign": [125, 132, 264, 279, 292, 676, 682, 689], "residu": [126, 283, 689], "as_str": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "hash": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "comparison": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "dure": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 653, 683], "control": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683, 692], "digest": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "hexadecim": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "rather": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "than": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683, 689], "byte": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "mesh": [127, 129, 201, 286, 289, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 648, 651, 683, 689], "v1": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "v2": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683, 689], "vertex_attribut": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "vertex_sampl": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "v3": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683, 689], "shortest": [128, 288], "lead": [128, 288], "kmax": [129, 289, 357, 689], "damp": [129, 289], "callback": [129, 289, 357, 358, 652], "callback_arg": [129, 289], "move": [129, 289, 490, 628, 692], "free": [129, 289, 689, 694], "maximum": [129, 289, 357, 358, 490, 628], "factor": [129, 289], "user": [129, 289, 655, 689, 693], "execut": [129, 289], "after": [129, 289], "pass": [129, 289, 693], "except": [129, 130, 152, 289, 290, 317, 330, 343, 356, 371, 387, 404, 420, 437, 454, 471, 495, 512, 529, 546, 562, 578, 594, 610, 627, 688], "split": [130, 290, 689], "insert": [130, 290], "posit": [130, 290, 357, 358, 359, 365, 405, 547, 563, 682, 689], "valueerror": [130, 290], "been": [132, 292, 692, 693], "nativ": [133, 293, 326, 339, 352, 367, 383, 400, 416, 433, 450, 467, 491, 508, 525, 542, 558, 574, 590, 606, 623, 684, 692], "describ": [133, 293, 324, 326, 337, 339, 350, 352, 367, 383, 400, 416, 433, 450, 467, 491, 508, 525, 542, 558, 574, 590, 606, 623, 684], "pretti": [134, 135, 294, 295, 327, 328, 340, 341, 353, 354, 368, 369, 384, 385, 401, 402, 417, 418, 434, 435, 451, 452, 468, 469, 492, 493, 509, 510, 526, 527, 543, 544, 559, 560, 575, 576, 591, 592, 607, 608, 624, 625, 685, 686], "human": [134, 294, 327, 340, 353, 368, 384, 401, 417, 434, 451, 468, 492, 509, 526, 543, 559, 575, 591, 607, 624, 685], "readabl": [134, 294, 327, 340, 353, 368, 384, 401, 417, 434, 451, 468, 492, 509, 526, 543, 559, 575, 591, 607, 624, 685], "": [135, 151, 152, 295, 316, 317, 324, 328, 329, 330, 341, 342, 343, 350, 354, 355, 356, 369, 370, 371, 385, 386, 387, 402, 403, 404, 418, 419, 420, 435, 436, 437, 452, 453, 454, 469, 470, 471, 493, 494, 495, 510, 511, 512, 527, 528, 529, 544, 545, 546, 560, 561, 562, 576, 577, 578, 592, 593, 594, 608, 609, 610, 625, 626, 627, 686, 687, 688, 692, 693], "newli": [137, 297], "write": [139, 299], "modifi": [141, 142, 149, 306, 307, 314, 472, 694], "copi": [142, 307, 694], "origin": [142, 162, 232, 282, 287, 301, 307, 496, 513, 530, 689], "unset": [143, 144, 308, 309], "implicitli": [143, 144, 308, 309], "back": [143, 144, 308, 309], "store": [143, 144, 308, 309], "attr_dict": [145, 146, 147, 148, 310, 311, 312, 313], "kwattr": [145, 146, 147, 148, 310, 311, 312, 313], "updat": [145, 146, 147, 148, 310, 311, 312, 313, 645, 654, 674, 689], "compil": [145, 146, 147, 148, 310, 311, 312, 313], "remain": [145, 146, 147, 148, 310, 311, 312, 313], "valid": [151, 152, 316, 317, 329, 330, 342, 343, 355, 356, 370, 371, 386, 387, 403, 404, 419, 420, 436, 437, 453, 454, 470, 471, 494, 495, 511, 512, 528, 529, 545, 546, 561, 562, 577, 578, 593, 594, 609, 610, 626, 627, 687, 688], "against": [151, 152, 316, 317, 329, 330, 342, 343, 355, 356, 357, 358, 370, 371, 386, 387, 403, 404, 419, 420, 436, 437, 453, 454, 470, 471, 494, 495, 511, 512, 528, 529, 545, 546, 561, 562, 571, 577, 578, 593, 594, 609, 610, 626, 627, 687, 688], "schemaerror": [151, 316, 329, 342, 355, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 626, 687], "jsonschema": [152, 317, 330, 343, 356, 371, 387, 404, 420, 437, 454, 471, 495, 512, 529, 546, 562, 578, 594, 610, 627, 688], "validationerror": [152, 317, 330, 343, 356, 371, 387, 404, 420, 437, 454, 471, 495, 512, 529, 546, 562, 578, 594, 610, 627, 688], "meshmixin": 153, "veri": 153, "mark": [158, 357, 358], "continu": [158, 693], "thei": [158, 689, 693], "aren": 158, "simultan": [160, 177, 178, 221, 302, 692], "aux_trail": 161, "helper": 161, "process": [162, 490], "travers": 162, "begin": 162, "sequenc": [162, 190, 264, 278, 284, 287, 303, 304, 305, 357, 689], "characterist": 162, "append": 162, "unassign": 162, "part": [162, 692, 693], "previou": 162, "recalcul": 162, "call": [162, 689, 693], "attach": [165, 167], "given": [190, 287, 631, 661], "trail_length": 201, "trail_stat": 201, "deviation_forc": 201, "deviation_st": 201, "quad": 201, "quadmesh": 201, "mean": 201, "whether": [222, 225, 236, 694], "k": [264, 287], "equival": [278, 301], "largest": 278, "ascend": 285, "becom": [287, 490], "sort": 301, "topolog": 303, "sequence_map": 303, "wherein": [303, 305], "too": [304, 692], "trail_kei": 305, "sequences_map": 305, "extra": [324, 337, 350, 658, 689], "absolut": [344, 391, 392, 424, 425, 441, 442, 458, 459, 499, 500, 516, 517, 533, 534, 614, 615], "howev": [344, 692], "combinatori": [344, 690, 692], "preserv": 344, "todo": 344, "addexplicit": 344, "signatur": [344, 689], "constructor": [344, 689], "calcul": [357, 358, 391, 392, 424, 425, 441, 442, 458, 459, 481, 490, 499, 500, 516, 517, 533, 534, 614, 615, 689], "smaller": 357, "ignor": [357, 490, 689], "run": [357, 358, 490, 628, 692, 693], "distanc": [357, 358, 379, 412, 554, 570, 586, 602], "threshold": [357, 358, 490, 628], "converg": [357, 358, 490, 628, 689], "compar": [357, 358, 571], "sum": [357, 358], "hit": [357, 358, 490, 628, 693], "befor": [357, 358, 693], "consum": [357, 358], "stop": [357, 358, 490, 628], "earli": [357, 358, 490, 628], "out": [357, 358, 693, 694], "oper": [357, 358, 692], "formdiagram": [357, 358, 490, 628, 629, 682, 689], "weight": [372, 405, 547, 563, 579, 595], "floatconstraint": [372, 595, 689], "reach": [372, 595], "error": [379, 412, 554, 570, 586, 602, 689, 693], "squar": [379, 412, 490, 554, 570, 586, 602, 628], "differ": [379, 412, 490, 554, 570, 586, 602, 689, 692], "edgeparamet": [388, 611], "parametr": [390, 423, 440, 457, 498, 515, 532, 613, 689], "lower": [391, 424, 441, 458, 499, 516, 533, 614], "minu": [391, 424, 441, 458, 499, 516, 533, 614], "inf": [391, 392, 424, 425, 441, 442, 458, 459, 499, 500, 516, 517, 533, 534, 614, 615], "upper": [392, 425, 442, 459, 500, 517, 534, 615], "plu": [392, 425, 442, 459, 500, 517, 534, 615], "vectorconstraint": [405, 547, 563, 579, 689], "pull": [405, 547, 563], "rai": 405, "nodeparamet": [421, 438, 455, 496, 513, 530], "meet": [472, 692], "problem": [475, 476, 490, 628, 692, 693], "sane": 476, "mind": 476, "grad_f": 481, "step_siz": [481, 490], "gradient": [481, 490, 628, 689], "grad_func": 484, "paremet": 486, "care": 486, "keep": [486, 689, 693], "ckei": 487, "pkei": 488, "kappa": [490, 628, 689], "08": [490, 628], "constrain": [490, 628, 690, 692, 693], "local": [490, 628], "sequenti": [490, 628], "program": [490, 628, 693], "low": [490, 628], "storag": [490, 628], "broyden": [490, 628], "fletcher": [490, 628], "goldfarb": [490, 628], "shanno": [490, 628], "mma": [490, 628], "asymptot": [490, 628], "tnewton": [490, 628], "precondit": [490, 628], "truncat": [490, 628], "newton": [490, 628], "auglag": [490, 628], "augment": [490, 628], "lagrangian": [490, 628], "var": [490, 628, 689], "limit": [490, 628, 645, 674, 693, 694], "memori": [490, 628], "variabl": [490, 628], "metric": [490, 628], "nlopt": [490, 628, 689], "document": [490, 628, 689, 693, 694], "detail": [490, 628], "theoret": [490, 628], "underpin": [490, 628], "differenti": [490, 690, 692], "fd": 490, "finit": [490, 689], "norm": [490, 628], "8": [490, 628, 693], "step": [490, 693], "via": [490, 689, 692], "activ": 490, "cem": [490, 628, 689, 690, 691], "statist": 490, "through": [628, 693], "proxi": 628, "hyperspac": 628, "tunnel": 628, "final": [628, 693], "grad_norm": 628, "cummul": 628, "elaps": 628, "durat": [628, 653], "total": 628, "millisecond": 628, "statu": 628, "item": [629, 630, 631, 644, 648, 649, 651, 659, 660, 661, 673], "networkartist": [629, 659], "draw": [629, 636, 637, 638, 639, 640, 641, 642, 648, 659, 666, 667, 668, 669, 670, 671, 689], "form_diagram": 629, "collect": [630, 631, 636, 660, 661, 666, 693], "relev": [630, 631, 660, 661], "see": [630, 631, 655, 656, 660, 661], "accord": [630, 660], "item_artist": [630, 660], "regist": [630, 655, 660], "artist_typ": [631, 644, 661, 673], "clear": [633, 634, 663, 664], "canva": [633, 634, 663, 664, 693], "label": [635, 637, 640, 665, 667, 670], "entir": [636, 666], "text": [637, 640, 667, 670], "select": [637, 640, 667, 670], "act": 639, "view": [643, 646, 658, 672, 675], "item_typ": [644, 673], "context": [644, 673], "blender": [644, 673, 692], "visual": [644, 645, 673, 674, 693], "corner": [646, 675], "box": [646, 658, 675], "thin": 647, "wrapper": 647, "compas_plott": 647, "api": [647, 655, 656, 692], "primit": [648, 651], "plotterartist": [648, 649, 651], "paus": [650, 654], "interv": [652, 653], "frame": [652, 689, 692], "record": 652, "dpi": 652, "150": 652, "decor": 652, "dynam": [652, 692], "amount": 654, "listen": 655, "pick": 655, "event": [655, 694], "handler": 655, "doc": [655, 689], "mpl_connect": 655, "handl": 655, "matplotlib": [655, 656], "backend_bases_api": 655, "backend_bas": 655, "figurecanvasbas": 655, "event_handl": 655, "full": [656, 689], "overview": 656, "configur": 656, "pyplot_api": 656, "pyplot": 656, "savefig": 656, "zoom": 658, "topology_diagram": 659, "inscrib": 669, "circl": 669, "node_support": 676, "notabl": 689, "adher": 689, "semant": 689, "implement": 689, "from_equilibrium_st": 689, "jax_cem": 689, "pin": 689, "depend": [689, 692, 693], "is_auxiliary_trail_edg": 689, "26": 689, "17": [689, 693], "instruct": [689, 693], "websit": 689, "bump": 689, "action": [689, 694], "21": 689, "sphinx": 689, "pytest": 689, "lazi": 689, "fixtur": 689, "requirements_dev": 689, "txt": 689, "crazi": 689, "ghaction": 689, "github": [689, 690], "page": [689, 693], "grashopp": 689, "compas_singular": 689, "polylineconstraint": 689, "plugin": [689, 692], "edgedirectionconstraint": 689, "edge_plan": 689, "queri": 689, "color": 689, "topologyartist": 689, "formartist": 689, "diagramobject": 689, "moveoriginnod": 689, "gh": [689, 693], "shifttrail": 689, "number_of_sequ": 689, "enabl": [689, 692], "trails_sequ": 689, "trail_sequ": 689, "shift_trail": 689, "from_dualquadmesh": 689, "arrow": 689, "klast": 689, "explicit": 689, "ghpython": [689, 693], "prevent": 689, "nan": 689, "equilibrium_state_numpi": 689, "mise": 689, "solve_proxi": 689, "constrainedformfind": 689, "treshold": 689, "is_edge_support": 689, "folder": 689, "prefix": 689, "compascem": 689, "renam": 689, "solve_nlopt": 689, "refactor": 689, "intersect": 689, "static_equilibrium_numpi": 689, "bug": 689, "equilibrium_st": 689, "undefin": 689, "solve_nlopt_proxi": 689, "topologydiagramobject": 689, "formdiagramobject": 689, "proxyserv": 689, "acceler": 689, "__str__": 689, "nlopt_statu": 689, "better": 689, "interpret": 689, "registr": 689, "creation": 689, "caus": 689, "old": 689, "compas_rhino": [689, 693], "rhinoplan": 689, "from_geometri": 689, "from_rhino_point_and_vector": 689, "from_rhino_point": 689, "from_rhino_lin": 689, "ghdata": 689, "jenssen": 689, "tube": 689, "is_node_support": 689, "search": 689, "global": [689, 692], "dark": 689, "blue": 689, "grai": 689, "mechan": 689, "compli": 689, "topologyplott": 689, "formplott": 689, "serializ": 689, "due": 689, "networkplott": 689, "green": 689, "light": 689, "assembl": 689, "ghplugin": 689, "wrap": 689, "edgesearch": 689, "drop": [689, 693], "ld": 689, "subscript": 689, "skip": 689, "assembletopologydiagram": 689, "draw_arrow": 689, "_draw_load": 689, "_draw_load_arrow": 689, "export": 689, "draw_trail": 689, "topologyartistcompon": 689, "number_of_trail_edg": 689, "number_of_deviation_edg": 689, "__repr__": 689, "edge_kei": 689, "node_kei": 689, "replac": [689, 693], "noderesult": 689, "wit": 689, "supportnoderesult": 689, "merg": [689, 694], "access": 689, "gradient_norm": 689, "expos": 689, "hard": 689, "code": [689, 690, 692, 693], "ghcompon": 689, "to_compa": 689, "planeconstraint": 689, "formfind": 689, "eps_min": 689, "draw_seg": 689, "scheme": 689, "draw_edg": 689, "tight": 689, "autoscal": 689, "save": 689, "overcrop": 689, "imag": 689, "custom": 689, "form_plotter_proxi": 689, "topology_plotter_proxi": 689, "polygon": 689, "took": 689, "temporari": 689, "patch": 689, "deviationedgelengthconstraint": 689, "autograd": 689, "filter": 689, "number_of_auxiliary_trail": 689, "properti": 689, "auxiliary_trail_vector": 689, "under": [689, 692], "anyth": 689, "longer": [689, 693], "reflect": 689, "immut": 689, "children": 689, "penalti": 689, "nodemixin": 689, "node_xyz": 689, "rhino_instal": 689, "streamlin": 689, "symlink": 689, "src": 689, "ghuser": [689, 693], "gitignor": 689, "uninstal": [689, 693], "tag": 689, "regex": 689, "bumpvers": 689, "cfg": 689, "md": 689, "rst": 689, "research": 690, "pleas": [690, 693], "our": [690, 692, 693], "journal": 690, "paper": 690, "articl": 690, "pastrana_constrainedformfinding_2022": 690, "titl": 690, "pastrana": [690, 692, 694], "rafael": [690, 692, 694], "ohlbrock": [690, 692], "patrick": 690, "ol": [690, 692], "oberbichl": 690, "thoma": 690, "acunto": [690, 692], "pierluigi": [690, 692], "parascho": [690, 692], "stefana": [690, 692], "aid": 690, "design": [690, 692], "doi": 690, "1016": 690, "j": 690, "cad": [690, 692], "2022": 690, "103435": 690, "volum": 690, "155": 690, "issn": 690, "0010": 690, "4485": 690, "www": 690, "sciencedirect": 690, "scienc": [690, 692], "pii": 690, "s0010448522001683": 690, "month": 690, "feb": 690, "year": 690, "And": 690, "repositori": 690, "softwar": [690, 692, 694], "model": [690, 692, 693], "framework": [690, 692], "2021": [690, 694], "5281": 690, "zenodo": 690, "5705740": 690, "arpastrana": 690, "io": 690, "_cem": 690, "princeton": [690, 692], "arch": 690, "ethz": 690, "ch": 690, "oleohlbrock": 690, "pierluigidacunto": 690, "tum": 690, "de": 690, "epfl": 690, "stefanaparascho": 690, "excit": 691, "mai": [691, 693], "help": 691, "approach": 692, "spatial": 692, "bar": 692, "subject": [692, 694], "combin": 692, "encapsul": 692, "open": 692, "tool": [692, 693], "formul": 692, "solut": 692, "plain": 692, "mix": 692, "explor": 692, "wider": 692, "spectrum": 692, "typologi": 692, "space": 692, "go": [692, 693], "beyond": 692, "convent": 692, "catalog": 692, "shell": 692, "cabl": 692, "effici": 692, "priori": 692, "best": 692, "fit": [692, 694], "shape": 692, "restrain": 692, "usabl": 692, "across": 692, "system": 692, "window": [692, 693], "maco": [692, 693], "linux": [692, 693], "perhap": 692, "dai": [692, 693], "also": [692, 693], "metavers": 692, "work": [692, 693], "necessari": 692, "interfac": 692, "seamlessli": 692, "insid": 692, "popular": 692, "environ": 692, "As": [692, 693], "extens": [692, 693], "offer": [692, 693], "integr": 692, "exchang": 692, "ecosystem": 692, "those": [692, 693], "slider": 692, "person": [692, 694], "worri": 692, "ship": 692, "precook": 692, "readili": 692, "engin": [692, 693], "your": 692, "spaghetti": 692, "pipelin": 692, "develop": 692, "nation": 692, "foundat": 692, "grant": [692, 694], "oac": 692, "2118201": 692, "nsf": 692, "institut": 692, "driven": 692, "introduct": 692, "changelog": 692, "cite": 692, "licens": 692, "four": 693, "we": 693, "have": 693, "machin": 693, "command": 693, "prompt": 693, "termin": 693, "chose": 693, "spacecowboi": 693, "prefer": 693, "bubbl": 693, "isol": 693, "In": 693, "word": 693, "what": 693, "happen": 693, "stai": 693, "requir": 693, "recommend": 693, "consult": 693, "compas_view2": 693, "encount": 693, "being": 693, "abl": 693, "microsoft": 693, "miss": 693, "fail": 693, "saniti": 693, "known": 693, "issu": 693, "how": 693, "do": [693, 694], "mayb": 693, "liner": 693, "To": 693, "everyth": 693, "enter": 693, "celebr": 693, "There": 693, "complex": 693, "easier": 693, "few": 693, "mous": 693, "click": 693, "hundr": 693, "bit": 693, "familiar": 693, "addition": 693, "close": 693, "three": 693, "sure": 693, "proceed": 693, "case": 693, "older": 693, "m": 693, "compani": 693, "futur": 693, "releas": 693, "let": 693, "compas_ghpython": 693, "were": 693, "wonder": 693, "launch": 693, "onto": 693, "send": 693, "pictur": 693, "onc": 693, "forget": 693, "who": 693, "don": 693, "know": 693, "consequ": 693, "alreadi": 693, "NOT": [693, 694], "past": 693, "latest": 693, "upgrad": 693, "altern": 693, "switch": 693, "had": 693, "mit": 694, "copyright": 694, "2020": 694, "permiss": 694, "herebi": 694, "charg": 694, "obtain": 694, "associ": 694, "deal": 694, "restrict": 694, "right": 694, "publish": 694, "distribut": 694, "sublicens": 694, "sell": 694, "permit": 694, "whom": 694, "furnish": 694, "so": 694, "abov": 694, "notic": 694, "shall": 694, "substanti": 694, "portion": 694, "THE": 694, "AS": 694, "warranti": 694, "OF": 694, "kind": 694, "express": 694, "OR": 694, "impli": 694, "BUT": 694, "TO": 694, "merchant": 694, "FOR": 694, "particular": 694, "purpos": 694, "AND": 694, "noninfring": 694, "NO": 694, "author": 694, "holder": 694, "BE": 694, "liabl": 694, "claim": 694, "damag": 694, "liabil": 694, "contract": 694, "tort": 694, "aris": 694, "WITH": 694}, "objects": {"": [[13, 0, 0, "-", "compas_cem"]], "compas_cem": [[14, 0, 0, "-", "diagrams"], [15, 0, 0, "-", "elements"], [16, 0, 0, "-", "equilibrium"], [17, 0, 0, "-", "loads"], [18, 0, 0, "-", "optimization"], [19, 0, 0, "-", "plotters"], [20, 0, 0, "-", "supports"], [21, 0, 0, "-", "viewers"]], "compas_cem.diagrams": [[22, 1, 1, "", "FormDiagram"], [153, 1, 1, "", "TopologyDiagram"]], "compas_cem.diagrams.FormDiagram": [[23, 2, 1, "", "ToString"], [24, 2, 1, "", "add_edge"], [25, 2, 1, "", "add_node"], [26, 2, 1, "", "adjacency_matrix"], [27, 2, 1, "", "clear"], [28, 2, 1, "", "complement"], [29, 2, 1, "", "connected_edges"], [30, 2, 1, "", "connectivity_matrix"], [31, 2, 1, "", "copy"], [32, 2, 1, "", "count_crossings"], [33, 2, 1, "", "degree"], [34, 2, 1, "", "degree_in"], [35, 2, 1, "", "degree_matrix"], [36, 2, 1, "", "degree_out"], [37, 2, 1, "", "delete_edge"], [38, 2, 1, "", "delete_node"], [39, 2, 1, "", "edge_attribute"], [40, 2, 1, "", "edge_attributes"], [41, 2, 1, "", "edge_coordinates"], [42, 2, 1, "", "edge_direction"], [43, 2, 1, "", "edge_force"], [44, 2, 1, "", "edge_length"], [45, 2, 1, "", "edge_length_2"], [46, 2, 1, "", "edge_midpoint"], [47, 2, 1, "", "edge_plane"], [48, 2, 1, "", "edge_point"], [49, 2, 1, "", "edge_sample"], [50, 2, 1, "", "edge_vector"], [51, 2, 1, "", "edges"], [52, 2, 1, "", "edges_attribute"], [53, 2, 1, "", "edges_attributes"], [54, 2, 1, "", "edges_where"], [55, 2, 1, "", "edges_where_predicate"], [56, 2, 1, "", "embed_in_plane"], [57, 2, 1, "", "find_crossings"], [58, 2, 1, "", "find_cycles"], [59, 2, 1, "", "from_data"], [60, 2, 1, "", "from_edges"], [61, 2, 1, "", "from_equilibrium_state"], [62, 2, 1, "", "from_json"], [63, 2, 1, "", "from_jsonstring"], [64, 2, 1, "", "from_lines"], [65, 2, 1, "", "from_networkx"], [66, 2, 1, "", "from_nodes_and_edges"], [67, 2, 1, "", "from_obj"], [68, 2, 1, "", "from_pointcloud"], [69, 2, 1, "", "from_topology_diagram"], [70, 2, 1, "", "get_any_edge"], [71, 2, 1, "", "get_any_edges"], [72, 2, 1, "", "get_any_node"], [73, 2, 1, "", "get_any_nodes"], [74, 2, 1, "", "gkey"], [75, 2, 1, "", "gkey_key"], [76, 2, 1, "", "has_edge"], [77, 2, 1, "", "has_node"], [78, 2, 1, "", "index_key"], [79, 2, 1, "", "index_uv"], [80, 2, 1, "", "is_connected"], [81, 2, 1, "", "is_crossed"], [82, 2, 1, "", "is_edge_supported"], [83, 2, 1, "", "is_leaf"], [84, 2, 1, "", "is_node_connected"], [85, 2, 1, "", "is_node_loaded"], [86, 2, 1, "", "is_node_support"], [87, 2, 1, "", "is_planar"], [88, 2, 1, "", "is_planar_embedding"], [89, 2, 1, "", "is_xy"], [90, 2, 1, "", "key_gkey"], [91, 2, 1, "", "key_index"], [92, 2, 1, "", "laplacian_matrix"], [93, 2, 1, "", "leaves"], [94, 2, 1, "", "loaded_nodes"], [95, 2, 1, "", "neighborhood"], [96, 2, 1, "", "neighbors"], [97, 2, 1, "", "neighbors_in"], [98, 2, 1, "", "neighbors_out"], [99, 2, 1, "", "network_adjacency_matrix"], [100, 2, 1, "", "network_connectivity_matrix"], [101, 2, 1, "", "network_degree_matrix"], [102, 2, 1, "", "network_embed_in_plane"], [103, 2, 1, "", "network_is_planar"], [104, 2, 1, "", "network_is_planar_embedding"], [105, 2, 1, "", "network_laplacian_matrix"], [106, 2, 1, "", "node_attribute"], [107, 2, 1, "", "node_attributes"], [108, 2, 1, "", "node_coordinates"], [109, 2, 1, "", "node_exists"], [110, 2, 1, "", "node_gkey"], [111, 2, 1, "", "node_key"], [112, 2, 1, "", "node_laplacian"], [113, 2, 1, "", "node_load"], [114, 2, 1, "", "node_neighborhood_centroid"], [115, 2, 1, "", "node_sample"], [116, 2, 1, "", "node_xyz"], [117, 2, 1, "", "nodes"], [118, 2, 1, "", "nodes_attribute"], [119, 2, 1, "", "nodes_attributes"], [120, 2, 1, "", "nodes_where"], [121, 2, 1, "", "nodes_where_predicate"], [122, 2, 1, "", "number_of_edges"], [123, 2, 1, "", "number_of_loaded_nodes"], [124, 2, 1, "", "number_of_nodes"], [125, 2, 1, "", "number_of_support_nodes"], [126, 2, 1, "", "reaction_force"], [127, 2, 1, "", "sha256"], [128, 2, 1, "", "shortest_path"], [129, 2, 1, "", "smooth"], [130, 2, 1, "", "split_edge"], [131, 2, 1, "", "summary"], [132, 2, 1, "", "support_nodes"], [133, 2, 1, "", "to_data"], [134, 2, 1, "", "to_json"], [135, 2, 1, "", "to_jsonstring"], [136, 2, 1, "", "to_lines"], [137, 2, 1, "", "to_networkx"], [138, 2, 1, "", "to_nodes_and_edges"], [139, 2, 1, "", "to_obj"], [140, 2, 1, "", "to_points"], [141, 2, 1, "", "transform"], [142, 2, 1, "", "transformed"], [143, 2, 1, "", "unset_edge_attribute"], [144, 2, 1, "", "unset_node_attribute"], [145, 2, 1, "", "update_dea"], [146, 2, 1, "", "update_default_edge_attributes"], [147, 2, 1, "", "update_default_node_attributes"], [148, 2, 1, "", "update_dna"], [149, 2, 1, "", "update_node_xyz"], [150, 2, 1, "", "uv_index"], [151, 2, 1, "", "validate_data"], [152, 2, 1, "", "validate_json"]], "compas_cem.diagrams.TopologyDiagram": [[154, 2, 1, "", "ToString"], [155, 2, 1, "", "add_edge"], [156, 2, 1, "", "add_load"], [157, 2, 1, "", "add_node"], [158, 2, 1, "", "add_support"], [159, 2, 1, "", "adjacency_matrix"], [160, 2, 1, "", "auxiliary_trail_edges"], [161, 2, 1, "", "auxiliary_trails"], [162, 2, 1, "", "build_trails"], [163, 2, 1, "", "clear"], [164, 2, 1, "", "complement"], [165, 2, 1, "", "connected_deviation_edges"], [166, 2, 1, "", "connected_edges"], [167, 2, 1, "", "connected_trail_edges"], [168, 2, 1, "", "connectivity_matrix"], [169, 2, 1, "", "copy"], [170, 2, 1, "", "count_crossings"], [171, 2, 1, "", "degree"], [172, 2, 1, "", "degree_in"], [173, 2, 1, "", "degree_matrix"], [174, 2, 1, "", "degree_out"], [175, 2, 1, "", "delete_edge"], [176, 2, 1, "", "delete_node"], [177, 2, 1, "", "deviation_edges"], [178, 2, 1, "", "direct_deviation_edges"], [179, 2, 1, "", "edge_attribute"], [180, 2, 1, "", "edge_attributes"], [181, 2, 1, "", "edge_coordinates"], [182, 2, 1, "", "edge_direction"], [183, 2, 1, "", "edge_force"], [184, 2, 1, "", "edge_length"], [185, 2, 1, "", "edge_length_2"], [186, 2, 1, "", "edge_midpoint"], [187, 2, 1, "", "edge_plane"], [188, 2, 1, "", "edge_point"], [189, 2, 1, "", "edge_sample"], [190, 2, 1, "", "edge_sequence"], [191, 2, 1, "", "edge_vector"], [192, 2, 1, "", "edges"], [193, 2, 1, "", "edges_attribute"], [194, 2, 1, "", "edges_attributes"], [195, 2, 1, "", "edges_where"], [196, 2, 1, "", "edges_where_predicate"], [197, 2, 1, "", "embed_in_plane"], [198, 2, 1, "", "find_crossings"], [199, 2, 1, "", "find_cycles"], [200, 2, 1, "", "from_data"], [201, 2, 1, "", "from_dualquadmesh"], [202, 2, 1, "", "from_edges"], [203, 2, 1, "", "from_json"], [204, 2, 1, "", "from_jsonstring"], [205, 2, 1, "", "from_lines"], [206, 2, 1, "", "from_networkx"], [207, 2, 1, "", "from_nodes_and_edges"], [208, 2, 1, "", "from_obj"], [209, 2, 1, "", "from_pointcloud"], [210, 2, 1, "", "get_any_edge"], [211, 2, 1, "", "get_any_edges"], [212, 2, 1, "", "get_any_node"], [213, 2, 1, "", "get_any_nodes"], [214, 2, 1, "", "gkey"], [215, 2, 1, "", "gkey_key"], [216, 2, 1, "", "has_edge"], [217, 2, 1, "", "has_node"], [218, 2, 1, "", "has_trails"], [219, 2, 1, "", "index_key"], [220, 2, 1, "", "index_uv"], [221, 2, 1, "", "indirect_deviation_edges"], [222, 2, 1, "", "is_auxiliary_trail_edge"], [223, 2, 1, "", "is_connected"], [224, 2, 1, "", "is_crossed"], [225, 2, 1, "", "is_deviation_edge"], [226, 2, 1, "", "is_direct_deviation_edge"], [227, 2, 1, "", "is_edge_supported"], [228, 2, 1, "", "is_indirect_deviation_edge"], [229, 2, 1, "", "is_leaf"], [230, 2, 1, "", "is_node_connected"], [231, 2, 1, "", "is_node_loaded"], [232, 2, 1, "", "is_node_origin"], [233, 2, 1, "", "is_node_support"], [234, 2, 1, "", "is_planar"], [235, 2, 1, "", "is_planar_embedding"], [236, 2, 1, "", "is_trail_edge"], [237, 2, 1, "", "is_xy"], [238, 2, 1, "", "key_gkey"], [239, 2, 1, "", "key_index"], [240, 2, 1, "", "laplacian_matrix"], [241, 2, 1, "", "leaves"], [242, 2, 1, "", "loaded_nodes"], [243, 2, 1, "", "neighborhood"], [244, 2, 1, "", "neighbors"], [245, 2, 1, "", "neighbors_in"], [246, 2, 1, "", "neighbors_out"], [247, 2, 1, "", "network_adjacency_matrix"], [248, 2, 1, "", "network_connectivity_matrix"], [249, 2, 1, "", "network_degree_matrix"], [250, 2, 1, "", "network_embed_in_plane"], [251, 2, 1, "", "network_is_planar"], [252, 2, 1, "", "network_is_planar_embedding"], [253, 2, 1, "", "network_laplacian_matrix"], [254, 2, 1, "", "node_attribute"], [255, 2, 1, "", "node_attributes"], [256, 2, 1, "", "node_coordinates"], [257, 2, 1, "", "node_exists"], [258, 2, 1, "", "node_gkey"], [259, 2, 1, "", "node_key"], [260, 2, 1, "", "node_laplacian"], [261, 2, 1, "", "node_load"], [262, 2, 1, "", "node_neighborhood_centroid"], [263, 2, 1, "", "node_sample"], [264, 2, 1, "", "node_sequence"], [265, 2, 1, "", "node_xyz"], [266, 2, 1, "", "nodes"], [267, 2, 1, "", "nodes_attribute"], [268, 2, 1, "", "nodes_attributes"], [269, 2, 1, "", "nodes_where"], [270, 2, 1, "", "nodes_where_predicate"], [271, 2, 1, "", "number_of_auxiliary_trails"], [272, 2, 1, "", "number_of_deviation_edges"], [273, 2, 1, "", "number_of_direct_deviation_edges"], [274, 2, 1, "", "number_of_edges"], [275, 2, 1, "", "number_of_indirect_deviation_edges"], [276, 2, 1, "", "number_of_loaded_nodes"], [277, 2, 1, "", "number_of_nodes"], [278, 2, 1, "", "number_of_sequences"], [279, 2, 1, "", "number_of_support_nodes"], [280, 2, 1, "", "number_of_trail_edges"], [281, 2, 1, "", "number_of_trails"], [282, 2, 1, "", "origin_nodes"], [283, 2, 1, "", "reaction_force"], [284, 2, 1, "", "sequence_last"], [285, 2, 1, "", "sequences"], [286, 2, 1, "", "sha256"], [287, 2, 1, "", "shift_trail"], [288, 2, 1, "", "shortest_path"], [289, 2, 1, "", "smooth"], [290, 2, 1, "", "split_edge"], [291, 2, 1, "", "summary"], [292, 2, 1, "", "support_nodes"], [293, 2, 1, "", "to_data"], [294, 2, 1, "", "to_json"], [295, 2, 1, "", "to_jsonstring"], [296, 2, 1, "", "to_lines"], [297, 2, 1, "", "to_networkx"], [298, 2, 1, "", "to_nodes_and_edges"], [299, 2, 1, "", "to_obj"], [300, 2, 1, "", "to_points"], [301, 2, 1, "", "trail"], [302, 2, 1, "", "trail_edges"], [303, 2, 1, "", "trail_sequences"], [304, 2, 1, "", "trails"], [305, 2, 1, "", "trails_sequences"], [306, 2, 1, "", "transform"], [307, 2, 1, "", "transformed"], [308, 2, 1, "", "unset_edge_attribute"], [309, 2, 1, "", "unset_node_attribute"], [310, 2, 1, "", "update_dea"], [311, 2, 1, "", "update_default_edge_attributes"], [312, 2, 1, "", "update_default_node_attributes"], [313, 2, 1, "", "update_dna"], [314, 2, 1, "", "update_node_xyz"], [315, 2, 1, "", "uv_index"], [316, 2, 1, "", "validate_data"], [317, 2, 1, "", "validate_json"]], "compas_cem.elements": [[318, 1, 1, "", "DeviationEdge"], [331, 1, 1, "", "Node"], [344, 1, 1, "", "TrailEdge"]], "compas_cem.elements.DeviationEdge": [[319, 2, 1, "", "ToString"], [320, 2, 1, "", "copy"], [321, 2, 1, "", "from_data"], [322, 2, 1, "", "from_json"], [323, 2, 1, "", "from_jsonstring"], [324, 2, 1, "", "from_line"], [325, 2, 1, "", "sha256"], [326, 2, 1, "", "to_data"], [327, 2, 1, "", "to_json"], [328, 2, 1, "", "to_jsonstring"], [329, 2, 1, "", "validate_data"], [330, 2, 1, "", "validate_json"]], "compas_cem.elements.Node": [[332, 2, 1, "", "ToString"], [333, 2, 1, "", "copy"], [334, 2, 1, "", "from_data"], [335, 2, 1, "", "from_json"], [336, 2, 1, "", "from_jsonstring"], [337, 2, 1, "", "from_point"], [338, 2, 1, "", "sha256"], [339, 2, 1, "", "to_data"], [340, 2, 1, "", "to_json"], [341, 2, 1, "", "to_jsonstring"], [342, 2, 1, "", "validate_data"], [343, 2, 1, "", "validate_json"]], "compas_cem.elements.TrailEdge": [[345, 2, 1, "", "ToString"], [346, 2, 1, "", "copy"], [347, 2, 1, "", "from_data"], [348, 2, 1, "", "from_json"], [349, 2, 1, "", "from_jsonstring"], [350, 2, 1, "", "from_line"], [351, 2, 1, "", "sha256"], [352, 2, 1, "", "to_data"], [353, 2, 1, "", "to_json"], [354, 2, 1, "", "to_jsonstring"], [355, 2, 1, "", "validate_data"], [356, 2, 1, "", "validate_json"]], "compas_cem.equilibrium": [[357, 3, 1, "", "static_equilibrium"], [358, 3, 1, "", "static_equilibrium_numpy"]], "compas_cem.loads": [[359, 1, 1, "", "NodeLoad"]], "compas_cem.loads.NodeLoad": [[360, 2, 1, "", "ToString"], [361, 2, 1, "", "copy"], [362, 2, 1, "", "from_data"], [363, 2, 1, "", "from_json"], [364, 2, 1, "", "from_jsonstring"], [365, 2, 1, "", "from_point_and_vector"], [366, 2, 1, "", "sha256"], [367, 2, 1, "", "to_data"], [368, 2, 1, "", "to_json"], [369, 2, 1, "", "to_jsonstring"], [370, 2, 1, "", "validate_data"], [371, 2, 1, "", "validate_json"]], "compas_cem.optimization": [[372, 1, 1, "", "DeviationEdgeLengthConstraint"], [388, 1, 1, "", "DeviationEdgeParameter"], [405, 1, 1, "", "LineConstraint"], [421, 1, 1, "", "NodeLoadXParameter"], [438, 1, 1, "", "NodeLoadYParameter"], [455, 1, 1, "", "NodeLoadZParameter"], [472, 1, 1, "", "Optimizer"], [496, 1, 1, "", "OriginNodeXParameter"], [513, 1, 1, "", "OriginNodeYParameter"], [530, 1, 1, "", "OriginNodeZParameter"], [547, 1, 1, "", "PlaneConstraint"], [563, 1, 1, "", "PointConstraint"], [579, 1, 1, "", "ReactionForceConstraint"], [595, 1, 1, "", "TrailEdgeForceConstraint"], [611, 1, 1, "", "TrailEdgeParameter"], [628, 3, 1, "", "solve_proxy"]], "compas_cem.optimization.DeviationEdgeLengthConstraint": [[373, 2, 1, "", "ToString"], [374, 2, 1, "", "copy"], [375, 2, 1, "", "from_data"], [376, 2, 1, "", "from_json"], [377, 2, 1, "", "from_jsonstring"], [378, 2, 1, "", "key"], [379, 2, 1, "", "penalty"], [380, 2, 1, "", "reference"], [381, 2, 1, "", "sha256"], [382, 2, 1, "", "target"], [383, 2, 1, "", "to_data"], [384, 2, 1, "", "to_json"], [385, 2, 1, "", "to_jsonstring"], [386, 2, 1, "", "validate_data"], [387, 2, 1, "", "validate_json"]], "compas_cem.optimization.DeviationEdgeParameter": [[389, 2, 1, "", "ToString"], [390, 2, 1, "", "attr_name"], [391, 2, 1, "", "bound_low"], [392, 2, 1, "", "bound_up"], [393, 2, 1, "", "copy"], [394, 2, 1, "", "from_data"], [395, 2, 1, "", "from_json"], [396, 2, 1, "", "from_jsonstring"], [397, 2, 1, "", "key"], [398, 2, 1, "", "sha256"], [399, 2, 1, "", "start_value"], [400, 2, 1, "", "to_data"], [401, 2, 1, "", "to_json"], [402, 2, 1, "", "to_jsonstring"], [403, 2, 1, "", "validate_data"], [404, 2, 1, "", "validate_json"]], "compas_cem.optimization.LineConstraint": [[406, 2, 1, "", "ToString"], [407, 2, 1, "", "copy"], [408, 2, 1, "", "from_data"], [409, 2, 1, "", "from_json"], [410, 2, 1, "", "from_jsonstring"], [411, 2, 1, "", "key"], [412, 2, 1, "", "penalty"], [413, 2, 1, "", "reference"], [414, 2, 1, "", "sha256"], [415, 2, 1, "", "target"], [416, 2, 1, "", "to_data"], [417, 2, 1, "", "to_json"], [418, 2, 1, "", "to_jsonstring"], [419, 2, 1, "", "validate_data"], [420, 2, 1, "", "validate_json"]], "compas_cem.optimization.NodeLoadXParameter": [[422, 2, 1, "", "ToString"], [423, 2, 1, "", "attr_name"], [424, 2, 1, "", "bound_low"], [425, 2, 1, "", "bound_up"], [426, 2, 1, "", "copy"], [427, 2, 1, "", "from_data"], [428, 2, 1, "", "from_json"], [429, 2, 1, "", "from_jsonstring"], [430, 2, 1, "", "key"], [431, 2, 1, "", "sha256"], [432, 2, 1, "", "start_value"], [433, 2, 1, "", "to_data"], [434, 2, 1, "", "to_json"], [435, 2, 1, "", "to_jsonstring"], [436, 2, 1, "", "validate_data"], [437, 2, 1, "", "validate_json"]], "compas_cem.optimization.NodeLoadYParameter": [[439, 2, 1, "", "ToString"], [440, 2, 1, "", "attr_name"], [441, 2, 1, "", "bound_low"], [442, 2, 1, "", "bound_up"], [443, 2, 1, "", "copy"], [444, 2, 1, "", "from_data"], [445, 2, 1, "", "from_json"], [446, 2, 1, "", "from_jsonstring"], [447, 2, 1, "", "key"], [448, 2, 1, "", "sha256"], [449, 2, 1, "", "start_value"], [450, 2, 1, "", "to_data"], [451, 2, 1, "", "to_json"], [452, 2, 1, "", "to_jsonstring"], [453, 2, 1, "", "validate_data"], [454, 2, 1, "", "validate_json"]], "compas_cem.optimization.NodeLoadZParameter": [[456, 2, 1, "", "ToString"], [457, 2, 1, "", "attr_name"], [458, 2, 1, "", "bound_low"], [459, 2, 1, "", "bound_up"], [460, 2, 1, "", "copy"], [461, 2, 1, "", "from_data"], [462, 2, 1, "", "from_json"], [463, 2, 1, "", "from_jsonstring"], [464, 2, 1, "", "key"], [465, 2, 1, "", "sha256"], [466, 2, 1, "", "start_value"], [467, 2, 1, "", "to_data"], [468, 2, 1, "", "to_json"], [469, 2, 1, "", "to_jsonstring"], [470, 2, 1, "", "validate_data"], [471, 2, 1, "", "validate_json"]], "compas_cem.optimization.Optimizer": [[473, 2, 1, "", "ToString"], [474, 2, 1, "", "add_constraint"], [475, 2, 1, "", "add_parameter"], [476, 2, 1, "", "check_optimization_sanity"], [477, 2, 1, "", "copy"], [478, 2, 1, "", "from_data"], [479, 2, 1, "", "from_json"], [480, 2, 1, "", "from_jsonstring"], [481, 2, 1, "", "gradient_func"], [482, 2, 1, "", "number_of_constraints"], [483, 2, 1, "", "number_of_parameters"], [484, 2, 1, "", "objective_func"], [485, 2, 1, "", "optimization_bounds"], [486, 2, 1, "", "optimization_parameters"], [487, 2, 1, "", "remove_constraint"], [488, 2, 1, "", "remove_parameter"], [489, 2, 1, "", "sha256"], [490, 2, 1, "", "solve"], [491, 2, 1, "", "to_data"], [492, 2, 1, "", "to_json"], [493, 2, 1, "", "to_jsonstring"], [494, 2, 1, "", "validate_data"], [495, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeXParameter": [[497, 2, 1, "", "ToString"], [498, 2, 1, "", "attr_name"], [499, 2, 1, "", "bound_low"], [500, 2, 1, "", "bound_up"], [501, 2, 1, "", "copy"], [502, 2, 1, "", "from_data"], [503, 2, 1, "", "from_json"], [504, 2, 1, "", "from_jsonstring"], [505, 2, 1, "", "key"], [506, 2, 1, "", "sha256"], [507, 2, 1, "", "start_value"], [508, 2, 1, "", "to_data"], [509, 2, 1, "", "to_json"], [510, 2, 1, "", "to_jsonstring"], [511, 2, 1, "", "validate_data"], [512, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeYParameter": [[514, 2, 1, "", "ToString"], [515, 2, 1, "", "attr_name"], [516, 2, 1, "", "bound_low"], [517, 2, 1, "", "bound_up"], [518, 2, 1, "", "copy"], [519, 2, 1, "", "from_data"], [520, 2, 1, "", "from_json"], [521, 2, 1, "", "from_jsonstring"], [522, 2, 1, "", "key"], [523, 2, 1, "", "sha256"], [524, 2, 1, "", "start_value"], [525, 2, 1, "", "to_data"], [526, 2, 1, "", "to_json"], [527, 2, 1, "", "to_jsonstring"], [528, 2, 1, "", "validate_data"], [529, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeZParameter": [[531, 2, 1, "", "ToString"], [532, 2, 1, "", "attr_name"], [533, 2, 1, "", "bound_low"], [534, 2, 1, "", "bound_up"], [535, 2, 1, "", "copy"], [536, 2, 1, "", "from_data"], [537, 2, 1, "", "from_json"], [538, 2, 1, "", "from_jsonstring"], [539, 2, 1, "", "key"], [540, 2, 1, "", "sha256"], [541, 2, 1, "", "start_value"], [542, 2, 1, "", "to_data"], [543, 2, 1, "", "to_json"], [544, 2, 1, "", "to_jsonstring"], [545, 2, 1, "", "validate_data"], [546, 2, 1, "", "validate_json"]], "compas_cem.optimization.PlaneConstraint": [[548, 2, 1, "", "ToString"], [549, 2, 1, "", "copy"], [550, 2, 1, "", "from_data"], [551, 2, 1, "", "from_json"], [552, 2, 1, "", "from_jsonstring"], [553, 2, 1, "", "key"], [554, 2, 1, "", "penalty"], [555, 2, 1, "", "reference"], [556, 2, 1, "", "sha256"], [557, 2, 1, "", "target"], [558, 2, 1, "", "to_data"], [559, 2, 1, "", "to_json"], [560, 2, 1, "", "to_jsonstring"], [561, 2, 1, "", "validate_data"], [562, 2, 1, "", "validate_json"]], "compas_cem.optimization.PointConstraint": [[564, 2, 1, "", "ToString"], [565, 2, 1, "", "copy"], [566, 2, 1, "", "from_data"], [567, 2, 1, "", "from_json"], [568, 2, 1, "", "from_jsonstring"], [569, 2, 1, "", "key"], [570, 2, 1, "", "penalty"], [571, 2, 1, "", "reference"], [572, 2, 1, "", "sha256"], [573, 2, 1, "", "target"], [574, 2, 1, "", "to_data"], [575, 2, 1, "", "to_json"], [576, 2, 1, "", "to_jsonstring"], [577, 2, 1, "", "validate_data"], [578, 2, 1, "", "validate_json"]], "compas_cem.optimization.ReactionForceConstraint": [[580, 2, 1, "", "ToString"], [581, 2, 1, "", "copy"], [582, 2, 1, "", "from_data"], [583, 2, 1, "", "from_json"], [584, 2, 1, "", "from_jsonstring"], [585, 2, 1, "", "key"], [586, 2, 1, "", "penalty"], [587, 2, 1, "", "reference"], [588, 2, 1, "", "sha256"], [589, 2, 1, "", "target"], [590, 2, 1, "", "to_data"], [591, 2, 1, "", "to_json"], [592, 2, 1, "", "to_jsonstring"], [593, 2, 1, "", "validate_data"], [594, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeForceConstraint": [[596, 2, 1, "", "ToString"], [597, 2, 1, "", "copy"], [598, 2, 1, "", "from_data"], [599, 2, 1, "", "from_json"], [600, 2, 1, "", "from_jsonstring"], [601, 2, 1, "", "key"], [602, 2, 1, "", "penalty"], [603, 2, 1, "", "reference"], [604, 2, 1, "", "sha256"], [605, 2, 1, "", "target"], [606, 2, 1, "", "to_data"], [607, 2, 1, "", "to_json"], [608, 2, 1, "", "to_jsonstring"], [609, 2, 1, "", "validate_data"], [610, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeParameter": [[612, 2, 1, "", "ToString"], [613, 2, 1, "", "attr_name"], [614, 2, 1, "", "bound_low"], [615, 2, 1, "", "bound_up"], [616, 2, 1, "", "copy"], [617, 2, 1, "", "from_data"], [618, 2, 1, "", "from_json"], [619, 2, 1, "", "from_jsonstring"], [620, 2, 1, "", "key"], [621, 2, 1, "", "sha256"], [622, 2, 1, "", "start_value"], [623, 2, 1, "", "to_data"], [624, 2, 1, "", "to_json"], [625, 2, 1, "", "to_jsonstring"], [626, 2, 1, "", "validate_data"], [627, 2, 1, "", "validate_json"]], "compas_cem.plotters": [[629, 1, 1, "", "FormArtist"], [647, 1, 1, "", "Plotter"], [659, 1, 1, "", "TopologyArtist"]], "compas_cem.plotters.FormArtist": [[630, 2, 1, "", "build"], [631, 2, 1, "", "build_as"], [632, 2, 1, "", "clear"], [633, 2, 1, "", "clear_edges"], [634, 2, 1, "", "clear_nodes"], [635, 2, 1, "", "draw"], [636, 2, 1, "", "draw_collection"], [637, 2, 1, "", "draw_edgelabels"], [638, 2, 1, "", "draw_edges"], [639, 2, 1, "", "draw_loads"], [640, 2, 1, "", "draw_nodelabels"], [641, 2, 1, "", "draw_nodes"], [642, 2, 1, "", "draw_reactions"], [643, 2, 1, "", "redraw"], [644, 2, 1, "", "register"], [645, 2, 1, "", "update_data"], [646, 2, 1, "", "viewbox"]], "compas_cem.plotters.Plotter": [[648, 2, 1, "", "add"], [649, 2, 1, "", "add_from_list"], [650, 2, 1, "", "draw"], [651, 2, 1, "", "find"], [652, 2, 1, "", "on"], [653, 2, 1, "", "pause"], [654, 2, 1, "", "redraw"], [655, 2, 1, "", "register_listener"], [656, 2, 1, "", "save"], [657, 2, 1, "", "show"], [658, 2, 1, "", "zoom_extents"]], "compas_cem.plotters.TopologyArtist": [[660, 2, 1, "", "build"], [661, 2, 1, "", "build_as"], [662, 2, 1, "", "clear"], [663, 2, 1, "", "clear_edges"], [664, 2, 1, "", "clear_nodes"], [665, 2, 1, "", "draw"], [666, 2, 1, "", "draw_collection"], [667, 2, 1, "", "draw_edgelabels"], [668, 2, 1, "", "draw_edges"], [669, 2, 1, "", "draw_loads"], [670, 2, 1, "", "draw_nodelabels"], [671, 2, 1, "", "draw_nodes"], [672, 2, 1, "", "redraw"], [673, 2, 1, "", "register"], [674, 2, 1, "", "update_data"], [675, 2, 1, "", "viewbox"]], "compas_cem.supports": [[676, 1, 1, "", "NodeSupport"]], "compas_cem.supports.NodeSupport": [[677, 2, 1, "", "ToString"], [678, 2, 1, "", "copy"], [679, 2, 1, "", "from_data"], [680, 2, 1, "", "from_json"], [681, 2, 1, "", "from_jsonstring"], [682, 2, 1, "", "from_point"], [683, 2, 1, "", "sha256"], [684, 2, 1, "", "to_data"], [685, 2, 1, "", "to_json"], [686, 2, 1, "", "to_jsonstring"], [687, 2, 1, "", "validate_data"], [688, 2, 1, "", "validate_json"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"python": 0, "01": 1, "simpl": 1, "compress": 1, "structur": [1, 4], "02": 2, "brace": 2, "tower": 2, "2d": [2, 3, 4, 7], "03": 3, "bridg": [3, 7, 8], "optim": [3, 18, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495], "04": 4, "tree": 4, "05": 5, "planar": 5, "tensegr": [5, 10], "wheel": 5, "grasshopp": [6, 693], "A": 7, "b": 8, "tubular": 8, "3d": 8, "c": 9, "circular": 9, "dome": 9, "d": 10, "jessen": 10, "e": 11, "spiral": 11, "staircas": 11, "api": 12, "refer": [12, 380, 413, 555, 571, 587, 603], "compas_cem": [13, 14, 15, 16, 17, 18, 19, 20, 21], "diagram": 14, "element": 15, "edg": [15, 51, 192], "node": [15, 117, 266, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "equilibrium": 16, "load": 17, "constraint": 18, "paramet": 18, "plotter": [19, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658], "artist": 19, "support": 20, "viewer": 21, "visual": 21, "object": 21, "formdiagram": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "tostr": [23, 154, 319, 332, 345, 360, 373, 389, 406, 422, 439, 456, 473, 497, 514, 531, 548, 564, 580, 596, 612, 677], "add_edg": [24, 155], "add_nod": [25, 157], "adjacency_matrix": [26, 159], "clear": [27, 163, 632, 662], "complement": [28, 164], "connected_edg": [29, 166], "connectivity_matrix": [30, 168], "copi": [31, 169, 320, 333, 346, 361, 374, 393, 407, 426, 443, 460, 477, 501, 518, 535, 549, 565, 581, 597, 616, 678], "count_cross": [32, 170], "degre": [33, 171], "degree_in": [34, 172], "degree_matrix": [35, 173], "degree_out": [36, 174], "delete_edg": [37, 175], "delete_nod": [38, 176], "edge_attribut": [39, 40, 179, 180], "edge_coordin": [41, 181], "edge_direct": [42, 182], "edge_forc": [43, 183], "edge_length": [44, 184], "edge_length_2": [45, 185], "edge_midpoint": [46, 186], "edge_plan": [47, 187], "edge_point": [48, 188], "edge_sampl": [49, 189], "edge_vector": [50, 191], "edges_attribut": [52, 53, 193, 194], "edges_wher": [54, 195], "edges_where_pred": [55, 196], "embed_in_plan": [56, 197], "find_cross": [57, 198], "find_cycl": [58, 199], "from_data": [59, 200, 321, 334, 347, 362, 375, 394, 408, 427, 444, 461, 478, 502, 519, 536, 550, 566, 582, 598, 617, 679], "from_edg": [60, 202], "from_equilibrium_st": 61, "from_json": [62, 203, 322, 335, 348, 363, 376, 395, 409, 428, 445, 462, 479, 503, 520, 537, 551, 567, 583, 599, 618, 680], "from_jsonstr": [63, 204, 323, 336, 349, 364, 377, 396, 410, 429, 446, 463, 480, 504, 521, 538, 552, 568, 584, 600, 619, 681], "from_lin": [64, 205, 324, 350], "from_networkx": [65, 206], "from_nodes_and_edg": [66, 207], "from_obj": [67, 208], "from_pointcloud": [68, 209], "from_topology_diagram": 69, "get_any_edg": [70, 71, 210, 211], "get_any_nod": [72, 73, 212, 213], "gkei": [74, 214], "gkey_kei": [75, 215], "has_edg": [76, 216], "has_nod": [77, 217], "index_kei": [78, 219], "index_uv": [79, 220], "is_connect": [80, 223], "is_cross": [81, 224], "is_edge_support": [82, 227], "is_leaf": [83, 229], "is_node_connect": [84, 230], "is_node_load": [85, 231], "is_node_support": [86, 233], "is_planar": [87, 234], "is_planar_embed": [88, 235], "is_xi": [89, 237], "key_gkei": [90, 238], "key_index": [91, 239], "laplacian_matrix": [92, 240], "leav": [93, 241], "loaded_nod": [94, 242], "neighborhood": [95, 243], "neighbor": [96, 244], "neighbors_in": [97, 245], "neighbors_out": [98, 246], "network_adjacency_matrix": [99, 247], "network_connectivity_matrix": [100, 248], "network_degree_matrix": [101, 249], "network_embed_in_plan": [102, 250], "network_is_planar": [103, 251], "network_is_planar_embed": [104, 252], "network_laplacian_matrix": [105, 253], "node_attribut": [106, 107, 254, 255], "node_coordin": [108, 256], "node_exist": [109, 257], "node_gkei": [110, 258], "node_kei": [111, 259], "node_laplacian": [112, 260], "node_load": [113, 261], "node_neighborhood_centroid": [114, 262], "node_sampl": [115, 263], "node_xyz": [116, 265], "nodes_attribut": [118, 119, 267, 268], "nodes_wher": [120, 269], "nodes_where_pred": [121, 270], "number_of_edg": [122, 274], "number_of_loaded_nod": [123, 276], "number_of_nod": [124, 277], "number_of_support_nod": [125, 279], "reaction_forc": [126, 283], "sha256": [127, 286, 325, 338, 351, 366, 381, 398, 414, 431, 448, 465, 489, 506, 523, 540, 556, 572, 588, 604, 621, 683], "shortest_path": [128, 288], "smooth": [129, 289], "split_edg": [130, 290], "summari": [131, 291], "support_nod": [132, 292], "to_data": [133, 293, 326, 339, 352, 367, 383, 400, 416, 433, 450, 467, 491, 508, 525, 542, 558, 574, 590, 606, 623, 684], "to_json": [134, 294, 327, 340, 353, 368, 384, 401, 417, 434, 451, 468, 492, 509, 526, 543, 559, 575, 591, 607, 624, 685], "to_jsonstr": [135, 295, 328, 341, 354, 369, 385, 402, 418, 435, 452, 469, 493, 510, 527, 544, 560, 576, 592, 608, 625, 686], "to_lin": [136, 296], "to_networkx": [137, 297], "to_nodes_and_edg": [138, 298], "to_obj": [139, 299], "to_point": [140, 300], "transform": [141, 142, 306, 307], "unset_edge_attribut": [143, 308], "unset_node_attribut": [144, 309], "update_dea": [145, 310], "update_default_edge_attribut": [146, 311], "update_default_node_attribut": [147, 312], "update_dna": [148, 313], "update_node_xyz": [149, 314], "uv_index": [150, 315], "validate_data": [151, 316, 329, 342, 355, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 626, 687], "validate_json": [152, 317, 330, 343, 356, 371, 387, 404, 420, 437, 454, 471, 495, 512, 529, 546, 562, 578, 594, 610, 627, 688], "topologydiagram": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317], "add_load": 156, "add_support": 158, "auxiliary_trail_edg": 160, "auxiliary_trail": 161, "build_trail": 162, "connected_deviation_edg": 165, "connected_trail_edg": 167, "deviation_edg": 177, "direct_deviation_edg": 178, "edge_sequ": 190, "from_dualquadmesh": 201, "input": 201, "has_trail": 218, "indirect_deviation_edg": 221, "is_auxiliary_trail_edg": 222, "is_deviation_edg": 225, "is_direct_deviation_edg": 226, "is_indirect_deviation_edg": 228, "is_node_origin": 232, "is_trail_edg": 236, "node_sequ": 264, "number_of_auxiliary_trail": 271, "number_of_deviation_edg": 272, "number_of_direct_deviation_edg": 273, "number_of_indirect_deviation_edg": 275, "number_of_sequ": 278, "number_of_trail_edg": 280, "number_of_trail": 281, "origin_nod": 282, "sequence_last": 284, "sequenc": 285, "shift_trail": 287, "trail": [301, 304], "trail_edg": 302, "trail_sequ": 303, "trails_sequ": 305, "deviationedg": [318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "from_point": [337, 682], "trailedg": [344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356], "static_equilibrium": 357, "static_equilibrium_numpi": 358, "nodeload": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371], "from_point_and_vector": 365, "deviationedgelengthconstraint": [372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387], "kei": [378, 397, 411, 430, 447, 464, 505, 522, 539, 553, 569, 585, 601, 620], "penalti": [379, 412, 554, 570, 586, 602], "target": [382, 415, 557, 573, 589, 605], "deviationedgeparamet": [388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "attr_nam": [390, 423, 440, 457, 498, 515, 532, 613], "bound_low": [391, 424, 441, 458, 499, 516, 533, 614], "bound_up": [392, 425, 442, 459, 500, 517, 534, 615], "start_valu": [399, 432, 449, 466, 507, 524, 541, 622], "lineconstraint": [405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420], "nodeloadxparamet": [421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437], "nodeloadyparamet": [438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454], "nodeloadzparamet": [455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471], "add_constraint": 474, "add_paramet": 475, "check_optimization_san": 476, "gradient_func": 481, "number_of_constraint": 482, "number_of_paramet": 483, "objective_func": 484, "optimization_bound": 485, "optimization_paramet": 486, "remove_constraint": 487, "remove_paramet": 488, "solv": 490, "originnodexparamet": [496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512], "originnodeyparamet": [513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529], "originnodezparamet": [530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546], "planeconstraint": [547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562], "pointconstraint": [563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578], "reactionforceconstraint": [579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "trailedgeforceconstraint": [595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610], "trailedgeparamet": [611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627], "solve_proxi": 628, "formartist": [629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646], "build": [630, 660], "build_a": [631, 661], "clear_edg": [633, 663], "clear_nod": [634, 664], "draw": [635, 650, 665], "draw_collect": [636, 666], "draw_edgelabel": [637, 667], "draw_edg": [638, 668], "draw_load": [639, 669], "draw_nodelabel": [640, 670], "draw_nod": [641, 671], "draw_react": 642, "redraw": [643, 654, 672], "regist": [644, 673], "update_data": [645, 674], "viewbox": [646, 675], "add": 648, "add_from_list": 649, "find": 651, "paus": 653, "register_listen": 655, "save": 656, "show": 657, "zoom_ext": 658, "topologyartist": [659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675], "nodesupport": [676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688], "changelog": 689, "0": 689, "8": 689, "5": 689, "4": [689, 693], "3": [689, 693], "2": [689, 693], "1": [689, 693], "7": 689, "6": 689, "15": 689, "14": 689, "13": 689, "12": 689, "11": 689, "9": 689, "cite": 690, "author": 690, "exampl": 691, "compa": [692, 693], "cem": [692, 693], "main": 692, "featur": 692, "credit": 692, "tabl": 692, "content": 692, "instal": 693, "creat": 693, "virtual": 693, "environ": 693, "activ": 693, "via": 693, "conda": 693, "pip": 693, "plugin": 693, "remov": 693, "ani": 693, "leftov": 693, "link": 693, "check": 693, "your": 693, "updat": 693, "licens": 694}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"Python": [[0, "python"]], "01. Simple Compression Structure": [[1, "simple-compression-structure"]], "02. Braced Tower in 2D": [[2, "braced-tower-in-2d"]], "03. Bridge Optimization in 2D": [[3, "bridge-optimization-in-2d"]], "04. Tree Structure in 2D": [[4, "tree-structure-in-2d"]], "05. Planar Tensegrity Wheel": [[5, "planar-tensegrity-wheel"]], "Grasshopper": [[6, "grasshopper"]], "A. Bridge in 2D": [[7, "a-bridge-in-2d"]], "B. Tubular Bridge in 3D": [[8, "b-tubular-bridge-in-3d"]], "C. Circular Dome": [[9, "c-circular-dome"]], "D. Jessen Tensegrity": [[10, "d-jessen-tensegrity"]], "E. Spiral Staircase": [[11, "e-spiral-staircase"]], "API Reference": [[12, "api-reference"]], "compas_cem": [[13, "compas-cem"]], "compas_cem.diagrams": [[14, "compas-cem-diagrams"]], "Diagrams": [[14, "diagrams"]], "compas_cem.elements": [[15, "compas-cem-elements"]], "Edges": [[15, "edges"]], "Node": [[15, "node"], [331, "node"]], "compas_cem.equilibrium": [[16, "compas-cem-equilibrium"]], "Equilibrium": [[16, "equilibrium"]], "compas_cem.loads": [[17, "compas-cem-loads"]], "Loads": [[17, "loads"]], "compas_cem.optimization": [[18, "compas-cem-optimization"]], "Optimizers": [[18, "optimizers"]], "Optimization Constraints": [[18, "optimization-constraints"]], "Optimization Parameters": [[18, "optimization-parameters"]], "compas_cem.plotters": [[19, "compas-cem-plotters"]], "Artists": [[19, "artists"]], "Plotters": [[19, "plotters"]], "compas_cem.supports": [[20, "compas-cem-supports"]], "Supports": [[20, "supports"]], "compas_cem.viewers": [[21, "compas-cem-viewers"]], "Visualization objects": [[21, "visualization-objects"]], "Viewers": [[21, "viewers"]], "FormDiagram": [[22, "formdiagram"]], "FormDiagram.ToString": [[23, "formdiagram-tostring"]], "FormDiagram.add_edge": [[24, "formdiagram-add-edge"]], "FormDiagram.add_node": [[25, "formdiagram-add-node"]], "FormDiagram.adjacency_matrix": [[26, "formdiagram-adjacency-matrix"]], "FormDiagram.clear": [[27, "formdiagram-clear"]], "FormDiagram.complement": [[28, "formdiagram-complement"]], "FormDiagram.connected_edges": [[29, "formdiagram-connected-edges"]], "FormDiagram.connectivity_matrix": [[30, "formdiagram-connectivity-matrix"]], "FormDiagram.copy": [[31, "formdiagram-copy"]], "FormDiagram.count_crossings": [[32, "formdiagram-count-crossings"]], "FormDiagram.degree": [[33, "formdiagram-degree"]], "FormDiagram.degree_in": [[34, "formdiagram-degree-in"]], "FormDiagram.degree_matrix": [[35, "formdiagram-degree-matrix"]], "FormDiagram.degree_out": [[36, "formdiagram-degree-out"]], "FormDiagram.delete_edge": [[37, "formdiagram-delete-edge"]], "FormDiagram.delete_node": [[38, "formdiagram-delete-node"]], "FormDiagram.edge_attribute": [[39, "formdiagram-edge-attribute"]], "FormDiagram.edge_attributes": [[40, "formdiagram-edge-attributes"]], "FormDiagram.edge_coordinates": [[41, "formdiagram-edge-coordinates"]], "FormDiagram.edge_direction": [[42, "formdiagram-edge-direction"]], "FormDiagram.edge_force": [[43, "formdiagram-edge-force"]], "FormDiagram.edge_length": [[44, "formdiagram-edge-length"]], "FormDiagram.edge_length_2": [[45, "formdiagram-edge-length-2"]], "FormDiagram.edge_midpoint": [[46, "formdiagram-edge-midpoint"]], "FormDiagram.edge_plane": [[47, "formdiagram-edge-plane"]], "FormDiagram.edge_point": [[48, "formdiagram-edge-point"]], "FormDiagram.edge_sample": [[49, "formdiagram-edge-sample"]], "FormDiagram.edge_vector": [[50, "formdiagram-edge-vector"]], "FormDiagram.edges": [[51, "formdiagram-edges"]], "FormDiagram.edges_attribute": [[52, "formdiagram-edges-attribute"]], "FormDiagram.edges_attributes": [[53, "formdiagram-edges-attributes"]], "FormDiagram.edges_where": [[54, "formdiagram-edges-where"]], "FormDiagram.edges_where_predicate": [[55, "formdiagram-edges-where-predicate"]], "FormDiagram.embed_in_plane": [[56, "formdiagram-embed-in-plane"]], "FormDiagram.find_crossings": [[57, "formdiagram-find-crossings"]], "FormDiagram.find_cycles": [[58, "formdiagram-find-cycles"]], "FormDiagram.from_data": [[59, "formdiagram-from-data"]], "FormDiagram.from_edges": [[60, "formdiagram-from-edges"]], "FormDiagram.from_equilibrium_state": [[61, "formdiagram-from-equilibrium-state"]], "FormDiagram.from_json": [[62, "formdiagram-from-json"]], "FormDiagram.from_jsonstring": [[63, "formdiagram-from-jsonstring"]], "FormDiagram.from_lines": [[64, "formdiagram-from-lines"]], "FormDiagram.from_networkx": [[65, "formdiagram-from-networkx"]], "FormDiagram.from_nodes_and_edges": [[66, "formdiagram-from-nodes-and-edges"]], "FormDiagram.from_obj": [[67, "formdiagram-from-obj"]], "FormDiagram.from_pointcloud": [[68, "formdiagram-from-pointcloud"]], "FormDiagram.from_topology_diagram": [[69, "formdiagram-from-topology-diagram"]], "FormDiagram.get_any_edge": [[70, "formdiagram-get-any-edge"]], "FormDiagram.get_any_edges": [[71, "formdiagram-get-any-edges"]], "FormDiagram.get_any_node": [[72, "formdiagram-get-any-node"]], "FormDiagram.get_any_nodes": [[73, "formdiagram-get-any-nodes"]], "FormDiagram.gkey": [[74, "formdiagram-gkey"]], "FormDiagram.gkey_key": [[75, "formdiagram-gkey-key"]], "FormDiagram.has_edge": [[76, "formdiagram-has-edge"]], "FormDiagram.has_node": [[77, "formdiagram-has-node"]], "FormDiagram.index_key": [[78, "formdiagram-index-key"]], "FormDiagram.index_uv": [[79, "formdiagram-index-uv"]], "FormDiagram.is_connected": [[80, "formdiagram-is-connected"]], "FormDiagram.is_crossed": [[81, "formdiagram-is-crossed"]], "FormDiagram.is_edge_supported": [[82, "formdiagram-is-edge-supported"]], "FormDiagram.is_leaf": [[83, "formdiagram-is-leaf"]], "FormDiagram.is_node_connected": [[84, "formdiagram-is-node-connected"]], "FormDiagram.is_node_loaded": [[85, "formdiagram-is-node-loaded"]], "FormDiagram.is_node_support": [[86, "formdiagram-is-node-support"]], "FormDiagram.is_planar": [[87, "formdiagram-is-planar"]], "FormDiagram.is_planar_embedding": [[88, "formdiagram-is-planar-embedding"]], "FormDiagram.is_xy": [[89, "formdiagram-is-xy"]], "FormDiagram.key_gkey": [[90, "formdiagram-key-gkey"]], "FormDiagram.key_index": [[91, "formdiagram-key-index"]], "FormDiagram.laplacian_matrix": [[92, "formdiagram-laplacian-matrix"]], "FormDiagram.leaves": [[93, "formdiagram-leaves"]], "FormDiagram.loaded_nodes": [[94, "formdiagram-loaded-nodes"]], "FormDiagram.neighborhood": [[95, "formdiagram-neighborhood"]], "FormDiagram.neighbors": [[96, "formdiagram-neighbors"]], "FormDiagram.neighbors_in": [[97, "formdiagram-neighbors-in"]], "FormDiagram.neighbors_out": [[98, "formdiagram-neighbors-out"]], "FormDiagram.network_adjacency_matrix": [[99, "formdiagram-network-adjacency-matrix"]], "FormDiagram.network_connectivity_matrix": [[100, "formdiagram-network-connectivity-matrix"]], "FormDiagram.network_degree_matrix": [[101, "formdiagram-network-degree-matrix"]], "FormDiagram.network_embed_in_plane": [[102, "formdiagram-network-embed-in-plane"]], "FormDiagram.network_is_planar": [[103, "formdiagram-network-is-planar"]], "FormDiagram.network_is_planar_embedding": [[104, "formdiagram-network-is-planar-embedding"]], "FormDiagram.network_laplacian_matrix": [[105, "formdiagram-network-laplacian-matrix"]], "FormDiagram.node_attribute": [[106, "formdiagram-node-attribute"]], "FormDiagram.node_attributes": [[107, "formdiagram-node-attributes"]], "FormDiagram.node_coordinates": [[108, "formdiagram-node-coordinates"]], "FormDiagram.node_exists": [[109, "formdiagram-node-exists"]], "FormDiagram.node_gkey": [[110, "formdiagram-node-gkey"]], "FormDiagram.node_key": [[111, "formdiagram-node-key"]], "FormDiagram.node_laplacian": [[112, "formdiagram-node-laplacian"]], "FormDiagram.node_load": [[113, "formdiagram-node-load"]], "FormDiagram.node_neighborhood_centroid": [[114, "formdiagram-node-neighborhood-centroid"]], "FormDiagram.node_sample": [[115, "formdiagram-node-sample"]], "FormDiagram.node_xyz": [[116, "formdiagram-node-xyz"]], "FormDiagram.nodes": [[117, "formdiagram-nodes"]], "FormDiagram.nodes_attribute": [[118, "formdiagram-nodes-attribute"]], "FormDiagram.nodes_attributes": [[119, "formdiagram-nodes-attributes"]], "FormDiagram.nodes_where": [[120, "formdiagram-nodes-where"]], "FormDiagram.nodes_where_predicate": [[121, "formdiagram-nodes-where-predicate"]], "FormDiagram.number_of_edges": [[122, "formdiagram-number-of-edges"]], "FormDiagram.number_of_loaded_nodes": [[123, "formdiagram-number-of-loaded-nodes"]], "FormDiagram.number_of_nodes": [[124, "formdiagram-number-of-nodes"]], "FormDiagram.number_of_support_nodes": [[125, "formdiagram-number-of-support-nodes"]], "FormDiagram.reaction_force": [[126, "formdiagram-reaction-force"]], "FormDiagram.sha256": [[127, "formdiagram-sha256"]], "FormDiagram.shortest_path": [[128, "formdiagram-shortest-path"]], "FormDiagram.smooth": [[129, "formdiagram-smooth"]], "FormDiagram.split_edge": [[130, "formdiagram-split-edge"]], "FormDiagram.summary": [[131, "formdiagram-summary"]], "FormDiagram.support_nodes": [[132, "formdiagram-support-nodes"]], "FormDiagram.to_data": [[133, "formdiagram-to-data"]], "FormDiagram.to_json": [[134, "formdiagram-to-json"]], "FormDiagram.to_jsonstring": [[135, "formdiagram-to-jsonstring"]], "FormDiagram.to_lines": [[136, "formdiagram-to-lines"]], "FormDiagram.to_networkx": [[137, "formdiagram-to-networkx"]], "FormDiagram.to_nodes_and_edges": [[138, "formdiagram-to-nodes-and-edges"]], "FormDiagram.to_obj": [[139, "formdiagram-to-obj"]], "FormDiagram.to_points": [[140, "formdiagram-to-points"]], "FormDiagram.transform": [[141, "formdiagram-transform"]], "FormDiagram.transformed": [[142, "formdiagram-transformed"]], "FormDiagram.unset_edge_attribute": [[143, "formdiagram-unset-edge-attribute"]], "FormDiagram.unset_node_attribute": [[144, "formdiagram-unset-node-attribute"]], "FormDiagram.update_dea": [[145, "formdiagram-update-dea"]], "FormDiagram.update_default_edge_attributes": [[146, "formdiagram-update-default-edge-attributes"]], "FormDiagram.update_default_node_attributes": [[147, "formdiagram-update-default-node-attributes"]], "FormDiagram.update_dna": [[148, "formdiagram-update-dna"]], "FormDiagram.update_node_xyz": [[149, "formdiagram-update-node-xyz"]], "FormDiagram.uv_index": [[150, "formdiagram-uv-index"]], "FormDiagram.validate_data": [[151, "formdiagram-validate-data"]], "FormDiagram.validate_json": [[152, "formdiagram-validate-json"]], "TopologyDiagram": [[153, "topologydiagram"]], "TopologyDiagram.ToString": [[154, "topologydiagram-tostring"]], "TopologyDiagram.add_edge": [[155, "topologydiagram-add-edge"]], "TopologyDiagram.add_load": [[156, "topologydiagram-add-load"]], "TopologyDiagram.add_node": [[157, "topologydiagram-add-node"]], "TopologyDiagram.add_support": [[158, "topologydiagram-add-support"]], "TopologyDiagram.adjacency_matrix": [[159, "topologydiagram-adjacency-matrix"]], "TopologyDiagram.auxiliary_trail_edges": [[160, "topologydiagram-auxiliary-trail-edges"]], "TopologyDiagram.auxiliary_trails": [[161, "topologydiagram-auxiliary-trails"]], "TopologyDiagram.build_trails": [[162, "topologydiagram-build-trails"]], "TopologyDiagram.clear": [[163, "topologydiagram-clear"]], "TopologyDiagram.complement": [[164, "topologydiagram-complement"]], "TopologyDiagram.connected_deviation_edges": [[165, "topologydiagram-connected-deviation-edges"]], "TopologyDiagram.connected_edges": [[166, "topologydiagram-connected-edges"]], "TopologyDiagram.connected_trail_edges": [[167, "topologydiagram-connected-trail-edges"]], "TopologyDiagram.connectivity_matrix": [[168, "topologydiagram-connectivity-matrix"]], "TopologyDiagram.copy": [[169, "topologydiagram-copy"]], "TopologyDiagram.count_crossings": [[170, "topologydiagram-count-crossings"]], "TopologyDiagram.degree": [[171, "topologydiagram-degree"]], "TopologyDiagram.degree_in": [[172, "topologydiagram-degree-in"]], "TopologyDiagram.degree_matrix": [[173, "topologydiagram-degree-matrix"]], "TopologyDiagram.degree_out": [[174, "topologydiagram-degree-out"]], "TopologyDiagram.delete_edge": [[175, "topologydiagram-delete-edge"]], "TopologyDiagram.delete_node": [[176, "topologydiagram-delete-node"]], "TopologyDiagram.deviation_edges": [[177, "topologydiagram-deviation-edges"]], "TopologyDiagram.direct_deviation_edges": [[178, "topologydiagram-direct-deviation-edges"]], "TopologyDiagram.edge_attribute": [[179, "topologydiagram-edge-attribute"]], "TopologyDiagram.edge_attributes": [[180, "topologydiagram-edge-attributes"]], "TopologyDiagram.edge_coordinates": [[181, "topologydiagram-edge-coordinates"]], "TopologyDiagram.edge_direction": [[182, "topologydiagram-edge-direction"]], "TopologyDiagram.edge_force": [[183, "topologydiagram-edge-force"]], "TopologyDiagram.edge_length": [[184, "topologydiagram-edge-length"]], "TopologyDiagram.edge_length_2": [[185, "topologydiagram-edge-length-2"]], "TopologyDiagram.edge_midpoint": [[186, "topologydiagram-edge-midpoint"]], "TopologyDiagram.edge_plane": [[187, "topologydiagram-edge-plane"]], "TopologyDiagram.edge_point": [[188, "topologydiagram-edge-point"]], "TopologyDiagram.edge_sample": [[189, "topologydiagram-edge-sample"]], "TopologyDiagram.edge_sequence": [[190, "topologydiagram-edge-sequence"]], "TopologyDiagram.edge_vector": [[191, "topologydiagram-edge-vector"]], "TopologyDiagram.edges": [[192, "topologydiagram-edges"]], "TopologyDiagram.edges_attribute": [[193, "topologydiagram-edges-attribute"]], "TopologyDiagram.edges_attributes": [[194, "topologydiagram-edges-attributes"]], "TopologyDiagram.edges_where": [[195, "topologydiagram-edges-where"]], "TopologyDiagram.edges_where_predicate": [[196, "topologydiagram-edges-where-predicate"]], "TopologyDiagram.embed_in_plane": [[197, "topologydiagram-embed-in-plane"]], "TopologyDiagram.find_crossings": [[198, "topologydiagram-find-crossings"]], "TopologyDiagram.find_cycles": [[199, "topologydiagram-find-cycles"]], "TopologyDiagram.from_data": [[200, "topologydiagram-from-data"]], "TopologyDiagram.from_dualquadmesh": [[201, "topologydiagram-from-dualquadmesh"]], "Inputs": [[201, "inputs"]], "TopologyDiagram.from_edges": [[202, "topologydiagram-from-edges"]], "TopologyDiagram.from_json": [[203, "topologydiagram-from-json"]], "TopologyDiagram.from_jsonstring": [[204, "topologydiagram-from-jsonstring"]], "TopologyDiagram.from_lines": [[205, "topologydiagram-from-lines"]], "TopologyDiagram.from_networkx": [[206, "topologydiagram-from-networkx"]], "TopologyDiagram.from_nodes_and_edges": [[207, "topologydiagram-from-nodes-and-edges"]], "TopologyDiagram.from_obj": [[208, "topologydiagram-from-obj"]], "TopologyDiagram.from_pointcloud": [[209, "topologydiagram-from-pointcloud"]], "TopologyDiagram.get_any_edge": [[210, "topologydiagram-get-any-edge"]], "TopologyDiagram.get_any_edges": [[211, "topologydiagram-get-any-edges"]], "TopologyDiagram.get_any_node": [[212, "topologydiagram-get-any-node"]], "TopologyDiagram.get_any_nodes": [[213, "topologydiagram-get-any-nodes"]], "TopologyDiagram.gkey": [[214, "topologydiagram-gkey"]], "TopologyDiagram.gkey_key": [[215, "topologydiagram-gkey-key"]], "TopologyDiagram.has_edge": [[216, "topologydiagram-has-edge"]], "TopologyDiagram.has_node": [[217, "topologydiagram-has-node"]], "TopologyDiagram.has_trails": [[218, "topologydiagram-has-trails"]], "TopologyDiagram.index_key": [[219, "topologydiagram-index-key"]], "TopologyDiagram.index_uv": [[220, "topologydiagram-index-uv"]], "TopologyDiagram.indirect_deviation_edges": [[221, "topologydiagram-indirect-deviation-edges"]], "TopologyDiagram.is_auxiliary_trail_edge": [[222, "topologydiagram-is-auxiliary-trail-edge"]], "TopologyDiagram.is_connected": [[223, "topologydiagram-is-connected"]], "TopologyDiagram.is_crossed": [[224, "topologydiagram-is-crossed"]], "TopologyDiagram.is_deviation_edge": [[225, "topologydiagram-is-deviation-edge"]], "TopologyDiagram.is_direct_deviation_edge": [[226, "topologydiagram-is-direct-deviation-edge"]], "TopologyDiagram.is_edge_supported": [[227, "topologydiagram-is-edge-supported"]], "TopologyDiagram.is_indirect_deviation_edge": [[228, "topologydiagram-is-indirect-deviation-edge"]], "TopologyDiagram.is_leaf": [[229, "topologydiagram-is-leaf"]], "TopologyDiagram.is_node_connected": [[230, "topologydiagram-is-node-connected"]], "TopologyDiagram.is_node_loaded": [[231, "topologydiagram-is-node-loaded"]], "TopologyDiagram.is_node_origin": [[232, "topologydiagram-is-node-origin"]], "TopologyDiagram.is_node_support": [[233, "topologydiagram-is-node-support"]], "TopologyDiagram.is_planar": [[234, "topologydiagram-is-planar"]], "TopologyDiagram.is_planar_embedding": [[235, "topologydiagram-is-planar-embedding"]], "TopologyDiagram.is_trail_edge": [[236, "topologydiagram-is-trail-edge"]], "TopologyDiagram.is_xy": [[237, "topologydiagram-is-xy"]], "TopologyDiagram.key_gkey": [[238, "topologydiagram-key-gkey"]], "TopologyDiagram.key_index": [[239, "topologydiagram-key-index"]], "TopologyDiagram.laplacian_matrix": [[240, "topologydiagram-laplacian-matrix"]], "TopologyDiagram.leaves": [[241, "topologydiagram-leaves"]], "TopologyDiagram.loaded_nodes": [[242, "topologydiagram-loaded-nodes"]], "TopologyDiagram.neighborhood": [[243, "topologydiagram-neighborhood"]], "TopologyDiagram.neighbors": [[244, "topologydiagram-neighbors"]], "TopologyDiagram.neighbors_in": [[245, "topologydiagram-neighbors-in"]], "TopologyDiagram.neighbors_out": [[246, "topologydiagram-neighbors-out"]], "TopologyDiagram.network_adjacency_matrix": [[247, "topologydiagram-network-adjacency-matrix"]], "TopologyDiagram.network_connectivity_matrix": [[248, "topologydiagram-network-connectivity-matrix"]], "TopologyDiagram.network_degree_matrix": [[249, "topologydiagram-network-degree-matrix"]], "TopologyDiagram.network_embed_in_plane": [[250, "topologydiagram-network-embed-in-plane"]], "TopologyDiagram.network_is_planar": [[251, "topologydiagram-network-is-planar"]], "TopologyDiagram.network_is_planar_embedding": [[252, "topologydiagram-network-is-planar-embedding"]], "TopologyDiagram.network_laplacian_matrix": [[253, "topologydiagram-network-laplacian-matrix"]], "TopologyDiagram.node_attribute": [[254, "topologydiagram-node-attribute"]], "TopologyDiagram.node_attributes": [[255, "topologydiagram-node-attributes"]], "TopologyDiagram.node_coordinates": [[256, "topologydiagram-node-coordinates"]], "TopologyDiagram.node_exists": [[257, "topologydiagram-node-exists"]], "TopologyDiagram.node_gkey": [[258, "topologydiagram-node-gkey"]], "TopologyDiagram.node_key": [[259, "topologydiagram-node-key"]], "TopologyDiagram.node_laplacian": [[260, "topologydiagram-node-laplacian"]], "TopologyDiagram.node_load": [[261, "topologydiagram-node-load"]], "TopologyDiagram.node_neighborhood_centroid": [[262, "topologydiagram-node-neighborhood-centroid"]], "TopologyDiagram.node_sample": [[263, "topologydiagram-node-sample"]], "TopologyDiagram.node_sequence": [[264, "topologydiagram-node-sequence"]], "TopologyDiagram.node_xyz": [[265, "topologydiagram-node-xyz"]], "TopologyDiagram.nodes": [[266, "topologydiagram-nodes"]], "TopologyDiagram.nodes_attribute": [[267, "topologydiagram-nodes-attribute"]], "TopologyDiagram.nodes_attributes": [[268, "topologydiagram-nodes-attributes"]], "TopologyDiagram.nodes_where": [[269, "topologydiagram-nodes-where"]], "TopologyDiagram.nodes_where_predicate": [[270, "topologydiagram-nodes-where-predicate"]], "TopologyDiagram.number_of_auxiliary_trails": [[271, "topologydiagram-number-of-auxiliary-trails"]], "TopologyDiagram.number_of_deviation_edges": [[272, "topologydiagram-number-of-deviation-edges"]], "TopologyDiagram.number_of_direct_deviation_edges": [[273, "topologydiagram-number-of-direct-deviation-edges"]], "TopologyDiagram.number_of_edges": [[274, "topologydiagram-number-of-edges"]], "TopologyDiagram.number_of_indirect_deviation_edges": [[275, "topologydiagram-number-of-indirect-deviation-edges"]], "TopologyDiagram.number_of_loaded_nodes": [[276, "topologydiagram-number-of-loaded-nodes"]], "TopologyDiagram.number_of_nodes": [[277, "topologydiagram-number-of-nodes"]], "TopologyDiagram.number_of_sequences": [[278, "topologydiagram-number-of-sequences"]], "TopologyDiagram.number_of_support_nodes": [[279, "topologydiagram-number-of-support-nodes"]], "TopologyDiagram.number_of_trail_edges": [[280, "topologydiagram-number-of-trail-edges"]], "TopologyDiagram.number_of_trails": [[281, "topologydiagram-number-of-trails"]], "TopologyDiagram.origin_nodes": [[282, "topologydiagram-origin-nodes"]], "TopologyDiagram.reaction_force": [[283, "topologydiagram-reaction-force"]], "TopologyDiagram.sequence_last": [[284, "topologydiagram-sequence-last"]], "TopologyDiagram.sequences": [[285, "topologydiagram-sequences"]], "TopologyDiagram.sha256": [[286, "topologydiagram-sha256"]], "TopologyDiagram.shift_trail": [[287, "topologydiagram-shift-trail"]], "TopologyDiagram.shortest_path": [[288, "topologydiagram-shortest-path"]], "TopologyDiagram.smooth": [[289, "topologydiagram-smooth"]], "TopologyDiagram.split_edge": [[290, "topologydiagram-split-edge"]], "TopologyDiagram.summary": [[291, "topologydiagram-summary"]], "TopologyDiagram.support_nodes": [[292, "topologydiagram-support-nodes"]], "TopologyDiagram.to_data": [[293, "topologydiagram-to-data"]], "TopologyDiagram.to_json": [[294, "topologydiagram-to-json"]], "TopologyDiagram.to_jsonstring": [[295, "topologydiagram-to-jsonstring"]], "TopologyDiagram.to_lines": [[296, "topologydiagram-to-lines"]], "TopologyDiagram.to_networkx": [[297, "topologydiagram-to-networkx"]], "TopologyDiagram.to_nodes_and_edges": [[298, "topologydiagram-to-nodes-and-edges"]], "TopologyDiagram.to_obj": [[299, "topologydiagram-to-obj"]], "TopologyDiagram.to_points": [[300, "topologydiagram-to-points"]], "TopologyDiagram.trail": [[301, "topologydiagram-trail"]], "TopologyDiagram.trail_edges": [[302, "topologydiagram-trail-edges"]], "TopologyDiagram.trail_sequences": [[303, "topologydiagram-trail-sequences"]], "TopologyDiagram.trails": [[304, "topologydiagram-trails"]], "TopologyDiagram.trails_sequences": [[305, "topologydiagram-trails-sequences"]], "TopologyDiagram.transform": [[306, "topologydiagram-transform"]], "TopologyDiagram.transformed": [[307, "topologydiagram-transformed"]], "TopologyDiagram.unset_edge_attribute": [[308, "topologydiagram-unset-edge-attribute"]], "TopologyDiagram.unset_node_attribute": [[309, "topologydiagram-unset-node-attribute"]], "TopologyDiagram.update_dea": [[310, "topologydiagram-update-dea"]], "TopologyDiagram.update_default_edge_attributes": [[311, "topologydiagram-update-default-edge-attributes"]], "TopologyDiagram.update_default_node_attributes": [[312, "topologydiagram-update-default-node-attributes"]], "TopologyDiagram.update_dna": [[313, "topologydiagram-update-dna"]], "TopologyDiagram.update_node_xyz": [[314, "topologydiagram-update-node-xyz"]], "TopologyDiagram.uv_index": [[315, "topologydiagram-uv-index"]], "TopologyDiagram.validate_data": [[316, "topologydiagram-validate-data"]], "TopologyDiagram.validate_json": [[317, "topologydiagram-validate-json"]], "DeviationEdge": [[318, "deviationedge"]], "DeviationEdge.ToString": [[319, "deviationedge-tostring"]], "DeviationEdge.copy": [[320, "deviationedge-copy"]], "DeviationEdge.from_data": [[321, "deviationedge-from-data"]], "DeviationEdge.from_json": [[322, "deviationedge-from-json"]], "DeviationEdge.from_jsonstring": [[323, "deviationedge-from-jsonstring"]], "DeviationEdge.from_line": [[324, "deviationedge-from-line"]], "DeviationEdge.sha256": [[325, "deviationedge-sha256"]], "DeviationEdge.to_data": [[326, "deviationedge-to-data"]], "DeviationEdge.to_json": [[327, "deviationedge-to-json"]], "DeviationEdge.to_jsonstring": [[328, "deviationedge-to-jsonstring"]], "DeviationEdge.validate_data": [[329, "deviationedge-validate-data"]], "DeviationEdge.validate_json": [[330, "deviationedge-validate-json"]], "Node.ToString": [[332, "node-tostring"]], "Node.copy": [[333, "node-copy"]], "Node.from_data": [[334, "node-from-data"]], "Node.from_json": [[335, "node-from-json"]], "Node.from_jsonstring": [[336, "node-from-jsonstring"]], "Node.from_point": [[337, "node-from-point"]], "Node.sha256": [[338, "node-sha256"]], "Node.to_data": [[339, "node-to-data"]], "Node.to_json": [[340, "node-to-json"]], "Node.to_jsonstring": [[341, "node-to-jsonstring"]], "Node.validate_data": [[342, "node-validate-data"]], "Node.validate_json": [[343, "node-validate-json"]], "TrailEdge": [[344, "trailedge"]], "TrailEdge.ToString": [[345, "trailedge-tostring"]], "TrailEdge.copy": [[346, "trailedge-copy"]], "TrailEdge.from_data": [[347, "trailedge-from-data"]], "TrailEdge.from_json": [[348, "trailedge-from-json"]], "TrailEdge.from_jsonstring": [[349, "trailedge-from-jsonstring"]], "TrailEdge.from_line": [[350, "trailedge-from-line"]], "TrailEdge.sha256": [[351, "trailedge-sha256"]], "TrailEdge.to_data": [[352, "trailedge-to-data"]], "TrailEdge.to_json": [[353, "trailedge-to-json"]], "TrailEdge.to_jsonstring": [[354, "trailedge-to-jsonstring"]], "TrailEdge.validate_data": [[355, "trailedge-validate-data"]], "TrailEdge.validate_json": [[356, "trailedge-validate-json"]], "static_equilibrium": [[357, "static-equilibrium"]], "static_equilibrium_numpy": [[358, "static-equilibrium-numpy"]], "NodeLoad": [[359, "nodeload"]], "NodeLoad.ToString": [[360, "nodeload-tostring"]], "NodeLoad.copy": [[361, "nodeload-copy"]], "NodeLoad.from_data": [[362, "nodeload-from-data"]], "NodeLoad.from_json": [[363, "nodeload-from-json"]], "NodeLoad.from_jsonstring": [[364, "nodeload-from-jsonstring"]], "NodeLoad.from_point_and_vector": [[365, "nodeload-from-point-and-vector"]], "NodeLoad.sha256": [[366, "nodeload-sha256"]], "NodeLoad.to_data": [[367, "nodeload-to-data"]], "NodeLoad.to_json": [[368, "nodeload-to-json"]], "NodeLoad.to_jsonstring": [[369, "nodeload-to-jsonstring"]], "NodeLoad.validate_data": [[370, "nodeload-validate-data"]], "NodeLoad.validate_json": [[371, "nodeload-validate-json"]], "DeviationEdgeLengthConstraint": [[372, "deviationedgelengthconstraint"]], "DeviationEdgeLengthConstraint.ToString": [[373, "deviationedgelengthconstraint-tostring"]], "DeviationEdgeLengthConstraint.copy": [[374, "deviationedgelengthconstraint-copy"]], "DeviationEdgeLengthConstraint.from_data": [[375, "deviationedgelengthconstraint-from-data"]], "DeviationEdgeLengthConstraint.from_json": [[376, "deviationedgelengthconstraint-from-json"]], "DeviationEdgeLengthConstraint.from_jsonstring": [[377, "deviationedgelengthconstraint-from-jsonstring"]], "DeviationEdgeLengthConstraint.key": [[378, "deviationedgelengthconstraint-key"]], "DeviationEdgeLengthConstraint.penalty": [[379, "deviationedgelengthconstraint-penalty"]], "DeviationEdgeLengthConstraint.reference": [[380, "deviationedgelengthconstraint-reference"]], "DeviationEdgeLengthConstraint.sha256": [[381, "deviationedgelengthconstraint-sha256"]], "DeviationEdgeLengthConstraint.target": [[382, "deviationedgelengthconstraint-target"]], "DeviationEdgeLengthConstraint.to_data": [[383, "deviationedgelengthconstraint-to-data"]], "DeviationEdgeLengthConstraint.to_json": [[384, "deviationedgelengthconstraint-to-json"]], "DeviationEdgeLengthConstraint.to_jsonstring": [[385, "deviationedgelengthconstraint-to-jsonstring"]], "DeviationEdgeLengthConstraint.validate_data": [[386, "deviationedgelengthconstraint-validate-data"]], "DeviationEdgeLengthConstraint.validate_json": [[387, "deviationedgelengthconstraint-validate-json"]], "DeviationEdgeParameter": [[388, "deviationedgeparameter"]], "DeviationEdgeParameter.ToString": [[389, "deviationedgeparameter-tostring"]], "DeviationEdgeParameter.attr_name": [[390, "deviationedgeparameter-attr-name"]], "DeviationEdgeParameter.bound_low": [[391, "deviationedgeparameter-bound-low"]], "DeviationEdgeParameter.bound_up": [[392, "deviationedgeparameter-bound-up"]], "DeviationEdgeParameter.copy": [[393, "deviationedgeparameter-copy"]], "DeviationEdgeParameter.from_data": [[394, "deviationedgeparameter-from-data"]], "DeviationEdgeParameter.from_json": [[395, "deviationedgeparameter-from-json"]], "DeviationEdgeParameter.from_jsonstring": [[396, "deviationedgeparameter-from-jsonstring"]], "DeviationEdgeParameter.key": [[397, "deviationedgeparameter-key"]], "DeviationEdgeParameter.sha256": [[398, "deviationedgeparameter-sha256"]], "DeviationEdgeParameter.start_value": [[399, "deviationedgeparameter-start-value"]], "DeviationEdgeParameter.to_data": [[400, "deviationedgeparameter-to-data"]], "DeviationEdgeParameter.to_json": [[401, "deviationedgeparameter-to-json"]], "DeviationEdgeParameter.to_jsonstring": [[402, "deviationedgeparameter-to-jsonstring"]], "DeviationEdgeParameter.validate_data": [[403, "deviationedgeparameter-validate-data"]], "DeviationEdgeParameter.validate_json": [[404, "deviationedgeparameter-validate-json"]], "LineConstraint": [[405, "lineconstraint"]], "LineConstraint.ToString": [[406, "lineconstraint-tostring"]], "LineConstraint.copy": [[407, "lineconstraint-copy"]], "LineConstraint.from_data": [[408, "lineconstraint-from-data"]], "LineConstraint.from_json": [[409, "lineconstraint-from-json"]], "LineConstraint.from_jsonstring": [[410, "lineconstraint-from-jsonstring"]], "LineConstraint.key": [[411, "lineconstraint-key"]], "LineConstraint.penalty": [[412, "lineconstraint-penalty"]], "LineConstraint.reference": [[413, "lineconstraint-reference"]], "LineConstraint.sha256": [[414, "lineconstraint-sha256"]], "LineConstraint.target": [[415, "lineconstraint-target"]], "LineConstraint.to_data": [[416, "lineconstraint-to-data"]], "LineConstraint.to_json": [[417, "lineconstraint-to-json"]], "LineConstraint.to_jsonstring": [[418, "lineconstraint-to-jsonstring"]], "LineConstraint.validate_data": [[419, "lineconstraint-validate-data"]], "LineConstraint.validate_json": [[420, "lineconstraint-validate-json"]], "NodeLoadXParameter": [[421, "nodeloadxparameter"]], "NodeLoadXParameter.ToString": [[422, "nodeloadxparameter-tostring"]], "NodeLoadXParameter.attr_name": [[423, "nodeloadxparameter-attr-name"]], "NodeLoadXParameter.bound_low": [[424, "nodeloadxparameter-bound-low"]], "NodeLoadXParameter.bound_up": [[425, "nodeloadxparameter-bound-up"]], "NodeLoadXParameter.copy": [[426, "nodeloadxparameter-copy"]], "NodeLoadXParameter.from_data": [[427, "nodeloadxparameter-from-data"]], "NodeLoadXParameter.from_json": [[428, "nodeloadxparameter-from-json"]], "NodeLoadXParameter.from_jsonstring": [[429, "nodeloadxparameter-from-jsonstring"]], "NodeLoadXParameter.key": [[430, "nodeloadxparameter-key"]], "NodeLoadXParameter.sha256": [[431, "nodeloadxparameter-sha256"]], "NodeLoadXParameter.start_value": [[432, "nodeloadxparameter-start-value"]], "NodeLoadXParameter.to_data": [[433, "nodeloadxparameter-to-data"]], "NodeLoadXParameter.to_json": [[434, "nodeloadxparameter-to-json"]], "NodeLoadXParameter.to_jsonstring": [[435, "nodeloadxparameter-to-jsonstring"]], "NodeLoadXParameter.validate_data": [[436, "nodeloadxparameter-validate-data"]], "NodeLoadXParameter.validate_json": [[437, "nodeloadxparameter-validate-json"]], "NodeLoadYParameter": [[438, "nodeloadyparameter"]], "NodeLoadYParameter.ToString": [[439, "nodeloadyparameter-tostring"]], "NodeLoadYParameter.attr_name": [[440, "nodeloadyparameter-attr-name"]], "NodeLoadYParameter.bound_low": [[441, "nodeloadyparameter-bound-low"]], "NodeLoadYParameter.bound_up": [[442, "nodeloadyparameter-bound-up"]], "NodeLoadYParameter.copy": [[443, "nodeloadyparameter-copy"]], "NodeLoadYParameter.from_data": [[444, "nodeloadyparameter-from-data"]], "NodeLoadYParameter.from_json": [[445, "nodeloadyparameter-from-json"]], "NodeLoadYParameter.from_jsonstring": [[446, "nodeloadyparameter-from-jsonstring"]], "NodeLoadYParameter.key": [[447, "nodeloadyparameter-key"]], "NodeLoadYParameter.sha256": [[448, "nodeloadyparameter-sha256"]], "NodeLoadYParameter.start_value": [[449, "nodeloadyparameter-start-value"]], "NodeLoadYParameter.to_data": [[450, "nodeloadyparameter-to-data"]], "NodeLoadYParameter.to_json": [[451, "nodeloadyparameter-to-json"]], "NodeLoadYParameter.to_jsonstring": [[452, "nodeloadyparameter-to-jsonstring"]], "NodeLoadYParameter.validate_data": [[453, "nodeloadyparameter-validate-data"]], "NodeLoadYParameter.validate_json": [[454, "nodeloadyparameter-validate-json"]], "NodeLoadZParameter": [[455, "nodeloadzparameter"]], "NodeLoadZParameter.ToString": [[456, "nodeloadzparameter-tostring"]], "NodeLoadZParameter.attr_name": [[457, "nodeloadzparameter-attr-name"]], "NodeLoadZParameter.bound_low": [[458, "nodeloadzparameter-bound-low"]], "NodeLoadZParameter.bound_up": [[459, "nodeloadzparameter-bound-up"]], "NodeLoadZParameter.copy": [[460, "nodeloadzparameter-copy"]], "NodeLoadZParameter.from_data": [[461, "nodeloadzparameter-from-data"]], "NodeLoadZParameter.from_json": [[462, "nodeloadzparameter-from-json"]], "NodeLoadZParameter.from_jsonstring": [[463, "nodeloadzparameter-from-jsonstring"]], "NodeLoadZParameter.key": [[464, "nodeloadzparameter-key"]], "NodeLoadZParameter.sha256": [[465, "nodeloadzparameter-sha256"]], "NodeLoadZParameter.start_value": [[466, "nodeloadzparameter-start-value"]], "NodeLoadZParameter.to_data": [[467, "nodeloadzparameter-to-data"]], "NodeLoadZParameter.to_json": [[468, "nodeloadzparameter-to-json"]], "NodeLoadZParameter.to_jsonstring": [[469, "nodeloadzparameter-to-jsonstring"]], "NodeLoadZParameter.validate_data": [[470, "nodeloadzparameter-validate-data"]], "NodeLoadZParameter.validate_json": [[471, "nodeloadzparameter-validate-json"]], "Optimizer": [[472, "optimizer"]], "Optimizer.ToString": [[473, "optimizer-tostring"]], "Optimizer.add_constraint": [[474, "optimizer-add-constraint"]], "Optimizer.add_parameter": [[475, "optimizer-add-parameter"]], "Optimizer.check_optimization_sanity": [[476, "optimizer-check-optimization-sanity"]], "Optimizer.copy": [[477, "optimizer-copy"]], "Optimizer.from_data": [[478, "optimizer-from-data"]], "Optimizer.from_json": [[479, "optimizer-from-json"]], "Optimizer.from_jsonstring": [[480, "optimizer-from-jsonstring"]], "Optimizer.gradient_func": [[481, "optimizer-gradient-func"]], "Optimizer.number_of_constraints": [[482, "optimizer-number-of-constraints"]], "Optimizer.number_of_parameters": [[483, "optimizer-number-of-parameters"]], "Optimizer.objective_func": [[484, "optimizer-objective-func"]], "Optimizer.optimization_bounds": [[485, "optimizer-optimization-bounds"]], "Optimizer.optimization_parameters": [[486, "optimizer-optimization-parameters"]], "Optimizer.remove_constraint": [[487, "optimizer-remove-constraint"]], "Optimizer.remove_parameter": [[488, "optimizer-remove-parameter"]], "Optimizer.sha256": [[489, "optimizer-sha256"]], "Optimizer.solve": [[490, "optimizer-solve"]], "Optimizer.to_data": [[491, "optimizer-to-data"]], "Optimizer.to_json": [[492, "optimizer-to-json"]], "Optimizer.to_jsonstring": [[493, "optimizer-to-jsonstring"]], "Optimizer.validate_data": [[494, "optimizer-validate-data"]], "Optimizer.validate_json": [[495, "optimizer-validate-json"]], "OriginNodeXParameter": [[496, "originnodexparameter"]], "OriginNodeXParameter.ToString": [[497, "originnodexparameter-tostring"]], "OriginNodeXParameter.attr_name": [[498, "originnodexparameter-attr-name"]], "OriginNodeXParameter.bound_low": [[499, "originnodexparameter-bound-low"]], "OriginNodeXParameter.bound_up": [[500, "originnodexparameter-bound-up"]], "OriginNodeXParameter.copy": [[501, "originnodexparameter-copy"]], "OriginNodeXParameter.from_data": [[502, "originnodexparameter-from-data"]], "OriginNodeXParameter.from_json": [[503, "originnodexparameter-from-json"]], "OriginNodeXParameter.from_jsonstring": [[504, "originnodexparameter-from-jsonstring"]], "OriginNodeXParameter.key": [[505, "originnodexparameter-key"]], "OriginNodeXParameter.sha256": [[506, "originnodexparameter-sha256"]], "OriginNodeXParameter.start_value": [[507, "originnodexparameter-start-value"]], "OriginNodeXParameter.to_data": [[508, "originnodexparameter-to-data"]], "OriginNodeXParameter.to_json": [[509, "originnodexparameter-to-json"]], "OriginNodeXParameter.to_jsonstring": [[510, "originnodexparameter-to-jsonstring"]], "OriginNodeXParameter.validate_data": [[511, "originnodexparameter-validate-data"]], "OriginNodeXParameter.validate_json": [[512, "originnodexparameter-validate-json"]], "OriginNodeYParameter": [[513, "originnodeyparameter"]], "OriginNodeYParameter.ToString": [[514, "originnodeyparameter-tostring"]], "OriginNodeYParameter.attr_name": [[515, "originnodeyparameter-attr-name"]], "OriginNodeYParameter.bound_low": [[516, "originnodeyparameter-bound-low"]], "OriginNodeYParameter.bound_up": [[517, "originnodeyparameter-bound-up"]], "OriginNodeYParameter.copy": [[518, "originnodeyparameter-copy"]], "OriginNodeYParameter.from_data": [[519, "originnodeyparameter-from-data"]], "OriginNodeYParameter.from_json": [[520, "originnodeyparameter-from-json"]], "OriginNodeYParameter.from_jsonstring": [[521, "originnodeyparameter-from-jsonstring"]], "OriginNodeYParameter.key": [[522, "originnodeyparameter-key"]], "OriginNodeYParameter.sha256": [[523, "originnodeyparameter-sha256"]], "OriginNodeYParameter.start_value": [[524, "originnodeyparameter-start-value"]], "OriginNodeYParameter.to_data": [[525, "originnodeyparameter-to-data"]], "OriginNodeYParameter.to_json": [[526, "originnodeyparameter-to-json"]], "OriginNodeYParameter.to_jsonstring": [[527, "originnodeyparameter-to-jsonstring"]], "OriginNodeYParameter.validate_data": [[528, "originnodeyparameter-validate-data"]], "OriginNodeYParameter.validate_json": [[529, "originnodeyparameter-validate-json"]], "OriginNodeZParameter": [[530, "originnodezparameter"]], "OriginNodeZParameter.ToString": [[531, "originnodezparameter-tostring"]], "OriginNodeZParameter.attr_name": [[532, "originnodezparameter-attr-name"]], "OriginNodeZParameter.bound_low": [[533, "originnodezparameter-bound-low"]], "OriginNodeZParameter.bound_up": [[534, "originnodezparameter-bound-up"]], "OriginNodeZParameter.copy": [[535, "originnodezparameter-copy"]], "OriginNodeZParameter.from_data": [[536, "originnodezparameter-from-data"]], "OriginNodeZParameter.from_json": [[537, "originnodezparameter-from-json"]], "OriginNodeZParameter.from_jsonstring": [[538, "originnodezparameter-from-jsonstring"]], "OriginNodeZParameter.key": [[539, "originnodezparameter-key"]], "OriginNodeZParameter.sha256": [[540, "originnodezparameter-sha256"]], "OriginNodeZParameter.start_value": [[541, "originnodezparameter-start-value"]], "OriginNodeZParameter.to_data": [[542, "originnodezparameter-to-data"]], "OriginNodeZParameter.to_json": [[543, "originnodezparameter-to-json"]], "OriginNodeZParameter.to_jsonstring": [[544, "originnodezparameter-to-jsonstring"]], "OriginNodeZParameter.validate_data": [[545, "originnodezparameter-validate-data"]], "OriginNodeZParameter.validate_json": [[546, "originnodezparameter-validate-json"]], "PlaneConstraint": [[547, "planeconstraint"]], "PlaneConstraint.ToString": [[548, "planeconstraint-tostring"]], "PlaneConstraint.copy": [[549, "planeconstraint-copy"]], "PlaneConstraint.from_data": [[550, "planeconstraint-from-data"]], "PlaneConstraint.from_json": [[551, "planeconstraint-from-json"]], "PlaneConstraint.from_jsonstring": [[552, "planeconstraint-from-jsonstring"]], "PlaneConstraint.key": [[553, "planeconstraint-key"]], "PlaneConstraint.penalty": [[554, "planeconstraint-penalty"]], "PlaneConstraint.reference": [[555, "planeconstraint-reference"]], "PlaneConstraint.sha256": [[556, "planeconstraint-sha256"]], "PlaneConstraint.target": [[557, "planeconstraint-target"]], "PlaneConstraint.to_data": [[558, "planeconstraint-to-data"]], "PlaneConstraint.to_json": [[559, "planeconstraint-to-json"]], "PlaneConstraint.to_jsonstring": [[560, "planeconstraint-to-jsonstring"]], "PlaneConstraint.validate_data": [[561, "planeconstraint-validate-data"]], "PlaneConstraint.validate_json": [[562, "planeconstraint-validate-json"]], "PointConstraint": [[563, "pointconstraint"]], "PointConstraint.ToString": [[564, "pointconstraint-tostring"]], "PointConstraint.copy": [[565, "pointconstraint-copy"]], "PointConstraint.from_data": [[566, "pointconstraint-from-data"]], "PointConstraint.from_json": [[567, "pointconstraint-from-json"]], "PointConstraint.from_jsonstring": [[568, "pointconstraint-from-jsonstring"]], "PointConstraint.key": [[569, "pointconstraint-key"]], "PointConstraint.penalty": [[570, "pointconstraint-penalty"]], "PointConstraint.reference": [[571, "pointconstraint-reference"]], "PointConstraint.sha256": [[572, "pointconstraint-sha256"]], "PointConstraint.target": [[573, "pointconstraint-target"]], "PointConstraint.to_data": [[574, "pointconstraint-to-data"]], "PointConstraint.to_json": [[575, "pointconstraint-to-json"]], "PointConstraint.to_jsonstring": [[576, "pointconstraint-to-jsonstring"]], "PointConstraint.validate_data": [[577, "pointconstraint-validate-data"]], "PointConstraint.validate_json": [[578, "pointconstraint-validate-json"]], "ReactionForceConstraint": [[579, "reactionforceconstraint"]], "ReactionForceConstraint.ToString": [[580, "reactionforceconstraint-tostring"]], "ReactionForceConstraint.copy": [[581, "reactionforceconstraint-copy"]], "ReactionForceConstraint.from_data": [[582, "reactionforceconstraint-from-data"]], "ReactionForceConstraint.from_json": [[583, "reactionforceconstraint-from-json"]], "ReactionForceConstraint.from_jsonstring": [[584, "reactionforceconstraint-from-jsonstring"]], "ReactionForceConstraint.key": [[585, "reactionforceconstraint-key"]], "ReactionForceConstraint.penalty": [[586, "reactionforceconstraint-penalty"]], "ReactionForceConstraint.reference": [[587, "reactionforceconstraint-reference"]], "ReactionForceConstraint.sha256": [[588, "reactionforceconstraint-sha256"]], "ReactionForceConstraint.target": [[589, "reactionforceconstraint-target"]], "ReactionForceConstraint.to_data": [[590, "reactionforceconstraint-to-data"]], "ReactionForceConstraint.to_json": [[591, "reactionforceconstraint-to-json"]], "ReactionForceConstraint.to_jsonstring": [[592, "reactionforceconstraint-to-jsonstring"]], "ReactionForceConstraint.validate_data": [[593, "reactionforceconstraint-validate-data"]], "ReactionForceConstraint.validate_json": [[594, "reactionforceconstraint-validate-json"]], "TrailEdgeForceConstraint": [[595, "trailedgeforceconstraint"]], "TrailEdgeForceConstraint.ToString": [[596, "trailedgeforceconstraint-tostring"]], "TrailEdgeForceConstraint.copy": [[597, "trailedgeforceconstraint-copy"]], "TrailEdgeForceConstraint.from_data": [[598, "trailedgeforceconstraint-from-data"]], "TrailEdgeForceConstraint.from_json": [[599, "trailedgeforceconstraint-from-json"]], "TrailEdgeForceConstraint.from_jsonstring": [[600, "trailedgeforceconstraint-from-jsonstring"]], "TrailEdgeForceConstraint.key": [[601, "trailedgeforceconstraint-key"]], "TrailEdgeForceConstraint.penalty": [[602, "trailedgeforceconstraint-penalty"]], "TrailEdgeForceConstraint.reference": [[603, "trailedgeforceconstraint-reference"]], "TrailEdgeForceConstraint.sha256": [[604, "trailedgeforceconstraint-sha256"]], "TrailEdgeForceConstraint.target": [[605, "trailedgeforceconstraint-target"]], "TrailEdgeForceConstraint.to_data": [[606, "trailedgeforceconstraint-to-data"]], "TrailEdgeForceConstraint.to_json": [[607, "trailedgeforceconstraint-to-json"]], "TrailEdgeForceConstraint.to_jsonstring": [[608, "trailedgeforceconstraint-to-jsonstring"]], "TrailEdgeForceConstraint.validate_data": [[609, "trailedgeforceconstraint-validate-data"]], "TrailEdgeForceConstraint.validate_json": [[610, "trailedgeforceconstraint-validate-json"]], "TrailEdgeParameter": [[611, "trailedgeparameter"]], "TrailEdgeParameter.ToString": [[612, "trailedgeparameter-tostring"]], "TrailEdgeParameter.attr_name": [[613, "trailedgeparameter-attr-name"]], "TrailEdgeParameter.bound_low": [[614, "trailedgeparameter-bound-low"]], "TrailEdgeParameter.bound_up": [[615, "trailedgeparameter-bound-up"]], "TrailEdgeParameter.copy": [[616, "trailedgeparameter-copy"]], "TrailEdgeParameter.from_data": [[617, "trailedgeparameter-from-data"]], "TrailEdgeParameter.from_json": [[618, "trailedgeparameter-from-json"]], "TrailEdgeParameter.from_jsonstring": [[619, "trailedgeparameter-from-jsonstring"]], "TrailEdgeParameter.key": [[620, "trailedgeparameter-key"]], "TrailEdgeParameter.sha256": [[621, "trailedgeparameter-sha256"]], "TrailEdgeParameter.start_value": [[622, "trailedgeparameter-start-value"]], "TrailEdgeParameter.to_data": [[623, "trailedgeparameter-to-data"]], "TrailEdgeParameter.to_json": [[624, "trailedgeparameter-to-json"]], "TrailEdgeParameter.to_jsonstring": [[625, "trailedgeparameter-to-jsonstring"]], "TrailEdgeParameter.validate_data": [[626, "trailedgeparameter-validate-data"]], "TrailEdgeParameter.validate_json": [[627, "trailedgeparameter-validate-json"]], "solve_proxy": [[628, "solve-proxy"]], "FormArtist": [[629, "formartist"]], "FormArtist.build": [[630, "formartist-build"]], "FormArtist.build_as": [[631, "formartist-build-as"]], "FormArtist.clear": [[632, "formartist-clear"]], "FormArtist.clear_edges": [[633, "formartist-clear-edges"]], "FormArtist.clear_nodes": [[634, "formartist-clear-nodes"]], "FormArtist.draw": [[635, "formartist-draw"]], "FormArtist.draw_collection": [[636, "formartist-draw-collection"]], "FormArtist.draw_edgelabels": [[637, "formartist-draw-edgelabels"]], "FormArtist.draw_edges": [[638, "formartist-draw-edges"]], "FormArtist.draw_loads": [[639, "formartist-draw-loads"]], "FormArtist.draw_nodelabels": [[640, "formartist-draw-nodelabels"]], "FormArtist.draw_nodes": [[641, "formartist-draw-nodes"]], "FormArtist.draw_reactions": [[642, "formartist-draw-reactions"]], "FormArtist.redraw": [[643, "formartist-redraw"]], "FormArtist.register": [[644, "formartist-register"]], "FormArtist.update_data": [[645, "formartist-update-data"]], "FormArtist.viewbox": [[646, "formartist-viewbox"]], "Plotter": [[647, "plotter"]], "Plotter.add": [[648, "plotter-add"]], "Plotter.add_from_list": [[649, "plotter-add-from-list"]], "Plotter.draw": [[650, "plotter-draw"]], "Plotter.find": [[651, "plotter-find"]], "Plotter.on": [[652, "plotter-on"]], "Plotter.pause": [[653, "plotter-pause"]], "Plotter.redraw": [[654, "plotter-redraw"]], "Plotter.register_listener": [[655, "plotter-register-listener"]], "Plotter.save": [[656, "plotter-save"]], "Plotter.show": [[657, "plotter-show"]], "Plotter.zoom_extents": [[658, "plotter-zoom-extents"]], "TopologyArtist": [[659, "topologyartist"]], "TopologyArtist.build": [[660, "topologyartist-build"]], "TopologyArtist.build_as": [[661, "topologyartist-build-as"]], "TopologyArtist.clear": [[662, "topologyartist-clear"]], "TopologyArtist.clear_edges": [[663, "topologyartist-clear-edges"]], "TopologyArtist.clear_nodes": [[664, "topologyartist-clear-nodes"]], "TopologyArtist.draw": [[665, "topologyartist-draw"]], "TopologyArtist.draw_collection": [[666, "topologyartist-draw-collection"]], "TopologyArtist.draw_edgelabels": [[667, "topologyartist-draw-edgelabels"]], "TopologyArtist.draw_edges": [[668, "topologyartist-draw-edges"]], "TopologyArtist.draw_loads": [[669, "topologyartist-draw-loads"]], "TopologyArtist.draw_nodelabels": [[670, "topologyartist-draw-nodelabels"]], "TopologyArtist.draw_nodes": [[671, "topologyartist-draw-nodes"]], "TopologyArtist.redraw": [[672, "topologyartist-redraw"]], "TopologyArtist.register": [[673, "topologyartist-register"]], "TopologyArtist.update_data": [[674, "topologyartist-update-data"]], "TopologyArtist.viewbox": [[675, "topologyartist-viewbox"]], "NodeSupport": [[676, "nodesupport"]], "NodeSupport.ToString": [[677, "nodesupport-tostring"]], "NodeSupport.copy": [[678, "nodesupport-copy"]], "NodeSupport.from_data": [[679, "nodesupport-from-data"]], "NodeSupport.from_json": [[680, "nodesupport-from-json"]], "NodeSupport.from_jsonstring": [[681, "nodesupport-from-jsonstring"]], "NodeSupport.from_point": [[682, "nodesupport-from-point"]], "NodeSupport.sha256": [[683, "nodesupport-sha256"]], "NodeSupport.to_data": [[684, "nodesupport-to-data"]], "NodeSupport.to_json": [[685, "nodesupport-to-json"]], "NodeSupport.to_jsonstring": [[686, "nodesupport-to-jsonstring"]], "NodeSupport.validate_data": [[687, "nodesupport-validate-data"]], "NodeSupport.validate_json": [[688, "nodesupport-validate-json"]], "Changelog": [[689, "changelog"]], "0.8.5": [[689, "id1"]], "0.8.4": [[689, "id2"]], "0.8.3": [[689, "id3"]], "0.8.2": [[689, "id4"]], "0.8.1": [[689, "id5"]], "0.8.0": [[689, "id6"]], "0.7.0": [[689, "id7"]], "0.6.1": [[689, "id8"]], "0.6.0": [[689, "id9"]], "0.5.0": [[689, "id10"]], "0.4.1": [[689, "id11"]], "0.4.0": [[689, "id12"]], "0.2.2": [[689, "id13"]], "0.2.1": [[689, "id14"]], "0.1.15": [[689, "id15"]], "0.1.14": [[689, "id16"]], "0.1.13": [[689, "id17"]], "0.1.12": [[689, "id18"]], "0.1.11": [[689, "id19"]], "0.1.9": [[689, "id20"]], "0.1.6": [[689, "id21"]], "0.1.4": [[689, "id22"]], "0.1.3": [[689, "id23"]], "Citing": [[690, "citing"]], "Authors": [[690, "authors"]], "Examples": [[691, "examples"]], "COMPAS CEM": [[692, "compas-cem"]], "Main features": [[692, "main-features"]], "Credits": [[692, "credits"]], "Table of Contents": [[692, "table-of-contents"]], "Installation": [[693, "installation"]], "Install COMPAS CEM": [[693, "install-compas-cem"]], "1. Create a virtual environment": [[693, "create-a-virtual-environment"]], "2. Activate the virtual environment": [[693, "activate-the-virtual-environment"]], "3. Install COMPAS via conda": [[693, "install-compas-via-conda"]], "4. Install COMPAS CEM via pip": [[693, "install-compas-cem-via-pip"]], "Install the Grasshopper Plugin": [[693, "install-the-grasshopper-plugin"]], "1. Remove any leftovers": [[693, "remove-any-leftovers"]], "2. Link COMPAS CEM": [[693, "link-compas-cem"]], "3. Check your Grasshopper installation": [[693, "check-your-grasshopper-installation"]], "Update COMPAS CEM": [[693, "update-compas-cem"]], "License": [[694, "license"]]}, "indexentries": {"compas_cem": [[13, "module-compas_cem"]], "module": [[13, "module-compas_cem"], [14, "module-compas_cem.diagrams"], [15, "module-compas_cem.elements"], [16, "module-compas_cem.equilibrium"], [17, "module-compas_cem.loads"], [18, "module-compas_cem.optimization"], [19, "module-compas_cem.plotters"], [20, "module-compas_cem.supports"], [21, "module-compas_cem.viewers"]], "compas_cem.diagrams": [[14, "module-compas_cem.diagrams"]], "compas_cem.elements": [[15, "module-compas_cem.elements"]], "compas_cem.equilibrium": [[16, "module-compas_cem.equilibrium"]], "compas_cem.loads": [[17, "module-compas_cem.loads"]], "compas_cem.optimization": [[18, "module-compas_cem.optimization"]], "compas_cem.plotters": [[19, "module-compas_cem.plotters"]], "compas_cem.supports": [[20, "module-compas_cem.supports"]], "compas_cem.viewers": [[21, "module-compas_cem.viewers"]], "formdiagram (class in compas_cem.diagrams)": [[22, "compas_cem.diagrams.FormDiagram"]], "tostring() (compas_cem.diagrams.formdiagram method)": [[23, "compas_cem.diagrams.FormDiagram.ToString"]], "add_edge() (compas_cem.diagrams.formdiagram method)": [[24, "compas_cem.diagrams.FormDiagram.add_edge"]], "add_node() (compas_cem.diagrams.formdiagram method)": [[25, "compas_cem.diagrams.FormDiagram.add_node"]], "adjacency_matrix() (compas_cem.diagrams.formdiagram method)": [[26, "compas_cem.diagrams.FormDiagram.adjacency_matrix"]], "clear() (compas_cem.diagrams.formdiagram method)": [[27, "compas_cem.diagrams.FormDiagram.clear"]], "complement() (compas_cem.diagrams.formdiagram method)": [[28, "compas_cem.diagrams.FormDiagram.complement"]], "connected_edges() (compas_cem.diagrams.formdiagram method)": [[29, "compas_cem.diagrams.FormDiagram.connected_edges"]], "connectivity_matrix() (compas_cem.diagrams.formdiagram method)": [[30, "compas_cem.diagrams.FormDiagram.connectivity_matrix"]], "copy() (compas_cem.diagrams.formdiagram method)": [[31, "compas_cem.diagrams.FormDiagram.copy"]], "count_crossings() (compas_cem.diagrams.formdiagram method)": [[32, "compas_cem.diagrams.FormDiagram.count_crossings"]], "degree() (compas_cem.diagrams.formdiagram method)": [[33, "compas_cem.diagrams.FormDiagram.degree"]], "degree_in() (compas_cem.diagrams.formdiagram method)": [[34, "compas_cem.diagrams.FormDiagram.degree_in"]], "degree_matrix() (compas_cem.diagrams.formdiagram method)": [[35, "compas_cem.diagrams.FormDiagram.degree_matrix"]], "degree_out() (compas_cem.diagrams.formdiagram method)": [[36, "compas_cem.diagrams.FormDiagram.degree_out"]], "delete_edge() (compas_cem.diagrams.formdiagram method)": [[37, "compas_cem.diagrams.FormDiagram.delete_edge"]], "delete_node() (compas_cem.diagrams.formdiagram method)": [[38, "compas_cem.diagrams.FormDiagram.delete_node"]], "edge_attribute() (compas_cem.diagrams.formdiagram method)": [[39, "compas_cem.diagrams.FormDiagram.edge_attribute"]], "edge_attributes() (compas_cem.diagrams.formdiagram method)": [[40, "compas_cem.diagrams.FormDiagram.edge_attributes"]], "edge_coordinates() (compas_cem.diagrams.formdiagram method)": [[41, "compas_cem.diagrams.FormDiagram.edge_coordinates"]], "edge_direction() (compas_cem.diagrams.formdiagram method)": [[42, "compas_cem.diagrams.FormDiagram.edge_direction"]], "edge_force() (compas_cem.diagrams.formdiagram method)": [[43, "compas_cem.diagrams.FormDiagram.edge_force"]], "edge_length() (compas_cem.diagrams.formdiagram method)": [[44, "compas_cem.diagrams.FormDiagram.edge_length"]], "edge_length_2() (compas_cem.diagrams.formdiagram method)": [[45, "compas_cem.diagrams.FormDiagram.edge_length_2"]], "edge_midpoint() (compas_cem.diagrams.formdiagram method)": [[46, "compas_cem.diagrams.FormDiagram.edge_midpoint"]], "edge_plane() (compas_cem.diagrams.formdiagram method)": [[47, "compas_cem.diagrams.FormDiagram.edge_plane"]], "edge_point() (compas_cem.diagrams.formdiagram method)": [[48, "compas_cem.diagrams.FormDiagram.edge_point"]], "edge_sample() (compas_cem.diagrams.formdiagram method)": [[49, "compas_cem.diagrams.FormDiagram.edge_sample"]], "edge_vector() (compas_cem.diagrams.formdiagram method)": [[50, "compas_cem.diagrams.FormDiagram.edge_vector"]], "edges() (compas_cem.diagrams.formdiagram method)": [[51, "compas_cem.diagrams.FormDiagram.edges"]], "edges_attribute() (compas_cem.diagrams.formdiagram method)": [[52, "compas_cem.diagrams.FormDiagram.edges_attribute"]], "edges_attributes() (compas_cem.diagrams.formdiagram method)": [[53, "compas_cem.diagrams.FormDiagram.edges_attributes"]], "edges_where() (compas_cem.diagrams.formdiagram method)": [[54, "compas_cem.diagrams.FormDiagram.edges_where"]], "edges_where_predicate() (compas_cem.diagrams.formdiagram method)": [[55, "compas_cem.diagrams.FormDiagram.edges_where_predicate"]], "embed_in_plane() (compas_cem.diagrams.formdiagram method)": [[56, "compas_cem.diagrams.FormDiagram.embed_in_plane"]], "find_crossings() (compas_cem.diagrams.formdiagram method)": [[57, "compas_cem.diagrams.FormDiagram.find_crossings"]], "find_cycles() (compas_cem.diagrams.formdiagram method)": [[58, "compas_cem.diagrams.FormDiagram.find_cycles"]], "from_data() (compas_cem.diagrams.formdiagram class method)": [[59, "compas_cem.diagrams.FormDiagram.from_data"]], "from_edges() (compas_cem.diagrams.formdiagram class method)": [[60, "compas_cem.diagrams.FormDiagram.from_edges"]], "from_equilibrium_state() (compas_cem.diagrams.formdiagram class method)": [[61, "compas_cem.diagrams.FormDiagram.from_equilibrium_state"]], "from_json() (compas_cem.diagrams.formdiagram class method)": [[62, "compas_cem.diagrams.FormDiagram.from_json"]], "from_jsonstring() (compas_cem.diagrams.formdiagram class method)": [[63, "compas_cem.diagrams.FormDiagram.from_jsonstring"]], "from_lines() (compas_cem.diagrams.formdiagram class method)": [[64, "compas_cem.diagrams.FormDiagram.from_lines"]], "from_networkx() (compas_cem.diagrams.formdiagram class method)": [[65, "compas_cem.diagrams.FormDiagram.from_networkx"]], "from_nodes_and_edges() (compas_cem.diagrams.formdiagram class method)": [[66, "compas_cem.diagrams.FormDiagram.from_nodes_and_edges"]], "from_obj() (compas_cem.diagrams.formdiagram class method)": [[67, "compas_cem.diagrams.FormDiagram.from_obj"]], "from_pointcloud() (compas_cem.diagrams.formdiagram class method)": [[68, "compas_cem.diagrams.FormDiagram.from_pointcloud"]], "from_topology_diagram() (compas_cem.diagrams.formdiagram class method)": [[69, "compas_cem.diagrams.FormDiagram.from_topology_diagram"]], "get_any_edge() (compas_cem.diagrams.formdiagram method)": [[70, "compas_cem.diagrams.FormDiagram.get_any_edge"]], "get_any_edges() (compas_cem.diagrams.formdiagram method)": [[71, "compas_cem.diagrams.FormDiagram.get_any_edges"]], "get_any_node() (compas_cem.diagrams.formdiagram method)": [[72, "compas_cem.diagrams.FormDiagram.get_any_node"]], "get_any_nodes() (compas_cem.diagrams.formdiagram method)": [[73, "compas_cem.diagrams.FormDiagram.get_any_nodes"]], "gkey() (compas_cem.diagrams.formdiagram method)": [[74, "compas_cem.diagrams.FormDiagram.gkey"]], "gkey_key() (compas_cem.diagrams.formdiagram method)": [[75, "compas_cem.diagrams.FormDiagram.gkey_key"]], "has_edge() (compas_cem.diagrams.formdiagram method)": [[76, "compas_cem.diagrams.FormDiagram.has_edge"]], "has_node() (compas_cem.diagrams.formdiagram method)": [[77, "compas_cem.diagrams.FormDiagram.has_node"]], "index_key() (compas_cem.diagrams.formdiagram method)": [[78, "compas_cem.diagrams.FormDiagram.index_key"]], "index_uv() (compas_cem.diagrams.formdiagram method)": [[79, "compas_cem.diagrams.FormDiagram.index_uv"]], "is_connected() (compas_cem.diagrams.formdiagram method)": [[80, "compas_cem.diagrams.FormDiagram.is_connected"]], "is_crossed() (compas_cem.diagrams.formdiagram method)": [[81, "compas_cem.diagrams.FormDiagram.is_crossed"]], "is_edge_supported() (compas_cem.diagrams.formdiagram method)": [[82, "compas_cem.diagrams.FormDiagram.is_edge_supported"]], "is_leaf() (compas_cem.diagrams.formdiagram method)": [[83, "compas_cem.diagrams.FormDiagram.is_leaf"]], "is_node_connected() (compas_cem.diagrams.formdiagram method)": [[84, "compas_cem.diagrams.FormDiagram.is_node_connected"]], "is_node_loaded() (compas_cem.diagrams.formdiagram method)": [[85, "compas_cem.diagrams.FormDiagram.is_node_loaded"]], "is_node_support() (compas_cem.diagrams.formdiagram method)": [[86, "compas_cem.diagrams.FormDiagram.is_node_support"]], "is_planar() (compas_cem.diagrams.formdiagram method)": [[87, "compas_cem.diagrams.FormDiagram.is_planar"]], "is_planar_embedding() (compas_cem.diagrams.formdiagram method)": [[88, "compas_cem.diagrams.FormDiagram.is_planar_embedding"]], "is_xy() (compas_cem.diagrams.formdiagram method)": [[89, "compas_cem.diagrams.FormDiagram.is_xy"]], "key_gkey() (compas_cem.diagrams.formdiagram method)": [[90, "compas_cem.diagrams.FormDiagram.key_gkey"]], "key_index() (compas_cem.diagrams.formdiagram method)": [[91, "compas_cem.diagrams.FormDiagram.key_index"]], "laplacian_matrix() (compas_cem.diagrams.formdiagram method)": [[92, "compas_cem.diagrams.FormDiagram.laplacian_matrix"]], "leaves() (compas_cem.diagrams.formdiagram method)": [[93, "compas_cem.diagrams.FormDiagram.leaves"]], "loaded_nodes() (compas_cem.diagrams.formdiagram method)": [[94, "compas_cem.diagrams.FormDiagram.loaded_nodes"]], "neighborhood() (compas_cem.diagrams.formdiagram method)": [[95, "compas_cem.diagrams.FormDiagram.neighborhood"]], "neighbors() (compas_cem.diagrams.formdiagram method)": [[96, "compas_cem.diagrams.FormDiagram.neighbors"]], "neighbors_in() (compas_cem.diagrams.formdiagram method)": [[97, "compas_cem.diagrams.FormDiagram.neighbors_in"]], "neighbors_out() (compas_cem.diagrams.formdiagram method)": [[98, "compas_cem.diagrams.FormDiagram.neighbors_out"]], "network_adjacency_matrix() (compas_cem.diagrams.formdiagram method)": [[99, "compas_cem.diagrams.FormDiagram.network_adjacency_matrix"]], "network_connectivity_matrix() (compas_cem.diagrams.formdiagram method)": [[100, "compas_cem.diagrams.FormDiagram.network_connectivity_matrix"]], "network_degree_matrix() (compas_cem.diagrams.formdiagram method)": [[101, "compas_cem.diagrams.FormDiagram.network_degree_matrix"]], "network_embed_in_plane() (compas_cem.diagrams.formdiagram method)": [[102, "compas_cem.diagrams.FormDiagram.network_embed_in_plane"]], "network_is_planar() (compas_cem.diagrams.formdiagram method)": [[103, "compas_cem.diagrams.FormDiagram.network_is_planar"]], "network_is_planar_embedding() (compas_cem.diagrams.formdiagram method)": [[104, "compas_cem.diagrams.FormDiagram.network_is_planar_embedding"]], "network_laplacian_matrix() (compas_cem.diagrams.formdiagram method)": [[105, "compas_cem.diagrams.FormDiagram.network_laplacian_matrix"]], "node_attribute() (compas_cem.diagrams.formdiagram method)": [[106, "compas_cem.diagrams.FormDiagram.node_attribute"]], "node_attributes() (compas_cem.diagrams.formdiagram method)": [[107, "compas_cem.diagrams.FormDiagram.node_attributes"]], "node_coordinates() (compas_cem.diagrams.formdiagram method)": [[108, "compas_cem.diagrams.FormDiagram.node_coordinates"]], "node_exists() (compas_cem.diagrams.formdiagram method)": [[109, "compas_cem.diagrams.FormDiagram.node_exists"]], "node_gkey() (compas_cem.diagrams.formdiagram method)": [[110, "compas_cem.diagrams.FormDiagram.node_gkey"]], "node_key() (compas_cem.diagrams.formdiagram method)": [[111, "compas_cem.diagrams.FormDiagram.node_key"]], "node_laplacian() (compas_cem.diagrams.formdiagram method)": [[112, "compas_cem.diagrams.FormDiagram.node_laplacian"]], "node_load() (compas_cem.diagrams.formdiagram method)": [[113, "compas_cem.diagrams.FormDiagram.node_load"]], "node_neighborhood_centroid() (compas_cem.diagrams.formdiagram method)": [[114, "compas_cem.diagrams.FormDiagram.node_neighborhood_centroid"]], "node_sample() (compas_cem.diagrams.formdiagram method)": [[115, "compas_cem.diagrams.FormDiagram.node_sample"]], "node_xyz() (compas_cem.diagrams.formdiagram method)": [[116, "compas_cem.diagrams.FormDiagram.node_xyz"]], "nodes() (compas_cem.diagrams.formdiagram method)": [[117, "compas_cem.diagrams.FormDiagram.nodes"]], "nodes_attribute() (compas_cem.diagrams.formdiagram method)": [[118, "compas_cem.diagrams.FormDiagram.nodes_attribute"]], "nodes_attributes() (compas_cem.diagrams.formdiagram method)": [[119, "compas_cem.diagrams.FormDiagram.nodes_attributes"]], "nodes_where() (compas_cem.diagrams.formdiagram method)": [[120, "compas_cem.diagrams.FormDiagram.nodes_where"]], "nodes_where_predicate() (compas_cem.diagrams.formdiagram method)": [[121, "compas_cem.diagrams.FormDiagram.nodes_where_predicate"]], "number_of_edges() (compas_cem.diagrams.formdiagram method)": [[122, "compas_cem.diagrams.FormDiagram.number_of_edges"]], "number_of_loaded_nodes() (compas_cem.diagrams.formdiagram method)": [[123, "compas_cem.diagrams.FormDiagram.number_of_loaded_nodes"]], "number_of_nodes() (compas_cem.diagrams.formdiagram method)": [[124, "compas_cem.diagrams.FormDiagram.number_of_nodes"]], "number_of_support_nodes() (compas_cem.diagrams.formdiagram method)": [[125, "compas_cem.diagrams.FormDiagram.number_of_support_nodes"]], "reaction_force() (compas_cem.diagrams.formdiagram method)": [[126, "compas_cem.diagrams.FormDiagram.reaction_force"]], "sha256() (compas_cem.diagrams.formdiagram method)": [[127, "compas_cem.diagrams.FormDiagram.sha256"]], "shortest_path() (compas_cem.diagrams.formdiagram method)": [[128, "compas_cem.diagrams.FormDiagram.shortest_path"]], "smooth() (compas_cem.diagrams.formdiagram method)": [[129, "compas_cem.diagrams.FormDiagram.smooth"]], "split_edge() (compas_cem.diagrams.formdiagram method)": [[130, "compas_cem.diagrams.FormDiagram.split_edge"]], "summary() (compas_cem.diagrams.formdiagram method)": [[131, "compas_cem.diagrams.FormDiagram.summary"]], "support_nodes() (compas_cem.diagrams.formdiagram method)": [[132, "compas_cem.diagrams.FormDiagram.support_nodes"]], "to_data() (compas_cem.diagrams.formdiagram method)": [[133, "compas_cem.diagrams.FormDiagram.to_data"]], "to_json() (compas_cem.diagrams.formdiagram method)": [[134, "compas_cem.diagrams.FormDiagram.to_json"]], "to_jsonstring() (compas_cem.diagrams.formdiagram method)": [[135, "compas_cem.diagrams.FormDiagram.to_jsonstring"]], "to_lines() (compas_cem.diagrams.formdiagram method)": [[136, "compas_cem.diagrams.FormDiagram.to_lines"]], "to_networkx() (compas_cem.diagrams.formdiagram method)": [[137, "compas_cem.diagrams.FormDiagram.to_networkx"]], "to_nodes_and_edges() (compas_cem.diagrams.formdiagram method)": [[138, "compas_cem.diagrams.FormDiagram.to_nodes_and_edges"]], "to_obj() (compas_cem.diagrams.formdiagram method)": [[139, "compas_cem.diagrams.FormDiagram.to_obj"]], "to_points() (compas_cem.diagrams.formdiagram method)": [[140, "compas_cem.diagrams.FormDiagram.to_points"]], "transform() (compas_cem.diagrams.formdiagram method)": [[141, "compas_cem.diagrams.FormDiagram.transform"]], "transformed() (compas_cem.diagrams.formdiagram method)": [[142, "compas_cem.diagrams.FormDiagram.transformed"]], "unset_edge_attribute() (compas_cem.diagrams.formdiagram method)": [[143, "compas_cem.diagrams.FormDiagram.unset_edge_attribute"]], "unset_node_attribute() (compas_cem.diagrams.formdiagram method)": [[144, "compas_cem.diagrams.FormDiagram.unset_node_attribute"]], "update_dea() (compas_cem.diagrams.formdiagram method)": [[145, "compas_cem.diagrams.FormDiagram.update_dea"]], "update_default_edge_attributes() (compas_cem.diagrams.formdiagram method)": [[146, "compas_cem.diagrams.FormDiagram.update_default_edge_attributes"]], "update_default_node_attributes() (compas_cem.diagrams.formdiagram method)": [[147, "compas_cem.diagrams.FormDiagram.update_default_node_attributes"]], "update_dna() (compas_cem.diagrams.formdiagram method)": [[148, "compas_cem.diagrams.FormDiagram.update_dna"]], "update_node_xyz() (compas_cem.diagrams.formdiagram method)": [[149, "compas_cem.diagrams.FormDiagram.update_node_xyz"]], "uv_index() (compas_cem.diagrams.formdiagram method)": [[150, "compas_cem.diagrams.FormDiagram.uv_index"]], "validate_data() (compas_cem.diagrams.formdiagram method)": [[151, "compas_cem.diagrams.FormDiagram.validate_data"]], "validate_json() (compas_cem.diagrams.formdiagram method)": [[152, "compas_cem.diagrams.FormDiagram.validate_json"]], "topologydiagram (class in compas_cem.diagrams)": [[153, "compas_cem.diagrams.TopologyDiagram"]], "tostring() (compas_cem.diagrams.topologydiagram method)": [[154, "compas_cem.diagrams.TopologyDiagram.ToString"]], "add_edge() (compas_cem.diagrams.topologydiagram method)": [[155, "compas_cem.diagrams.TopologyDiagram.add_edge"]], "add_load() (compas_cem.diagrams.topologydiagram method)": [[156, "compas_cem.diagrams.TopologyDiagram.add_load"]], "add_node() (compas_cem.diagrams.topologydiagram method)": [[157, "compas_cem.diagrams.TopologyDiagram.add_node"]], "add_support() (compas_cem.diagrams.topologydiagram method)": [[158, "compas_cem.diagrams.TopologyDiagram.add_support"]], "adjacency_matrix() (compas_cem.diagrams.topologydiagram method)": [[159, "compas_cem.diagrams.TopologyDiagram.adjacency_matrix"]], "auxiliary_trail_edges() (compas_cem.diagrams.topologydiagram method)": [[160, "compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges"]], "auxiliary_trails() (compas_cem.diagrams.topologydiagram method)": [[161, "compas_cem.diagrams.TopologyDiagram.auxiliary_trails"]], "build_trails() (compas_cem.diagrams.topologydiagram method)": [[162, "compas_cem.diagrams.TopologyDiagram.build_trails"]], "clear() (compas_cem.diagrams.topologydiagram method)": [[163, "compas_cem.diagrams.TopologyDiagram.clear"]], "complement() (compas_cem.diagrams.topologydiagram method)": [[164, "compas_cem.diagrams.TopologyDiagram.complement"]], "connected_deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[165, "compas_cem.diagrams.TopologyDiagram.connected_deviation_edges"]], "connected_edges() (compas_cem.diagrams.topologydiagram method)": [[166, "compas_cem.diagrams.TopologyDiagram.connected_edges"]], "connected_trail_edges() (compas_cem.diagrams.topologydiagram method)": [[167, "compas_cem.diagrams.TopologyDiagram.connected_trail_edges"]], "connectivity_matrix() (compas_cem.diagrams.topologydiagram method)": [[168, "compas_cem.diagrams.TopologyDiagram.connectivity_matrix"]], "copy() (compas_cem.diagrams.topologydiagram method)": [[169, "compas_cem.diagrams.TopologyDiagram.copy"]], "count_crossings() (compas_cem.diagrams.topologydiagram method)": [[170, "compas_cem.diagrams.TopologyDiagram.count_crossings"]], "degree() (compas_cem.diagrams.topologydiagram method)": [[171, "compas_cem.diagrams.TopologyDiagram.degree"]], "degree_in() (compas_cem.diagrams.topologydiagram method)": [[172, "compas_cem.diagrams.TopologyDiagram.degree_in"]], "degree_matrix() (compas_cem.diagrams.topologydiagram method)": [[173, "compas_cem.diagrams.TopologyDiagram.degree_matrix"]], "degree_out() (compas_cem.diagrams.topologydiagram method)": [[174, "compas_cem.diagrams.TopologyDiagram.degree_out"]], "delete_edge() (compas_cem.diagrams.topologydiagram method)": [[175, "compas_cem.diagrams.TopologyDiagram.delete_edge"]], "delete_node() (compas_cem.diagrams.topologydiagram method)": [[176, "compas_cem.diagrams.TopologyDiagram.delete_node"]], "deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[177, "compas_cem.diagrams.TopologyDiagram.deviation_edges"]], "direct_deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[178, "compas_cem.diagrams.TopologyDiagram.direct_deviation_edges"]], "edge_attribute() (compas_cem.diagrams.topologydiagram method)": [[179, "compas_cem.diagrams.TopologyDiagram.edge_attribute"]], "edge_attributes() (compas_cem.diagrams.topologydiagram method)": [[180, "compas_cem.diagrams.TopologyDiagram.edge_attributes"]], "edge_coordinates() (compas_cem.diagrams.topologydiagram method)": [[181, "compas_cem.diagrams.TopologyDiagram.edge_coordinates"]], "edge_direction() (compas_cem.diagrams.topologydiagram method)": [[182, "compas_cem.diagrams.TopologyDiagram.edge_direction"]], "edge_force() (compas_cem.diagrams.topologydiagram method)": [[183, "compas_cem.diagrams.TopologyDiagram.edge_force"]], "edge_length() (compas_cem.diagrams.topologydiagram method)": [[184, "compas_cem.diagrams.TopologyDiagram.edge_length"]], "edge_length_2() (compas_cem.diagrams.topologydiagram method)": [[185, "compas_cem.diagrams.TopologyDiagram.edge_length_2"]], "edge_midpoint() (compas_cem.diagrams.topologydiagram method)": [[186, "compas_cem.diagrams.TopologyDiagram.edge_midpoint"]], "edge_plane() (compas_cem.diagrams.topologydiagram method)": [[187, "compas_cem.diagrams.TopologyDiagram.edge_plane"]], "edge_point() (compas_cem.diagrams.topologydiagram method)": [[188, "compas_cem.diagrams.TopologyDiagram.edge_point"]], "edge_sample() (compas_cem.diagrams.topologydiagram method)": [[189, "compas_cem.diagrams.TopologyDiagram.edge_sample"]], "edge_sequence() (compas_cem.diagrams.topologydiagram method)": [[190, "compas_cem.diagrams.TopologyDiagram.edge_sequence"]], "edge_vector() (compas_cem.diagrams.topologydiagram method)": [[191, "compas_cem.diagrams.TopologyDiagram.edge_vector"]], "edges() (compas_cem.diagrams.topologydiagram method)": [[192, "compas_cem.diagrams.TopologyDiagram.edges"]], "edges_attribute() (compas_cem.diagrams.topologydiagram method)": [[193, "compas_cem.diagrams.TopologyDiagram.edges_attribute"]], "edges_attributes() (compas_cem.diagrams.topologydiagram method)": [[194, "compas_cem.diagrams.TopologyDiagram.edges_attributes"]], "edges_where() (compas_cem.diagrams.topologydiagram method)": [[195, "compas_cem.diagrams.TopologyDiagram.edges_where"]], "edges_where_predicate() (compas_cem.diagrams.topologydiagram method)": [[196, "compas_cem.diagrams.TopologyDiagram.edges_where_predicate"]], "embed_in_plane() (compas_cem.diagrams.topologydiagram method)": [[197, "compas_cem.diagrams.TopologyDiagram.embed_in_plane"]], "find_crossings() (compas_cem.diagrams.topologydiagram method)": [[198, "compas_cem.diagrams.TopologyDiagram.find_crossings"]], "find_cycles() (compas_cem.diagrams.topologydiagram method)": [[199, "compas_cem.diagrams.TopologyDiagram.find_cycles"]], "from_data() (compas_cem.diagrams.topologydiagram class method)": [[200, "compas_cem.diagrams.TopologyDiagram.from_data"]], "from_dualquadmesh() (compas_cem.diagrams.topologydiagram class method)": [[201, "compas_cem.diagrams.TopologyDiagram.from_dualquadmesh"]], "from_edges() (compas_cem.diagrams.topologydiagram class method)": [[202, "compas_cem.diagrams.TopologyDiagram.from_edges"]], "from_json() (compas_cem.diagrams.topologydiagram class method)": [[203, "compas_cem.diagrams.TopologyDiagram.from_json"]], "from_jsonstring() (compas_cem.diagrams.topologydiagram class method)": [[204, "compas_cem.diagrams.TopologyDiagram.from_jsonstring"]], "from_lines() (compas_cem.diagrams.topologydiagram class method)": [[205, "compas_cem.diagrams.TopologyDiagram.from_lines"]], "from_networkx() (compas_cem.diagrams.topologydiagram class method)": [[206, "compas_cem.diagrams.TopologyDiagram.from_networkx"]], "from_nodes_and_edges() (compas_cem.diagrams.topologydiagram class method)": [[207, "compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges"]], "from_obj() (compas_cem.diagrams.topologydiagram class method)": [[208, "compas_cem.diagrams.TopologyDiagram.from_obj"]], "from_pointcloud() (compas_cem.diagrams.topologydiagram class method)": [[209, "compas_cem.diagrams.TopologyDiagram.from_pointcloud"]], "get_any_edge() (compas_cem.diagrams.topologydiagram method)": [[210, "compas_cem.diagrams.TopologyDiagram.get_any_edge"]], "get_any_edges() (compas_cem.diagrams.topologydiagram method)": [[211, "compas_cem.diagrams.TopologyDiagram.get_any_edges"]], "get_any_node() (compas_cem.diagrams.topologydiagram method)": [[212, "compas_cem.diagrams.TopologyDiagram.get_any_node"]], "get_any_nodes() (compas_cem.diagrams.topologydiagram method)": [[213, "compas_cem.diagrams.TopologyDiagram.get_any_nodes"]], "gkey() (compas_cem.diagrams.topologydiagram method)": [[214, "compas_cem.diagrams.TopologyDiagram.gkey"]], "gkey_key() (compas_cem.diagrams.topologydiagram method)": [[215, "compas_cem.diagrams.TopologyDiagram.gkey_key"]], "has_edge() (compas_cem.diagrams.topologydiagram method)": [[216, "compas_cem.diagrams.TopologyDiagram.has_edge"]], "has_node() (compas_cem.diagrams.topologydiagram method)": [[217, "compas_cem.diagrams.TopologyDiagram.has_node"]], "has_trails() (compas_cem.diagrams.topologydiagram method)": [[218, "compas_cem.diagrams.TopologyDiagram.has_trails"]], "index_key() (compas_cem.diagrams.topologydiagram method)": [[219, "compas_cem.diagrams.TopologyDiagram.index_key"]], "index_uv() (compas_cem.diagrams.topologydiagram method)": [[220, "compas_cem.diagrams.TopologyDiagram.index_uv"]], "indirect_deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[221, "compas_cem.diagrams.TopologyDiagram.indirect_deviation_edges"]], "is_auxiliary_trail_edge() (compas_cem.diagrams.topologydiagram method)": [[222, "compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge"]], "is_connected() (compas_cem.diagrams.topologydiagram method)": [[223, "compas_cem.diagrams.TopologyDiagram.is_connected"]], "is_crossed() (compas_cem.diagrams.topologydiagram method)": [[224, "compas_cem.diagrams.TopologyDiagram.is_crossed"]], "is_deviation_edge() (compas_cem.diagrams.topologydiagram method)": [[225, "compas_cem.diagrams.TopologyDiagram.is_deviation_edge"]], "is_direct_deviation_edge() (compas_cem.diagrams.topologydiagram method)": [[226, "compas_cem.diagrams.TopologyDiagram.is_direct_deviation_edge"]], "is_edge_supported() (compas_cem.diagrams.topologydiagram method)": [[227, "compas_cem.diagrams.TopologyDiagram.is_edge_supported"]], "is_indirect_deviation_edge() (compas_cem.diagrams.topologydiagram method)": [[228, "compas_cem.diagrams.TopologyDiagram.is_indirect_deviation_edge"]], "is_leaf() (compas_cem.diagrams.topologydiagram method)": [[229, "compas_cem.diagrams.TopologyDiagram.is_leaf"]], "is_node_connected() (compas_cem.diagrams.topologydiagram method)": [[230, "compas_cem.diagrams.TopologyDiagram.is_node_connected"]], "is_node_loaded() (compas_cem.diagrams.topologydiagram method)": [[231, "compas_cem.diagrams.TopologyDiagram.is_node_loaded"]], "is_node_origin() (compas_cem.diagrams.topologydiagram method)": [[232, "compas_cem.diagrams.TopologyDiagram.is_node_origin"]], "is_node_support() (compas_cem.diagrams.topologydiagram method)": [[233, "compas_cem.diagrams.TopologyDiagram.is_node_support"]], "is_planar() (compas_cem.diagrams.topologydiagram method)": [[234, "compas_cem.diagrams.TopologyDiagram.is_planar"]], "is_planar_embedding() (compas_cem.diagrams.topologydiagram method)": [[235, "compas_cem.diagrams.TopologyDiagram.is_planar_embedding"]], "is_trail_edge() (compas_cem.diagrams.topologydiagram method)": [[236, "compas_cem.diagrams.TopologyDiagram.is_trail_edge"]], "is_xy() (compas_cem.diagrams.topologydiagram method)": [[237, "compas_cem.diagrams.TopologyDiagram.is_xy"]], "key_gkey() (compas_cem.diagrams.topologydiagram method)": [[238, "compas_cem.diagrams.TopologyDiagram.key_gkey"]], "key_index() (compas_cem.diagrams.topologydiagram method)": [[239, "compas_cem.diagrams.TopologyDiagram.key_index"]], "laplacian_matrix() (compas_cem.diagrams.topologydiagram method)": [[240, "compas_cem.diagrams.TopologyDiagram.laplacian_matrix"]], "leaves() (compas_cem.diagrams.topologydiagram method)": [[241, "compas_cem.diagrams.TopologyDiagram.leaves"]], "loaded_nodes() (compas_cem.diagrams.topologydiagram method)": [[242, "compas_cem.diagrams.TopologyDiagram.loaded_nodes"]], "neighborhood() (compas_cem.diagrams.topologydiagram method)": [[243, "compas_cem.diagrams.TopologyDiagram.neighborhood"]], "neighbors() (compas_cem.diagrams.topologydiagram method)": [[244, "compas_cem.diagrams.TopologyDiagram.neighbors"]], "neighbors_in() (compas_cem.diagrams.topologydiagram method)": [[245, "compas_cem.diagrams.TopologyDiagram.neighbors_in"]], "neighbors_out() (compas_cem.diagrams.topologydiagram method)": [[246, "compas_cem.diagrams.TopologyDiagram.neighbors_out"]], "network_adjacency_matrix() (compas_cem.diagrams.topologydiagram method)": [[247, "compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix"]], "network_connectivity_matrix() (compas_cem.diagrams.topologydiagram method)": [[248, "compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix"]], "network_degree_matrix() (compas_cem.diagrams.topologydiagram method)": [[249, "compas_cem.diagrams.TopologyDiagram.network_degree_matrix"]], "network_embed_in_plane() (compas_cem.diagrams.topologydiagram method)": [[250, "compas_cem.diagrams.TopologyDiagram.network_embed_in_plane"]], "network_is_planar() (compas_cem.diagrams.topologydiagram method)": [[251, "compas_cem.diagrams.TopologyDiagram.network_is_planar"]], "network_is_planar_embedding() (compas_cem.diagrams.topologydiagram method)": [[252, "compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding"]], "network_laplacian_matrix() (compas_cem.diagrams.topologydiagram method)": [[253, "compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix"]], "node_attribute() (compas_cem.diagrams.topologydiagram method)": [[254, "compas_cem.diagrams.TopologyDiagram.node_attribute"]], "node_attributes() (compas_cem.diagrams.topologydiagram method)": [[255, "compas_cem.diagrams.TopologyDiagram.node_attributes"]], "node_coordinates() (compas_cem.diagrams.topologydiagram method)": [[256, "compas_cem.diagrams.TopologyDiagram.node_coordinates"]], "node_exists() (compas_cem.diagrams.topologydiagram method)": [[257, "compas_cem.diagrams.TopologyDiagram.node_exists"]], "node_gkey() (compas_cem.diagrams.topologydiagram method)": [[258, "compas_cem.diagrams.TopologyDiagram.node_gkey"]], "node_key() (compas_cem.diagrams.topologydiagram method)": [[259, "compas_cem.diagrams.TopologyDiagram.node_key"]], "node_laplacian() (compas_cem.diagrams.topologydiagram method)": [[260, "compas_cem.diagrams.TopologyDiagram.node_laplacian"]], "node_load() (compas_cem.diagrams.topologydiagram method)": [[261, "compas_cem.diagrams.TopologyDiagram.node_load"]], "node_neighborhood_centroid() (compas_cem.diagrams.topologydiagram method)": [[262, "compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid"]], "node_sample() (compas_cem.diagrams.topologydiagram method)": [[263, "compas_cem.diagrams.TopologyDiagram.node_sample"]], "node_sequence() (compas_cem.diagrams.topologydiagram method)": [[264, "compas_cem.diagrams.TopologyDiagram.node_sequence"]], "node_xyz() (compas_cem.diagrams.topologydiagram method)": [[265, "compas_cem.diagrams.TopologyDiagram.node_xyz"]], "nodes() (compas_cem.diagrams.topologydiagram method)": [[266, "compas_cem.diagrams.TopologyDiagram.nodes"]], "nodes_attribute() (compas_cem.diagrams.topologydiagram method)": [[267, "compas_cem.diagrams.TopologyDiagram.nodes_attribute"]], "nodes_attributes() (compas_cem.diagrams.topologydiagram method)": [[268, "compas_cem.diagrams.TopologyDiagram.nodes_attributes"]], "nodes_where() (compas_cem.diagrams.topologydiagram method)": [[269, "compas_cem.diagrams.TopologyDiagram.nodes_where"]], "nodes_where_predicate() (compas_cem.diagrams.topologydiagram method)": [[270, "compas_cem.diagrams.TopologyDiagram.nodes_where_predicate"]], "number_of_auxiliary_trails() (compas_cem.diagrams.topologydiagram method)": [[271, "compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails"]], "number_of_deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[272, "compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges"]], "number_of_direct_deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[273, "compas_cem.diagrams.TopologyDiagram.number_of_direct_deviation_edges"]], "number_of_edges() (compas_cem.diagrams.topologydiagram method)": [[274, "compas_cem.diagrams.TopologyDiagram.number_of_edges"]], "number_of_indirect_deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[275, "compas_cem.diagrams.TopologyDiagram.number_of_indirect_deviation_edges"]], "number_of_loaded_nodes() (compas_cem.diagrams.topologydiagram method)": [[276, "compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes"]], "number_of_nodes() (compas_cem.diagrams.topologydiagram method)": [[277, "compas_cem.diagrams.TopologyDiagram.number_of_nodes"]], "number_of_sequences() (compas_cem.diagrams.topologydiagram method)": [[278, "compas_cem.diagrams.TopologyDiagram.number_of_sequences"]], "number_of_support_nodes() (compas_cem.diagrams.topologydiagram method)": [[279, "compas_cem.diagrams.TopologyDiagram.number_of_support_nodes"]], "number_of_trail_edges() (compas_cem.diagrams.topologydiagram method)": [[280, "compas_cem.diagrams.TopologyDiagram.number_of_trail_edges"]], "number_of_trails() (compas_cem.diagrams.topologydiagram method)": [[281, "compas_cem.diagrams.TopologyDiagram.number_of_trails"]], "origin_nodes() (compas_cem.diagrams.topologydiagram method)": [[282, "compas_cem.diagrams.TopologyDiagram.origin_nodes"]], "reaction_force() (compas_cem.diagrams.topologydiagram method)": [[283, "compas_cem.diagrams.TopologyDiagram.reaction_force"]], "sequence_last() (compas_cem.diagrams.topologydiagram method)": [[284, "compas_cem.diagrams.TopologyDiagram.sequence_last"]], "sequences() (compas_cem.diagrams.topologydiagram method)": [[285, "compas_cem.diagrams.TopologyDiagram.sequences"]], "sha256() (compas_cem.diagrams.topologydiagram method)": [[286, "compas_cem.diagrams.TopologyDiagram.sha256"]], "shift_trail() (compas_cem.diagrams.topologydiagram method)": [[287, "compas_cem.diagrams.TopologyDiagram.shift_trail"]], "shortest_path() (compas_cem.diagrams.topologydiagram method)": [[288, "compas_cem.diagrams.TopologyDiagram.shortest_path"]], "smooth() (compas_cem.diagrams.topologydiagram method)": [[289, "compas_cem.diagrams.TopologyDiagram.smooth"]], "split_edge() (compas_cem.diagrams.topologydiagram method)": [[290, "compas_cem.diagrams.TopologyDiagram.split_edge"]], "summary() (compas_cem.diagrams.topologydiagram method)": [[291, "compas_cem.diagrams.TopologyDiagram.summary"]], "support_nodes() (compas_cem.diagrams.topologydiagram method)": [[292, "compas_cem.diagrams.TopologyDiagram.support_nodes"]], "to_data() (compas_cem.diagrams.topologydiagram method)": [[293, "compas_cem.diagrams.TopologyDiagram.to_data"]], "to_json() (compas_cem.diagrams.topologydiagram method)": [[294, "compas_cem.diagrams.TopologyDiagram.to_json"]], "to_jsonstring() (compas_cem.diagrams.topologydiagram method)": [[295, "compas_cem.diagrams.TopologyDiagram.to_jsonstring"]], "to_lines() (compas_cem.diagrams.topologydiagram method)": [[296, "compas_cem.diagrams.TopologyDiagram.to_lines"]], "to_networkx() (compas_cem.diagrams.topologydiagram method)": [[297, "compas_cem.diagrams.TopologyDiagram.to_networkx"]], "to_nodes_and_edges() (compas_cem.diagrams.topologydiagram method)": [[298, "compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges"]], "to_obj() (compas_cem.diagrams.topologydiagram method)": [[299, "compas_cem.diagrams.TopologyDiagram.to_obj"]], "to_points() (compas_cem.diagrams.topologydiagram method)": [[300, "compas_cem.diagrams.TopologyDiagram.to_points"]], "trail() (compas_cem.diagrams.topologydiagram method)": [[301, "compas_cem.diagrams.TopologyDiagram.trail"]], "trail_edges() (compas_cem.diagrams.topologydiagram method)": [[302, "compas_cem.diagrams.TopologyDiagram.trail_edges"]], "trail_sequences() (compas_cem.diagrams.topologydiagram method)": [[303, "compas_cem.diagrams.TopologyDiagram.trail_sequences"]], "trails() (compas_cem.diagrams.topologydiagram method)": [[304, "compas_cem.diagrams.TopologyDiagram.trails"]], "trails_sequences() (compas_cem.diagrams.topologydiagram method)": [[305, "compas_cem.diagrams.TopologyDiagram.trails_sequences"]], "transform() (compas_cem.diagrams.topologydiagram method)": [[306, "compas_cem.diagrams.TopologyDiagram.transform"]], "transformed() (compas_cem.diagrams.topologydiagram method)": [[307, "compas_cem.diagrams.TopologyDiagram.transformed"]], "unset_edge_attribute() (compas_cem.diagrams.topologydiagram method)": [[308, "compas_cem.diagrams.TopologyDiagram.unset_edge_attribute"]], "unset_node_attribute() (compas_cem.diagrams.topologydiagram method)": [[309, "compas_cem.diagrams.TopologyDiagram.unset_node_attribute"]], "update_dea() (compas_cem.diagrams.topologydiagram method)": [[310, "compas_cem.diagrams.TopologyDiagram.update_dea"]], "update_default_edge_attributes() (compas_cem.diagrams.topologydiagram method)": [[311, "compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes"]], "update_default_node_attributes() (compas_cem.diagrams.topologydiagram method)": [[312, "compas_cem.diagrams.TopologyDiagram.update_default_node_attributes"]], "update_dna() (compas_cem.diagrams.topologydiagram method)": [[313, "compas_cem.diagrams.TopologyDiagram.update_dna"]], "update_node_xyz() (compas_cem.diagrams.topologydiagram method)": [[314, "compas_cem.diagrams.TopologyDiagram.update_node_xyz"]], "uv_index() (compas_cem.diagrams.topologydiagram method)": [[315, "compas_cem.diagrams.TopologyDiagram.uv_index"]], "validate_data() (compas_cem.diagrams.topologydiagram method)": [[316, "compas_cem.diagrams.TopologyDiagram.validate_data"]], "validate_json() (compas_cem.diagrams.topologydiagram method)": [[317, "compas_cem.diagrams.TopologyDiagram.validate_json"]], "deviationedge (class in compas_cem.elements)": [[318, "compas_cem.elements.DeviationEdge"]], "tostring() (compas_cem.elements.deviationedge method)": [[319, "compas_cem.elements.DeviationEdge.ToString"]], "copy() (compas_cem.elements.deviationedge method)": [[320, "compas_cem.elements.DeviationEdge.copy"]], "from_data() (compas_cem.elements.deviationedge class method)": [[321, "compas_cem.elements.DeviationEdge.from_data"]], "from_json() (compas_cem.elements.deviationedge class method)": [[322, "compas_cem.elements.DeviationEdge.from_json"]], "from_jsonstring() (compas_cem.elements.deviationedge class method)": [[323, "compas_cem.elements.DeviationEdge.from_jsonstring"]], "from_line() (compas_cem.elements.deviationedge class method)": [[324, "compas_cem.elements.DeviationEdge.from_line"]], "sha256() (compas_cem.elements.deviationedge method)": [[325, "compas_cem.elements.DeviationEdge.sha256"]], "to_data() (compas_cem.elements.deviationedge method)": [[326, "compas_cem.elements.DeviationEdge.to_data"]], "to_json() (compas_cem.elements.deviationedge method)": [[327, "compas_cem.elements.DeviationEdge.to_json"]], "to_jsonstring() (compas_cem.elements.deviationedge method)": [[328, "compas_cem.elements.DeviationEdge.to_jsonstring"]], "validate_data() (compas_cem.elements.deviationedge method)": [[329, "compas_cem.elements.DeviationEdge.validate_data"]], "validate_json() (compas_cem.elements.deviationedge method)": [[330, "compas_cem.elements.DeviationEdge.validate_json"]], "node (class in compas_cem.elements)": [[331, "compas_cem.elements.Node"]], "tostring() (compas_cem.elements.node method)": [[332, "compas_cem.elements.Node.ToString"]], "copy() (compas_cem.elements.node method)": [[333, "compas_cem.elements.Node.copy"]], "from_data() (compas_cem.elements.node class method)": [[334, "compas_cem.elements.Node.from_data"]], "from_json() (compas_cem.elements.node class method)": [[335, "compas_cem.elements.Node.from_json"]], "from_jsonstring() (compas_cem.elements.node class method)": [[336, "compas_cem.elements.Node.from_jsonstring"]], "from_point() (compas_cem.elements.node class method)": [[337, "compas_cem.elements.Node.from_point"]], "sha256() (compas_cem.elements.node method)": [[338, "compas_cem.elements.Node.sha256"]], "to_data() (compas_cem.elements.node method)": [[339, "compas_cem.elements.Node.to_data"]], "to_json() (compas_cem.elements.node method)": [[340, "compas_cem.elements.Node.to_json"]], "to_jsonstring() (compas_cem.elements.node method)": [[341, "compas_cem.elements.Node.to_jsonstring"]], "validate_data() (compas_cem.elements.node method)": [[342, "compas_cem.elements.Node.validate_data"]], "validate_json() (compas_cem.elements.node method)": [[343, "compas_cem.elements.Node.validate_json"]], "trailedge (class in compas_cem.elements)": [[344, "compas_cem.elements.TrailEdge"]], "tostring() (compas_cem.elements.trailedge method)": [[345, "compas_cem.elements.TrailEdge.ToString"]], "copy() (compas_cem.elements.trailedge method)": [[346, "compas_cem.elements.TrailEdge.copy"]], "from_data() (compas_cem.elements.trailedge class method)": [[347, "compas_cem.elements.TrailEdge.from_data"]], "from_json() (compas_cem.elements.trailedge class method)": [[348, "compas_cem.elements.TrailEdge.from_json"]], "from_jsonstring() (compas_cem.elements.trailedge class method)": [[349, "compas_cem.elements.TrailEdge.from_jsonstring"]], "from_line() (compas_cem.elements.trailedge class method)": [[350, "compas_cem.elements.TrailEdge.from_line"]], "sha256() (compas_cem.elements.trailedge method)": [[351, "compas_cem.elements.TrailEdge.sha256"]], "to_data() (compas_cem.elements.trailedge method)": [[352, "compas_cem.elements.TrailEdge.to_data"]], "to_json() (compas_cem.elements.trailedge method)": [[353, "compas_cem.elements.TrailEdge.to_json"]], "to_jsonstring() (compas_cem.elements.trailedge method)": [[354, "compas_cem.elements.TrailEdge.to_jsonstring"]], "validate_data() (compas_cem.elements.trailedge method)": [[355, "compas_cem.elements.TrailEdge.validate_data"]], "validate_json() (compas_cem.elements.trailedge method)": [[356, "compas_cem.elements.TrailEdge.validate_json"]], "static_equilibrium() (in module compas_cem.equilibrium)": [[357, "compas_cem.equilibrium.static_equilibrium"]], "static_equilibrium_numpy() (in module compas_cem.equilibrium)": [[358, "compas_cem.equilibrium.static_equilibrium_numpy"]], "nodeload (class in compas_cem.loads)": [[359, "compas_cem.loads.NodeLoad"]], "tostring() (compas_cem.loads.nodeload method)": [[360, "compas_cem.loads.NodeLoad.ToString"]], "copy() (compas_cem.loads.nodeload method)": [[361, "compas_cem.loads.NodeLoad.copy"]], "from_data() (compas_cem.loads.nodeload class method)": [[362, "compas_cem.loads.NodeLoad.from_data"]], "from_json() (compas_cem.loads.nodeload class method)": [[363, "compas_cem.loads.NodeLoad.from_json"]], "from_jsonstring() (compas_cem.loads.nodeload class method)": [[364, "compas_cem.loads.NodeLoad.from_jsonstring"]], "from_point_and_vector() (compas_cem.loads.nodeload class method)": [[365, "compas_cem.loads.NodeLoad.from_point_and_vector"]], "sha256() (compas_cem.loads.nodeload method)": [[366, "compas_cem.loads.NodeLoad.sha256"]], "to_data() (compas_cem.loads.nodeload method)": [[367, "compas_cem.loads.NodeLoad.to_data"]], "to_json() (compas_cem.loads.nodeload method)": [[368, "compas_cem.loads.NodeLoad.to_json"]], "to_jsonstring() (compas_cem.loads.nodeload method)": [[369, "compas_cem.loads.NodeLoad.to_jsonstring"]], "validate_data() (compas_cem.loads.nodeload method)": [[370, "compas_cem.loads.NodeLoad.validate_data"]], "validate_json() (compas_cem.loads.nodeload method)": [[371, "compas_cem.loads.NodeLoad.validate_json"]], "deviationedgelengthconstraint (class in compas_cem.optimization)": [[372, "compas_cem.optimization.DeviationEdgeLengthConstraint"]], "tostring() (compas_cem.optimization.deviationedgelengthconstraint method)": [[373, "compas_cem.optimization.DeviationEdgeLengthConstraint.ToString"]], "copy() (compas_cem.optimization.deviationedgelengthconstraint method)": [[374, "compas_cem.optimization.DeviationEdgeLengthConstraint.copy"]], "from_data() (compas_cem.optimization.deviationedgelengthconstraint class method)": [[375, "compas_cem.optimization.DeviationEdgeLengthConstraint.from_data"]], "from_json() (compas_cem.optimization.deviationedgelengthconstraint class method)": [[376, "compas_cem.optimization.DeviationEdgeLengthConstraint.from_json"]], "from_jsonstring() (compas_cem.optimization.deviationedgelengthconstraint class method)": [[377, "compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring"]], "key() (compas_cem.optimization.deviationedgelengthconstraint method)": [[378, "compas_cem.optimization.DeviationEdgeLengthConstraint.key"]], "penalty() (compas_cem.optimization.deviationedgelengthconstraint method)": [[379, "compas_cem.optimization.DeviationEdgeLengthConstraint.penalty"]], "reference() (compas_cem.optimization.deviationedgelengthconstraint method)": [[380, "compas_cem.optimization.DeviationEdgeLengthConstraint.reference"]], "sha256() (compas_cem.optimization.deviationedgelengthconstraint method)": [[381, "compas_cem.optimization.DeviationEdgeLengthConstraint.sha256"]], "target() (compas_cem.optimization.deviationedgelengthconstraint method)": [[382, "compas_cem.optimization.DeviationEdgeLengthConstraint.target"]], "to_data() (compas_cem.optimization.deviationedgelengthconstraint method)": [[383, "compas_cem.optimization.DeviationEdgeLengthConstraint.to_data"]], "to_json() (compas_cem.optimization.deviationedgelengthconstraint method)": [[384, "compas_cem.optimization.DeviationEdgeLengthConstraint.to_json"]], "to_jsonstring() (compas_cem.optimization.deviationedgelengthconstraint method)": [[385, "compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring"]], "validate_data() (compas_cem.optimization.deviationedgelengthconstraint method)": [[386, "compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data"]], "validate_json() (compas_cem.optimization.deviationedgelengthconstraint method)": [[387, "compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json"]], "deviationedgeparameter (class in compas_cem.optimization)": [[388, "compas_cem.optimization.DeviationEdgeParameter"]], "tostring() (compas_cem.optimization.deviationedgeparameter method)": [[389, "compas_cem.optimization.DeviationEdgeParameter.ToString"]], "attr_name() (compas_cem.optimization.deviationedgeparameter method)": [[390, "compas_cem.optimization.DeviationEdgeParameter.attr_name"]], "bound_low() (compas_cem.optimization.deviationedgeparameter method)": [[391, "compas_cem.optimization.DeviationEdgeParameter.bound_low"]], "bound_up() (compas_cem.optimization.deviationedgeparameter method)": [[392, "compas_cem.optimization.DeviationEdgeParameter.bound_up"]], "copy() (compas_cem.optimization.deviationedgeparameter method)": [[393, "compas_cem.optimization.DeviationEdgeParameter.copy"]], "from_data() (compas_cem.optimization.deviationedgeparameter class method)": [[394, "compas_cem.optimization.DeviationEdgeParameter.from_data"]], "from_json() (compas_cem.optimization.deviationedgeparameter class method)": [[395, "compas_cem.optimization.DeviationEdgeParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.deviationedgeparameter class method)": [[396, "compas_cem.optimization.DeviationEdgeParameter.from_jsonstring"]], "key() (compas_cem.optimization.deviationedgeparameter method)": [[397, "compas_cem.optimization.DeviationEdgeParameter.key"]], "sha256() (compas_cem.optimization.deviationedgeparameter method)": [[398, "compas_cem.optimization.DeviationEdgeParameter.sha256"]], "start_value() (compas_cem.optimization.deviationedgeparameter method)": [[399, "compas_cem.optimization.DeviationEdgeParameter.start_value"]], "to_data() (compas_cem.optimization.deviationedgeparameter method)": [[400, "compas_cem.optimization.DeviationEdgeParameter.to_data"]], "to_json() (compas_cem.optimization.deviationedgeparameter method)": [[401, "compas_cem.optimization.DeviationEdgeParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.deviationedgeparameter method)": [[402, "compas_cem.optimization.DeviationEdgeParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.deviationedgeparameter method)": [[403, "compas_cem.optimization.DeviationEdgeParameter.validate_data"]], "validate_json() (compas_cem.optimization.deviationedgeparameter method)": [[404, "compas_cem.optimization.DeviationEdgeParameter.validate_json"]], "lineconstraint (class in compas_cem.optimization)": [[405, "compas_cem.optimization.LineConstraint"]], "tostring() (compas_cem.optimization.lineconstraint method)": [[406, "compas_cem.optimization.LineConstraint.ToString"]], "copy() (compas_cem.optimization.lineconstraint method)": [[407, "compas_cem.optimization.LineConstraint.copy"]], "from_data() (compas_cem.optimization.lineconstraint class method)": [[408, "compas_cem.optimization.LineConstraint.from_data"]], "from_json() (compas_cem.optimization.lineconstraint class method)": [[409, "compas_cem.optimization.LineConstraint.from_json"]], "from_jsonstring() (compas_cem.optimization.lineconstraint class method)": [[410, "compas_cem.optimization.LineConstraint.from_jsonstring"]], "key() (compas_cem.optimization.lineconstraint method)": [[411, "compas_cem.optimization.LineConstraint.key"]], "penalty() (compas_cem.optimization.lineconstraint method)": [[412, "compas_cem.optimization.LineConstraint.penalty"]], "reference() (compas_cem.optimization.lineconstraint method)": [[413, "compas_cem.optimization.LineConstraint.reference"]], "sha256() (compas_cem.optimization.lineconstraint method)": [[414, "compas_cem.optimization.LineConstraint.sha256"]], "target() (compas_cem.optimization.lineconstraint method)": [[415, "compas_cem.optimization.LineConstraint.target"]], "to_data() (compas_cem.optimization.lineconstraint method)": [[416, "compas_cem.optimization.LineConstraint.to_data"]], "to_json() (compas_cem.optimization.lineconstraint method)": [[417, "compas_cem.optimization.LineConstraint.to_json"]], "to_jsonstring() (compas_cem.optimization.lineconstraint method)": [[418, "compas_cem.optimization.LineConstraint.to_jsonstring"]], "validate_data() (compas_cem.optimization.lineconstraint method)": [[419, "compas_cem.optimization.LineConstraint.validate_data"]], "validate_json() (compas_cem.optimization.lineconstraint method)": [[420, "compas_cem.optimization.LineConstraint.validate_json"]], "nodeloadxparameter (class in compas_cem.optimization)": [[421, "compas_cem.optimization.NodeLoadXParameter"]], "tostring() (compas_cem.optimization.nodeloadxparameter method)": [[422, "compas_cem.optimization.NodeLoadXParameter.ToString"]], "attr_name() (compas_cem.optimization.nodeloadxparameter method)": [[423, "compas_cem.optimization.NodeLoadXParameter.attr_name"]], "bound_low() (compas_cem.optimization.nodeloadxparameter method)": [[424, "compas_cem.optimization.NodeLoadXParameter.bound_low"]], "bound_up() (compas_cem.optimization.nodeloadxparameter method)": [[425, "compas_cem.optimization.NodeLoadXParameter.bound_up"]], "copy() (compas_cem.optimization.nodeloadxparameter method)": [[426, "compas_cem.optimization.NodeLoadXParameter.copy"]], "from_data() (compas_cem.optimization.nodeloadxparameter class method)": [[427, "compas_cem.optimization.NodeLoadXParameter.from_data"]], "from_json() (compas_cem.optimization.nodeloadxparameter class method)": [[428, "compas_cem.optimization.NodeLoadXParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.nodeloadxparameter class method)": [[429, "compas_cem.optimization.NodeLoadXParameter.from_jsonstring"]], "key() (compas_cem.optimization.nodeloadxparameter method)": [[430, "compas_cem.optimization.NodeLoadXParameter.key"]], "sha256() (compas_cem.optimization.nodeloadxparameter method)": [[431, "compas_cem.optimization.NodeLoadXParameter.sha256"]], "start_value() (compas_cem.optimization.nodeloadxparameter method)": [[432, "compas_cem.optimization.NodeLoadXParameter.start_value"]], "to_data() (compas_cem.optimization.nodeloadxparameter method)": [[433, "compas_cem.optimization.NodeLoadXParameter.to_data"]], "to_json() (compas_cem.optimization.nodeloadxparameter method)": [[434, "compas_cem.optimization.NodeLoadXParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.nodeloadxparameter method)": [[435, "compas_cem.optimization.NodeLoadXParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.nodeloadxparameter method)": [[436, "compas_cem.optimization.NodeLoadXParameter.validate_data"]], "validate_json() (compas_cem.optimization.nodeloadxparameter method)": [[437, "compas_cem.optimization.NodeLoadXParameter.validate_json"]], "nodeloadyparameter (class in compas_cem.optimization)": [[438, "compas_cem.optimization.NodeLoadYParameter"]], "tostring() (compas_cem.optimization.nodeloadyparameter method)": [[439, "compas_cem.optimization.NodeLoadYParameter.ToString"]], "attr_name() (compas_cem.optimization.nodeloadyparameter method)": [[440, "compas_cem.optimization.NodeLoadYParameter.attr_name"]], "bound_low() (compas_cem.optimization.nodeloadyparameter method)": [[441, "compas_cem.optimization.NodeLoadYParameter.bound_low"]], "bound_up() (compas_cem.optimization.nodeloadyparameter method)": [[442, "compas_cem.optimization.NodeLoadYParameter.bound_up"]], "copy() (compas_cem.optimization.nodeloadyparameter method)": [[443, "compas_cem.optimization.NodeLoadYParameter.copy"]], "from_data() (compas_cem.optimization.nodeloadyparameter class method)": [[444, "compas_cem.optimization.NodeLoadYParameter.from_data"]], "from_json() (compas_cem.optimization.nodeloadyparameter class method)": [[445, "compas_cem.optimization.NodeLoadYParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.nodeloadyparameter class method)": [[446, "compas_cem.optimization.NodeLoadYParameter.from_jsonstring"]], "key() (compas_cem.optimization.nodeloadyparameter method)": [[447, "compas_cem.optimization.NodeLoadYParameter.key"]], "sha256() (compas_cem.optimization.nodeloadyparameter method)": [[448, "compas_cem.optimization.NodeLoadYParameter.sha256"]], "start_value() (compas_cem.optimization.nodeloadyparameter method)": [[449, "compas_cem.optimization.NodeLoadYParameter.start_value"]], "to_data() (compas_cem.optimization.nodeloadyparameter method)": [[450, "compas_cem.optimization.NodeLoadYParameter.to_data"]], "to_json() (compas_cem.optimization.nodeloadyparameter method)": [[451, "compas_cem.optimization.NodeLoadYParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.nodeloadyparameter method)": [[452, "compas_cem.optimization.NodeLoadYParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.nodeloadyparameter method)": [[453, "compas_cem.optimization.NodeLoadYParameter.validate_data"]], "validate_json() (compas_cem.optimization.nodeloadyparameter method)": [[454, "compas_cem.optimization.NodeLoadYParameter.validate_json"]], "nodeloadzparameter (class in compas_cem.optimization)": [[455, "compas_cem.optimization.NodeLoadZParameter"]], "tostring() (compas_cem.optimization.nodeloadzparameter method)": [[456, "compas_cem.optimization.NodeLoadZParameter.ToString"]], "attr_name() (compas_cem.optimization.nodeloadzparameter method)": [[457, "compas_cem.optimization.NodeLoadZParameter.attr_name"]], "bound_low() (compas_cem.optimization.nodeloadzparameter method)": [[458, "compas_cem.optimization.NodeLoadZParameter.bound_low"]], "bound_up() (compas_cem.optimization.nodeloadzparameter method)": [[459, "compas_cem.optimization.NodeLoadZParameter.bound_up"]], "copy() (compas_cem.optimization.nodeloadzparameter method)": [[460, "compas_cem.optimization.NodeLoadZParameter.copy"]], "from_data() (compas_cem.optimization.nodeloadzparameter class method)": [[461, "compas_cem.optimization.NodeLoadZParameter.from_data"]], "from_json() (compas_cem.optimization.nodeloadzparameter class method)": [[462, "compas_cem.optimization.NodeLoadZParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.nodeloadzparameter class method)": [[463, "compas_cem.optimization.NodeLoadZParameter.from_jsonstring"]], "key() (compas_cem.optimization.nodeloadzparameter method)": [[464, "compas_cem.optimization.NodeLoadZParameter.key"]], "sha256() (compas_cem.optimization.nodeloadzparameter method)": [[465, "compas_cem.optimization.NodeLoadZParameter.sha256"]], "start_value() (compas_cem.optimization.nodeloadzparameter method)": [[466, "compas_cem.optimization.NodeLoadZParameter.start_value"]], "to_data() (compas_cem.optimization.nodeloadzparameter method)": [[467, "compas_cem.optimization.NodeLoadZParameter.to_data"]], "to_json() (compas_cem.optimization.nodeloadzparameter method)": [[468, "compas_cem.optimization.NodeLoadZParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.nodeloadzparameter method)": [[469, "compas_cem.optimization.NodeLoadZParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.nodeloadzparameter method)": [[470, "compas_cem.optimization.NodeLoadZParameter.validate_data"]], "validate_json() (compas_cem.optimization.nodeloadzparameter method)": [[471, "compas_cem.optimization.NodeLoadZParameter.validate_json"]], "optimizer (class in compas_cem.optimization)": [[472, "compas_cem.optimization.Optimizer"]], "tostring() (compas_cem.optimization.optimizer method)": [[473, "compas_cem.optimization.Optimizer.ToString"]], "add_constraint() (compas_cem.optimization.optimizer method)": [[474, "compas_cem.optimization.Optimizer.add_constraint"]], "add_parameter() (compas_cem.optimization.optimizer method)": [[475, "compas_cem.optimization.Optimizer.add_parameter"]], "check_optimization_sanity() (compas_cem.optimization.optimizer method)": [[476, "compas_cem.optimization.Optimizer.check_optimization_sanity"]], "copy() (compas_cem.optimization.optimizer method)": [[477, "compas_cem.optimization.Optimizer.copy"]], "from_data() (compas_cem.optimization.optimizer class method)": [[478, "compas_cem.optimization.Optimizer.from_data"]], "from_json() (compas_cem.optimization.optimizer class method)": [[479, "compas_cem.optimization.Optimizer.from_json"]], "from_jsonstring() (compas_cem.optimization.optimizer class method)": [[480, "compas_cem.optimization.Optimizer.from_jsonstring"]], "gradient_func() (compas_cem.optimization.optimizer method)": [[481, "compas_cem.optimization.Optimizer.gradient_func"]], "number_of_constraints() (compas_cem.optimization.optimizer method)": [[482, "compas_cem.optimization.Optimizer.number_of_constraints"]], "number_of_parameters() (compas_cem.optimization.optimizer method)": [[483, "compas_cem.optimization.Optimizer.number_of_parameters"]], "objective_func() (compas_cem.optimization.optimizer method)": [[484, "compas_cem.optimization.Optimizer.objective_func"]], "optimization_bounds() (compas_cem.optimization.optimizer method)": [[485, "compas_cem.optimization.Optimizer.optimization_bounds"]], "optimization_parameters() (compas_cem.optimization.optimizer method)": [[486, "compas_cem.optimization.Optimizer.optimization_parameters"]], "remove_constraint() (compas_cem.optimization.optimizer method)": [[487, "compas_cem.optimization.Optimizer.remove_constraint"]], "remove_parameter() (compas_cem.optimization.optimizer method)": [[488, "compas_cem.optimization.Optimizer.remove_parameter"]], "sha256() (compas_cem.optimization.optimizer method)": [[489, "compas_cem.optimization.Optimizer.sha256"]], "solve() (compas_cem.optimization.optimizer method)": [[490, "compas_cem.optimization.Optimizer.solve"]], "to_data() (compas_cem.optimization.optimizer method)": [[491, "compas_cem.optimization.Optimizer.to_data"]], "to_json() (compas_cem.optimization.optimizer method)": [[492, "compas_cem.optimization.Optimizer.to_json"]], "to_jsonstring() (compas_cem.optimization.optimizer method)": [[493, "compas_cem.optimization.Optimizer.to_jsonstring"]], "validate_data() (compas_cem.optimization.optimizer method)": [[494, "compas_cem.optimization.Optimizer.validate_data"]], "validate_json() (compas_cem.optimization.optimizer method)": [[495, "compas_cem.optimization.Optimizer.validate_json"]], "originnodexparameter (class in compas_cem.optimization)": [[496, "compas_cem.optimization.OriginNodeXParameter"]], "tostring() (compas_cem.optimization.originnodexparameter method)": [[497, "compas_cem.optimization.OriginNodeXParameter.ToString"]], "attr_name() (compas_cem.optimization.originnodexparameter method)": [[498, "compas_cem.optimization.OriginNodeXParameter.attr_name"]], "bound_low() (compas_cem.optimization.originnodexparameter method)": [[499, "compas_cem.optimization.OriginNodeXParameter.bound_low"]], "bound_up() (compas_cem.optimization.originnodexparameter method)": [[500, "compas_cem.optimization.OriginNodeXParameter.bound_up"]], "copy() (compas_cem.optimization.originnodexparameter method)": [[501, "compas_cem.optimization.OriginNodeXParameter.copy"]], "from_data() (compas_cem.optimization.originnodexparameter class method)": [[502, "compas_cem.optimization.OriginNodeXParameter.from_data"]], "from_json() (compas_cem.optimization.originnodexparameter class method)": [[503, "compas_cem.optimization.OriginNodeXParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.originnodexparameter class method)": [[504, "compas_cem.optimization.OriginNodeXParameter.from_jsonstring"]], "key() (compas_cem.optimization.originnodexparameter method)": [[505, "compas_cem.optimization.OriginNodeXParameter.key"]], "sha256() (compas_cem.optimization.originnodexparameter method)": [[506, "compas_cem.optimization.OriginNodeXParameter.sha256"]], "start_value() (compas_cem.optimization.originnodexparameter method)": [[507, "compas_cem.optimization.OriginNodeXParameter.start_value"]], "to_data() (compas_cem.optimization.originnodexparameter method)": [[508, "compas_cem.optimization.OriginNodeXParameter.to_data"]], "to_json() (compas_cem.optimization.originnodexparameter method)": [[509, "compas_cem.optimization.OriginNodeXParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.originnodexparameter method)": [[510, "compas_cem.optimization.OriginNodeXParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.originnodexparameter method)": [[511, "compas_cem.optimization.OriginNodeXParameter.validate_data"]], "validate_json() (compas_cem.optimization.originnodexparameter method)": [[512, "compas_cem.optimization.OriginNodeXParameter.validate_json"]], "originnodeyparameter (class in compas_cem.optimization)": [[513, "compas_cem.optimization.OriginNodeYParameter"]], "tostring() (compas_cem.optimization.originnodeyparameter method)": [[514, "compas_cem.optimization.OriginNodeYParameter.ToString"]], "attr_name() (compas_cem.optimization.originnodeyparameter method)": [[515, "compas_cem.optimization.OriginNodeYParameter.attr_name"]], "bound_low() (compas_cem.optimization.originnodeyparameter method)": [[516, "compas_cem.optimization.OriginNodeYParameter.bound_low"]], "bound_up() (compas_cem.optimization.originnodeyparameter method)": [[517, "compas_cem.optimization.OriginNodeYParameter.bound_up"]], "copy() (compas_cem.optimization.originnodeyparameter method)": [[518, "compas_cem.optimization.OriginNodeYParameter.copy"]], "from_data() (compas_cem.optimization.originnodeyparameter class method)": [[519, "compas_cem.optimization.OriginNodeYParameter.from_data"]], "from_json() (compas_cem.optimization.originnodeyparameter class method)": [[520, "compas_cem.optimization.OriginNodeYParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.originnodeyparameter class method)": [[521, "compas_cem.optimization.OriginNodeYParameter.from_jsonstring"]], "key() (compas_cem.optimization.originnodeyparameter method)": [[522, "compas_cem.optimization.OriginNodeYParameter.key"]], "sha256() (compas_cem.optimization.originnodeyparameter method)": [[523, "compas_cem.optimization.OriginNodeYParameter.sha256"]], "start_value() (compas_cem.optimization.originnodeyparameter method)": [[524, "compas_cem.optimization.OriginNodeYParameter.start_value"]], "to_data() (compas_cem.optimization.originnodeyparameter method)": [[525, "compas_cem.optimization.OriginNodeYParameter.to_data"]], "to_json() (compas_cem.optimization.originnodeyparameter method)": [[526, "compas_cem.optimization.OriginNodeYParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.originnodeyparameter method)": [[527, "compas_cem.optimization.OriginNodeYParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.originnodeyparameter method)": [[528, "compas_cem.optimization.OriginNodeYParameter.validate_data"]], "validate_json() (compas_cem.optimization.originnodeyparameter method)": [[529, "compas_cem.optimization.OriginNodeYParameter.validate_json"]], "originnodezparameter (class in compas_cem.optimization)": [[530, "compas_cem.optimization.OriginNodeZParameter"]], "tostring() (compas_cem.optimization.originnodezparameter method)": [[531, "compas_cem.optimization.OriginNodeZParameter.ToString"]], "attr_name() (compas_cem.optimization.originnodezparameter method)": [[532, "compas_cem.optimization.OriginNodeZParameter.attr_name"]], "bound_low() (compas_cem.optimization.originnodezparameter method)": [[533, "compas_cem.optimization.OriginNodeZParameter.bound_low"]], "bound_up() (compas_cem.optimization.originnodezparameter method)": [[534, "compas_cem.optimization.OriginNodeZParameter.bound_up"]], "copy() (compas_cem.optimization.originnodezparameter method)": [[535, "compas_cem.optimization.OriginNodeZParameter.copy"]], "from_data() (compas_cem.optimization.originnodezparameter class method)": [[536, "compas_cem.optimization.OriginNodeZParameter.from_data"]], "from_json() (compas_cem.optimization.originnodezparameter class method)": [[537, "compas_cem.optimization.OriginNodeZParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.originnodezparameter class method)": [[538, "compas_cem.optimization.OriginNodeZParameter.from_jsonstring"]], "key() (compas_cem.optimization.originnodezparameter method)": [[539, "compas_cem.optimization.OriginNodeZParameter.key"]], "sha256() (compas_cem.optimization.originnodezparameter method)": [[540, "compas_cem.optimization.OriginNodeZParameter.sha256"]], "start_value() (compas_cem.optimization.originnodezparameter method)": [[541, "compas_cem.optimization.OriginNodeZParameter.start_value"]], "to_data() (compas_cem.optimization.originnodezparameter method)": [[542, "compas_cem.optimization.OriginNodeZParameter.to_data"]], "to_json() (compas_cem.optimization.originnodezparameter method)": [[543, "compas_cem.optimization.OriginNodeZParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.originnodezparameter method)": [[544, "compas_cem.optimization.OriginNodeZParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.originnodezparameter method)": [[545, "compas_cem.optimization.OriginNodeZParameter.validate_data"]], "validate_json() (compas_cem.optimization.originnodezparameter method)": [[546, "compas_cem.optimization.OriginNodeZParameter.validate_json"]], "planeconstraint (class in compas_cem.optimization)": [[547, "compas_cem.optimization.PlaneConstraint"]], "tostring() (compas_cem.optimization.planeconstraint method)": [[548, "compas_cem.optimization.PlaneConstraint.ToString"]], "copy() (compas_cem.optimization.planeconstraint method)": [[549, "compas_cem.optimization.PlaneConstraint.copy"]], "from_data() (compas_cem.optimization.planeconstraint class method)": [[550, "compas_cem.optimization.PlaneConstraint.from_data"]], "from_json() (compas_cem.optimization.planeconstraint class method)": [[551, "compas_cem.optimization.PlaneConstraint.from_json"]], "from_jsonstring() (compas_cem.optimization.planeconstraint class method)": [[552, "compas_cem.optimization.PlaneConstraint.from_jsonstring"]], "key() (compas_cem.optimization.planeconstraint method)": [[553, "compas_cem.optimization.PlaneConstraint.key"]], "penalty() (compas_cem.optimization.planeconstraint method)": [[554, "compas_cem.optimization.PlaneConstraint.penalty"]], "reference() (compas_cem.optimization.planeconstraint method)": [[555, "compas_cem.optimization.PlaneConstraint.reference"]], "sha256() (compas_cem.optimization.planeconstraint method)": [[556, "compas_cem.optimization.PlaneConstraint.sha256"]], "target() (compas_cem.optimization.planeconstraint method)": [[557, "compas_cem.optimization.PlaneConstraint.target"]], "to_data() (compas_cem.optimization.planeconstraint method)": [[558, "compas_cem.optimization.PlaneConstraint.to_data"]], "to_json() (compas_cem.optimization.planeconstraint method)": [[559, "compas_cem.optimization.PlaneConstraint.to_json"]], "to_jsonstring() (compas_cem.optimization.planeconstraint method)": [[560, "compas_cem.optimization.PlaneConstraint.to_jsonstring"]], "validate_data() (compas_cem.optimization.planeconstraint method)": [[561, "compas_cem.optimization.PlaneConstraint.validate_data"]], "validate_json() (compas_cem.optimization.planeconstraint method)": [[562, "compas_cem.optimization.PlaneConstraint.validate_json"]], "pointconstraint (class in compas_cem.optimization)": [[563, "compas_cem.optimization.PointConstraint"]], "tostring() (compas_cem.optimization.pointconstraint method)": [[564, "compas_cem.optimization.PointConstraint.ToString"]], "copy() (compas_cem.optimization.pointconstraint method)": [[565, "compas_cem.optimization.PointConstraint.copy"]], "from_data() (compas_cem.optimization.pointconstraint class method)": [[566, "compas_cem.optimization.PointConstraint.from_data"]], "from_json() (compas_cem.optimization.pointconstraint class method)": [[567, "compas_cem.optimization.PointConstraint.from_json"]], "from_jsonstring() (compas_cem.optimization.pointconstraint class method)": [[568, "compas_cem.optimization.PointConstraint.from_jsonstring"]], "key() (compas_cem.optimization.pointconstraint method)": [[569, "compas_cem.optimization.PointConstraint.key"]], "penalty() (compas_cem.optimization.pointconstraint method)": [[570, "compas_cem.optimization.PointConstraint.penalty"]], "reference() (compas_cem.optimization.pointconstraint method)": [[571, "compas_cem.optimization.PointConstraint.reference"]], "sha256() (compas_cem.optimization.pointconstraint method)": [[572, "compas_cem.optimization.PointConstraint.sha256"]], "target() (compas_cem.optimization.pointconstraint method)": [[573, "compas_cem.optimization.PointConstraint.target"]], "to_data() (compas_cem.optimization.pointconstraint method)": [[574, "compas_cem.optimization.PointConstraint.to_data"]], "to_json() (compas_cem.optimization.pointconstraint method)": [[575, "compas_cem.optimization.PointConstraint.to_json"]], "to_jsonstring() (compas_cem.optimization.pointconstraint method)": [[576, "compas_cem.optimization.PointConstraint.to_jsonstring"]], "validate_data() (compas_cem.optimization.pointconstraint method)": [[577, "compas_cem.optimization.PointConstraint.validate_data"]], "validate_json() (compas_cem.optimization.pointconstraint method)": [[578, "compas_cem.optimization.PointConstraint.validate_json"]], "reactionforceconstraint (class in compas_cem.optimization)": [[579, "compas_cem.optimization.ReactionForceConstraint"]], "tostring() (compas_cem.optimization.reactionforceconstraint method)": [[580, "compas_cem.optimization.ReactionForceConstraint.ToString"]], "copy() (compas_cem.optimization.reactionforceconstraint method)": [[581, "compas_cem.optimization.ReactionForceConstraint.copy"]], "from_data() (compas_cem.optimization.reactionforceconstraint class method)": [[582, "compas_cem.optimization.ReactionForceConstraint.from_data"]], "from_json() (compas_cem.optimization.reactionforceconstraint class method)": [[583, "compas_cem.optimization.ReactionForceConstraint.from_json"]], "from_jsonstring() (compas_cem.optimization.reactionforceconstraint class method)": [[584, "compas_cem.optimization.ReactionForceConstraint.from_jsonstring"]], "key() (compas_cem.optimization.reactionforceconstraint method)": [[585, "compas_cem.optimization.ReactionForceConstraint.key"]], "penalty() (compas_cem.optimization.reactionforceconstraint method)": [[586, "compas_cem.optimization.ReactionForceConstraint.penalty"]], "reference() (compas_cem.optimization.reactionforceconstraint method)": [[587, "compas_cem.optimization.ReactionForceConstraint.reference"]], "sha256() (compas_cem.optimization.reactionforceconstraint method)": [[588, "compas_cem.optimization.ReactionForceConstraint.sha256"]], "target() (compas_cem.optimization.reactionforceconstraint method)": [[589, "compas_cem.optimization.ReactionForceConstraint.target"]], "to_data() (compas_cem.optimization.reactionforceconstraint method)": [[590, "compas_cem.optimization.ReactionForceConstraint.to_data"]], "to_json() (compas_cem.optimization.reactionforceconstraint method)": [[591, "compas_cem.optimization.ReactionForceConstraint.to_json"]], "to_jsonstring() (compas_cem.optimization.reactionforceconstraint method)": [[592, "compas_cem.optimization.ReactionForceConstraint.to_jsonstring"]], "validate_data() (compas_cem.optimization.reactionforceconstraint method)": [[593, "compas_cem.optimization.ReactionForceConstraint.validate_data"]], "validate_json() (compas_cem.optimization.reactionforceconstraint method)": [[594, "compas_cem.optimization.ReactionForceConstraint.validate_json"]], "trailedgeforceconstraint (class in compas_cem.optimization)": [[595, "compas_cem.optimization.TrailEdgeForceConstraint"]], "tostring() (compas_cem.optimization.trailedgeforceconstraint method)": [[596, "compas_cem.optimization.TrailEdgeForceConstraint.ToString"]], "copy() (compas_cem.optimization.trailedgeforceconstraint method)": [[597, "compas_cem.optimization.TrailEdgeForceConstraint.copy"]], "from_data() (compas_cem.optimization.trailedgeforceconstraint class method)": [[598, "compas_cem.optimization.TrailEdgeForceConstraint.from_data"]], "from_json() (compas_cem.optimization.trailedgeforceconstraint class method)": [[599, "compas_cem.optimization.TrailEdgeForceConstraint.from_json"]], "from_jsonstring() (compas_cem.optimization.trailedgeforceconstraint class method)": [[600, "compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring"]], "key() (compas_cem.optimization.trailedgeforceconstraint method)": [[601, "compas_cem.optimization.TrailEdgeForceConstraint.key"]], "penalty() (compas_cem.optimization.trailedgeforceconstraint method)": [[602, "compas_cem.optimization.TrailEdgeForceConstraint.penalty"]], "reference() (compas_cem.optimization.trailedgeforceconstraint method)": [[603, "compas_cem.optimization.TrailEdgeForceConstraint.reference"]], "sha256() (compas_cem.optimization.trailedgeforceconstraint method)": [[604, "compas_cem.optimization.TrailEdgeForceConstraint.sha256"]], "target() (compas_cem.optimization.trailedgeforceconstraint method)": [[605, "compas_cem.optimization.TrailEdgeForceConstraint.target"]], "to_data() (compas_cem.optimization.trailedgeforceconstraint method)": [[606, "compas_cem.optimization.TrailEdgeForceConstraint.to_data"]], "to_json() (compas_cem.optimization.trailedgeforceconstraint method)": [[607, "compas_cem.optimization.TrailEdgeForceConstraint.to_json"]], "to_jsonstring() (compas_cem.optimization.trailedgeforceconstraint method)": [[608, "compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring"]], "validate_data() (compas_cem.optimization.trailedgeforceconstraint method)": [[609, "compas_cem.optimization.TrailEdgeForceConstraint.validate_data"]], "validate_json() (compas_cem.optimization.trailedgeforceconstraint method)": [[610, "compas_cem.optimization.TrailEdgeForceConstraint.validate_json"]], "trailedgeparameter (class in compas_cem.optimization)": [[611, "compas_cem.optimization.TrailEdgeParameter"]], "tostring() (compas_cem.optimization.trailedgeparameter method)": [[612, "compas_cem.optimization.TrailEdgeParameter.ToString"]], "attr_name() (compas_cem.optimization.trailedgeparameter method)": [[613, "compas_cem.optimization.TrailEdgeParameter.attr_name"]], "bound_low() (compas_cem.optimization.trailedgeparameter method)": [[614, "compas_cem.optimization.TrailEdgeParameter.bound_low"]], "bound_up() (compas_cem.optimization.trailedgeparameter method)": [[615, "compas_cem.optimization.TrailEdgeParameter.bound_up"]], "copy() (compas_cem.optimization.trailedgeparameter method)": [[616, "compas_cem.optimization.TrailEdgeParameter.copy"]], "from_data() (compas_cem.optimization.trailedgeparameter class method)": [[617, "compas_cem.optimization.TrailEdgeParameter.from_data"]], "from_json() (compas_cem.optimization.trailedgeparameter class method)": [[618, "compas_cem.optimization.TrailEdgeParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.trailedgeparameter class method)": [[619, "compas_cem.optimization.TrailEdgeParameter.from_jsonstring"]], "key() (compas_cem.optimization.trailedgeparameter method)": [[620, "compas_cem.optimization.TrailEdgeParameter.key"]], "sha256() (compas_cem.optimization.trailedgeparameter method)": [[621, "compas_cem.optimization.TrailEdgeParameter.sha256"]], "start_value() (compas_cem.optimization.trailedgeparameter method)": [[622, "compas_cem.optimization.TrailEdgeParameter.start_value"]], "to_data() (compas_cem.optimization.trailedgeparameter method)": [[623, "compas_cem.optimization.TrailEdgeParameter.to_data"]], "to_json() (compas_cem.optimization.trailedgeparameter method)": [[624, "compas_cem.optimization.TrailEdgeParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.trailedgeparameter method)": [[625, "compas_cem.optimization.TrailEdgeParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.trailedgeparameter method)": [[626, "compas_cem.optimization.TrailEdgeParameter.validate_data"]], "validate_json() (compas_cem.optimization.trailedgeparameter method)": [[627, "compas_cem.optimization.TrailEdgeParameter.validate_json"]], "solve_proxy() (in module compas_cem.optimization)": [[628, "compas_cem.optimization.solve_proxy"]], "formartist (class in compas_cem.plotters)": [[629, "compas_cem.plotters.FormArtist"]], "build() (compas_cem.plotters.formartist static method)": [[630, "compas_cem.plotters.FormArtist.build"]], "build_as() (compas_cem.plotters.formartist static method)": [[631, "compas_cem.plotters.FormArtist.build_as"]], "clear() (compas_cem.plotters.formartist method)": [[632, "compas_cem.plotters.FormArtist.clear"]], "clear_edges() (compas_cem.plotters.formartist method)": [[633, "compas_cem.plotters.FormArtist.clear_edges"]], "clear_nodes() (compas_cem.plotters.formartist method)": [[634, "compas_cem.plotters.FormArtist.clear_nodes"]], "draw() (compas_cem.plotters.formartist method)": [[635, "compas_cem.plotters.FormArtist.draw"]], "draw_collection() (compas_cem.plotters.formartist static method)": [[636, "compas_cem.plotters.FormArtist.draw_collection"]], "draw_edgelabels() (compas_cem.plotters.formartist method)": [[637, "compas_cem.plotters.FormArtist.draw_edgelabels"]], "draw_edges() (compas_cem.plotters.formartist method)": [[638, "compas_cem.plotters.FormArtist.draw_edges"]], "draw_loads() (compas_cem.plotters.formartist method)": [[639, "compas_cem.plotters.FormArtist.draw_loads"]], "draw_nodelabels() (compas_cem.plotters.formartist method)": [[640, "compas_cem.plotters.FormArtist.draw_nodelabels"]], "draw_nodes() (compas_cem.plotters.formartist method)": [[641, "compas_cem.plotters.FormArtist.draw_nodes"]], "draw_reactions() (compas_cem.plotters.formartist method)": [[642, "compas_cem.plotters.FormArtist.draw_reactions"]], "redraw() (compas_cem.plotters.formartist static method)": [[643, "compas_cem.plotters.FormArtist.redraw"]], "register() (compas_cem.plotters.formartist static method)": [[644, "compas_cem.plotters.FormArtist.register"]], "update_data() (compas_cem.plotters.formartist method)": [[645, "compas_cem.plotters.FormArtist.update_data"]], "viewbox() (compas_cem.plotters.formartist method)": [[646, "compas_cem.plotters.FormArtist.viewbox"]], "plotter (class in compas_cem.plotters)": [[647, "compas_cem.plotters.Plotter"]], "add() (compas_cem.plotters.plotter method)": [[648, "compas_cem.plotters.Plotter.add"]], "add_from_list() (compas_cem.plotters.plotter method)": [[649, "compas_cem.plotters.Plotter.add_from_list"]], "draw() (compas_cem.plotters.plotter method)": [[650, "compas_cem.plotters.Plotter.draw"]], "find() (compas_cem.plotters.plotter method)": [[651, "compas_cem.plotters.Plotter.find"]], "on() (compas_cem.plotters.plotter method)": [[652, "compas_cem.plotters.Plotter.on"]], "pause() (compas_cem.plotters.plotter method)": [[653, "compas_cem.plotters.Plotter.pause"]], "redraw() (compas_cem.plotters.plotter method)": [[654, "compas_cem.plotters.Plotter.redraw"]], "register_listener() (compas_cem.plotters.plotter method)": [[655, "compas_cem.plotters.Plotter.register_listener"]], "save() (compas_cem.plotters.plotter method)": [[656, "compas_cem.plotters.Plotter.save"]], "show() (compas_cem.plotters.plotter method)": [[657, "compas_cem.plotters.Plotter.show"]], "zoom_extents() (compas_cem.plotters.plotter method)": [[658, "compas_cem.plotters.Plotter.zoom_extents"]], "topologyartist (class in compas_cem.plotters)": [[659, "compas_cem.plotters.TopologyArtist"]], "build() (compas_cem.plotters.topologyartist static method)": [[660, "compas_cem.plotters.TopologyArtist.build"]], "build_as() (compas_cem.plotters.topologyartist static method)": [[661, "compas_cem.plotters.TopologyArtist.build_as"]], "clear() (compas_cem.plotters.topologyartist method)": [[662, "compas_cem.plotters.TopologyArtist.clear"]], "clear_edges() (compas_cem.plotters.topologyartist method)": [[663, "compas_cem.plotters.TopologyArtist.clear_edges"]], "clear_nodes() (compas_cem.plotters.topologyartist method)": [[664, "compas_cem.plotters.TopologyArtist.clear_nodes"]], "draw() (compas_cem.plotters.topologyartist method)": [[665, "compas_cem.plotters.TopologyArtist.draw"]], "draw_collection() (compas_cem.plotters.topologyartist static method)": [[666, "compas_cem.plotters.TopologyArtist.draw_collection"]], "draw_edgelabels() (compas_cem.plotters.topologyartist method)": [[667, "compas_cem.plotters.TopologyArtist.draw_edgelabels"]], "draw_edges() (compas_cem.plotters.topologyartist method)": [[668, "compas_cem.plotters.TopologyArtist.draw_edges"]], "draw_loads() (compas_cem.plotters.topologyartist method)": [[669, "compas_cem.plotters.TopologyArtist.draw_loads"]], "draw_nodelabels() (compas_cem.plotters.topologyartist method)": [[670, "compas_cem.plotters.TopologyArtist.draw_nodelabels"]], "draw_nodes() (compas_cem.plotters.topologyartist method)": [[671, "compas_cem.plotters.TopologyArtist.draw_nodes"]], "redraw() (compas_cem.plotters.topologyartist static method)": [[672, "compas_cem.plotters.TopologyArtist.redraw"]], "register() (compas_cem.plotters.topologyartist static method)": [[673, "compas_cem.plotters.TopologyArtist.register"]], "update_data() (compas_cem.plotters.topologyartist method)": [[674, "compas_cem.plotters.TopologyArtist.update_data"]], "viewbox() (compas_cem.plotters.topologyartist method)": [[675, "compas_cem.plotters.TopologyArtist.viewbox"]], "nodesupport (class in compas_cem.supports)": [[676, "compas_cem.supports.NodeSupport"]], "tostring() (compas_cem.supports.nodesupport method)": [[677, "compas_cem.supports.NodeSupport.ToString"]], "copy() (compas_cem.supports.nodesupport method)": [[678, "compas_cem.supports.NodeSupport.copy"]], "from_data() (compas_cem.supports.nodesupport class method)": [[679, "compas_cem.supports.NodeSupport.from_data"]], "from_json() (compas_cem.supports.nodesupport class method)": [[680, "compas_cem.supports.NodeSupport.from_json"]], "from_jsonstring() (compas_cem.supports.nodesupport class method)": [[681, "compas_cem.supports.NodeSupport.from_jsonstring"]], "from_point() (compas_cem.supports.nodesupport class method)": [[682, "compas_cem.supports.NodeSupport.from_point"]], "sha256() (compas_cem.supports.nodesupport method)": [[683, "compas_cem.supports.NodeSupport.sha256"]], "to_data() (compas_cem.supports.nodesupport method)": [[684, "compas_cem.supports.NodeSupport.to_data"]], "to_json() (compas_cem.supports.nodesupport method)": [[685, "compas_cem.supports.NodeSupport.to_json"]], "to_jsonstring() (compas_cem.supports.nodesupport method)": [[686, "compas_cem.supports.NodeSupport.to_jsonstring"]], "validate_data() (compas_cem.supports.nodesupport method)": [[687, "compas_cem.supports.NodeSupport.validate_data"]], "validate_json() (compas_cem.supports.nodesupport method)": [[688, "compas_cem.supports.NodeSupport.validate_json"]]}})