Search.setIndex({"docnames": ["_examples/01_python", "_examples/01_python/01", "_examples/01_python/02", "_examples/01_python/03", "_examples/01_python/04", "_examples/01_python/05", "_examples/02_ghpython", "_examples/02_ghpython/bridge_2d", "_examples/02_ghpython/bridge_3d", "_examples/02_ghpython/dome", "_examples/02_ghpython/jessen", "_examples/02_ghpython/spiral", "api", "api/compas_cem", "api/compas_cem.diagrams", "api/compas_cem.elements", "api/compas_cem.equilibrium", "api/compas_cem.loads", "api/compas_cem.optimization", "api/compas_cem.plotters", "api/compas_cem.supports", "api/compas_cem.viewers", "api/generated/compas_cem.diagrams.FormDiagram", "api/generated/compas_cem.diagrams.FormDiagram.ToString", "api/generated/compas_cem.diagrams.FormDiagram.add_edge", "api/generated/compas_cem.diagrams.FormDiagram.add_node", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.clear", "api/generated/compas_cem.diagrams.FormDiagram.complement", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.copy", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings", "api/generated/compas_cem.diagrams.FormDiagram.degree", "api/generated/compas_cem.diagrams.FormDiagram.degree_in", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.degree_out", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge", "api/generated/compas_cem.diagrams.FormDiagram.delete_node", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction", "api/generated/compas_cem.diagrams.FormDiagram.edge_force", "api/generated/compas_cem.diagrams.FormDiagram.edge_length", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.FormDiagram.edge_plane", "api/generated/compas_cem.diagrams.FormDiagram.edge_point", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector", "api/generated/compas_cem.diagrams.FormDiagram.edges", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes", "api/generated/compas_cem.diagrams.FormDiagram.edges_where", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles", "api/generated/compas_cem.diagrams.FormDiagram.from_data", "api/generated/compas_cem.diagrams.FormDiagram.from_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_json", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.from_lines", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.from_obj", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.FormDiagram.gkey", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key", "api/generated/compas_cem.diagrams.FormDiagram.has_edge", "api/generated/compas_cem.diagrams.FormDiagram.has_node", "api/generated/compas_cem.diagrams.FormDiagram.index_key", "api/generated/compas_cem.diagrams.FormDiagram.index_uv", "api/generated/compas_cem.diagrams.FormDiagram.is_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed", "api/generated/compas_cem.diagrams.FormDiagram.is_edge_supported", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support", "api/generated/compas_cem.diagrams.FormDiagram.is_planar", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.is_xy", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey", "api/generated/compas_cem.diagrams.FormDiagram.key_index", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.leaves", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood", "api/generated/compas_cem.diagrams.FormDiagram.neighbors", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates", "api/generated/compas_cem.diagrams.FormDiagram.node_exists", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey", "api/generated/compas_cem.diagrams.FormDiagram.node_key", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian", "api/generated/compas_cem.diagrams.FormDiagram.node_load", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.FormDiagram.node_sample", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.nodes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force", "api/generated/compas_cem.diagrams.FormDiagram.sha256", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path", "api/generated/compas_cem.diagrams.FormDiagram.smooth", "api/generated/compas_cem.diagrams.FormDiagram.split_edge", "api/generated/compas_cem.diagrams.FormDiagram.summary", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes", "api/generated/compas_cem.diagrams.FormDiagram.to_data", "api/generated/compas_cem.diagrams.FormDiagram.to_json", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.FormDiagram.to_lines", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.FormDiagram.to_obj", "api/generated/compas_cem.diagrams.FormDiagram.to_points", "api/generated/compas_cem.diagrams.FormDiagram.transform", "api/generated/compas_cem.diagrams.FormDiagram.transformed", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.FormDiagram.update_dea", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.FormDiagram.update_dna", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.FormDiagram.uv_index", "api/generated/compas_cem.diagrams.FormDiagram.validate_data", "api/generated/compas_cem.diagrams.FormDiagram.validate_json", "api/generated/compas_cem.diagrams.TopologyDiagram", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.clear", "api/generated/compas_cem.diagrams.TopologyDiagram.complement", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.copy", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.degree", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.direct_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector", "api/generated/compas_cem.diagrams.TopologyDiagram.edges", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data", "api/generated/compas_cem.diagrams.TopologyDiagram.from_dualquadmesh", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node", "api/generated/compas_cem.diagrams.TopologyDiagram.has_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv", "api/generated/compas_cem.diagrams.TopologyDiagram.indirect_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_direct_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_edge_supported", "api/generated/compas_cem.diagrams.TopologyDiagram.is_indirect_deviation_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_direct_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_indirect_deviation_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_last", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.sha256", "api/generated/compas_cem.diagrams.TopologyDiagram.shift_trail", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge", "api/generated/compas_cem.diagrams.TopologyDiagram.summary", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points", "api/generated/compas_cem.diagrams.TopologyDiagram.trail", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.trails", "api/generated/compas_cem.diagrams.TopologyDiagram.trails_sequences", "api/generated/compas_cem.diagrams.TopologyDiagram.transform", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json", "api/generated/compas_cem.elements.DeviationEdge", "api/generated/compas_cem.elements.DeviationEdge.ToString", "api/generated/compas_cem.elements.DeviationEdge.copy", "api/generated/compas_cem.elements.DeviationEdge.from_data", "api/generated/compas_cem.elements.DeviationEdge.from_json", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.from_line", "api/generated/compas_cem.elements.DeviationEdge.sha256", "api/generated/compas_cem.elements.DeviationEdge.to_data", "api/generated/compas_cem.elements.DeviationEdge.to_json", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring", "api/generated/compas_cem.elements.DeviationEdge.validate_data", "api/generated/compas_cem.elements.DeviationEdge.validate_json", "api/generated/compas_cem.elements.Node", "api/generated/compas_cem.elements.Node.ToString", "api/generated/compas_cem.elements.Node.copy", "api/generated/compas_cem.elements.Node.from_data", "api/generated/compas_cem.elements.Node.from_json", "api/generated/compas_cem.elements.Node.from_jsonstring", "api/generated/compas_cem.elements.Node.from_point", "api/generated/compas_cem.elements.Node.sha256", "api/generated/compas_cem.elements.Node.to_data", "api/generated/compas_cem.elements.Node.to_json", "api/generated/compas_cem.elements.Node.to_jsonstring", "api/generated/compas_cem.elements.Node.validate_data", "api/generated/compas_cem.elements.Node.validate_json", "api/generated/compas_cem.elements.TrailEdge", "api/generated/compas_cem.elements.TrailEdge.ToString", "api/generated/compas_cem.elements.TrailEdge.copy", "api/generated/compas_cem.elements.TrailEdge.from_data", "api/generated/compas_cem.elements.TrailEdge.from_json", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring", "api/generated/compas_cem.elements.TrailEdge.from_line", "api/generated/compas_cem.elements.TrailEdge.sha256", "api/generated/compas_cem.elements.TrailEdge.to_data", "api/generated/compas_cem.elements.TrailEdge.to_json", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring", "api/generated/compas_cem.elements.TrailEdge.validate_data", "api/generated/compas_cem.elements.TrailEdge.validate_json", "api/generated/compas_cem.equilibrium.static_equilibrium", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy", "api/generated/compas_cem.loads.NodeLoad", "api/generated/compas_cem.loads.NodeLoad.ToString", "api/generated/compas_cem.loads.NodeLoad.copy", "api/generated/compas_cem.loads.NodeLoad.from_data", "api/generated/compas_cem.loads.NodeLoad.from_json", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector", "api/generated/compas_cem.loads.NodeLoad.sha256", "api/generated/compas_cem.loads.NodeLoad.to_data", "api/generated/compas_cem.loads.NodeLoad.to_json", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring", "api/generated/compas_cem.loads.NodeLoad.validate_data", "api/generated/compas_cem.loads.NodeLoad.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.sha256", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key", "api/generated/compas_cem.optimization.DeviationEdgeParameter.sha256", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json", "api/generated/compas_cem.optimization.LineConstraint", "api/generated/compas_cem.optimization.LineConstraint.ToString", "api/generated/compas_cem.optimization.LineConstraint.copy", "api/generated/compas_cem.optimization.LineConstraint.from_data", "api/generated/compas_cem.optimization.LineConstraint.from_json", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.key", "api/generated/compas_cem.optimization.LineConstraint.penalty", "api/generated/compas_cem.optimization.LineConstraint.reference", "api/generated/compas_cem.optimization.LineConstraint.sha256", "api/generated/compas_cem.optimization.LineConstraint.target", "api/generated/compas_cem.optimization.LineConstraint.to_data", "api/generated/compas_cem.optimization.LineConstraint.to_json", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring", "api/generated/compas_cem.optimization.LineConstraint.validate_data", "api/generated/compas_cem.optimization.LineConstraint.validate_json", "api/generated/compas_cem.optimization.NodeLoadXParameter", "api/generated/compas_cem.optimization.NodeLoadXParameter.ToString", "api/generated/compas_cem.optimization.NodeLoadXParameter.attr_name", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_low", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_up", "api/generated/compas_cem.optimization.NodeLoadXParameter.copy", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_data", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_json", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_jsonstring", "api/generated/compas_cem.optimization.NodeLoadXParameter.key", "api/generated/compas_cem.optimization.NodeLoadXParameter.sha256", "api/generated/compas_cem.optimization.NodeLoadXParameter.start_value", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_data", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_json", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_jsonstring", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_data", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_json", "api/generated/compas_cem.optimization.NodeLoadYParameter", "api/generated/compas_cem.optimization.NodeLoadYParameter.ToString", "api/generated/compas_cem.optimization.NodeLoadYParameter.attr_name", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_low", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_up", "api/generated/compas_cem.optimization.NodeLoadYParameter.copy", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_data", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_json", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_jsonstring", "api/generated/compas_cem.optimization.NodeLoadYParameter.key", "api/generated/compas_cem.optimization.NodeLoadYParameter.sha256", "api/generated/compas_cem.optimization.NodeLoadYParameter.start_value", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_data", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_json", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_jsonstring", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_data", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_json", "api/generated/compas_cem.optimization.NodeLoadZParameter", "api/generated/compas_cem.optimization.NodeLoadZParameter.ToString", "api/generated/compas_cem.optimization.NodeLoadZParameter.attr_name", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_low", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_up", "api/generated/compas_cem.optimization.NodeLoadZParameter.copy", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_data", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_json", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_jsonstring", "api/generated/compas_cem.optimization.NodeLoadZParameter.key", "api/generated/compas_cem.optimization.NodeLoadZParameter.sha256", "api/generated/compas_cem.optimization.NodeLoadZParameter.start_value", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_data", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_json", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_jsonstring", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_data", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_json", "api/generated/compas_cem.optimization.Optimizer", "api/generated/compas_cem.optimization.Optimizer.ToString", "api/generated/compas_cem.optimization.Optimizer.add_constraint", "api/generated/compas_cem.optimization.Optimizer.add_parameter", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity", "api/generated/compas_cem.optimization.Optimizer.copy", "api/generated/compas_cem.optimization.Optimizer.from_data", "api/generated/compas_cem.optimization.Optimizer.from_json", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring", "api/generated/compas_cem.optimization.Optimizer.gradient_func", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters", "api/generated/compas_cem.optimization.Optimizer.objective_func", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters", "api/generated/compas_cem.optimization.Optimizer.remove_constraint", "api/generated/compas_cem.optimization.Optimizer.remove_parameter", "api/generated/compas_cem.optimization.Optimizer.sha256", "api/generated/compas_cem.optimization.Optimizer.solve", "api/generated/compas_cem.optimization.Optimizer.to_data", "api/generated/compas_cem.optimization.Optimizer.to_json", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring", "api/generated/compas_cem.optimization.Optimizer.validate_data", "api/generated/compas_cem.optimization.Optimizer.validate_json", "api/generated/compas_cem.optimization.OriginNodeXParameter", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.key", "api/generated/compas_cem.optimization.OriginNodeXParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeYParameter", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.key", "api/generated/compas_cem.optimization.OriginNodeYParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json", "api/generated/compas_cem.optimization.OriginNodeZParameter", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.key", "api/generated/compas_cem.optimization.OriginNodeZParameter.sha256", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json", "api/generated/compas_cem.optimization.PlaneConstraint", "api/generated/compas_cem.optimization.PlaneConstraint.ToString", "api/generated/compas_cem.optimization.PlaneConstraint.copy", "api/generated/compas_cem.optimization.PlaneConstraint.from_data", "api/generated/compas_cem.optimization.PlaneConstraint.from_json", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.key", "api/generated/compas_cem.optimization.PlaneConstraint.penalty", "api/generated/compas_cem.optimization.PlaneConstraint.reference", "api/generated/compas_cem.optimization.PlaneConstraint.sha256", "api/generated/compas_cem.optimization.PlaneConstraint.target", "api/generated/compas_cem.optimization.PlaneConstraint.to_data", "api/generated/compas_cem.optimization.PlaneConstraint.to_json", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json", "api/generated/compas_cem.optimization.PointConstraint", "api/generated/compas_cem.optimization.PointConstraint.ToString", "api/generated/compas_cem.optimization.PointConstraint.copy", "api/generated/compas_cem.optimization.PointConstraint.from_data", "api/generated/compas_cem.optimization.PointConstraint.from_json", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.key", "api/generated/compas_cem.optimization.PointConstraint.penalty", "api/generated/compas_cem.optimization.PointConstraint.reference", "api/generated/compas_cem.optimization.PointConstraint.sha256", "api/generated/compas_cem.optimization.PointConstraint.target", "api/generated/compas_cem.optimization.PointConstraint.to_data", "api/generated/compas_cem.optimization.PointConstraint.to_json", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring", "api/generated/compas_cem.optimization.PointConstraint.validate_data", "api/generated/compas_cem.optimization.PointConstraint.validate_json", "api/generated/compas_cem.optimization.ReactionForceConstraint", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.key", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference", "api/generated/compas_cem.optimization.ReactionForceConstraint.sha256", "api/generated/compas_cem.optimization.ReactionForceConstraint.target", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.sha256", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json", "api/generated/compas_cem.optimization.TrailEdgeParameter", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.key", "api/generated/compas_cem.optimization.TrailEdgeParameter.sha256", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json", "api/generated/compas_cem.optimization.solve_proxy", "api/generated/compas_cem.plotters.FormArtist", "api/generated/compas_cem.plotters.FormArtist.build", "api/generated/compas_cem.plotters.FormArtist.build_as", "api/generated/compas_cem.plotters.FormArtist.clear", "api/generated/compas_cem.plotters.FormArtist.clear_edges", "api/generated/compas_cem.plotters.FormArtist.clear_nodes", "api/generated/compas_cem.plotters.FormArtist.draw", "api/generated/compas_cem.plotters.FormArtist.draw_collection", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels", "api/generated/compas_cem.plotters.FormArtist.draw_edges", "api/generated/compas_cem.plotters.FormArtist.draw_loads", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels", "api/generated/compas_cem.plotters.FormArtist.draw_nodes", "api/generated/compas_cem.plotters.FormArtist.draw_reactions", "api/generated/compas_cem.plotters.FormArtist.redraw", "api/generated/compas_cem.plotters.FormArtist.register", "api/generated/compas_cem.plotters.FormArtist.update_data", "api/generated/compas_cem.plotters.FormArtist.viewbox", "api/generated/compas_cem.plotters.Plotter", "api/generated/compas_cem.plotters.Plotter.add", "api/generated/compas_cem.plotters.Plotter.add_from_list", "api/generated/compas_cem.plotters.Plotter.draw", "api/generated/compas_cem.plotters.Plotter.find", "api/generated/compas_cem.plotters.Plotter.on", "api/generated/compas_cem.plotters.Plotter.pause", "api/generated/compas_cem.plotters.Plotter.redraw", "api/generated/compas_cem.plotters.Plotter.register_listener", "api/generated/compas_cem.plotters.Plotter.save", "api/generated/compas_cem.plotters.Plotter.show", "api/generated/compas_cem.plotters.Plotter.zoom_extents", "api/generated/compas_cem.plotters.TopologyArtist", "api/generated/compas_cem.plotters.TopologyArtist.build", "api/generated/compas_cem.plotters.TopologyArtist.build_as", "api/generated/compas_cem.plotters.TopologyArtist.clear", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes", "api/generated/compas_cem.plotters.TopologyArtist.draw", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes", "api/generated/compas_cem.plotters.TopologyArtist.redraw", "api/generated/compas_cem.plotters.TopologyArtist.register", "api/generated/compas_cem.plotters.TopologyArtist.update_data", "api/generated/compas_cem.plotters.TopologyArtist.viewbox", "api/generated/compas_cem.supports.NodeSupport", "api/generated/compas_cem.supports.NodeSupport.ToString", "api/generated/compas_cem.supports.NodeSupport.copy", "api/generated/compas_cem.supports.NodeSupport.from_data", "api/generated/compas_cem.supports.NodeSupport.from_json", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring", "api/generated/compas_cem.supports.NodeSupport.from_point", "api/generated/compas_cem.supports.NodeSupport.sha256", "api/generated/compas_cem.supports.NodeSupport.to_data", "api/generated/compas_cem.supports.NodeSupport.to_json", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring", "api/generated/compas_cem.supports.NodeSupport.validate_data", "api/generated/compas_cem.supports.NodeSupport.validate_json", "changelog", "citing", "examples", "index", "installation", "license"], "filenames": ["_examples/01_python.rst", "_examples/01_python/01.rst", "_examples/01_python/02.rst", "_examples/01_python/03.rst", "_examples/01_python/04.rst", "_examples/01_python/05.rst", "_examples/02_ghpython.rst", "_examples/02_ghpython/bridge_2d.rst", "_examples/02_ghpython/bridge_3d.rst", "_examples/02_ghpython/dome.rst", "_examples/02_ghpython/jessen.rst", "_examples/02_ghpython/spiral.rst", "api.rst", "api/compas_cem.rst", "api/compas_cem.diagrams.rst", "api/compas_cem.elements.rst", "api/compas_cem.equilibrium.rst", "api/compas_cem.loads.rst", "api/compas_cem.optimization.rst", "api/compas_cem.plotters.rst", "api/compas_cem.supports.rst", "api/compas_cem.viewers.rst", "api/generated/compas_cem.diagrams.FormDiagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.ToString.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.add_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.clear.rst", "api/generated/compas_cem.diagrams.FormDiagram.complement.rst", "api/generated/compas_cem.diagrams.FormDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.copy.rst", "api/generated/compas_cem.diagrams.FormDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.FormDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.FormDiagram.from_topology_diagram.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.has_node.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_edge_supported.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.key_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.leaves.rst", "api/generated/compas_cem.diagrams.FormDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.FormDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.FormDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_key.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_load.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.FormDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.FormDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.FormDiagram.sha256.rst", "api/generated/compas_cem.diagrams.FormDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.FormDiagram.smooth.rst", "api/generated/compas_cem.diagrams.FormDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.FormDiagram.summary.rst", "api/generated/compas_cem.diagrams.FormDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_json.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.FormDiagram.to_points.rst", "api/generated/compas_cem.diagrams.FormDiagram.transform.rst", "api/generated/compas_cem.diagrams.FormDiagram.transformed.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.FormDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.FormDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.FormDiagram.validate_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.ToString.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.add_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.build_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.clear.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.complement.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connected_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.copy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.count_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.degree_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.delete_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.direct_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_direction.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_length_2.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_midpoint.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_point.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edge_vector.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.edges_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_crossings.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.find_cycles.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_dualquadmesh.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.from_pointcloud.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.get_any_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.gkey_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_node.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.has_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.index_uv.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.indirect_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_crossed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_direct_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_edge_supported.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_indirect_deviation_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_leaf.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_connected.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_loaded.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_origin.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_node_support.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_trail_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.is_xy.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.key_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.leaves.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighborhood.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_in.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.neighbors_out.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_degree_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_embed_in_plane.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_coordinates.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_exists.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_gkey.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_key.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_laplacian.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_load.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sample.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_sequence.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.nodes_where_predicate.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_direct_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_indirect_deviation_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.number_of_trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.origin_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.reaction_force.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequence_last.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.sha256.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.shift_trail.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.shortest_path.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.smooth.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.split_edge.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.summary.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.support_nodes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_json.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_jsonstring.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_lines.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_networkx.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_obj.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.to_points.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_edges.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trail_sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trails.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.trails_sequences.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transform.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.transformed.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_edge_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.unset_node_attribute.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dea.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_default_node_attributes.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_dna.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.update_node_xyz.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.uv_index.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_data.rst", "api/generated/compas_cem.diagrams.TopologyDiagram.validate_json.rst", "api/generated/compas_cem.elements.DeviationEdge.rst", "api/generated/compas_cem.elements.DeviationEdge.ToString.rst", "api/generated/compas_cem.elements.DeviationEdge.copy.rst", "api/generated/compas_cem.elements.DeviationEdge.from_data.rst", "api/generated/compas_cem.elements.DeviationEdge.from_json.rst", "api/generated/compas_cem.elements.DeviationEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.from_line.rst", "api/generated/compas_cem.elements.DeviationEdge.sha256.rst", "api/generated/compas_cem.elements.DeviationEdge.to_data.rst", "api/generated/compas_cem.elements.DeviationEdge.to_json.rst", "api/generated/compas_cem.elements.DeviationEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_data.rst", "api/generated/compas_cem.elements.DeviationEdge.validate_json.rst", "api/generated/compas_cem.elements.Node.rst", "api/generated/compas_cem.elements.Node.ToString.rst", "api/generated/compas_cem.elements.Node.copy.rst", "api/generated/compas_cem.elements.Node.from_data.rst", "api/generated/compas_cem.elements.Node.from_json.rst", "api/generated/compas_cem.elements.Node.from_jsonstring.rst", "api/generated/compas_cem.elements.Node.from_point.rst", "api/generated/compas_cem.elements.Node.sha256.rst", "api/generated/compas_cem.elements.Node.to_data.rst", "api/generated/compas_cem.elements.Node.to_json.rst", "api/generated/compas_cem.elements.Node.to_jsonstring.rst", "api/generated/compas_cem.elements.Node.validate_data.rst", "api/generated/compas_cem.elements.Node.validate_json.rst", "api/generated/compas_cem.elements.TrailEdge.rst", "api/generated/compas_cem.elements.TrailEdge.ToString.rst", "api/generated/compas_cem.elements.TrailEdge.copy.rst", "api/generated/compas_cem.elements.TrailEdge.from_data.rst", "api/generated/compas_cem.elements.TrailEdge.from_json.rst", "api/generated/compas_cem.elements.TrailEdge.from_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.from_line.rst", "api/generated/compas_cem.elements.TrailEdge.sha256.rst", "api/generated/compas_cem.elements.TrailEdge.to_data.rst", "api/generated/compas_cem.elements.TrailEdge.to_json.rst", "api/generated/compas_cem.elements.TrailEdge.to_jsonstring.rst", "api/generated/compas_cem.elements.TrailEdge.validate_data.rst", "api/generated/compas_cem.elements.TrailEdge.validate_json.rst", "api/generated/compas_cem.equilibrium.static_equilibrium.rst", "api/generated/compas_cem.equilibrium.static_equilibrium_numpy.rst", "api/generated/compas_cem.loads.NodeLoad.rst", "api/generated/compas_cem.loads.NodeLoad.ToString.rst", "api/generated/compas_cem.loads.NodeLoad.copy.rst", "api/generated/compas_cem.loads.NodeLoad.from_data.rst", "api/generated/compas_cem.loads.NodeLoad.from_json.rst", "api/generated/compas_cem.loads.NodeLoad.from_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.from_point_and_vector.rst", "api/generated/compas_cem.loads.NodeLoad.sha256.rst", "api/generated/compas_cem.loads.NodeLoad.to_data.rst", "api/generated/compas_cem.loads.NodeLoad.to_json.rst", "api/generated/compas_cem.loads.NodeLoad.to_jsonstring.rst", "api/generated/compas_cem.loads.NodeLoad.validate_data.rst", "api/generated/compas_cem.loads.NodeLoad.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.penalty.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.reference.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.sha256.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.target.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.key.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.sha256.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.DeviationEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.LineConstraint.rst", "api/generated/compas_cem.optimization.LineConstraint.ToString.rst", "api/generated/compas_cem.optimization.LineConstraint.copy.rst", "api/generated/compas_cem.optimization.LineConstraint.from_data.rst", "api/generated/compas_cem.optimization.LineConstraint.from_json.rst", "api/generated/compas_cem.optimization.LineConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.key.rst", "api/generated/compas_cem.optimization.LineConstraint.penalty.rst", "api/generated/compas_cem.optimization.LineConstraint.reference.rst", "api/generated/compas_cem.optimization.LineConstraint.sha256.rst", "api/generated/compas_cem.optimization.LineConstraint.target.rst", "api/generated/compas_cem.optimization.LineConstraint.to_data.rst", "api/generated/compas_cem.optimization.LineConstraint.to_json.rst", "api/generated/compas_cem.optimization.LineConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_data.rst", "api/generated/compas_cem.optimization.LineConstraint.validate_json.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.ToString.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.attr_name.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_low.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.bound_up.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.copy.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_data.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_json.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.key.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.sha256.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.start_value.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_data.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_json.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_data.rst", "api/generated/compas_cem.optimization.NodeLoadXParameter.validate_json.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.ToString.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.attr_name.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_low.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.bound_up.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.copy.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_data.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_json.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.key.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.sha256.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.start_value.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_data.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_json.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_data.rst", "api/generated/compas_cem.optimization.NodeLoadYParameter.validate_json.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.ToString.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.attr_name.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_low.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.bound_up.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.copy.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_data.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_json.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.key.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.sha256.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.start_value.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_data.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_json.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_data.rst", "api/generated/compas_cem.optimization.NodeLoadZParameter.validate_json.rst", "api/generated/compas_cem.optimization.Optimizer.rst", "api/generated/compas_cem.optimization.Optimizer.ToString.rst", "api/generated/compas_cem.optimization.Optimizer.add_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.add_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.check_optimization_sanity.rst", "api/generated/compas_cem.optimization.Optimizer.copy.rst", "api/generated/compas_cem.optimization.Optimizer.from_data.rst", "api/generated/compas_cem.optimization.Optimizer.from_json.rst", "api/generated/compas_cem.optimization.Optimizer.from_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.gradient_func.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_constraints.rst", "api/generated/compas_cem.optimization.Optimizer.number_of_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.objective_func.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_bounds.rst", "api/generated/compas_cem.optimization.Optimizer.optimization_parameters.rst", "api/generated/compas_cem.optimization.Optimizer.remove_constraint.rst", "api/generated/compas_cem.optimization.Optimizer.remove_parameter.rst", "api/generated/compas_cem.optimization.Optimizer.sha256.rst", "api/generated/compas_cem.optimization.Optimizer.solve.rst", "api/generated/compas_cem.optimization.Optimizer.to_data.rst", "api/generated/compas_cem.optimization.Optimizer.to_json.rst", "api/generated/compas_cem.optimization.Optimizer.to_jsonstring.rst", "api/generated/compas_cem.optimization.Optimizer.validate_data.rst", "api/generated/compas_cem.optimization.Optimizer.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeXParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeYParameter.validate_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.ToString.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.attr_name.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_low.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.bound_up.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.copy.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.key.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.sha256.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.start_value.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_json.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_data.rst", "api/generated/compas_cem.optimization.OriginNodeZParameter.validate_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.rst", "api/generated/compas_cem.optimization.PlaneConstraint.ToString.rst", "api/generated/compas_cem.optimization.PlaneConstraint.copy.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.key.rst", "api/generated/compas_cem.optimization.PlaneConstraint.penalty.rst", "api/generated/compas_cem.optimization.PlaneConstraint.reference.rst", "api/generated/compas_cem.optimization.PlaneConstraint.sha256.rst", "api/generated/compas_cem.optimization.PlaneConstraint.target.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_json.rst", "api/generated/compas_cem.optimization.PlaneConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PlaneConstraint.validate_json.rst", "api/generated/compas_cem.optimization.PointConstraint.rst", "api/generated/compas_cem.optimization.PointConstraint.ToString.rst", "api/generated/compas_cem.optimization.PointConstraint.copy.rst", "api/generated/compas_cem.optimization.PointConstraint.from_data.rst", "api/generated/compas_cem.optimization.PointConstraint.from_json.rst", "api/generated/compas_cem.optimization.PointConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.key.rst", "api/generated/compas_cem.optimization.PointConstraint.penalty.rst", "api/generated/compas_cem.optimization.PointConstraint.reference.rst", "api/generated/compas_cem.optimization.PointConstraint.sha256.rst", "api/generated/compas_cem.optimization.PointConstraint.target.rst", "api/generated/compas_cem.optimization.PointConstraint.to_data.rst", "api/generated/compas_cem.optimization.PointConstraint.to_json.rst", "api/generated/compas_cem.optimization.PointConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_data.rst", "api/generated/compas_cem.optimization.PointConstraint.validate_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.copy.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.key.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.reference.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.sha256.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.target.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.ReactionForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.key.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.penalty.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.reference.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.sha256.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.target.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeForceConstraint.validate_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.ToString.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.attr_name.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_low.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.bound_up.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.copy.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.from_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.key.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.sha256.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.start_value.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_json.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.to_jsonstring.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_data.rst", "api/generated/compas_cem.optimization.TrailEdgeParameter.validate_json.rst", "api/generated/compas_cem.optimization.solve_proxy.rst", "api/generated/compas_cem.plotters.FormArtist.rst", "api/generated/compas_cem.plotters.FormArtist.build.rst", "api/generated/compas_cem.plotters.FormArtist.build_as.rst", "api/generated/compas_cem.plotters.FormArtist.clear.rst", "api/generated/compas_cem.plotters.FormArtist.clear_edges.rst", "api/generated/compas_cem.plotters.FormArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw.rst", "api/generated/compas_cem.plotters.FormArtist.draw_collection.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_edges.rst", "api/generated/compas_cem.plotters.FormArtist.draw_loads.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.FormArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.FormArtist.draw_reactions.rst", "api/generated/compas_cem.plotters.FormArtist.redraw.rst", "api/generated/compas_cem.plotters.FormArtist.register.rst", "api/generated/compas_cem.plotters.FormArtist.update_data.rst", "api/generated/compas_cem.plotters.FormArtist.viewbox.rst", "api/generated/compas_cem.plotters.Plotter.rst", "api/generated/compas_cem.plotters.Plotter.add.rst", "api/generated/compas_cem.plotters.Plotter.add_from_list.rst", "api/generated/compas_cem.plotters.Plotter.draw.rst", "api/generated/compas_cem.plotters.Plotter.find.rst", "api/generated/compas_cem.plotters.Plotter.on.rst", "api/generated/compas_cem.plotters.Plotter.pause.rst", "api/generated/compas_cem.plotters.Plotter.redraw.rst", "api/generated/compas_cem.plotters.Plotter.register_listener.rst", "api/generated/compas_cem.plotters.Plotter.save.rst", "api/generated/compas_cem.plotters.Plotter.show.rst", "api/generated/compas_cem.plotters.Plotter.zoom_extents.rst", "api/generated/compas_cem.plotters.TopologyArtist.rst", "api/generated/compas_cem.plotters.TopologyArtist.build.rst", "api/generated/compas_cem.plotters.TopologyArtist.build_as.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.clear_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_collection.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edgelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_edges.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_loads.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodelabels.rst", "api/generated/compas_cem.plotters.TopologyArtist.draw_nodes.rst", "api/generated/compas_cem.plotters.TopologyArtist.redraw.rst", "api/generated/compas_cem.plotters.TopologyArtist.register.rst", "api/generated/compas_cem.plotters.TopologyArtist.update_data.rst", "api/generated/compas_cem.plotters.TopologyArtist.viewbox.rst", "api/generated/compas_cem.supports.NodeSupport.rst", "api/generated/compas_cem.supports.NodeSupport.ToString.rst", "api/generated/compas_cem.supports.NodeSupport.copy.rst", "api/generated/compas_cem.supports.NodeSupport.from_data.rst", "api/generated/compas_cem.supports.NodeSupport.from_json.rst", "api/generated/compas_cem.supports.NodeSupport.from_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.from_point.rst", "api/generated/compas_cem.supports.NodeSupport.sha256.rst", "api/generated/compas_cem.supports.NodeSupport.to_data.rst", "api/generated/compas_cem.supports.NodeSupport.to_json.rst", "api/generated/compas_cem.supports.NodeSupport.to_jsonstring.rst", "api/generated/compas_cem.supports.NodeSupport.validate_data.rst", "api/generated/compas_cem.supports.NodeSupport.validate_json.rst", "changelog.rst", "citing.rst", "examples.rst", "index.rst", "installation.rst", "license.rst"], "titles": ["Python", "01. Simple Compression Structure", "02. Braced Tower in 2D", "03. Bridge Optimization in 2D", "04. Tree Structure in 2D", "05. Planar Tensegrity Wheel", "Grasshopper", "A. Bridge in 2D", "B. Tubular Bridge in 3D", "C. Circular Dome", "D. Jessen Tensegrity", "E. Spiral Staircase", "API Reference", "compas_cem", "compas_cem.diagrams", "compas_cem.elements", "compas_cem.equilibrium", "compas_cem.loads", "compas_cem.optimization", "compas_cem.plotters", "compas_cem.supports", "compas_cem.viewers", "FormDiagram", "FormDiagram.ToString", "FormDiagram.add_edge", "FormDiagram.add_node", "FormDiagram.adjacency_matrix", "FormDiagram.clear", "FormDiagram.complement", "FormDiagram.connected_edges", "FormDiagram.connectivity_matrix", "FormDiagram.copy", "FormDiagram.count_crossings", "FormDiagram.degree", "FormDiagram.degree_in", "FormDiagram.degree_matrix", "FormDiagram.degree_out", "FormDiagram.delete_edge", "FormDiagram.delete_node", "FormDiagram.edge_attribute", "FormDiagram.edge_attributes", "FormDiagram.edge_coordinates", "FormDiagram.edge_direction", "FormDiagram.edge_force", "FormDiagram.edge_length", "FormDiagram.edge_length_2", "FormDiagram.edge_midpoint", "FormDiagram.edge_plane", "FormDiagram.edge_point", "FormDiagram.edge_sample", "FormDiagram.edge_vector", "FormDiagram.edges", "FormDiagram.edges_attribute", "FormDiagram.edges_attributes", "FormDiagram.edges_where", "FormDiagram.edges_where_predicate", "FormDiagram.embed_in_plane", "FormDiagram.find_crossings", "FormDiagram.find_cycles", "FormDiagram.from_data", "FormDiagram.from_edges", "FormDiagram.from_json", "FormDiagram.from_jsonstring", "FormDiagram.from_lines", "FormDiagram.from_networkx", "FormDiagram.from_nodes_and_edges", "FormDiagram.from_obj", "FormDiagram.from_pointcloud", "FormDiagram.from_topology_diagram", "FormDiagram.get_any_edge", "FormDiagram.get_any_edges", "FormDiagram.get_any_node", "FormDiagram.get_any_nodes", "FormDiagram.gkey", "FormDiagram.gkey_key", "FormDiagram.has_edge", "FormDiagram.has_node", "FormDiagram.index_key", "FormDiagram.index_uv", "FormDiagram.is_connected", "FormDiagram.is_crossed", "FormDiagram.is_edge_supported", "FormDiagram.is_leaf", "FormDiagram.is_node_connected", "FormDiagram.is_node_loaded", "FormDiagram.is_node_support", "FormDiagram.is_planar", "FormDiagram.is_planar_embedding", "FormDiagram.is_xy", "FormDiagram.key_gkey", "FormDiagram.key_index", "FormDiagram.laplacian_matrix", "FormDiagram.leaves", "FormDiagram.loaded_nodes", "FormDiagram.neighborhood", "FormDiagram.neighbors", "FormDiagram.neighbors_in", "FormDiagram.neighbors_out", "FormDiagram.network_adjacency_matrix", "FormDiagram.network_connectivity_matrix", "FormDiagram.network_degree_matrix", "FormDiagram.network_embed_in_plane", "FormDiagram.network_is_planar", "FormDiagram.network_is_planar_embedding", "FormDiagram.network_laplacian_matrix", "FormDiagram.node_attribute", "FormDiagram.node_attributes", "FormDiagram.node_coordinates", "FormDiagram.node_exists", "FormDiagram.node_gkey", "FormDiagram.node_key", "FormDiagram.node_laplacian", "FormDiagram.node_load", "FormDiagram.node_neighborhood_centroid", "FormDiagram.node_sample", "FormDiagram.node_xyz", "FormDiagram.nodes", "FormDiagram.nodes_attribute", "FormDiagram.nodes_attributes", "FormDiagram.nodes_where", "FormDiagram.nodes_where_predicate", "FormDiagram.number_of_edges", "FormDiagram.number_of_loaded_nodes", "FormDiagram.number_of_nodes", "FormDiagram.number_of_support_nodes", "FormDiagram.reaction_force", "FormDiagram.sha256", "FormDiagram.shortest_path", "FormDiagram.smooth", "FormDiagram.split_edge", "FormDiagram.summary", "FormDiagram.support_nodes", "FormDiagram.to_data", "FormDiagram.to_json", "FormDiagram.to_jsonstring", "FormDiagram.to_lines", "FormDiagram.to_networkx", "FormDiagram.to_nodes_and_edges", "FormDiagram.to_obj", "FormDiagram.to_points", "FormDiagram.transform", "FormDiagram.transformed", "FormDiagram.unset_edge_attribute", "FormDiagram.unset_node_attribute", "FormDiagram.update_dea", "FormDiagram.update_default_edge_attributes", "FormDiagram.update_default_node_attributes", "FormDiagram.update_dna", "FormDiagram.update_node_xyz", "FormDiagram.uv_index", "FormDiagram.validate_data", "FormDiagram.validate_json", "TopologyDiagram", "TopologyDiagram.ToString", "TopologyDiagram.add_edge", "TopologyDiagram.add_load", "TopologyDiagram.add_node", "TopologyDiagram.add_support", "TopologyDiagram.adjacency_matrix", "TopologyDiagram.auxiliary_trail_edges", "TopologyDiagram.auxiliary_trails", "TopologyDiagram.build_trails", "TopologyDiagram.clear", "TopologyDiagram.complement", "TopologyDiagram.connected_deviation_edges", "TopologyDiagram.connected_edges", "TopologyDiagram.connected_trail_edges", "TopologyDiagram.connectivity_matrix", "TopologyDiagram.copy", "TopologyDiagram.count_crossings", "TopologyDiagram.degree", "TopologyDiagram.degree_in", "TopologyDiagram.degree_matrix", "TopologyDiagram.degree_out", "TopologyDiagram.delete_edge", "TopologyDiagram.delete_node", "TopologyDiagram.deviation_edges", "TopologyDiagram.direct_deviation_edges", "TopologyDiagram.edge_attribute", "TopologyDiagram.edge_attributes", "TopologyDiagram.edge_coordinates", "TopologyDiagram.edge_direction", "TopologyDiagram.edge_force", "TopologyDiagram.edge_length", "TopologyDiagram.edge_length_2", "TopologyDiagram.edge_midpoint", "TopologyDiagram.edge_plane", "TopologyDiagram.edge_point", "TopologyDiagram.edge_sample", "TopologyDiagram.edge_sequence", "TopologyDiagram.edge_vector", "TopologyDiagram.edges", "TopologyDiagram.edges_attribute", "TopologyDiagram.edges_attributes", "TopologyDiagram.edges_where", "TopologyDiagram.edges_where_predicate", "TopologyDiagram.embed_in_plane", "TopologyDiagram.find_crossings", "TopologyDiagram.find_cycles", "TopologyDiagram.from_data", "TopologyDiagram.from_dualquadmesh", "TopologyDiagram.from_edges", "TopologyDiagram.from_json", "TopologyDiagram.from_jsonstring", "TopologyDiagram.from_lines", "TopologyDiagram.from_networkx", "TopologyDiagram.from_nodes_and_edges", "TopologyDiagram.from_obj", "TopologyDiagram.from_pointcloud", "TopologyDiagram.get_any_edge", "TopologyDiagram.get_any_edges", "TopologyDiagram.get_any_node", "TopologyDiagram.get_any_nodes", "TopologyDiagram.gkey", "TopologyDiagram.gkey_key", "TopologyDiagram.has_edge", "TopologyDiagram.has_node", "TopologyDiagram.has_trails", "TopologyDiagram.index_key", "TopologyDiagram.index_uv", "TopologyDiagram.indirect_deviation_edges", "TopologyDiagram.is_auxiliary_trail_edge", "TopologyDiagram.is_connected", "TopologyDiagram.is_crossed", "TopologyDiagram.is_deviation_edge", "TopologyDiagram.is_direct_deviation_edge", "TopologyDiagram.is_edge_supported", "TopologyDiagram.is_indirect_deviation_edge", "TopologyDiagram.is_leaf", "TopologyDiagram.is_node_connected", "TopologyDiagram.is_node_loaded", "TopologyDiagram.is_node_origin", "TopologyDiagram.is_node_support", "TopologyDiagram.is_planar", "TopologyDiagram.is_planar_embedding", "TopologyDiagram.is_trail_edge", "TopologyDiagram.is_xy", "TopologyDiagram.key_gkey", "TopologyDiagram.key_index", "TopologyDiagram.laplacian_matrix", "TopologyDiagram.leaves", "TopologyDiagram.loaded_nodes", "TopologyDiagram.neighborhood", "TopologyDiagram.neighbors", "TopologyDiagram.neighbors_in", "TopologyDiagram.neighbors_out", "TopologyDiagram.network_adjacency_matrix", "TopologyDiagram.network_connectivity_matrix", "TopologyDiagram.network_degree_matrix", "TopologyDiagram.network_embed_in_plane", "TopologyDiagram.network_is_planar", "TopologyDiagram.network_is_planar_embedding", "TopologyDiagram.network_laplacian_matrix", "TopologyDiagram.node_attribute", "TopologyDiagram.node_attributes", "TopologyDiagram.node_coordinates", "TopologyDiagram.node_exists", "TopologyDiagram.node_gkey", "TopologyDiagram.node_key", "TopologyDiagram.node_laplacian", "TopologyDiagram.node_load", "TopologyDiagram.node_neighborhood_centroid", "TopologyDiagram.node_sample", "TopologyDiagram.node_sequence", "TopologyDiagram.node_xyz", "TopologyDiagram.nodes", "TopologyDiagram.nodes_attribute", "TopologyDiagram.nodes_attributes", "TopologyDiagram.nodes_where", "TopologyDiagram.nodes_where_predicate", "TopologyDiagram.number_of_auxiliary_trails", "TopologyDiagram.number_of_deviation_edges", "TopologyDiagram.number_of_direct_deviation_edges", "TopologyDiagram.number_of_edges", "TopologyDiagram.number_of_indirect_deviation_edges", "TopologyDiagram.number_of_loaded_nodes", "TopologyDiagram.number_of_nodes", "TopologyDiagram.number_of_sequences", "TopologyDiagram.number_of_support_nodes", "TopologyDiagram.number_of_trail_edges", "TopologyDiagram.number_of_trails", "TopologyDiagram.origin_nodes", "TopologyDiagram.reaction_force", "TopologyDiagram.sequence_last", "TopologyDiagram.sequences", "TopologyDiagram.sha256", "TopologyDiagram.shift_trail", "TopologyDiagram.shortest_path", "TopologyDiagram.smooth", "TopologyDiagram.split_edge", "TopologyDiagram.summary", "TopologyDiagram.support_nodes", "TopologyDiagram.to_data", "TopologyDiagram.to_json", "TopologyDiagram.to_jsonstring", "TopologyDiagram.to_lines", "TopologyDiagram.to_networkx", "TopologyDiagram.to_nodes_and_edges", "TopologyDiagram.to_obj", "TopologyDiagram.to_points", "TopologyDiagram.trail", "TopologyDiagram.trail_edges", "TopologyDiagram.trail_sequences", "TopologyDiagram.trails", "TopologyDiagram.trails_sequences", "TopologyDiagram.transform", "TopologyDiagram.transformed", "TopologyDiagram.unset_edge_attribute", "TopologyDiagram.unset_node_attribute", "TopologyDiagram.update_dea", "TopologyDiagram.update_default_edge_attributes", "TopologyDiagram.update_default_node_attributes", "TopologyDiagram.update_dna", "TopologyDiagram.update_node_xyz", "TopologyDiagram.uv_index", "TopologyDiagram.validate_data", "TopologyDiagram.validate_json", "DeviationEdge", "DeviationEdge.ToString", "DeviationEdge.copy", "DeviationEdge.from_data", "DeviationEdge.from_json", "DeviationEdge.from_jsonstring", "DeviationEdge.from_line", "DeviationEdge.sha256", "DeviationEdge.to_data", "DeviationEdge.to_json", "DeviationEdge.to_jsonstring", "DeviationEdge.validate_data", "DeviationEdge.validate_json", "Node", "Node.ToString", "Node.copy", "Node.from_data", "Node.from_json", "Node.from_jsonstring", "Node.from_point", "Node.sha256", "Node.to_data", "Node.to_json", "Node.to_jsonstring", "Node.validate_data", "Node.validate_json", "TrailEdge", "TrailEdge.ToString", "TrailEdge.copy", "TrailEdge.from_data", "TrailEdge.from_json", "TrailEdge.from_jsonstring", "TrailEdge.from_line", "TrailEdge.sha256", "TrailEdge.to_data", "TrailEdge.to_json", "TrailEdge.to_jsonstring", "TrailEdge.validate_data", "TrailEdge.validate_json", "static_equilibrium", "static_equilibrium_numpy", "NodeLoad", "NodeLoad.ToString", "NodeLoad.copy", "NodeLoad.from_data", "NodeLoad.from_json", "NodeLoad.from_jsonstring", "NodeLoad.from_point_and_vector", "NodeLoad.sha256", "NodeLoad.to_data", "NodeLoad.to_json", "NodeLoad.to_jsonstring", "NodeLoad.validate_data", "NodeLoad.validate_json", "DeviationEdgeLengthConstraint", "DeviationEdgeLengthConstraint.ToString", "DeviationEdgeLengthConstraint.copy", "DeviationEdgeLengthConstraint.from_data", "DeviationEdgeLengthConstraint.from_json", "DeviationEdgeLengthConstraint.from_jsonstring", "DeviationEdgeLengthConstraint.key", "DeviationEdgeLengthConstraint.penalty", "DeviationEdgeLengthConstraint.reference", "DeviationEdgeLengthConstraint.sha256", "DeviationEdgeLengthConstraint.target", "DeviationEdgeLengthConstraint.to_data", "DeviationEdgeLengthConstraint.to_json", "DeviationEdgeLengthConstraint.to_jsonstring", "DeviationEdgeLengthConstraint.validate_data", "DeviationEdgeLengthConstraint.validate_json", "DeviationEdgeParameter", "DeviationEdgeParameter.ToString", "DeviationEdgeParameter.attr_name", "DeviationEdgeParameter.bound_low", "DeviationEdgeParameter.bound_up", "DeviationEdgeParameter.copy", "DeviationEdgeParameter.from_data", "DeviationEdgeParameter.from_json", "DeviationEdgeParameter.from_jsonstring", "DeviationEdgeParameter.key", "DeviationEdgeParameter.sha256", "DeviationEdgeParameter.start_value", "DeviationEdgeParameter.to_data", "DeviationEdgeParameter.to_json", "DeviationEdgeParameter.to_jsonstring", "DeviationEdgeParameter.validate_data", "DeviationEdgeParameter.validate_json", "LineConstraint", "LineConstraint.ToString", "LineConstraint.copy", "LineConstraint.from_data", "LineConstraint.from_json", "LineConstraint.from_jsonstring", "LineConstraint.key", "LineConstraint.penalty", "LineConstraint.reference", "LineConstraint.sha256", "LineConstraint.target", "LineConstraint.to_data", "LineConstraint.to_json", "LineConstraint.to_jsonstring", "LineConstraint.validate_data", "LineConstraint.validate_json", "NodeLoadXParameter", "NodeLoadXParameter.ToString", "NodeLoadXParameter.attr_name", "NodeLoadXParameter.bound_low", "NodeLoadXParameter.bound_up", "NodeLoadXParameter.copy", "NodeLoadXParameter.from_data", "NodeLoadXParameter.from_json", "NodeLoadXParameter.from_jsonstring", "NodeLoadXParameter.key", "NodeLoadXParameter.sha256", "NodeLoadXParameter.start_value", "NodeLoadXParameter.to_data", "NodeLoadXParameter.to_json", "NodeLoadXParameter.to_jsonstring", "NodeLoadXParameter.validate_data", "NodeLoadXParameter.validate_json", "NodeLoadYParameter", "NodeLoadYParameter.ToString", "NodeLoadYParameter.attr_name", "NodeLoadYParameter.bound_low", "NodeLoadYParameter.bound_up", "NodeLoadYParameter.copy", "NodeLoadYParameter.from_data", "NodeLoadYParameter.from_json", "NodeLoadYParameter.from_jsonstring", "NodeLoadYParameter.key", "NodeLoadYParameter.sha256", "NodeLoadYParameter.start_value", "NodeLoadYParameter.to_data", "NodeLoadYParameter.to_json", "NodeLoadYParameter.to_jsonstring", "NodeLoadYParameter.validate_data", "NodeLoadYParameter.validate_json", "NodeLoadZParameter", "NodeLoadZParameter.ToString", "NodeLoadZParameter.attr_name", "NodeLoadZParameter.bound_low", "NodeLoadZParameter.bound_up", "NodeLoadZParameter.copy", "NodeLoadZParameter.from_data", "NodeLoadZParameter.from_json", "NodeLoadZParameter.from_jsonstring", "NodeLoadZParameter.key", "NodeLoadZParameter.sha256", "NodeLoadZParameter.start_value", "NodeLoadZParameter.to_data", "NodeLoadZParameter.to_json", "NodeLoadZParameter.to_jsonstring", "NodeLoadZParameter.validate_data", "NodeLoadZParameter.validate_json", "Optimizer", "Optimizer.ToString", "Optimizer.add_constraint", "Optimizer.add_parameter", "Optimizer.check_optimization_sanity", "Optimizer.copy", "Optimizer.from_data", "Optimizer.from_json", "Optimizer.from_jsonstring", "Optimizer.gradient_func", "Optimizer.number_of_constraints", "Optimizer.number_of_parameters", "Optimizer.objective_func", "Optimizer.optimization_bounds", "Optimizer.optimization_parameters", "Optimizer.remove_constraint", "Optimizer.remove_parameter", "Optimizer.sha256", "Optimizer.solve", "Optimizer.to_data", "Optimizer.to_json", "Optimizer.to_jsonstring", "Optimizer.validate_data", "Optimizer.validate_json", "OriginNodeXParameter", "OriginNodeXParameter.ToString", "OriginNodeXParameter.attr_name", "OriginNodeXParameter.bound_low", "OriginNodeXParameter.bound_up", "OriginNodeXParameter.copy", "OriginNodeXParameter.from_data", "OriginNodeXParameter.from_json", "OriginNodeXParameter.from_jsonstring", "OriginNodeXParameter.key", "OriginNodeXParameter.sha256", "OriginNodeXParameter.start_value", "OriginNodeXParameter.to_data", "OriginNodeXParameter.to_json", "OriginNodeXParameter.to_jsonstring", "OriginNodeXParameter.validate_data", "OriginNodeXParameter.validate_json", "OriginNodeYParameter", "OriginNodeYParameter.ToString", "OriginNodeYParameter.attr_name", "OriginNodeYParameter.bound_low", "OriginNodeYParameter.bound_up", "OriginNodeYParameter.copy", "OriginNodeYParameter.from_data", "OriginNodeYParameter.from_json", "OriginNodeYParameter.from_jsonstring", "OriginNodeYParameter.key", "OriginNodeYParameter.sha256", "OriginNodeYParameter.start_value", "OriginNodeYParameter.to_data", "OriginNodeYParameter.to_json", "OriginNodeYParameter.to_jsonstring", "OriginNodeYParameter.validate_data", "OriginNodeYParameter.validate_json", "OriginNodeZParameter", "OriginNodeZParameter.ToString", "OriginNodeZParameter.attr_name", "OriginNodeZParameter.bound_low", "OriginNodeZParameter.bound_up", "OriginNodeZParameter.copy", "OriginNodeZParameter.from_data", "OriginNodeZParameter.from_json", "OriginNodeZParameter.from_jsonstring", "OriginNodeZParameter.key", "OriginNodeZParameter.sha256", "OriginNodeZParameter.start_value", "OriginNodeZParameter.to_data", "OriginNodeZParameter.to_json", "OriginNodeZParameter.to_jsonstring", "OriginNodeZParameter.validate_data", "OriginNodeZParameter.validate_json", "PlaneConstraint", "PlaneConstraint.ToString", "PlaneConstraint.copy", "PlaneConstraint.from_data", "PlaneConstraint.from_json", "PlaneConstraint.from_jsonstring", "PlaneConstraint.key", "PlaneConstraint.penalty", "PlaneConstraint.reference", "PlaneConstraint.sha256", "PlaneConstraint.target", "PlaneConstraint.to_data", "PlaneConstraint.to_json", "PlaneConstraint.to_jsonstring", "PlaneConstraint.validate_data", "PlaneConstraint.validate_json", "PointConstraint", "PointConstraint.ToString", "PointConstraint.copy", "PointConstraint.from_data", "PointConstraint.from_json", "PointConstraint.from_jsonstring", "PointConstraint.key", "PointConstraint.penalty", "PointConstraint.reference", "PointConstraint.sha256", "PointConstraint.target", "PointConstraint.to_data", "PointConstraint.to_json", "PointConstraint.to_jsonstring", "PointConstraint.validate_data", "PointConstraint.validate_json", "ReactionForceConstraint", "ReactionForceConstraint.ToString", "ReactionForceConstraint.copy", "ReactionForceConstraint.from_data", "ReactionForceConstraint.from_json", "ReactionForceConstraint.from_jsonstring", "ReactionForceConstraint.key", "ReactionForceConstraint.penalty", "ReactionForceConstraint.reference", "ReactionForceConstraint.sha256", "ReactionForceConstraint.target", "ReactionForceConstraint.to_data", "ReactionForceConstraint.to_json", "ReactionForceConstraint.to_jsonstring", "ReactionForceConstraint.validate_data", "ReactionForceConstraint.validate_json", "TrailEdgeForceConstraint", "TrailEdgeForceConstraint.ToString", "TrailEdgeForceConstraint.copy", "TrailEdgeForceConstraint.from_data", "TrailEdgeForceConstraint.from_json", "TrailEdgeForceConstraint.from_jsonstring", "TrailEdgeForceConstraint.key", "TrailEdgeForceConstraint.penalty", "TrailEdgeForceConstraint.reference", "TrailEdgeForceConstraint.sha256", "TrailEdgeForceConstraint.target", "TrailEdgeForceConstraint.to_data", "TrailEdgeForceConstraint.to_json", "TrailEdgeForceConstraint.to_jsonstring", "TrailEdgeForceConstraint.validate_data", "TrailEdgeForceConstraint.validate_json", "TrailEdgeParameter", "TrailEdgeParameter.ToString", "TrailEdgeParameter.attr_name", "TrailEdgeParameter.bound_low", "TrailEdgeParameter.bound_up", "TrailEdgeParameter.copy", "TrailEdgeParameter.from_data", "TrailEdgeParameter.from_json", "TrailEdgeParameter.from_jsonstring", "TrailEdgeParameter.key", "TrailEdgeParameter.sha256", "TrailEdgeParameter.start_value", "TrailEdgeParameter.to_data", "TrailEdgeParameter.to_json", "TrailEdgeParameter.to_jsonstring", "TrailEdgeParameter.validate_data", "TrailEdgeParameter.validate_json", "solve_proxy", "FormArtist", "FormArtist.build", "FormArtist.build_as", "FormArtist.clear", "FormArtist.clear_edges", "FormArtist.clear_nodes", "FormArtist.draw", "FormArtist.draw_collection", "FormArtist.draw_edgelabels", "FormArtist.draw_edges", "FormArtist.draw_loads", "FormArtist.draw_nodelabels", "FormArtist.draw_nodes", "FormArtist.draw_reactions", "FormArtist.redraw", "FormArtist.register", "FormArtist.update_data", "FormArtist.viewbox", "Plotter", "Plotter.add", "Plotter.add_from_list", "Plotter.draw", "Plotter.find", "Plotter.on", "Plotter.pause", "Plotter.redraw", "Plotter.register_listener", "Plotter.save", "Plotter.show", "Plotter.zoom_extents", "TopologyArtist", "TopologyArtist.build", "TopologyArtist.build_as", "TopologyArtist.clear", "TopologyArtist.clear_edges", "TopologyArtist.clear_nodes", "TopologyArtist.draw", "TopologyArtist.draw_collection", "TopologyArtist.draw_edgelabels", "TopologyArtist.draw_edges", "TopologyArtist.draw_loads", "TopologyArtist.draw_nodelabels", "TopologyArtist.draw_nodes", "TopologyArtist.redraw", "TopologyArtist.register", "TopologyArtist.update_data", "TopologyArtist.viewbox", "NodeSupport", "NodeSupport.ToString", "NodeSupport.copy", "NodeSupport.from_data", "NodeSupport.from_json", "NodeSupport.from_jsonstring", "NodeSupport.from_point", "NodeSupport.sha256", "NodeSupport.to_data", "NodeSupport.to_json", "NodeSupport.to_jsonstring", "NodeSupport.validate_data", "NodeSupport.validate_json", "Changelog", "Citing", "Examples", "COMPAS CEM", "Installation", "License"], "terms": {"01": [0, 690, 691], "simpl": [0, 690, 691, 692], "compress": [0, 5, 200, 689, 690, 691], "structur": [0, 30, 58, 79, 91, 99, 104, 127, 167, 198, 222, 239, 247, 252, 287, 647, 648, 650, 689, 690, 691, 692], "02": [0, 690, 691], "brace": [0, 690, 691], "tower": [0, 690, 691], "2d": [0, 6, 645, 674, 688, 690, 691], "03": [0, 690, 691], "bridg": [0, 6, 688, 690, 691], "optim": [0, 4, 5, 12, 13, 371, 387, 390, 391, 398, 404, 420, 423, 424, 431, 437, 440, 441, 448, 454, 457, 458, 465, 495, 498, 499, 506, 512, 515, 516, 523, 529, 532, 533, 540, 546, 562, 578, 594, 610, 613, 614, 621, 627, 688, 690, 691], "04": [0, 690, 691], "tree": [0, 690, 691], "05": [0, 690, 691], "planar": [0, 58, 86, 102, 198, 233, 250, 690, 691, 692], "tensegr": [0, 6, 688, 690, 691], "wheel": [0, 690, 691], "from": [1, 2, 3, 4, 5, 26, 28, 30, 35, 37, 38, 50, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 79, 91, 98, 99, 100, 104, 111, 126, 127, 136, 158, 161, 163, 167, 172, 174, 175, 190, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 212, 222, 239, 246, 247, 248, 252, 259, 285, 287, 296, 320, 321, 322, 323, 324, 333, 334, 335, 336, 337, 346, 347, 348, 349, 350, 356, 357, 361, 362, 363, 364, 365, 374, 375, 376, 380, 393, 394, 395, 397, 407, 408, 409, 413, 426, 427, 428, 430, 443, 444, 445, 447, 460, 461, 462, 464, 477, 478, 479, 480, 486, 488, 501, 502, 503, 505, 518, 519, 520, 522, 535, 536, 537, 539, 549, 550, 551, 555, 565, 566, 567, 571, 581, 582, 583, 587, 597, 598, 599, 603, 616, 617, 618, 620, 632, 633, 648, 662, 663, 678, 679, 680, 681, 682, 688, 692, 693], "compa": [1, 2, 3, 4, 5, 28, 79, 126, 163, 222, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 647, 648, 682, 688, 689, 690], "geometri": [1, 2, 3, 4, 5, 58, 198, 647, 648, 650], "import": [1, 2, 3, 4, 5, 28, 79, 126, 163, 222, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682, 688, 692], "translat": [1, 2, 3, 4, 5], "compas_cem": [1, 2, 3, 4, 5, 12, 22, 152, 317, 330, 343, 356, 357, 358, 371, 387, 404, 420, 437, 454, 471, 489, 495, 512, 529, 546, 562, 578, 594, 610, 627, 628, 646, 658, 675, 688, 689, 691, 692], "diagram": [1, 2, 3, 4, 5, 12, 13, 22, 58, 68, 122, 124, 152, 160, 161, 176, 177, 198, 200, 217, 220, 270, 271, 272, 274, 275, 277, 278, 279, 280, 283, 284, 301, 303, 356, 357, 377, 389, 396, 410, 422, 429, 439, 446, 456, 463, 471, 489, 497, 504, 514, 521, 531, 538, 552, 568, 584, 600, 612, 619, 627, 628, 634, 637, 638, 640, 641, 658, 664, 667, 670, 681, 688, 691], "topologydiagram": [1, 2, 3, 4, 5, 356, 357, 489, 627, 658, 688], "element": [1, 2, 4, 5, 12, 13, 24, 154, 317, 330, 343, 688, 691], "node": [1, 2, 3, 4, 5, 25, 26, 29, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 48, 50, 55, 60, 65, 67, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 131, 137, 143, 146, 147, 156, 157, 158, 160, 161, 164, 165, 166, 170, 171, 172, 173, 174, 175, 178, 180, 181, 183, 185, 187, 189, 190, 195, 201, 206, 208, 211, 212, 214, 215, 216, 218, 226, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 275, 276, 278, 281, 282, 284, 286, 287, 288, 289, 291, 297, 300, 302, 303, 304, 308, 311, 312, 356, 357, 358, 377, 404, 410, 420, 431, 437, 448, 454, 465, 495, 506, 512, 523, 529, 540, 546, 552, 562, 568, 578, 584, 600, 631, 633, 634, 638, 639, 640, 661, 663, 664, 668, 669, 670, 675, 681, 688], "trailedg": [1, 2, 4], "deviationedg": [1, 2, 4, 5], "load": [1, 2, 3, 4, 12, 13, 58, 84, 93, 112, 122, 155, 198, 230, 241, 260, 275, 358, 364, 420, 437, 454, 634, 638, 664, 668, 688, 691], "nodeload": [1, 2, 3, 4, 688], "support": [1, 2, 3, 4, 12, 13, 81, 84, 85, 124, 131, 157, 161, 200, 226, 230, 232, 278, 291, 300, 489, 578, 627, 641, 675, 681, 688, 691, 692], "nodesupport": [1, 2, 3, 4, 157, 688], "equilibrium": [1, 2, 3, 4, 5, 12, 13, 356, 357, 688, 689, 691], "static_equilibrium": [1, 2, 3, 4, 5, 688], "plotter": [1, 2, 3, 4, 5, 12, 13, 628, 643, 658, 672, 688, 691], "instanti": [1, 4, 390, 391, 423, 424, 440, 441, 457, 458, 498, 499, 515, 516, 532, 533, 613, 614], "topologi": [1, 2, 3, 4, 5, 68, 122, 124, 152, 160, 161, 200, 217, 270, 271, 272, 274, 275, 277, 278, 279, 280, 283, 284, 303, 356, 357, 390, 391, 398, 423, 424, 431, 440, 441, 448, 457, 458, 465, 480, 483, 484, 485, 489, 498, 499, 506, 515, 516, 523, 532, 533, 540, 613, 614, 621, 627, 658, 664, 667, 670, 688], "add": [1, 2, 3, 4, 5, 24, 25, 154, 156, 157, 473, 474, 648], "add_nod": [1, 2, 4, 5], "0": [1, 2, 3, 4, 5, 48, 126, 128, 129, 187, 200, 285, 288, 289, 324, 330, 337, 350, 358, 365, 371, 380, 397, 404, 413, 430, 447, 464, 488, 505, 522, 539, 546, 555, 562, 571, 578, 587, 594, 603, 620, 655, 682, 692], "1": [1, 2, 3, 4, 5, 28, 48, 49, 69, 70, 71, 72, 91, 94, 104, 111, 114, 126, 129, 163, 187, 188, 200, 209, 210, 211, 212, 239, 242, 252, 259, 262, 285, 286, 289, 324, 337, 350, 358, 365, 371, 380, 397, 404, 413, 430, 447, 464, 488, 505, 522, 539, 546, 555, 562, 571, 578, 587, 594, 603, 620, 654, 655, 682], "2": [1, 2, 3, 4, 5, 55, 120, 195, 269, 654, 655], "5": [1, 2, 3, 4, 5, 48, 128, 129, 187, 288, 289], "3": [1, 2, 4, 5, 67, 69, 70, 71, 72, 208, 209, 210, 211, 212, 286, 489], "edg": [1, 2, 3, 4, 5, 24, 28, 29, 32, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 60, 65, 69, 70, 72, 75, 78, 80, 81, 86, 87, 102, 103, 121, 129, 137, 142, 144, 145, 149, 154, 159, 163, 164, 165, 166, 169, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 200, 201, 206, 209, 210, 212, 215, 219, 220, 221, 223, 224, 225, 226, 227, 233, 234, 235, 250, 251, 271, 272, 273, 274, 279, 289, 297, 301, 307, 309, 310, 314, 317, 323, 343, 349, 371, 377, 387, 391, 398, 410, 424, 441, 458, 499, 516, 533, 552, 568, 584, 594, 600, 610, 614, 621, 631, 632, 634, 636, 637, 661, 662, 664, 666, 667, 688], "add_edg": [1, 2, 4, 5], "length": [1, 2, 4, 44, 45, 129, 183, 184, 200, 289, 343, 371, 610, 688, 691], "forc": [1, 2, 4, 5, 43, 58, 84, 93, 125, 182, 198, 200, 230, 241, 282, 317, 387, 578, 594, 638, 641, 688, 691], "add_support": [1, 2, 3, 4], "add_load": [1, 2, 3, 4], "build": [1, 4, 630, 660, 688, 692], "trail": [1, 2, 3, 4, 5, 24, 154, 157, 159, 160, 161, 166, 200, 217, 221, 235, 270, 279, 280, 281, 286, 301, 302, 304, 343, 594, 610, 688], "automat": [1, 161, 489, 688, 689, 691, 692], "build_trail": [1, 2, 3, 4, 5, 688], "comput": [1, 4, 5, 113, 121, 123, 126, 161, 261, 273, 276, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 489, 505, 522, 539, 555, 571, 587, 603, 620, 645, 674, 682, 688, 689], "state": [1, 4, 5, 200, 343], "static": [1, 4, 5, 356, 357, 629, 630, 635, 642, 643, 659, 660, 665, 671, 672, 691], "form": [1, 2, 3, 4, 5, 22, 54, 68, 69, 119, 152, 194, 209, 268, 304, 356, 357, 377, 410, 471, 489, 552, 568, 584, 600, 627, 628, 634, 637, 640, 641, 689, 691, 692], "eta": [1, 2, 4, 5, 356, 357, 480, 483, 489, 627, 688], "1e": [1, 2, 3, 4, 5, 84, 93, 230, 241, 356, 357, 489, 627], "6": [1, 2, 3, 4, 5, 84, 93, 230, 241, 356, 357, 489, 627, 692], "tmax": [1, 2, 4, 5, 356, 357, 480, 483, 489, 627, 688], "100": [1, 2, 3, 4, 5, 128, 288, 356, 357, 489, 627], "verbos": [1, 2, 3, 4, 5, 356, 357, 489], "true": [1, 2, 3, 4, 5, 51, 54, 55, 56, 72, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 101, 102, 103, 104, 116, 119, 120, 126, 133, 134, 159, 176, 177, 191, 194, 195, 196, 212, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 249, 250, 251, 252, 265, 268, 269, 285, 293, 294, 301, 324, 326, 327, 337, 339, 340, 350, 352, 353, 365, 367, 368, 380, 383, 384, 397, 400, 401, 413, 416, 417, 430, 433, 434, 447, 450, 451, 464, 467, 468, 488, 489, 491, 492, 505, 508, 509, 522, 525, 526, 539, 542, 543, 555, 558, 559, 571, 574, 575, 587, 590, 591, 603, 606, 607, 620, 623, 624, 682, 684, 685], "plot": [1, 2, 3, 4, 5, 628, 644, 647, 649, 650, 651, 652, 653, 655, 656, 658, 673, 688], "result": [1, 4, 5, 26, 30, 35, 91, 98, 99, 100, 104, 158, 167, 172, 239, 246, 247, 248, 252], "scene": [1, 2, 3, 4, 5], "artist": [1, 628, 629, 630, 643, 647, 658, 659, 660, 672, 688], "nodes": [1, 2, 3, 4, 5], "show_nodetext": [1, 4], "show_edgetext": [1, 2, 4], "shift": [1, 4, 5, 286], "transform": [1, 2, 3, 4, 5], "from_vector": [1, 2, 3, 4, 5], "show": [1, 2, 3, 4, 5, 692], "content": 1, "zoom_ext": [1, 2, 3, 4, 5], "data": [2, 3, 26, 27, 30, 31, 35, 51, 54, 55, 59, 61, 62, 66, 79, 91, 98, 99, 100, 104, 116, 119, 120, 126, 127, 132, 133, 134, 150, 151, 158, 159, 162, 167, 168, 172, 176, 177, 191, 194, 195, 199, 202, 203, 207, 220, 222, 239, 246, 247, 248, 252, 265, 268, 269, 285, 287, 292, 293, 294, 301, 315, 316, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 358, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 385, 386, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 406, 407, 408, 409, 411, 412, 413, 415, 416, 417, 418, 419, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 459, 460, 461, 462, 464, 466, 467, 468, 469, 470, 471, 476, 477, 478, 479, 488, 490, 491, 492, 493, 494, 500, 501, 502, 503, 505, 507, 508, 509, 510, 511, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 534, 535, 536, 537, 539, 541, 542, 543, 544, 545, 548, 549, 550, 551, 553, 554, 555, 557, 558, 559, 560, 561, 564, 565, 566, 567, 569, 570, 571, 573, 574, 575, 576, 577, 580, 581, 582, 583, 585, 586, 587, 589, 590, 591, 592, 593, 596, 597, 598, 599, 601, 602, 603, 605, 606, 607, 608, 609, 615, 616, 617, 618, 620, 622, 623, 624, 625, 626, 643, 644, 647, 648, 650, 672, 673, 675, 677, 678, 679, 680, 682, 683, 684, 685, 686, 687, 688, 691], "point": [2, 3, 41, 48, 56, 63, 65, 66, 67, 91, 101, 104, 135, 138, 180, 187, 196, 204, 206, 207, 208, 239, 249, 252, 295, 298, 323, 336, 349, 358, 364, 414, 556, 562, 681], "4": [2, 3, 4, 5], "trail_edg": [2, 3, 166], "deviation_edg": [2, 3, 5, 159, 164, 177, 220], "kei": [2, 4, 24, 29, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 57, 65, 74, 76, 77, 78, 81, 82, 83, 84, 85, 89, 90, 93, 94, 95, 96, 97, 105, 106, 107, 109, 111, 112, 113, 115, 116, 117, 118, 119, 125, 129, 131, 142, 143, 148, 149, 154, 159, 160, 164, 165, 166, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 192, 193, 194, 197, 206, 214, 216, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 237, 238, 241, 242, 243, 244, 245, 253, 254, 255, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 277, 281, 282, 283, 284, 286, 289, 291, 300, 301, 302, 303, 304, 307, 308, 313, 314, 330, 358, 387, 420, 437, 454, 495, 512, 529, 610, 675, 688], "u": [2, 5, 28, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 75, 129, 163, 174, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 194, 195, 215, 289, 317, 343, 691], "v": [2, 5, 28, 37, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 54, 55, 75, 129, 163, 174, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 194, 195, 215, 289, 317, 343, 692], "deviat": [2, 5, 24, 154, 164, 176, 177, 200, 220, 224, 225, 227, 271, 272, 274, 317, 371, 387, 688], "indirect": [2, 220, 227, 688], "set": [2, 39, 40, 49, 52, 53, 54, 55, 63, 70, 72, 105, 106, 114, 115, 117, 118, 119, 120, 142, 143, 178, 179, 188, 192, 193, 194, 195, 204, 210, 212, 253, 254, 262, 264, 266, 267, 268, 269, 307, 308, 387, 390, 391, 420, 423, 424, 437, 440, 441, 454, 457, 458, 495, 498, 499, 512, 515, 516, 529, 532, 533, 610, 613, 614, 688], "loadscal": [2, 3], "reactionscal": [2, 3], "edgetext": [2, 4], "o": 3, "time": [3, 5, 161, 627, 653, 688, 692], "pointconstraint": 3, "trailedgeparamet": 3, "deviationedgeparamet": [3, 4, 5], "here": [3, 692], "path": [3, 61, 66, 79, 127, 133, 138, 202, 207, 222, 287, 293, 298, 321, 326, 334, 339, 347, 352, 362, 367, 375, 383, 394, 400, 408, 416, 427, 433, 444, 450, 461, 467, 478, 491, 502, 508, 519, 525, 536, 542, 550, 558, 566, 574, 582, 590, 598, 606, 617, 623, 655, 679, 684], "dirnam": 3, "__file__": 3, "IN": [3, 693], "abspath": 3, "join": 3, "03_bridge_2d": 3, "json": [3, 61, 62, 133, 134, 151, 202, 203, 293, 294, 316, 321, 322, 326, 327, 329, 334, 335, 339, 340, 342, 347, 348, 352, 353, 355, 362, 363, 367, 368, 370, 375, 376, 383, 384, 386, 394, 395, 400, 401, 403, 408, 409, 416, 417, 419, 427, 428, 433, 434, 436, 444, 445, 450, 451, 453, 461, 462, 467, 468, 470, 478, 479, 491, 492, 494, 502, 503, 508, 509, 511, 519, 520, 525, 526, 528, 536, 537, 542, 543, 545, 550, 551, 558, 559, 561, 566, 567, 574, 575, 577, 582, 583, 590, 591, 593, 598, 599, 606, 607, 609, 617, 618, 623, 624, 626, 679, 680, 684, 685, 687, 688], "from_json": 3, "appli": [3, 58, 84, 93, 112, 122, 155, 198, 230, 241, 260, 275, 358, 364, 675, 688], "gener": [3, 4, 5, 28, 161, 163, 200, 356, 357, 691], "find": [3, 58, 127, 164, 166, 198, 287, 489, 627, 689, 691, 692], "initi": [3, 398, 431, 448, 465, 506, 523, 540, 621], "opt": [3, 5], "defin": [3, 128, 135, 288, 295, 343, 358, 681], "constraint": [3, 4, 5, 471, 473, 481, 484, 485, 486, 627, 688, 691], "nodes_opt": 3, "target_point": 3, "20": 3, "67": 3, "42": 3, "7": [3, 692], "15": 3, "28": 3, "84": 3, "zip": 3, "add_constraint": [3, 4, 5], "paramet": [3, 4, 5, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 125, 126, 127, 128, 129, 133, 134, 138, 140, 141, 142, 143, 144, 145, 146, 147, 152, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 282, 284, 285, 286, 287, 288, 289, 293, 294, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 319, 320, 321, 322, 323, 324, 326, 327, 332, 333, 334, 335, 336, 337, 339, 340, 345, 346, 347, 348, 349, 350, 352, 353, 356, 357, 358, 360, 361, 362, 363, 364, 365, 367, 368, 373, 374, 375, 376, 380, 383, 384, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 406, 407, 408, 409, 413, 416, 417, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 437, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 474, 476, 477, 478, 479, 482, 487, 488, 489, 491, 492, 495, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 512, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 529, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 548, 549, 550, 551, 555, 558, 559, 564, 565, 566, 567, 571, 574, 575, 580, 581, 582, 583, 587, 590, 591, 596, 597, 598, 599, 603, 606, 607, 610, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 627, 628, 629, 630, 636, 639, 643, 647, 652, 653, 654, 655, 657, 658, 659, 660, 666, 669, 672, 675, 677, 678, 679, 680, 681, 682, 684, 685, 688], "add_paramet": [3, 4, 5], "bound_low": [3, 387, 420, 437, 454, 495, 512, 529, 610], "bound_up": [3, 387, 420, 437, 454, 495, 512, 529, 610], "10": [3, 4, 5, 688, 689, 692], "form_opt": [3, 4, 5], "solv": [3, 4, 5, 58, 198, 627, 688, 691, 692], "algorithm": [3, 5, 32, 57, 58, 80, 126, 169, 197, 198, 223, 285, 324, 337, 350, 356, 357, 365, 380, 397, 413, 430, 447, 464, 488, 489, 505, 522, 539, 555, 571, 587, 603, 620, 627, 682, 688], "slsqp": [3, 4, 489, 627], "iter": [3, 4, 51, 93, 116, 128, 159, 160, 176, 177, 191, 220, 241, 265, 284, 288, 301, 303, 356, 357, 489, 627, 688], "ep": [3, 4, 489, 627], "figsiz": [3, 4, 5], "16": [3, 4, 5, 692], "9": [3, 4, 5], "t": [3, 4, 5, 48, 129, 157, 187, 289, 692], "40": 3, "target": [3, 371, 378, 404, 411, 546, 553, 562, 569, 570, 578, 585, 594, 601, 688, 691], "x": [3, 5, 420, 495, 688], "y": [3, 5, 437, 512, 688], "z": [3, 88, 126, 236, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 454, 464, 488, 505, 522, 529, 539, 555, 571, 587, 603, 620, 682, 688], "size": [3, 49, 94, 114, 188, 242, 262, 489, 688], "facecolor": 3, "90": 3, "math": [4, 5], "sqrt": 4, "trailedgeforceconstraint": [4, 5], "width": [4, 688], "height": 4, "auto": [4, 5], "auxiliari": [4, 5, 159, 160, 161, 221, 270, 303, 688], "auxiliary_trail": [4, 5, 161, 688], "minim": [4, 483], "axiliari": [4, 5], "goal": [4, 473], "auxiliary_trail_edg": [4, 5, 688], "n": [4, 5, 70, 72, 114, 210, 212, 262, 692], "nodetext": 4, "pad": [4, 5, 657], "pi": 5, "co": 5, "sin": 5, "numpi": [5, 357, 688, 692], "np": 5, "util": 5, "pairwis": 5, "creat": [5, 26, 30, 35, 60, 64, 98, 99, 100, 136, 158, 167, 172, 201, 205, 246, 247, 248, 296, 302, 304, 323, 336, 349, 364, 484, 485, 629, 659, 681, 688], "diamet": 5, "num_sid": 5, "onli": [5, 56, 72, 82, 101, 196, 212, 228, 249, 484, 485, 489, 627, 646, 681, 688, 691, 692], "even": 5, "number": [5, 32, 33, 34, 36, 67, 70, 72, 121, 122, 123, 124, 128, 169, 170, 171, 173, 208, 210, 212, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 288, 356, 357, 481, 482, 489, 627], "appendix_length": 5, "tension_forc": 5, "compression_forc": 5, "bound": [5, 390, 391, 423, 424, 440, 441, 457, 458, 484, 498, 499, 515, 516, 532, 533, 613, 614, 645, 657, 674], "grad_method": 5, "ad": [5, 481, 489, 688], "test": [5, 221, 224, 225, 227, 232, 235], "subdivis": 5, "i": [5, 28, 39, 40, 48, 51, 52, 53, 54, 55, 56, 58, 63, 66, 75, 76, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 101, 102, 103, 104, 105, 106, 116, 117, 118, 119, 120, 122, 128, 129, 140, 141, 149, 160, 161, 163, 164, 166, 178, 179, 187, 191, 192, 193, 194, 195, 196, 198, 204, 207, 215, 216, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 249, 250, 251, 252, 253, 254, 263, 265, 266, 267, 268, 269, 275, 284, 286, 288, 289, 300, 303, 305, 306, 314, 343, 356, 357, 390, 391, 423, 424, 440, 441, 457, 458, 475, 489, 498, 499, 515, 516, 532, 533, 613, 614, 627, 629, 659, 688, 691, 692, 693], "assert": 5, "remov": [5, 486, 487, 688], "last": [5, 161, 283, 300, 356, 692], "theta": 5, "linspac": 5, "radiu": 5, "enumer": 5, "perimet": 5, "tension": [5, 200, 689, 691], "list": [5, 22, 26, 29, 30, 35, 40, 41, 42, 46, 48, 49, 50, 52, 53, 57, 58, 60, 63, 65, 70, 72, 77, 78, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 104, 106, 107, 111, 112, 113, 114, 117, 118, 125, 127, 128, 135, 137, 139, 149, 152, 158, 160, 164, 165, 166, 167, 172, 179, 180, 181, 185, 187, 188, 190, 192, 193, 197, 198, 200, 201, 204, 206, 210, 212, 218, 219, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 252, 254, 255, 259, 260, 261, 262, 266, 267, 282, 287, 288, 295, 297, 299, 300, 303, 314, 323, 336, 349, 358, 364, 627, 629, 630, 648, 659, 660, 681, 688], "rang": [5, 48, 54, 119, 129, 187, 194, 268, 289, 688], "intern": [5, 200, 356, 357, 691], "ar": [5, 23, 58, 129, 153, 161, 198, 289, 300, 302, 304, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 489, 496, 513, 530, 547, 563, 579, 595, 611, 627, 676, 688, 690, 691, 692], "half_num_sid": 5, "int": [5, 32, 33, 34, 36, 49, 67, 70, 72, 77, 78, 84, 85, 90, 93, 94, 112, 114, 121, 122, 123, 124, 125, 128, 131, 143, 149, 160, 164, 166, 169, 170, 171, 173, 188, 200, 208, 210, 212, 218, 219, 230, 231, 232, 238, 241, 242, 260, 262, 263, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 291, 300, 302, 303, 304, 308, 314, 356, 357, 358, 377, 410, 489, 552, 568, 584, 600, 627, 636, 639, 651, 657, 666, 669, 675], "auxiliary_trail_length": [5, 688], "should": [5, 41, 54, 55, 58, 119, 120, 159, 176, 177, 180, 194, 195, 198, 220, 268, 269, 301, 643, 672], "zero": [5, 88, 236], "all": [5, 27, 40, 53, 57, 88, 92, 93, 106, 159, 160, 162, 176, 177, 179, 193, 197, 200, 220, 236, 240, 241, 254, 281, 284, 286, 301, 303, 356, 649, 655, 657, 688, 692, 693], "allow": [5, 692], "chang": [5, 91, 104, 239, 252, 688], "lbfg": [5, 489, 627], "grad": [5, 489], "45": 5, "A": [6, 22, 28, 32, 40, 52, 53, 54, 56, 57, 63, 65, 66, 67, 74, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 101, 102, 103, 106, 109, 112, 117, 118, 119, 125, 127, 128, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 149, 152, 155, 157, 161, 163, 164, 166, 169, 179, 192, 193, 194, 196, 197, 200, 204, 206, 207, 208, 214, 218, 219, 222, 223, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 242, 243, 244, 245, 249, 250, 251, 254, 257, 260, 266, 267, 268, 282, 287, 288, 295, 296, 297, 298, 299, 302, 303, 304, 306, 309, 310, 311, 312, 314, 317, 330, 336, 343, 356, 357, 358, 364, 489, 627, 639, 646, 647, 669, 675, 681, 688, 690, 691, 693], "b": [6, 690, 691], "tubular": [6, 690, 691], "3d": [6, 688, 690, 691], "c": [6, 91, 104, 239, 252, 690, 691, 692, 693], "circular": [6, 690, 691], "dome": [6, 688, 690, 691], "d": [6, 91, 104, 239, 252, 689, 690, 691], "jessen": [6, 690, 691], "e": [6, 149, 314, 343, 690, 691], "spiral": [6, 688, 690, 691], "staircas": [6, 688, 690, 691], "download": [7, 8, 9, 10, 11, 692], "rhino": [7, 23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 643, 672, 676, 688, 691, 692], "file": [7, 8, 9, 10, 11, 61, 62, 66, 133, 138, 202, 203, 207, 293, 298, 321, 322, 326, 334, 335, 339, 347, 348, 352, 362, 363, 367, 375, 376, 383, 394, 395, 400, 408, 409, 416, 427, 428, 433, 444, 445, 450, 461, 462, 467, 478, 479, 491, 502, 503, 508, 519, 520, 525, 536, 537, 542, 550, 551, 558, 566, 567, 574, 582, 583, 590, 598, 599, 606, 617, 618, 623, 655, 679, 680, 684, 688, 693], "grasshopp": [7, 8, 9, 10, 11, 23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 643, 672, 676, 688, 690, 691], "viewer": [12, 13, 646, 688, 691], "class": [22, 23, 152, 153, 317, 318, 330, 331, 343, 344, 358, 359, 371, 372, 387, 388, 404, 405, 420, 421, 437, 438, 454, 455, 471, 472, 495, 496, 512, 513, 529, 530, 546, 547, 562, 563, 578, 579, 594, 595, 610, 611, 628, 646, 658, 675, 676, 688], "arg": [22, 152, 336, 381, 572, 588, 604, 646], "kwarg": [22, 54, 119, 152, 194, 268, 317, 323, 330, 336, 343, 349, 358, 381, 471, 572, 588, 604, 628, 629, 630, 646, 647, 648, 655, 658, 659, 660, 675], "sourc": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 330, 331, 332, 337, 338, 339, 340, 341, 342, 343, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 365, 366, 367, 368, 369, 370, 371, 372, 373, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 682, 683, 684, 685, 686, 687, 691], "base": [22, 68, 152, 317, 330, 343, 358, 371, 387, 404, 420, 437, 454, 471, 489, 495, 512, 529, 546, 562, 578, 594, 610, 627, 628, 646, 658, 675, 688], "The": [22, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 89, 93, 94, 95, 96, 97, 105, 106, 107, 109, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 140, 141, 142, 143, 150, 151, 152, 159, 160, 161, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 224, 225, 227, 228, 229, 230, 235, 237, 241, 242, 243, 244, 245, 253, 254, 255, 257, 259, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 300, 301, 302, 303, 304, 305, 306, 307, 308, 315, 316, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 381, 382, 383, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 470, 476, 477, 478, 479, 480, 481, 482, 483, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 528, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 548, 549, 550, 551, 552, 553, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 569, 572, 573, 574, 575, 576, 577, 580, 581, 582, 583, 584, 585, 588, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 604, 605, 606, 607, 608, 609, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 643, 652, 654, 658, 659, 660, 672, 675, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693], "heart": [22, 152], "life": [22, 152], "argument": [22, 54, 128, 144, 145, 146, 147, 152, 194, 288, 309, 310, 311, 312, 323, 336, 349, 629, 630, 659, 660, 688], "dict": [22, 40, 51, 53, 54, 55, 59, 65, 74, 77, 78, 89, 90, 106, 109, 116, 118, 119, 120, 132, 134, 142, 143, 144, 145, 146, 147, 149, 150, 152, 159, 176, 177, 179, 191, 193, 194, 195, 199, 206, 214, 218, 219, 220, 237, 238, 254, 257, 265, 267, 268, 269, 292, 294, 301, 302, 304, 307, 308, 309, 310, 311, 312, 314, 315, 320, 323, 325, 327, 328, 333, 336, 338, 340, 341, 346, 349, 351, 353, 354, 361, 366, 368, 369, 374, 382, 384, 385, 393, 399, 401, 402, 407, 415, 417, 418, 426, 432, 434, 435, 443, 449, 451, 452, 460, 466, 468, 469, 477, 490, 492, 493, 501, 507, 509, 510, 518, 524, 526, 527, 535, 541, 543, 544, 549, 557, 559, 560, 565, 573, 575, 576, 581, 589, 591, 592, 597, 605, 607, 608, 616, 622, 624, 625, 629, 630, 636, 639, 659, 660, 666, 669, 678, 683, 685, 686], "keyword": [22, 152, 323, 336, 349, 629, 630, 659, 660], "return": [22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 154, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 440, 441, 442, 443, 444, 445, 447, 449, 450, 451, 452, 453, 457, 458, 459, 460, 461, 462, 464, 466, 467, 468, 469, 470, 476, 477, 478, 479, 488, 489, 490, 491, 492, 493, 494, 498, 499, 500, 501, 502, 503, 505, 507, 508, 509, 510, 511, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 532, 533, 534, 535, 536, 537, 539, 541, 542, 543, 544, 545, 548, 549, 550, 551, 552, 553, 555, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 569, 571, 573, 574, 575, 576, 577, 580, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 596, 597, 598, 599, 600, 601, 603, 605, 606, 607, 608, 609, 613, 614, 615, 616, 617, 618, 620, 622, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 636, 639, 642, 643, 644, 645, 647, 654, 659, 660, 661, 662, 663, 666, 669, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688], "method": [22, 23, 152, 153, 317, 318, 330, 331, 343, 344, 358, 359, 371, 372, 387, 388, 404, 405, 420, 421, 437, 438, 454, 455, 471, 472, 489, 495, 496, 512, 513, 529, 530, 546, 547, 562, 563, 578, 579, 594, 595, 610, 611, 627, 628, 635, 646, 651, 658, 665, 675, 676, 688], "inherit": [22, 152, 200, 317, 330, 343, 358, 371, 387, 404, 420, 437, 454, 471, 495, 512, 529, 546, 562, 578, 594, 610, 628, 646, 658, 675], "convert": [23, 132, 153, 292, 318, 325, 331, 338, 344, 351, 359, 366, 372, 382, 388, 399, 405, 415, 421, 432, 438, 449, 455, 466, 472, 490, 496, 507, 513, 524, 530, 541, 547, 557, 563, 573, 579, 589, 595, 605, 611, 622, 676, 683, 688], "instanc": [23, 59, 60, 61, 62, 64, 136, 153, 199, 201, 202, 203, 205, 296, 318, 320, 321, 322, 331, 333, 334, 335, 344, 346, 347, 348, 359, 361, 362, 363, 372, 374, 375, 376, 388, 393, 394, 395, 405, 407, 408, 409, 421, 426, 427, 428, 438, 443, 444, 445, 455, 460, 461, 462, 472, 477, 478, 479, 496, 501, 502, 503, 513, 518, 519, 520, 530, 535, 536, 537, 547, 549, 550, 551, 563, 565, 566, 567, 579, 581, 582, 583, 595, 597, 598, 599, 611, 616, 617, 618, 676, 678, 679, 680], "string": [23, 61, 62, 66, 74, 89, 109, 133, 134, 138, 153, 202, 203, 207, 214, 237, 257, 293, 294, 298, 318, 321, 322, 326, 327, 331, 334, 335, 339, 340, 344, 347, 348, 352, 353, 359, 362, 363, 367, 368, 372, 375, 376, 383, 384, 388, 394, 395, 400, 401, 405, 408, 409, 416, 417, 421, 427, 428, 433, 434, 438, 444, 445, 450, 451, 455, 461, 462, 467, 468, 472, 478, 479, 491, 492, 496, 502, 503, 508, 509, 513, 519, 520, 525, 526, 530, 536, 537, 542, 543, 547, 550, 551, 558, 559, 563, 566, 567, 574, 575, 579, 582, 583, 590, 591, 595, 598, 599, 606, 607, 611, 617, 618, 623, 624, 676, 679, 680, 684, 685], "thi": [23, 31, 32, 57, 58, 59, 61, 62, 80, 86, 102, 153, 161, 168, 169, 197, 198, 199, 202, 203, 223, 233, 250, 286, 303, 318, 319, 320, 321, 322, 331, 332, 333, 334, 335, 344, 345, 346, 347, 348, 356, 357, 359, 360, 361, 362, 363, 372, 373, 374, 375, 376, 388, 390, 391, 392, 393, 394, 395, 405, 406, 407, 408, 409, 421, 423, 424, 425, 426, 427, 428, 438, 440, 441, 442, 443, 444, 445, 455, 457, 458, 459, 460, 461, 462, 472, 476, 477, 478, 479, 489, 496, 498, 499, 500, 501, 502, 503, 513, 515, 516, 517, 518, 519, 520, 530, 532, 533, 534, 535, 536, 537, 547, 548, 549, 550, 551, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 595, 596, 597, 598, 599, 611, 613, 614, 615, 616, 617, 618, 646, 676, 677, 678, 679, 680, 688, 691, 692, 693], "exist": [23, 39, 40, 52, 53, 79, 86, 102, 105, 106, 117, 118, 142, 143, 153, 178, 179, 192, 193, 222, 233, 250, 253, 254, 266, 267, 303, 307, 308, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 646, 676, 688], "net": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676, 691], "compat": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 643, 672, 676, 688], "when": [23, 39, 105, 153, 178, 253, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676, 688, 692], "us": [23, 39, 40, 52, 53, 55, 56, 58, 63, 66, 69, 70, 71, 72, 74, 86, 89, 91, 101, 102, 104, 105, 106, 109, 117, 118, 120, 126, 153, 178, 179, 192, 193, 195, 196, 198, 204, 207, 209, 210, 211, 212, 214, 233, 237, 239, 249, 250, 252, 253, 254, 257, 266, 267, 269, 285, 318, 324, 331, 337, 344, 350, 357, 359, 365, 372, 380, 388, 397, 405, 413, 421, 430, 438, 447, 455, 464, 472, 488, 489, 496, 505, 513, 522, 530, 539, 547, 555, 563, 571, 579, 587, 595, 603, 611, 620, 627, 629, 644, 647, 659, 673, 676, 682, 688, 689, 690, 691, 692, 693], "ironpython": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "implicit": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "convers": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676, 688], "usual": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "take": [23, 55, 58, 120, 153, 195, 198, 269, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 485, 496, 513, 530, 547, 563, 579, 595, 611, 676, 688], "place": [23, 140, 153, 305, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "cpython": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "kick": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "its": [23, 51, 54, 55, 111, 119, 120, 128, 129, 132, 150, 151, 153, 191, 194, 195, 259, 268, 269, 288, 289, 292, 300, 315, 316, 318, 325, 328, 329, 331, 336, 338, 341, 342, 344, 351, 354, 355, 359, 366, 369, 370, 372, 382, 385, 386, 388, 399, 402, 403, 405, 415, 418, 419, 421, 432, 435, 436, 438, 449, 452, 453, 455, 466, 469, 470, 472, 475, 490, 493, 494, 496, 507, 510, 511, 513, 524, 527, 528, 530, 541, 544, 545, 547, 557, 560, 561, 563, 573, 576, 577, 579, 589, 592, 593, 595, 605, 608, 609, 611, 622, 625, 626, 676, 683, 686, 687], "default": [23, 31, 84, 93, 142, 143, 144, 145, 146, 147, 153, 159, 160, 168, 176, 177, 200, 220, 230, 241, 284, 301, 303, 307, 308, 309, 310, 311, 312, 318, 319, 331, 332, 344, 345, 356, 357, 359, 360, 372, 373, 388, 392, 405, 406, 421, 425, 438, 442, 455, 459, 472, 476, 489, 496, 500, 513, 517, 530, 534, 547, 548, 563, 564, 579, 580, 595, 596, 611, 615, 627, 676, 677, 688], "print": [23, 153, 318, 331, 344, 356, 357, 359, 372, 388, 405, 421, 438, 455, 472, 489, 496, 513, 530, 547, 563, 579, 595, 611, 676], "self": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "gettyp": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "fullnam": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "similar": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "overrid": [23, 153, 318, 331, 343, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "object": [23, 26, 31, 32, 35, 39, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 80, 86, 87, 88, 98, 100, 101, 102, 103, 128, 132, 133, 134, 138, 150, 151, 153, 155, 157, 158, 168, 169, 172, 178, 196, 197, 198, 199, 202, 203, 204, 206, 207, 208, 223, 233, 234, 236, 246, 248, 249, 250, 251, 288, 292, 293, 294, 298, 315, 316, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 351, 352, 353, 354, 355, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 388, 392, 393, 394, 395, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 415, 416, 417, 418, 419, 421, 425, 426, 427, 428, 432, 433, 434, 435, 436, 438, 442, 443, 444, 445, 449, 450, 451, 452, 453, 455, 459, 460, 461, 462, 466, 467, 468, 469, 470, 471, 472, 476, 477, 478, 479, 480, 483, 489, 490, 491, 492, 493, 494, 496, 500, 501, 502, 503, 507, 508, 509, 510, 511, 513, 517, 518, 519, 520, 524, 525, 526, 527, 528, 530, 534, 535, 536, 537, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 605, 606, 607, 608, 609, 611, 615, 616, 617, 618, 622, 623, 624, 625, 626, 627, 635, 646, 647, 648, 649, 650, 657, 665, 676, 677, 678, 679, 680, 681, 683, 684, 685, 686, 687, 688, 692], "fix": [23, 56, 101, 128, 153, 157, 196, 249, 288, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676, 688], "make": [23, 31, 153, 161, 168, 318, 319, 331, 332, 344, 345, 359, 360, 371, 372, 373, 388, 392, 405, 406, 421, 425, 438, 442, 455, 459, 472, 476, 496, 500, 513, 517, 530, 534, 547, 548, 563, 564, 578, 579, 580, 594, 595, 596, 611, 615, 676, 677, 692], "displai": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 656, 676, 688], "proper": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "represent": [23, 132, 133, 134, 151, 153, 292, 293, 294, 316, 318, 325, 326, 327, 329, 331, 338, 339, 340, 342, 344, 351, 352, 353, 355, 359, 366, 367, 368, 370, 372, 382, 383, 384, 386, 388, 399, 400, 401, 403, 405, 415, 416, 417, 419, 421, 432, 433, 434, 436, 438, 449, 450, 451, 453, 455, 466, 467, 468, 470, 472, 490, 491, 492, 494, 496, 507, 508, 509, 511, 513, 524, 525, 526, 528, 530, 541, 542, 543, 545, 547, 557, 558, 559, 561, 563, 573, 574, 575, 577, 579, 589, 590, 591, 593, 595, 605, 606, 607, 609, 611, 622, 623, 624, 626, 676, 683, 684, 685, 687], "connect": [23, 29, 30, 63, 66, 67, 72, 79, 83, 99, 153, 164, 165, 166, 167, 204, 207, 208, 212, 222, 229, 247, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676, 692, 693], "panel": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "other": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676, 691, 692, 693], "type": [23, 31, 58, 59, 61, 62, 125, 153, 168, 198, 199, 202, 203, 282, 318, 319, 320, 321, 322, 331, 332, 333, 334, 335, 344, 345, 346, 347, 348, 359, 360, 361, 362, 363, 372, 373, 374, 375, 376, 388, 392, 393, 394, 395, 405, 406, 407, 408, 409, 421, 425, 426, 427, 428, 438, 442, 443, 444, 445, 455, 459, 460, 461, 462, 472, 476, 477, 478, 479, 496, 500, 501, 502, 503, 513, 517, 518, 519, 520, 530, 534, 535, 536, 537, 547, 548, 549, 550, 551, 563, 564, 565, 566, 567, 579, 580, 581, 582, 583, 595, 596, 597, 598, 599, 611, 615, 616, 617, 618, 629, 630, 643, 647, 659, 660, 672, 676, 677, 678, 679, 680, 688, 692], "output": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 489, 496, 513, 530, 547, 563, 579, 595, 611, 627, 676, 688], "an": [24, 31, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 55, 58, 59, 61, 62, 66, 81, 86, 102, 105, 117, 118, 122, 124, 132, 133, 134, 138, 142, 154, 160, 161, 168, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 192, 193, 195, 198, 199, 202, 203, 207, 221, 224, 226, 231, 233, 235, 250, 253, 266, 267, 275, 278, 292, 293, 294, 298, 300, 303, 307, 319, 320, 321, 322, 323, 325, 326, 327, 332, 333, 334, 335, 338, 339, 340, 345, 346, 347, 348, 349, 351, 352, 353, 356, 357, 360, 361, 362, 363, 366, 367, 368, 373, 374, 375, 376, 377, 382, 383, 384, 387, 392, 393, 394, 395, 399, 400, 401, 406, 407, 408, 409, 410, 415, 416, 417, 420, 425, 426, 427, 428, 432, 433, 434, 437, 442, 443, 444, 445, 449, 450, 451, 454, 459, 460, 461, 462, 466, 467, 468, 471, 476, 477, 478, 479, 487, 490, 491, 492, 495, 500, 501, 502, 503, 507, 508, 509, 512, 517, 518, 519, 520, 524, 525, 526, 529, 534, 535, 536, 537, 541, 542, 543, 548, 549, 550, 551, 552, 557, 558, 559, 564, 565, 566, 567, 568, 573, 574, 575, 580, 581, 582, 583, 584, 589, 590, 591, 596, 597, 598, 599, 600, 605, 606, 607, 610, 615, 616, 617, 618, 622, 623, 624, 628, 629, 630, 635, 636, 643, 655, 658, 659, 660, 665, 666, 672, 677, 678, 679, 680, 683, 684, 685, 688, 691, 692, 693], "tupl": [24, 29, 39, 40, 43, 45, 47, 49, 51, 52, 53, 54, 55, 57, 60, 63, 65, 69, 70, 78, 81, 116, 119, 120, 135, 137, 142, 149, 154, 159, 160, 165, 176, 177, 178, 179, 182, 184, 186, 188, 189, 191, 192, 193, 194, 195, 197, 201, 204, 206, 209, 210, 219, 220, 221, 224, 225, 226, 227, 235, 265, 268, 269, 284, 295, 297, 301, 303, 307, 314, 323, 336, 349, 377, 410, 552, 568, 584, 600, 636, 645, 666, 674, 688], "doubl": [25, 156, 692], "rtype": [26, 30, 35, 91, 98, 99, 100, 104, 158, 167, 172, 239, 246, 247, 248, 252], "arrai": [26, 30, 35, 90, 91, 98, 99, 100, 104, 149, 158, 167, 172, 238, 239, 246, 247, 248, 252, 314, 484, 485], "adjac": [26, 98, 158, 246], "matrix": [26, 30, 35, 91, 98, 99, 100, 104, 158, 167, 172, 239, 246, 247, 248, 252], "network": [26, 27, 28, 30, 32, 35, 37, 51, 56, 57, 58, 63, 65, 66, 67, 75, 76, 79, 80, 86, 87, 88, 91, 92, 98, 99, 100, 101, 102, 103, 104, 116, 127, 128, 135, 137, 138, 139, 140, 141, 158, 162, 163, 167, 169, 172, 174, 191, 196, 197, 198, 204, 206, 207, 208, 215, 216, 222, 223, 233, 234, 236, 239, 240, 246, 247, 248, 249, 250, 251, 252, 265, 287, 288, 295, 297, 298, 299, 305, 306, 631, 647, 650, 661], "datastructur": [26, 28, 30, 35, 79, 91, 98, 99, 100, 104, 126, 158, 163, 167, 172, 222, 239, 246, 247, 248, 252, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "obj": [26, 28, 35, 39, 52, 66, 79, 98, 100, 105, 117, 126, 138, 158, 163, 172, 178, 192, 207, 222, 246, 248, 253, 266, 285, 298, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "get": [26, 28, 35, 39, 40, 43, 45, 47, 49, 52, 53, 54, 55, 69, 70, 71, 72, 73, 79, 98, 100, 105, 106, 110, 112, 114, 115, 117, 118, 119, 120, 125, 126, 158, 163, 172, 178, 179, 182, 184, 186, 188, 189, 192, 193, 194, 195, 209, 210, 211, 212, 213, 222, 246, 248, 253, 254, 258, 260, 262, 263, 264, 266, 267, 268, 269, 282, 285, 300, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 570, 571, 587, 603, 620, 682, 690], "liter": [26, 30, 35, 91, 98, 99, 100, 104, 158, 167, 172, 239, 246, 247, 248, 252, 643, 672], "csc": [26, 30, 35, 91, 98, 99, 100, 104, 158, 167, 172, 239, 246, 247, 248, 252], "csr": [26, 30, 35, 91, 98, 99, 100, 104, 158, 167, 172, 239, 246, 247, 248, 252], "coo": [26, 30, 35, 91, 98, 99, 100, 104, 158, 167, 172, 239, 246, 247, 248, 252], "option": [26, 30, 31, 35, 39, 40, 41, 48, 49, 51, 52, 53, 54, 55, 56, 58, 63, 66, 67, 72, 74, 75, 89, 91, 94, 98, 99, 100, 101, 104, 105, 106, 107, 109, 114, 116, 117, 118, 119, 120, 126, 128, 129, 133, 134, 144, 145, 146, 147, 158, 160, 167, 168, 172, 178, 179, 180, 187, 188, 191, 192, 193, 194, 195, 196, 198, 200, 204, 207, 208, 212, 214, 215, 237, 239, 242, 246, 247, 248, 249, 252, 253, 254, 255, 257, 262, 265, 266, 267, 268, 269, 284, 285, 288, 289, 293, 294, 303, 309, 310, 311, 312, 319, 324, 326, 327, 332, 337, 339, 340, 345, 350, 352, 353, 356, 357, 360, 365, 367, 368, 373, 380, 383, 384, 392, 397, 400, 401, 406, 413, 416, 417, 425, 430, 433, 434, 442, 447, 450, 451, 459, 464, 467, 468, 476, 488, 489, 491, 492, 500, 505, 508, 509, 517, 522, 525, 526, 534, 539, 542, 543, 548, 555, 558, 559, 564, 571, 574, 575, 580, 587, 590, 591, 596, 603, 606, 607, 615, 620, 623, 624, 627, 629, 630, 639, 643, 655, 657, 659, 660, 669, 672, 677, 682, 684, 685, 692], "format": [26, 30, 35, 74, 89, 91, 98, 99, 100, 104, 109, 126, 130, 134, 158, 167, 172, 214, 237, 239, 246, 247, 248, 252, 257, 285, 290, 294, 324, 327, 337, 340, 350, 353, 365, 368, 380, 384, 397, 401, 413, 417, 430, 434, 447, 451, 464, 468, 488, 492, 505, 509, 522, 526, 539, 543, 555, 559, 571, 575, 587, 591, 603, 607, 620, 624, 682, 685, 688], "array_lik": [26, 30, 35, 91, 98, 99, 100, 104, 158, 167, 172, 239, 246, 247, 248, 252], "construct": [26, 30, 35, 59, 61, 62, 63, 65, 66, 67, 68, 91, 98, 99, 100, 104, 158, 167, 172, 199, 202, 203, 204, 206, 207, 208, 239, 246, 247, 248, 252, 320, 321, 322, 333, 334, 335, 346, 347, 348, 361, 362, 363, 374, 375, 376, 393, 394, 395, 407, 408, 409, 426, 427, 428, 443, 444, 445, 460, 461, 462, 477, 478, 479, 501, 502, 503, 518, 519, 520, 535, 536, 537, 549, 550, 551, 565, 566, 567, 581, 582, 583, 597, 598, 599, 616, 617, 618, 678, 679, 680], "none": [27, 28, 31, 37, 38, 39, 40, 52, 53, 54, 56, 58, 63, 66, 74, 89, 101, 105, 106, 109, 115, 117, 118, 119, 128, 133, 138, 140, 142, 144, 145, 146, 147, 162, 163, 168, 174, 175, 178, 179, 192, 193, 194, 196, 198, 200, 204, 207, 214, 237, 249, 253, 254, 257, 264, 266, 267, 268, 288, 293, 298, 305, 307, 309, 310, 311, 312, 319, 326, 330, 332, 339, 343, 345, 352, 356, 357, 360, 367, 371, 373, 383, 387, 390, 391, 392, 400, 404, 406, 416, 420, 423, 424, 425, 433, 437, 440, 441, 442, 450, 454, 457, 458, 459, 467, 476, 491, 495, 498, 499, 500, 508, 512, 515, 516, 517, 525, 529, 532, 533, 534, 542, 546, 548, 558, 562, 564, 574, 578, 580, 590, 594, 596, 606, 610, 613, 614, 615, 623, 631, 632, 633, 636, 639, 642, 643, 644, 647, 649, 651, 652, 653, 654, 655, 656, 657, 661, 662, 663, 666, 669, 671, 672, 673, 677, 684, 688], "cl": [28, 31, 163, 168, 319, 332, 345, 360, 373, 392, 406, 425, 442, 459, 476, 500, 517, 534, 548, 564, 580, 596, 615, 677], "graph": [28, 38, 60, 64, 121, 123, 130, 136, 161, 163, 175, 201, 205, 273, 276, 290, 296], "g": [28, 163, 343], "h": [28, 163], "same": [28, 58, 163, 198, 691], "vertic": [28, 58, 79, 88, 139, 163, 198, 222, 236, 299], "whose": [28, 163, 681], "consist": [28, 163, 646], "present": [28, 75, 76, 163, 215, 216], "refer": [28, 163, 489, 627, 654, 655, 691, 692], "wolfram": [28, 163], "mathworld": [28, 163], "avail": [28, 86, 102, 160, 163, 233, 250, 489, 692], "http": [28, 86, 102, 163, 233, 250, 654, 655, 689], "com": [28, 163, 689], "graphcompl": [28, 163], "html": [28, 163, 654, 655], "exampl": [28, 37, 38, 55, 58, 79, 120, 126, 163, 174, 175, 195, 198, 222, 269, 285, 286, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682, 688, 691, 692], "network_compl": [28, 163], "from_obj": [28, 79, 126, 163, 222, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "line": [28, 56, 58, 63, 66, 79, 86, 101, 102, 135, 163, 196, 198, 204, 207, 222, 233, 249, 250, 295, 323, 349, 404, 688, 692], "ani": [28, 40, 51, 52, 53, 54, 55, 58, 81, 106, 116, 117, 118, 119, 120, 144, 145, 146, 147, 163, 179, 191, 192, 193, 194, 195, 198, 226, 254, 265, 266, 267, 268, 269, 303, 309, 310, 311, 312, 629, 630, 659, 660, 691, 693], "has_edg": [28, 163], "direct": [28, 42, 48, 58, 64, 75, 163, 177, 181, 187, 198, 205, 215, 225, 272, 274, 358, 688], "fals": [28, 51, 54, 55, 56, 72, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 91, 101, 102, 104, 116, 119, 120, 126, 133, 134, 159, 160, 161, 163, 176, 177, 191, 194, 195, 196, 212, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 239, 249, 250, 252, 265, 268, 269, 284, 285, 293, 294, 301, 303, 324, 326, 327, 337, 339, 340, 350, 352, 353, 356, 357, 365, 367, 368, 380, 383, 384, 397, 400, 401, 413, 416, 417, 430, 433, 434, 447, 450, 451, 464, 467, 468, 488, 489, 491, 492, 505, 508, 509, 522, 525, 526, 539, 542, 543, 555, 558, 559, 571, 574, 575, 587, 590, 591, 603, 606, 607, 620, 623, 624, 651, 682, 684, 685, 688], "hashabl": [29, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 65, 69, 70, 71, 72, 74, 75, 76, 77, 78, 82, 83, 89, 90, 92, 94, 95, 96, 97, 101, 105, 106, 107, 109, 111, 113, 114, 116, 117, 118, 119, 120, 127, 129, 137, 142, 149, 165, 170, 171, 173, 174, 175, 178, 179, 180, 181, 183, 185, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 201, 206, 209, 210, 211, 212, 214, 215, 216, 218, 219, 228, 229, 237, 238, 240, 242, 243, 244, 245, 249, 253, 254, 255, 257, 259, 261, 262, 265, 266, 267, 268, 269, 287, 289, 297, 307, 314], "identifi": [29, 33, 34, 36, 37, 38, 39, 40, 49, 51, 52, 53, 54, 55, 57, 60, 69, 70, 71, 72, 75, 76, 82, 83, 90, 92, 94, 95, 96, 97, 105, 106, 107, 111, 113, 114, 116, 117, 118, 119, 120, 127, 142, 143, 165, 170, 171, 173, 174, 175, 178, 179, 188, 191, 192, 193, 194, 195, 197, 201, 209, 210, 211, 212, 215, 216, 228, 229, 238, 240, 242, 243, 244, 245, 253, 254, 255, 259, 261, 262, 265, 266, 267, 268, 269, 287, 307, 308, 688], "independ": [31, 141, 168, 306, 319, 332, 345, 360, 373, 392, 406, 425, 442, 459, 476, 500, 517, 534, 548, 564, 580, 596, 615, 677], "current": [31, 91, 104, 168, 239, 252, 286, 319, 332, 345, 360, 373, 378, 392, 406, 411, 425, 442, 459, 476, 489, 500, 517, 534, 548, 553, 564, 569, 580, 585, 596, 601, 615, 632, 633, 645, 662, 663, 674, 677], "count": [32, 169], "cross": [32, 57, 80, 86, 87, 102, 103, 169, 197, 223, 233, 234, 250, 251, 668], "pair": [32, 39, 40, 54, 57, 60, 63, 69, 74, 77, 78, 80, 89, 90, 106, 109, 119, 135, 137, 149, 169, 178, 179, 194, 197, 201, 204, 209, 214, 218, 219, 223, 237, 238, 254, 257, 268, 295, 297, 314, 629, 643, 659, 672], "note": [32, 57, 58, 79, 80, 82, 86, 91, 102, 104, 140, 141, 142, 143, 157, 160, 161, 169, 197, 198, 222, 223, 228, 233, 239, 250, 252, 303, 305, 306, 307, 308, 343, 390, 391, 423, 424, 440, 441, 457, 458, 498, 499, 515, 516, 532, 533, 613, 614, 654, 655, 681, 692], "assum": [32, 57, 80, 169, 197, 223, 692], "li": [32, 57, 80, 88, 169, 197, 223, 236], "xy": [32, 57, 80, 88, 169, 197, 223, 236], "plane": [32, 47, 56, 57, 80, 86, 87, 88, 101, 102, 103, 169, 186, 196, 197, 223, 233, 234, 236, 249, 250, 251, 343, 546, 688], "neighbor": [33, 34, 36, 58, 82, 96, 97, 113, 128, 129, 170, 171, 173, 198, 228, 244, 245, 261, 288, 289], "numer": [34, 171, 489, 627, 691], "incom": [34, 96, 171, 244], "degre": [35, 67, 100, 172, 208, 248], "outgo": [36, 97, 173, 245], "delet": [37, 38, 174, 175, 688], "first": [37, 75, 129, 161, 174, 215, 289, 300, 489, 627, 688, 692], "second": [37, 75, 129, 174, 215, 289, 652, 653], "name": [39, 40, 52, 53, 54, 105, 106, 117, 118, 119, 142, 143, 144, 145, 146, 147, 178, 179, 192, 193, 194, 253, 254, 266, 267, 268, 307, 308, 309, 310, 311, 312, 389, 422, 439, 456, 489, 497, 514, 531, 612, 627, 692], "valu": [39, 40, 43, 48, 52, 53, 54, 91, 104, 105, 106, 108, 110, 117, 118, 119, 142, 143, 144, 145, 146, 147, 178, 179, 182, 187, 192, 193, 194, 200, 239, 252, 253, 254, 256, 258, 266, 267, 268, 302, 304, 307, 308, 309, 310, 311, 312, 381, 390, 391, 398, 423, 424, 431, 440, 441, 448, 457, 458, 465, 489, 498, 499, 506, 515, 516, 523, 532, 533, 540, 594, 604, 613, 614, 621, 627, 688], "attribut": [39, 40, 51, 52, 53, 54, 55, 105, 106, 116, 117, 118, 119, 120, 142, 143, 144, 145, 146, 147, 159, 176, 177, 178, 179, 191, 192, 193, 194, 195, 220, 253, 254, 265, 266, 267, 268, 269, 301, 307, 308, 309, 310, 311, 312, 389, 422, 439, 456, 497, 514, 531, 612, 688], "str": [39, 40, 41, 51, 52, 53, 54, 55, 62, 63, 66, 74, 89, 105, 106, 107, 109, 116, 117, 118, 119, 120, 126, 129, 130, 134, 142, 143, 144, 145, 146, 147, 151, 178, 179, 180, 191, 192, 193, 194, 195, 203, 204, 207, 214, 237, 253, 254, 255, 257, 265, 266, 267, 268, 269, 285, 289, 290, 294, 307, 308, 309, 310, 311, 312, 316, 322, 324, 327, 329, 335, 337, 340, 342, 348, 350, 353, 355, 363, 365, 368, 370, 376, 380, 384, 386, 395, 397, 401, 403, 409, 413, 417, 419, 428, 430, 434, 436, 445, 447, 451, 453, 462, 464, 468, 470, 479, 488, 489, 492, 494, 503, 505, 509, 511, 520, 522, 526, 528, 537, 539, 543, 545, 551, 555, 559, 561, 567, 571, 575, 577, 583, 587, 591, 593, 599, 603, 607, 609, 618, 620, 624, 626, 627, 629, 630, 636, 639, 651, 655, 659, 660, 666, 669, 680, 682, 685, 687], "function": [39, 40, 52, 53, 54, 55, 86, 102, 105, 106, 117, 118, 120, 128, 161, 178, 179, 192, 193, 194, 195, 233, 250, 253, 254, 266, 267, 269, 288, 356, 357, 480, 483, 489, 627, 651], "setter": [39, 40, 52, 53, 105, 106, 117, 118, 178, 179, 192, 193, 253, 254, 266, 267, 688], "rais": [39, 40, 52, 53, 56, 86, 101, 102, 105, 106, 117, 118, 128, 129, 142, 143, 150, 151, 178, 179, 192, 193, 196, 233, 249, 250, 253, 254, 266, 267, 288, 289, 307, 308, 315, 316, 328, 329, 341, 342, 354, 355, 369, 370, 385, 386, 402, 403, 418, 419, 435, 436, 452, 453, 469, 470, 493, 494, 510, 511, 527, 528, 544, 545, 560, 561, 576, 577, 592, 593, 608, 609, 625, 626, 686, 687, 688], "keyerror": [39, 40, 52, 53, 105, 106, 117, 118, 142, 143, 178, 179, 192, 193, 253, 254, 266, 267, 307, 308], "If": [39, 40, 48, 51, 52, 53, 54, 55, 56, 72, 75, 86, 91, 101, 102, 104, 105, 106, 116, 117, 118, 119, 120, 126, 128, 129, 133, 134, 142, 143, 164, 166, 178, 179, 187, 191, 192, 193, 194, 195, 196, 200, 212, 215, 233, 239, 249, 250, 252, 253, 254, 265, 266, 267, 268, 269, 285, 288, 289, 293, 294, 307, 308, 324, 326, 327, 337, 339, 340, 343, 350, 352, 353, 356, 357, 365, 367, 368, 380, 383, 384, 390, 391, 397, 400, 401, 413, 416, 417, 423, 424, 430, 433, 434, 440, 441, 447, 450, 451, 457, 458, 464, 467, 468, 488, 489, 491, 492, 498, 499, 505, 508, 509, 515, 516, 522, 525, 526, 532, 533, 539, 542, 543, 555, 558, 559, 571, 574, 575, 587, 590, 591, 603, 606, 607, 613, 614, 620, 623, 624, 627, 682, 684, 685, 689, 690, 692], "doe": [39, 40, 52, 53, 105, 106, 117, 118, 142, 143, 178, 179, 192, 193, 253, 254, 266, 267, 307, 308, 691], "multipl": [40, 52, 53, 106, 117, 118, 179, 192, 193, 254, 266, 267, 471, 648], "empti": [40, 53, 106, 164, 166, 179, 193, 254], "dictionari": [40, 59, 65, 74, 77, 78, 89, 90, 106, 109, 144, 145, 146, 147, 149, 179, 199, 206, 214, 218, 219, 237, 238, 254, 257, 302, 304, 309, 310, 311, 312, 314, 320, 333, 346, 361, 374, 393, 407, 426, 443, 460, 477, 501, 518, 535, 549, 565, 581, 597, 616, 678, 688], "correspond": [40, 53, 74, 78, 89, 90, 106, 109, 118, 149, 179, 193, 214, 219, 237, 238, 254, 257, 267, 284, 314, 629, 643, 659, 672], "provid": [40, 54, 59, 118, 128, 179, 194, 199, 267, 288, 320, 333, 346, 361, 374, 393, 407, 426, 443, 460, 477, 501, 518, 535, 549, 565, 581, 597, 616, 629, 659, 678, 691, 693], "ax": [41, 107, 180, 255, 644, 673, 688], "xyz": [41, 46, 48, 73, 91, 104, 107, 112, 115, 137, 148, 180, 185, 187, 213, 239, 252, 255, 260, 264, 297, 313, 323, 330, 336, 349, 358, 364, 404, 546, 562, 681], "coordin": [41, 46, 48, 63, 65, 88, 107, 113, 115, 135, 137, 139, 180, 185, 187, 204, 206, 236, 255, 261, 264, 295, 297, 299, 323, 336, 349, 364, 495, 512, 529, 645, 674, 681], "start": [41, 42, 44, 46, 48, 50, 63, 127, 135, 161, 180, 181, 183, 185, 187, 190, 204, 281, 286, 287, 295, 390, 391, 423, 424, 440, 441, 457, 458, 498, 499, 515, 516, 532, 533, 613, 614, 688, 690, 692], "end": [41, 42, 44, 46, 48, 50, 63, 127, 135, 157, 180, 181, 183, 185, 187, 190, 204, 287, 295, 323, 349], "along": [41, 48, 129, 180, 187, 289], "which": [41, 54, 55, 58, 119, 120, 180, 194, 195, 198, 268, 269, 300, 643, 672], "includ": [41, 180, 649, 688, 693], "float": [41, 42, 43, 44, 45, 46, 48, 50, 63, 65, 74, 84, 89, 93, 107, 109, 111, 113, 128, 129, 135, 137, 139, 180, 181, 182, 183, 184, 185, 187, 190, 200, 204, 206, 214, 230, 237, 241, 255, 257, 259, 261, 288, 289, 295, 297, 299, 356, 357, 358, 364, 378, 381, 390, 391, 411, 423, 424, 440, 441, 457, 458, 489, 498, 499, 515, 516, 532, 533, 553, 569, 585, 601, 604, 613, 614, 627, 645, 649, 652, 653, 674, 681], "vector": [42, 48, 50, 91, 104, 111, 112, 125, 181, 187, 190, 239, 252, 259, 260, 282, 358, 364, 411, 553, 569, 572, 578, 585, 588], "locat": [46, 48, 185, 187], "midpoint": [46, 185], "project": [47, 186, 688, 689], "outsid": [48, 58, 187, 198], "lie": [48, 187], "random": [49, 67, 69, 70, 71, 72, 114, 188, 208, 209, 210, 211, 212, 262], "sampl": [49, 114, 188, 262], "over": [51, 93, 116, 159, 160, 176, 177, 191, 220, 241, 265, 284, 301, 303, 688], "bool": [51, 54, 55, 56, 72, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 101, 102, 103, 104, 116, 119, 120, 126, 133, 134, 159, 160, 161, 176, 177, 191, 194, 195, 196, 212, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 249, 250, 251, 252, 265, 268, 269, 284, 285, 293, 294, 301, 303, 324, 326, 327, 337, 339, 340, 350, 352, 353, 356, 357, 365, 367, 368, 380, 383, 384, 397, 400, 401, 413, 416, 417, 430, 433, 434, 447, 450, 451, 464, 467, 468, 488, 489, 491, 492, 505, 508, 509, 522, 525, 526, 539, 542, 543, 555, 558, 559, 571, 574, 575, 587, 590, 591, 603, 606, 607, 620, 623, 624, 651, 682, 684, 685], "yield": [51, 54, 55, 93, 116, 119, 120, 131, 159, 160, 176, 177, 191, 194, 195, 220, 241, 265, 268, 269, 281, 284, 291, 301, 303], "addit": [51, 54, 55, 86, 102, 116, 119, 120, 144, 145, 146, 147, 191, 194, 195, 233, 250, 265, 268, 269, 309, 310, 311, 312, 336], "next": [51, 54, 55, 93, 116, 119, 120, 131, 159, 160, 176, 177, 191, 194, 195, 220, 241, 265, 268, 269, 281, 284, 291, 301, 303, 356, 357, 688, 691, 692], "attr": [51, 54, 55, 116, 191, 194, 195, 265], "contain": [52, 53, 59, 61, 62, 66, 75, 118, 133, 192, 193, 199, 202, 203, 207, 215, 267, 293, 320, 321, 322, 326, 333, 334, 335, 339, 346, 347, 348, 352, 361, 362, 363, 367, 374, 375, 376, 383, 393, 394, 395, 400, 407, 408, 409, 416, 426, 427, 428, 433, 443, 444, 445, 450, 460, 461, 462, 467, 477, 478, 479, 491, 501, 502, 503, 508, 518, 519, 520, 525, 535, 536, 537, 542, 549, 550, 551, 558, 565, 566, 567, 574, 581, 582, 583, 590, 597, 598, 599, 606, 616, 617, 618, 623, 678, 679, 680, 684], "per": [52, 53, 67, 118, 192, 193, 208, 267, 484, 485, 627], "request": [52, 53, 106, 192, 193, 254], "condit": [54, 55, 119, 120, 194, 195, 268, 269, 693], "certain": [54, 55, 74, 89, 109, 119, 120, 194, 195, 214, 237, 257, 268, 269], "can": [54, 86, 102, 119, 194, 233, 250, 268, 688, 692], "min": [54, 119, 194, 268], "max": [54, 119, 194, 268, 688], "predic": [55, 120, 195, 269], "lambda": [55, 120, 195, 269], "callabl": [55, 120, 128, 195, 269, 288, 651, 654], "you": [55, 120, 195, 269, 689, 690, 691, 692], "want": [55, 120, 195, 269, 692], "evalu": [55, 120, 195, 269], "straightlin": [56, 101, 196, 249], "emb": [56, 101, 196, 249], "two": [56, 57, 79, 101, 127, 160, 161, 196, 197, 222, 249, 287, 323, 349, 688, 692], "straight": [56, 58, 86, 101, 102, 196, 198, 233, 249, 250], "embed": [56, 58, 86, 87, 101, 102, 103, 196, 198, 233, 234, 249, 250, 251], "wa": [56, 101, 196, 249, 688, 692], "success": [56, 101, 196, 249], "otherwis": [56, 75, 79, 80, 81, 84, 85, 86, 87, 88, 101, 102, 103, 160, 196, 215, 217, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 249, 250, 251, 284, 303, 390, 391, 423, 424, 440, 441, 457, 458, 489, 498, 499, 515, 516, 532, 533, 613, 614, 681, 693], "importerror": [56, 86, 101, 102, 196, 233, 249, 250], "networkx": [56, 64, 101, 136, 196, 205, 249, 296], "instal": [56, 86, 101, 102, 196, 233, 249, 250, 688, 691], "each": [57, 58, 117, 135, 137, 197, 198, 266, 295, 297], "repres": [57, 63, 137, 197, 200, 204, 297], "vertex": [57, 58, 69, 78, 149, 197, 198, 200, 209, 219, 314], "breakpoint": [58, 198], "face": [58, 126, 198, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "break": [58, 198], "found": [58, 198, 627], "primarili": [58, 198], "up": [58, 89, 109, 198, 237, 257, 688, 692], "between": [58, 67, 127, 198, 208, 287, 302, 304, 378, 411, 553, 569, 585, 601], "specif": [58, 75, 76, 83, 198, 215, 216, 229, 692], "For": [58, 198, 286, 629, 630, 654, 655, 659, 660], "applic": [58, 198], "involv": [58, 198], "dual": [58, 198, 200], "where": [58, 122, 131, 198, 275, 291, 364, 675, 681, 688], "extern": [58, 198], "reaction": [58, 125, 198, 282, 578, 641, 688, 691], "input": [58, 198, 688], "essenti": [58, 198], "wall": [58, 198], "follow": [58, 198, 489, 627, 692, 693], "maze": [58, 198], "It": [58, 86, 102, 198, 233, 250, 489], "reli": [58, 198], "repes": [58, 198], "determin": [58, 198], "order": [58, 161, 198, 284, 303, 485], "around": [58, 198, 657], "alwai": [58, 198], "turn": [58, 198], "classmethod": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 320, 321, 322, 323, 333, 334, 335, 336, 346, 347, 348, 349, 361, 362, 363, 364, 374, 375, 376, 393, 394, 395, 407, 408, 409, 426, 427, 428, 443, 444, 445, 460, 461, 462, 477, 478, 479, 501, 502, 503, 518, 519, 520, 535, 536, 537, 549, 550, 551, 565, 566, 567, 581, 582, 583, 597, 598, 599, 616, 617, 618, 678, 679, 680, 681], "ha": [59, 61, 62, 80, 82, 131, 199, 202, 203, 217, 223, 228, 291, 304, 320, 321, 322, 333, 334, 335, 346, 347, 348, 361, 362, 363, 374, 375, 376, 393, 394, 395, 407, 408, 409, 426, 427, 428, 443, 444, 445, 460, 461, 462, 477, 478, 479, 501, 502, 503, 518, 519, 520, 535, 536, 537, 549, 550, 551, 565, 566, 567, 581, 582, 583, 597, 598, 599, 616, 617, 618, 678, 679, 680, 681, 688, 691, 692], "correct": [59, 61, 62, 199, 202, 203, 320, 321, 322, 333, 334, 335, 346, 347, 348, 361, 362, 363, 374, 375, 376, 393, 394, 395, 407, 408, 409, 426, 427, 428, 443, 444, 445, 460, 461, 462, 477, 478, 479, 501, 502, 503, 518, 519, 520, 535, 536, 537, 549, 550, 551, 565, 566, 567, 581, 582, 583, 597, 598, 599, 616, 617, 618, 678, 679, 680], "schema": [59, 61, 62, 132, 150, 151, 199, 202, 203, 292, 315, 316, 320, 321, 322, 325, 328, 329, 333, 334, 335, 338, 341, 342, 346, 347, 348, 351, 354, 355, 361, 362, 363, 366, 369, 370, 374, 375, 376, 382, 385, 386, 393, 394, 395, 399, 402, 403, 407, 408, 409, 415, 418, 419, 426, 427, 428, 432, 435, 436, 443, 444, 445, 449, 452, 453, 460, 461, 462, 466, 469, 470, 477, 478, 479, 490, 493, 494, 501, 502, 503, 507, 510, 511, 518, 519, 520, 524, 527, 528, 535, 536, 537, 541, 544, 545, 549, 550, 551, 557, 560, 561, 565, 566, 567, 573, 576, 577, 581, 582, 583, 589, 592, 593, 597, 598, 599, 605, 608, 609, 616, 617, 618, 622, 625, 626, 678, 679, 680, 683, 686, 687], "new": [60, 64, 136, 201, 205, 286, 296, 692], "inform": [60, 201, 654], "about": [60, 201, 690], "filepath": [61, 66, 133, 138, 202, 207, 293, 298, 321, 326, 334, 339, 347, 352, 362, 367, 375, 383, 394, 400, 408, 416, 427, 433, 444, 450, 461, 467, 478, 491, 502, 508, 519, 525, 536, 542, 550, 558, 566, 574, 582, 590, 598, 606, 617, 623, 655, 679, 684], "serial": [61, 62, 133, 134, 202, 203, 293, 294, 321, 322, 326, 327, 334, 335, 339, 340, 347, 348, 352, 353, 362, 363, 367, 368, 375, 376, 383, 384, 394, 395, 400, 401, 408, 409, 416, 417, 427, 428, 433, 434, 444, 445, 450, 451, 461, 462, 467, 468, 478, 479, 491, 492, 502, 503, 508, 509, 519, 520, 525, 526, 536, 537, 542, 543, 550, 551, 558, 559, 566, 567, 574, 575, 582, 583, 590, 591, 598, 599, 606, 607, 617, 618, 623, 624, 679, 680, 684, 685, 688], "like": [61, 66, 133, 138, 202, 207, 293, 298, 321, 326, 334, 339, 347, 352, 362, 367, 375, 383, 394, 400, 408, 416, 427, 433, 444, 450, 461, 467, 478, 491, 502, 508, 519, 525, 536, 542, 550, 558, 566, 574, 582, 590, 598, 606, 617, 623, 679, 684, 691, 692], "url": [61, 66, 202, 207, 321, 334, 347, 362, 375, 394, 408, 427, 444, 461, 478, 502, 519, 536, 550, 566, 582, 598, 617, 679, 689], "precis": [63, 66, 74, 89, 109, 204, 207, 214, 237, 257], "geometr": [63, 66, 74, 89, 109, 204, 207, 214, 237, 257, 647], "map": [63, 66, 74, 77, 78, 89, 90, 109, 149, 204, 207, 214, 218, 219, 237, 238, 257, 302, 304, 314, 629, 636, 639, 659, 666, 669, 688], "digraph": [64, 136, 205, 296], "specifi": [65, 74, 89, 109, 206, 214, 237, 257, 652, 688], "hshabl": [65, 206], "cloud": [67, 208], "pointcloud": [67, 208], "deprec": [69, 70, 71, 72, 209, 210, 211, 212, 688], "sinc": [69, 70, 71, 72, 209, 210, 211, 212], "version": [69, 70, 71, 72, 126, 209, 210, 211, 212, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682, 688, 692], "13": [69, 70, 71, 72, 209, 210, 211, 212], "edge_sampl": [69, 70, 209, 210], "instead": [69, 70, 71, 72, 141, 209, 210, 211, 212, 306, 688, 692], "node_sampl": [71, 72, 211, 212], "exclude_leav": [72, 212], "exclud": [72, 212], "leav": [72, 212], "one": [72, 80, 82, 212, 217, 223, 228, 356, 357, 358, 484, 485, 688, 691, 692], "verifi": [75, 76, 79, 80, 82, 83, 87, 88, 103, 215, 216, 222, 223, 228, 229, 234, 236, 251, 475], "taken": [75, 215], "account": [75, 215], "indic": [77, 137, 200, 218, 297, 692], "index": [77, 78, 90, 149, 218, 219, 238, 314], "uv": [78, 149, 219, 314], "everi": [79, 128, 161, 222, 288, 356, 357, 688], "them": [79, 222], "network_is_connect": [79, 222], "least": [80, 217, 223, 489, 627], "check": [81, 84, 85, 86, 102, 108, 217, 226, 230, 231, 233, 250, 256, 688], "flag": [81, 84, 85, 161, 217, 221, 224, 225, 226, 227, 230, 231, 232, 235, 356, 357, 489, 688, 692], "leaf": [82, 228], "min_forc": [84, 93, 230, 241], "06": [84, 93, 230, 241, 356, 357, 489, 627], "larg": [84, 93, 230, 241], "enough": [84, 93, 230, 241], "minimum": [84, 93, 230, 241, 688], "magnitud": [84, 93, 230, 241, 358], "consid": [84, 93, 230, 241, 689], "packag": [86, 102, 233, 250], "drawn": [86, 102, 233, 250], "without": [86, 87, 102, 103, 233, 234, 250, 251, 693], "shown": [86, 102, 233, 250], "furthermor": [86, 102, 233, 250], "python": [86, 102, 233, 250, 688, 690, 691, 692], "bind": [86, 102, 233, 250], "suit": [86, 102, 233, 250], "anaconda": [86, 102, 233, 250, 692], "org": [86, 102, 233, 250, 654, 655], "conda": [86, 102, 233, 250], "forg": [86, 102, 233, 250, 692], "fase": [87, 103, 234, 251], "normal": [91, 104, 239, 252], "laplacian": [91, 104, 111, 239, 252, 259], "entri": [91, 104, 239, 252, 484, 485], "diagon": [91, 104, 239, 252], "l": [91, 104, 239, 252], "dot": [91, 104, 239, 252], "centroid": [91, 104, 111, 113, 128, 239, 252, 259, 261, 288], "therefor": [91, 104, 239, 252], "By": [91, 104, 239, 252], "sign": [91, 104, 239, 252, 343, 688], "dsiplac": [91, 104, 239, 252], "could": [91, 104, 239, 252], "more": [91, 104, 239, 252, 489, 627, 654, 688], "natur": [91, 104, 239, 252], "wai": [91, 104, 239, 252, 692], "ring": [94, 111, 242, 259], "compon": [107, 112, 255, 260, 420, 437, 454, 688, 692], "neighborhood": [111, 259], "load_vector": [112, 260], "match": [119, 120, 268, 269, 578, 629, 630, 659, 660, 681], "assign": [124, 131, 263, 278, 291, 675, 681, 688], "residu": [125, 282, 688], "as_str": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "hash": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "comparison": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "dure": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 652, 682], "control": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682, 691], "digest": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "hexadecim": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "rather": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "than": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682, 688], "byte": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "mesh": [126, 128, 200, 285, 288, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 647, 650, 682, 688], "v1": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "v2": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682, 688], "vertex_attribut": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "vertex_sampl": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "v3": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682, 688], "shortest": [127, 287], "lead": [127, 287], "kmax": [128, 288, 356, 688], "damp": [128, 288], "callback": [128, 288, 356, 357, 651], "callback_arg": [128, 288], "move": [128, 288, 489, 627, 691], "free": [128, 288, 688, 693], "maximum": [128, 288, 356, 357, 489, 627], "factor": [128, 288], "user": [128, 288, 654, 688, 692], "execut": [128, 288], "after": [128, 288], "pass": [128, 288, 692], "except": [128, 129, 151, 288, 289, 316, 329, 342, 355, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 626, 687], "split": [129, 289, 688], "insert": [129, 289], "posit": [129, 289, 356, 357, 358, 364, 404, 546, 562, 681, 688], "valueerror": [129, 289], "been": [131, 291, 691, 692], "nativ": [132, 292, 325, 338, 351, 366, 382, 399, 415, 432, 449, 466, 490, 507, 524, 541, 557, 573, 589, 605, 622, 683, 691], "describ": [132, 292, 323, 325, 336, 338, 349, 351, 366, 382, 399, 415, 432, 449, 466, 490, 507, 524, 541, 557, 573, 589, 605, 622, 683], "pretti": [133, 134, 293, 294, 326, 327, 339, 340, 352, 353, 367, 368, 383, 384, 400, 401, 416, 417, 433, 434, 450, 451, 467, 468, 491, 492, 508, 509, 525, 526, 542, 543, 558, 559, 574, 575, 590, 591, 606, 607, 623, 624, 684, 685], "human": [133, 293, 326, 339, 352, 367, 383, 400, 416, 433, 450, 467, 491, 508, 525, 542, 558, 574, 590, 606, 623, 684], "readabl": [133, 293, 326, 339, 352, 367, 383, 400, 416, 433, 450, 467, 491, 508, 525, 542, 558, 574, 590, 606, 623, 684], "": [134, 150, 151, 294, 315, 316, 323, 327, 328, 329, 340, 341, 342, 349, 353, 354, 355, 368, 369, 370, 384, 385, 386, 401, 402, 403, 417, 418, 419, 434, 435, 436, 451, 452, 453, 468, 469, 470, 492, 493, 494, 509, 510, 511, 526, 527, 528, 543, 544, 545, 559, 560, 561, 575, 576, 577, 591, 592, 593, 607, 608, 609, 624, 625, 626, 685, 686, 687, 691, 692], "newli": [136, 296], "write": [138, 298], "modifi": [140, 141, 148, 305, 306, 313, 471, 693], "copi": [141, 306, 693], "origin": [141, 161, 231, 281, 286, 300, 306, 495, 512, 529, 688], "unset": [142, 143, 307, 308], "implicitli": [142, 143, 307, 308], "back": [142, 143, 307, 308], "store": [142, 143, 307, 308], "attr_dict": [144, 145, 146, 147, 309, 310, 311, 312], "kwattr": [144, 145, 146, 147, 309, 310, 311, 312], "updat": [144, 145, 146, 147, 309, 310, 311, 312, 644, 653, 673, 688], "compil": [144, 145, 146, 147, 309, 310, 311, 312], "remain": [144, 145, 146, 147, 309, 310, 311, 312], "valid": [150, 151, 315, 316, 328, 329, 341, 342, 354, 355, 369, 370, 385, 386, 402, 403, 418, 419, 435, 436, 452, 453, 469, 470, 493, 494, 510, 511, 527, 528, 544, 545, 560, 561, 576, 577, 592, 593, 608, 609, 625, 626, 686, 687], "against": [150, 151, 315, 316, 328, 329, 341, 342, 354, 355, 356, 357, 369, 370, 385, 386, 402, 403, 418, 419, 435, 436, 452, 453, 469, 470, 493, 494, 510, 511, 527, 528, 544, 545, 560, 561, 570, 576, 577, 592, 593, 608, 609, 625, 626, 686, 687], "schemaerror": [150, 315, 328, 341, 354, 369, 385, 402, 418, 435, 452, 469, 493, 510, 527, 544, 560, 576, 592, 608, 625, 686], "jsonschema": [151, 316, 329, 342, 355, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 626, 687], "validationerror": [151, 316, 329, 342, 355, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 626, 687], "meshmixin": 152, "veri": 152, "mark": [157, 356, 357], "continu": [157, 692], "thei": [157, 688, 692], "aren": 157, "simultan": [159, 176, 177, 220, 301, 691], "aux_trail": 160, "helper": 160, "process": [161, 489], "travers": 161, "begin": 161, "sequenc": [161, 189, 263, 277, 283, 286, 302, 303, 304, 356, 688], "characterist": 161, "append": 161, "unassign": 161, "part": [161, 691, 692], "previou": 161, "recalcul": 161, "call": [161, 688, 692], "attach": [164, 166], "given": [189, 286, 630, 660], "trail_length": 200, "trail_stat": 200, "deviation_forc": 200, "deviation_st": 200, "quad": 200, "quadmesh": 200, "mean": 200, "whether": [221, 224, 235, 693], "k": [263, 286], "equival": [277, 300], "largest": 277, "ascend": 284, "becom": [286, 489], "sort": 300, "topolog": 302, "sequence_map": 302, "wherein": [302, 304], "too": [303, 691], "trail_kei": 304, "sequences_map": 304, "extra": [323, 336, 349, 657, 688], "absolut": [343, 390, 391, 423, 424, 440, 441, 457, 458, 498, 499, 515, 516, 532, 533, 613, 614], "howev": [343, 691], "combinatori": [343, 689, 691], "preserv": 343, "todo": 343, "addexplicit": 343, "signatur": [343, 688], "constructor": 343, "calcul": [356, 357, 390, 391, 423, 424, 440, 441, 457, 458, 480, 489, 498, 499, 515, 516, 532, 533, 613, 614, 688], "smaller": 356, "ignor": [356, 489, 688], "run": [356, 357, 489, 627, 691, 692], "distanc": [356, 357, 378, 411, 553, 569, 585, 601], "threshold": [356, 357, 489, 627], "converg": [356, 357, 489, 627, 688], "compar": [356, 357, 570], "sum": [356, 357], "hit": [356, 357, 489, 627, 692], "befor": [356, 357, 692], "consum": [356, 357], "stop": [356, 357, 489, 627], "earli": [356, 357, 489, 627], "out": [356, 357, 692, 693], "oper": [356, 357, 691], "formdiagram": [356, 357, 489, 627, 628, 681], "weight": [371, 404, 546, 562, 578, 594], "floatconstraint": [371, 594, 688], "reach": [371, 594], "error": [378, 411, 553, 569, 585, 601, 688, 692], "squar": [378, 411, 489, 553, 569, 585, 601, 627], "differ": [378, 411, 489, 553, 569, 585, 601, 688, 691], "edgeparamet": [387, 610], "parametr": [389, 422, 439, 456, 497, 514, 531, 612, 688], "lower": [390, 423, 440, 457, 498, 515, 532, 613], "minu": [390, 423, 440, 457, 498, 515, 532, 613], "inf": [390, 391, 423, 424, 440, 441, 457, 458, 498, 499, 515, 516, 532, 533, 613, 614], "upper": [391, 424, 441, 458, 499, 516, 533, 614], "plu": [391, 424, 441, 458, 499, 516, 533, 614], "vectorconstraint": [404, 546, 562, 578, 688], "pull": [404, 546, 562], "rai": 404, "nodeparamet": [420, 437, 454, 495, 512, 529], "meet": [471, 691], "problem": [474, 475, 489, 627, 691, 692], "sane": 475, "mind": 475, "grad_f": 480, "step_siz": [480, 489], "gradient": [480, 489, 627, 688], "grad_func": 483, "paremet": 485, "care": 485, "keep": [485, 688, 692], "ckei": 486, "pkei": 487, "kappa": [489, 627, 688], "08": [489, 627], "constrain": [489, 627, 689, 691, 692], "local": [489, 627], "sequenti": [489, 627], "program": [489, 627, 692], "low": [489, 627], "storag": [489, 627], "broyden": [489, 627], "fletcher": [489, 627], "goldfarb": [489, 627], "shanno": [489, 627], "mma": [489, 627], "asymptot": [489, 627], "tnewton": [489, 627], "precondit": [489, 627], "truncat": [489, 627], "newton": [489, 627], "auglag": [489, 627], "augment": [489, 627], "lagrangian": [489, 627], "var": [489, 627, 688], "limit": [489, 627, 644, 673, 692, 693], "memori": [489, 627], "variabl": [489, 627], "metric": [489, 627], "nlopt": [489, 627, 688], "document": [489, 627, 688, 692, 693], "detail": [489, 627], "theoret": [489, 627], "underpin": [489, 627], "differenti": [489, 689, 691], "fd": 489, "finit": [489, 688], "norm": [489, 627], "8": [489, 627, 692], "step": [489, 692], "via": [489, 688, 691], "activ": 489, "cem": [489, 627, 688, 689, 690], "statist": 489, "through": [627, 692], "proxi": 627, "hyperspac": 627, "tunnel": 627, "final": [627, 692], "grad_norm": 627, "cummul": 627, "elaps": 627, "durat": [627, 652], "total": 627, "millisecond": 627, "statu": 627, "item": [628, 629, 630, 643, 647, 648, 650, 658, 659, 660, 672], "networkartist": [628, 658], "draw": [628, 635, 636, 637, 638, 639, 640, 641, 647, 658, 665, 666, 667, 668, 669, 670, 688], "form_diagram": 628, "collect": [629, 630, 635, 659, 660, 665, 692], "relev": [629, 630, 659, 660], "see": [629, 630, 654, 655, 659, 660], "accord": [629, 659], "item_artist": [629, 659], "regist": [629, 654, 659], "artist_typ": [630, 643, 660, 672], "clear": [632, 633, 662, 663], "canva": [632, 633, 662, 663, 692], "label": [634, 636, 639, 664, 666, 669], "entir": [635, 665], "text": [636, 639, 666, 669], "select": [636, 639, 666, 669], "act": 638, "view": [642, 645, 657, 671, 674], "item_typ": [643, 672], "context": [643, 672], "blender": [643, 672, 691], "visual": [643, 644, 672, 673, 692], "corner": [645, 674], "box": [645, 657, 674], "thin": 646, "wrapper": 646, "compas_plott": 646, "api": [646, 654, 655, 691], "primit": [647, 650], "plotterartist": [647, 648, 650], "paus": [649, 653], "interv": [651, 652], "frame": [651, 688, 691], "record": 651, "dpi": 651, "150": 651, "decor": 651, "dynam": [651, 691], "amount": 653, "listen": 654, "pick": 654, "event": [654, 693], "handler": 654, "doc": [654, 688], "mpl_connect": 654, "handl": 654, "matplotlib": [654, 655], "backend_bases_api": 654, "backend_bas": 654, "figurecanvasbas": 654, "event_handl": 654, "full": [655, 688], "overview": 655, "configur": 655, "pyplot_api": 655, "pyplot": 655, "savefig": 655, "zoom": 657, "topology_diagram": 658, "inscrib": 668, "circl": 668, "node_support": 675, "notabl": 688, "adher": 688, "semant": 688, "pin": 688, "depend": [688, 691, 692], "is_auxiliary_trail_edg": 688, "26": 688, "17": [688, 692], "instruct": [688, 692], "websit": 688, "bump": 688, "action": [688, 693], "21": 688, "sphinx": 688, "pytest": 688, "lazi": 688, "fixtur": 688, "requirements_dev": 688, "txt": 688, "crazi": 688, "ghaction": 688, "github": [688, 689], "page": [688, 692], "grashopp": 688, "compas_singular": 688, "polylineconstraint": 688, "plugin": [688, 691], "implement": 688, "edgedirectionconstraint": 688, "edge_plan": 688, "queri": 688, "color": 688, "topologyartist": 688, "formartist": 688, "diagramobject": 688, "moveoriginnod": 688, "gh": [688, 692], "shifttrail": 688, "number_of_sequ": 688, "enabl": [688, 691], "trails_sequ": 688, "trail_sequ": 688, "shift_trail": 688, "from_dualquadmesh": 688, "arrow": 688, "klast": 688, "explicit": 688, "ghpython": [688, 692], "prevent": 688, "nan": 688, "equilibrium_state_numpi": 688, "mise": 688, "solve_proxi": 688, "constrainedformfind": 688, "treshold": 688, "is_edge_support": 688, "folder": 688, "prefix": 688, "compascem": 688, "renam": 688, "solve_nlopt": 688, "refactor": 688, "intersect": 688, "static_equilibrium_numpi": 688, "bug": 688, "equilibrium_st": 688, "undefin": 688, "solve_nlopt_proxi": 688, "topologydiagramobject": 688, "formdiagramobject": 688, "proxyserv": 688, "acceler": 688, "__str__": 688, "nlopt_statu": 688, "better": 688, "interpret": 688, "registr": 688, "creation": 688, "caus": 688, "old": 688, "compas_rhino": [688, 692], "rhinoplan": 688, "from_geometri": 688, "from_rhino_point_and_vector": 688, "from_rhino_point": 688, "from_rhino_lin": 688, "ghdata": 688, "jenssen": 688, "tube": 688, "is_node_support": 688, "search": 688, "global": [688, 691], "dark": 688, "blue": 688, "grai": 688, "mechan": 688, "compli": 688, "topologyplott": 688, "formplott": 688, "serializ": 688, "due": 688, "networkplott": 688, "green": 688, "light": 688, "assembl": 688, "ghplugin": 688, "wrap": 688, "edgesearch": 688, "drop": [688, 692], "ld": 688, "subscript": 688, "skip": 688, "assembletopologydiagram": 688, "draw_arrow": 688, "_draw_load": 688, "_draw_load_arrow": 688, "export": 688, "draw_trail": 688, "topologyartistcompon": 688, "number_of_trail_edg": 688, "number_of_deviation_edg": 688, "__repr__": 688, "edge_kei": 688, "node_kei": 688, "replac": [688, 692], "noderesult": 688, "wit": 688, "supportnoderesult": 688, "merg": [688, 693], "access": 688, "gradient_norm": 688, "expos": 688, "hard": 688, "code": [688, 689, 691, 692], "ghcompon": 688, "to_compa": 688, "planeconstraint": 688, "formfind": 688, "eps_min": 688, "draw_seg": 688, "scheme": 688, "draw_edg": 688, "tight": 688, "autoscal": 688, "save": 688, "overcrop": 688, "imag": 688, "custom": 688, "form_plotter_proxi": 688, "topology_plotter_proxi": 688, "polygon": 688, "took": 688, "temporari": 688, "patch": 688, "deviationedgelengthconstraint": 688, "autograd": 688, "filter": 688, "number_of_auxiliary_trail": 688, "properti": 688, "auxiliary_trail_vector": 688, "under": [688, 691], "anyth": 688, "longer": [688, 692], "reflect": 688, "immut": 688, "children": 688, "penalti": 688, "nodemixin": 688, "node_xyz": 688, "rhino_instal": 688, "streamlin": 688, "symlink": 688, "src": 688, "ghuser": [688, 692], "gitignor": 688, "uninstal": [688, 692], "tag": 688, "regex": 688, "bumpvers": 688, "cfg": 688, "md": 688, "rst": 688, "research": 689, "pleas": [689, 692], "our": [689, 691, 692], "journal": 689, "paper": 689, "articl": 689, "pastrana_constrainedformfinding_2022": 689, "titl": 689, "pastrana": [689, 691, 693], "rafael": [689, 691, 693], "ohlbrock": [689, 691], "patrick": 689, "ol": [689, 691], "oberbichl": 689, "thoma": 689, "acunto": [689, 691], "pierluigi": [689, 691], "parascho": [689, 691], "stefana": [689, 691], "aid": 689, "design": [689, 691], "doi": 689, "1016": 689, "j": 689, "cad": [689, 691], "2022": 689, "103435": 689, "volum": 689, "155": 689, "issn": 689, "0010": 689, "4485": 689, "www": 689, "sciencedirect": 689, "scienc": [689, 691], "pii": 689, "s0010448522001683": 689, "month": 689, "feb": 689, "year": 689, "And": 689, "repositori": 689, "softwar": [689, 691, 693], "model": [689, 691, 692], "framework": [689, 691], "2021": [689, 693], "5281": 689, "zenodo": 689, "5705740": 689, "arpastrana": 689, "io": 689, "_cem": 689, "princeton": [689, 691], "arch": 689, "ethz": 689, "ch": 689, "oleohlbrock": 689, "pierluigidacunto": 689, "tum": 689, "de": 689, "epfl": 689, "stefanaparascho": 689, "excit": 690, "mai": [690, 692], "help": 690, "approach": 691, "spatial": 691, "bar": 691, "subject": [691, 693], "combin": 691, "encapsul": 691, "open": 691, "tool": [691, 692], "formul": 691, "solut": 691, "plain": 691, "mix": 691, "explor": 691, "wider": 691, "spectrum": 691, "typologi": 691, "space": 691, "go": [691, 692], "beyond": 691, "convent": 691, "catalog": 691, "shell": 691, "cabl": 691, "effici": 691, "priori": 691, "best": 691, "fit": [691, 693], "shape": 691, "restrain": 691, "usabl": 691, "across": 691, "system": 691, "window": [691, 692], "maco": [691, 692], "linux": [691, 692], "perhap": 691, "dai": [691, 692], "also": [691, 692], "metavers": 691, "work": [691, 692], "necessari": 691, "interfac": 691, "seamlessli": 691, "insid": 691, "popular": 691, "environ": 691, "As": [691, 692], "extens": [691, 692], "offer": [691, 692], "integr": 691, "exchang": 691, "ecosystem": 691, "those": [691, 692], "slider": 691, "person": [691, 693], "worri": 691, "ship": 691, "precook": 691, "readili": 691, "engin": [691, 692], "your": 691, "spaghetti": 691, "pipelin": 691, "develop": 691, "nation": 691, "foundat": 691, "grant": [691, 693], "oac": 691, "2118201": 691, "nsf": 691, "institut": 691, "driven": 691, "introduct": 691, "changelog": 691, "cite": 691, "licens": 691, "four": 692, "we": 692, "have": 692, "machin": 692, "command": 692, "prompt": 692, "termin": 692, "chose": 692, "spacecowboi": 692, "prefer": 692, "bubbl": 692, "isol": 692, "In": 692, "word": 692, "what": 692, "happen": 692, "stai": 692, "requir": 692, "recommend": 692, "consult": 692, "compas_view2": 692, "encount": 692, "being": 692, "abl": 692, "microsoft": 692, "miss": 692, "fail": 692, "saniti": 692, "known": 692, "issu": 692, "how": 692, "do": [692, 693], "mayb": 692, "liner": 692, "To": 692, "everyth": 692, "enter": 692, "celebr": 692, "There": 692, "complex": 692, "easier": 692, "few": 692, "mous": 692, "click": 692, "hundr": 692, "bit": 692, "familiar": 692, "addition": 692, "close": 692, "three": 692, "sure": 692, "proceed": 692, "case": 692, "older": 692, "m": 692, "compani": 692, "futur": 692, "releas": 692, "let": 692, "compas_ghpython": 692, "were": 692, "wonder": 692, "launch": 692, "onto": 692, "send": 692, "pictur": 692, "onc": 692, "forget": 692, "who": 692, "don": 692, "know": 692, "consequ": 692, "alreadi": 692, "NOT": [692, 693], "past": 692, "latest": 692, "upgrad": 692, "altern": 692, "switch": 692, "had": 692, "mit": 693, "copyright": 693, "2020": 693, "permiss": 693, "herebi": 693, "charg": 693, "obtain": 693, "associ": 693, "deal": 693, "restrict": 693, "right": 693, "publish": 693, "distribut": 693, "sublicens": 693, "sell": 693, "permit": 693, "whom": 693, "furnish": 693, "so": 693, "abov": 693, "notic": 693, "shall": 693, "substanti": 693, "portion": 693, "THE": 693, "AS": 693, "warranti": 693, "OF": 693, "kind": 693, "express": 693, "OR": 693, "impli": 693, "BUT": 693, "TO": 693, "merchant": 693, "FOR": 693, "particular": 693, "purpos": 693, "AND": 693, "noninfring": 693, "NO": 693, "author": 693, "holder": 693, "BE": 693, "liabl": 693, "claim": 693, "damag": 693, "liabil": 693, "contract": 693, "tort": 693, "aris": 693, "WITH": 693}, "objects": {"": [[13, 0, 0, "-", "compas_cem"]], "compas_cem": [[14, 0, 0, "-", "diagrams"], [15, 0, 0, "-", "elements"], [16, 0, 0, "-", "equilibrium"], [17, 0, 0, "-", "loads"], [18, 0, 0, "-", "optimization"], [19, 0, 0, "-", "plotters"], [20, 0, 0, "-", "supports"], [21, 0, 0, "-", "viewers"]], "compas_cem.diagrams": [[22, 1, 1, "", "FormDiagram"], [152, 1, 1, "", "TopologyDiagram"]], "compas_cem.diagrams.FormDiagram": [[23, 2, 1, "", "ToString"], [24, 2, 1, "", "add_edge"], [25, 2, 1, "", "add_node"], [26, 2, 1, "", "adjacency_matrix"], [27, 2, 1, "", "clear"], [28, 2, 1, "", "complement"], [29, 2, 1, "", "connected_edges"], [30, 2, 1, "", "connectivity_matrix"], [31, 2, 1, "", "copy"], [32, 2, 1, "", "count_crossings"], [33, 2, 1, "", "degree"], [34, 2, 1, "", "degree_in"], [35, 2, 1, "", "degree_matrix"], [36, 2, 1, "", "degree_out"], [37, 2, 1, "", "delete_edge"], [38, 2, 1, "", "delete_node"], [39, 2, 1, "", "edge_attribute"], [40, 2, 1, "", "edge_attributes"], [41, 2, 1, "", "edge_coordinates"], [42, 2, 1, "", "edge_direction"], [43, 2, 1, "", "edge_force"], [44, 2, 1, "", "edge_length"], [45, 2, 1, "", "edge_length_2"], [46, 2, 1, "", "edge_midpoint"], [47, 2, 1, "", "edge_plane"], [48, 2, 1, "", "edge_point"], [49, 2, 1, "", "edge_sample"], [50, 2, 1, "", "edge_vector"], [51, 2, 1, "", "edges"], [52, 2, 1, "", "edges_attribute"], [53, 2, 1, "", "edges_attributes"], [54, 2, 1, "", "edges_where"], [55, 2, 1, "", "edges_where_predicate"], [56, 2, 1, "", "embed_in_plane"], [57, 2, 1, "", "find_crossings"], [58, 2, 1, "", "find_cycles"], [59, 2, 1, "", "from_data"], [60, 2, 1, "", "from_edges"], [61, 2, 1, "", "from_json"], [62, 2, 1, "", "from_jsonstring"], [63, 2, 1, "", "from_lines"], [64, 2, 1, "", "from_networkx"], [65, 2, 1, "", "from_nodes_and_edges"], [66, 2, 1, "", "from_obj"], [67, 2, 1, "", "from_pointcloud"], [68, 2, 1, "", "from_topology_diagram"], [69, 2, 1, "", "get_any_edge"], [70, 2, 1, "", "get_any_edges"], [71, 2, 1, "", "get_any_node"], [72, 2, 1, "", "get_any_nodes"], [73, 2, 1, "", "gkey"], [74, 2, 1, "", "gkey_key"], [75, 2, 1, "", "has_edge"], [76, 2, 1, "", "has_node"], [77, 2, 1, "", "index_key"], [78, 2, 1, "", "index_uv"], [79, 2, 1, "", "is_connected"], [80, 2, 1, "", "is_crossed"], [81, 2, 1, "", "is_edge_supported"], [82, 2, 1, "", "is_leaf"], [83, 2, 1, "", "is_node_connected"], [84, 2, 1, "", "is_node_loaded"], [85, 2, 1, "", "is_node_support"], [86, 2, 1, "", "is_planar"], [87, 2, 1, "", "is_planar_embedding"], [88, 2, 1, "", "is_xy"], [89, 2, 1, "", "key_gkey"], [90, 2, 1, "", "key_index"], [91, 2, 1, "", "laplacian_matrix"], [92, 2, 1, "", "leaves"], [93, 2, 1, "", "loaded_nodes"], [94, 2, 1, "", "neighborhood"], [95, 2, 1, "", "neighbors"], [96, 2, 1, "", "neighbors_in"], [97, 2, 1, "", "neighbors_out"], [98, 2, 1, "", "network_adjacency_matrix"], [99, 2, 1, "", "network_connectivity_matrix"], [100, 2, 1, "", "network_degree_matrix"], [101, 2, 1, "", "network_embed_in_plane"], [102, 2, 1, "", "network_is_planar"], [103, 2, 1, "", "network_is_planar_embedding"], [104, 2, 1, "", "network_laplacian_matrix"], [105, 2, 1, "", "node_attribute"], [106, 2, 1, "", "node_attributes"], [107, 2, 1, "", "node_coordinates"], [108, 2, 1, "", "node_exists"], [109, 2, 1, "", "node_gkey"], [110, 2, 1, "", "node_key"], [111, 2, 1, "", "node_laplacian"], [112, 2, 1, "", "node_load"], [113, 2, 1, "", "node_neighborhood_centroid"], [114, 2, 1, "", "node_sample"], [115, 2, 1, "", "node_xyz"], [116, 2, 1, "", "nodes"], [117, 2, 1, "", "nodes_attribute"], [118, 2, 1, "", "nodes_attributes"], [119, 2, 1, "", "nodes_where"], [120, 2, 1, "", "nodes_where_predicate"], [121, 2, 1, "", "number_of_edges"], [122, 2, 1, "", "number_of_loaded_nodes"], [123, 2, 1, "", "number_of_nodes"], [124, 2, 1, "", "number_of_support_nodes"], [125, 2, 1, "", "reaction_force"], [126, 2, 1, "", "sha256"], [127, 2, 1, "", "shortest_path"], [128, 2, 1, "", "smooth"], [129, 2, 1, "", "split_edge"], [130, 2, 1, "", "summary"], [131, 2, 1, "", "support_nodes"], [132, 2, 1, "", "to_data"], [133, 2, 1, "", "to_json"], [134, 2, 1, "", "to_jsonstring"], [135, 2, 1, "", "to_lines"], [136, 2, 1, "", "to_networkx"], [137, 2, 1, "", "to_nodes_and_edges"], [138, 2, 1, "", "to_obj"], [139, 2, 1, "", "to_points"], [140, 2, 1, "", "transform"], [141, 2, 1, "", "transformed"], [142, 2, 1, "", "unset_edge_attribute"], [143, 2, 1, "", "unset_node_attribute"], [144, 2, 1, "", "update_dea"], [145, 2, 1, "", "update_default_edge_attributes"], [146, 2, 1, "", "update_default_node_attributes"], [147, 2, 1, "", "update_dna"], [148, 2, 1, "", "update_node_xyz"], [149, 2, 1, "", "uv_index"], [150, 2, 1, "", "validate_data"], [151, 2, 1, "", "validate_json"]], "compas_cem.diagrams.TopologyDiagram": [[153, 2, 1, "", "ToString"], [154, 2, 1, "", "add_edge"], [155, 2, 1, "", "add_load"], [156, 2, 1, "", "add_node"], [157, 2, 1, "", "add_support"], [158, 2, 1, "", "adjacency_matrix"], [159, 2, 1, "", "auxiliary_trail_edges"], [160, 2, 1, "", "auxiliary_trails"], [161, 2, 1, "", "build_trails"], [162, 2, 1, "", "clear"], [163, 2, 1, "", "complement"], [164, 2, 1, "", "connected_deviation_edges"], [165, 2, 1, "", "connected_edges"], [166, 2, 1, "", "connected_trail_edges"], [167, 2, 1, "", "connectivity_matrix"], [168, 2, 1, "", "copy"], [169, 2, 1, "", "count_crossings"], [170, 2, 1, "", "degree"], [171, 2, 1, "", "degree_in"], [172, 2, 1, "", "degree_matrix"], [173, 2, 1, "", "degree_out"], [174, 2, 1, "", "delete_edge"], [175, 2, 1, "", "delete_node"], [176, 2, 1, "", "deviation_edges"], [177, 2, 1, "", "direct_deviation_edges"], [178, 2, 1, "", "edge_attribute"], [179, 2, 1, "", "edge_attributes"], [180, 2, 1, "", "edge_coordinates"], [181, 2, 1, "", "edge_direction"], [182, 2, 1, "", "edge_force"], [183, 2, 1, "", "edge_length"], [184, 2, 1, "", "edge_length_2"], [185, 2, 1, "", "edge_midpoint"], [186, 2, 1, "", "edge_plane"], [187, 2, 1, "", "edge_point"], [188, 2, 1, "", "edge_sample"], [189, 2, 1, "", "edge_sequence"], [190, 2, 1, "", "edge_vector"], [191, 2, 1, "", "edges"], [192, 2, 1, "", "edges_attribute"], [193, 2, 1, "", "edges_attributes"], [194, 2, 1, "", "edges_where"], [195, 2, 1, "", "edges_where_predicate"], [196, 2, 1, "", "embed_in_plane"], [197, 2, 1, "", "find_crossings"], [198, 2, 1, "", "find_cycles"], [199, 2, 1, "", "from_data"], [200, 2, 1, "", "from_dualquadmesh"], [201, 2, 1, "", "from_edges"], [202, 2, 1, "", "from_json"], [203, 2, 1, "", "from_jsonstring"], [204, 2, 1, "", "from_lines"], [205, 2, 1, "", "from_networkx"], [206, 2, 1, "", "from_nodes_and_edges"], [207, 2, 1, "", "from_obj"], [208, 2, 1, "", "from_pointcloud"], [209, 2, 1, "", "get_any_edge"], [210, 2, 1, "", "get_any_edges"], [211, 2, 1, "", "get_any_node"], [212, 2, 1, "", "get_any_nodes"], [213, 2, 1, "", "gkey"], [214, 2, 1, "", "gkey_key"], [215, 2, 1, "", "has_edge"], [216, 2, 1, "", "has_node"], [217, 2, 1, "", "has_trails"], [218, 2, 1, "", "index_key"], [219, 2, 1, "", "index_uv"], [220, 2, 1, "", "indirect_deviation_edges"], [221, 2, 1, "", "is_auxiliary_trail_edge"], [222, 2, 1, "", "is_connected"], [223, 2, 1, "", "is_crossed"], [224, 2, 1, "", "is_deviation_edge"], [225, 2, 1, "", "is_direct_deviation_edge"], [226, 2, 1, "", "is_edge_supported"], [227, 2, 1, "", "is_indirect_deviation_edge"], [228, 2, 1, "", "is_leaf"], [229, 2, 1, "", "is_node_connected"], [230, 2, 1, "", "is_node_loaded"], [231, 2, 1, "", "is_node_origin"], [232, 2, 1, "", "is_node_support"], [233, 2, 1, "", "is_planar"], [234, 2, 1, "", "is_planar_embedding"], [235, 2, 1, "", "is_trail_edge"], [236, 2, 1, "", "is_xy"], [237, 2, 1, "", "key_gkey"], [238, 2, 1, "", "key_index"], [239, 2, 1, "", "laplacian_matrix"], [240, 2, 1, "", "leaves"], [241, 2, 1, "", "loaded_nodes"], [242, 2, 1, "", "neighborhood"], [243, 2, 1, "", "neighbors"], [244, 2, 1, "", "neighbors_in"], [245, 2, 1, "", "neighbors_out"], [246, 2, 1, "", "network_adjacency_matrix"], [247, 2, 1, "", "network_connectivity_matrix"], [248, 2, 1, "", "network_degree_matrix"], [249, 2, 1, "", "network_embed_in_plane"], [250, 2, 1, "", "network_is_planar"], [251, 2, 1, "", "network_is_planar_embedding"], [252, 2, 1, "", "network_laplacian_matrix"], [253, 2, 1, "", "node_attribute"], [254, 2, 1, "", "node_attributes"], [255, 2, 1, "", "node_coordinates"], [256, 2, 1, "", "node_exists"], [257, 2, 1, "", "node_gkey"], [258, 2, 1, "", "node_key"], [259, 2, 1, "", "node_laplacian"], [260, 2, 1, "", "node_load"], [261, 2, 1, "", "node_neighborhood_centroid"], [262, 2, 1, "", "node_sample"], [263, 2, 1, "", "node_sequence"], [264, 2, 1, "", "node_xyz"], [265, 2, 1, "", "nodes"], [266, 2, 1, "", "nodes_attribute"], [267, 2, 1, "", "nodes_attributes"], [268, 2, 1, "", "nodes_where"], [269, 2, 1, "", "nodes_where_predicate"], [270, 2, 1, "", "number_of_auxiliary_trails"], [271, 2, 1, "", "number_of_deviation_edges"], [272, 2, 1, "", "number_of_direct_deviation_edges"], [273, 2, 1, "", "number_of_edges"], [274, 2, 1, "", "number_of_indirect_deviation_edges"], [275, 2, 1, "", "number_of_loaded_nodes"], [276, 2, 1, "", "number_of_nodes"], [277, 2, 1, "", "number_of_sequences"], [278, 2, 1, "", "number_of_support_nodes"], [279, 2, 1, "", "number_of_trail_edges"], [280, 2, 1, "", "number_of_trails"], [281, 2, 1, "", "origin_nodes"], [282, 2, 1, "", "reaction_force"], [283, 2, 1, "", "sequence_last"], [284, 2, 1, "", "sequences"], [285, 2, 1, "", "sha256"], [286, 2, 1, "", "shift_trail"], [287, 2, 1, "", "shortest_path"], [288, 2, 1, "", "smooth"], [289, 2, 1, "", "split_edge"], [290, 2, 1, "", "summary"], [291, 2, 1, "", "support_nodes"], [292, 2, 1, "", "to_data"], [293, 2, 1, "", "to_json"], [294, 2, 1, "", "to_jsonstring"], [295, 2, 1, "", "to_lines"], [296, 2, 1, "", "to_networkx"], [297, 2, 1, "", "to_nodes_and_edges"], [298, 2, 1, "", "to_obj"], [299, 2, 1, "", "to_points"], [300, 2, 1, "", "trail"], [301, 2, 1, "", "trail_edges"], [302, 2, 1, "", "trail_sequences"], [303, 2, 1, "", "trails"], [304, 2, 1, "", "trails_sequences"], [305, 2, 1, "", "transform"], [306, 2, 1, "", "transformed"], [307, 2, 1, "", "unset_edge_attribute"], [308, 2, 1, "", "unset_node_attribute"], [309, 2, 1, "", "update_dea"], [310, 2, 1, "", "update_default_edge_attributes"], [311, 2, 1, "", "update_default_node_attributes"], [312, 2, 1, "", "update_dna"], [313, 2, 1, "", "update_node_xyz"], [314, 2, 1, "", "uv_index"], [315, 2, 1, "", "validate_data"], [316, 2, 1, "", "validate_json"]], "compas_cem.elements": [[317, 1, 1, "", "DeviationEdge"], [330, 1, 1, "", "Node"], [343, 1, 1, "", "TrailEdge"]], "compas_cem.elements.DeviationEdge": [[318, 2, 1, "", "ToString"], [319, 2, 1, "", "copy"], [320, 2, 1, "", "from_data"], [321, 2, 1, "", "from_json"], [322, 2, 1, "", "from_jsonstring"], [323, 2, 1, "", "from_line"], [324, 2, 1, "", "sha256"], [325, 2, 1, "", "to_data"], [326, 2, 1, "", "to_json"], [327, 2, 1, "", "to_jsonstring"], [328, 2, 1, "", "validate_data"], [329, 2, 1, "", "validate_json"]], "compas_cem.elements.Node": [[331, 2, 1, "", "ToString"], [332, 2, 1, "", "copy"], [333, 2, 1, "", "from_data"], [334, 2, 1, "", "from_json"], [335, 2, 1, "", "from_jsonstring"], [336, 2, 1, "", "from_point"], [337, 2, 1, "", "sha256"], [338, 2, 1, "", "to_data"], [339, 2, 1, "", "to_json"], [340, 2, 1, "", "to_jsonstring"], [341, 2, 1, "", "validate_data"], [342, 2, 1, "", "validate_json"]], "compas_cem.elements.TrailEdge": [[344, 2, 1, "", "ToString"], [345, 2, 1, "", "copy"], [346, 2, 1, "", "from_data"], [347, 2, 1, "", "from_json"], [348, 2, 1, "", "from_jsonstring"], [349, 2, 1, "", "from_line"], [350, 2, 1, "", "sha256"], [351, 2, 1, "", "to_data"], [352, 2, 1, "", "to_json"], [353, 2, 1, "", "to_jsonstring"], [354, 2, 1, "", "validate_data"], [355, 2, 1, "", "validate_json"]], "compas_cem.equilibrium": [[356, 3, 1, "", "static_equilibrium"], [357, 3, 1, "", "static_equilibrium_numpy"]], "compas_cem.loads": [[358, 1, 1, "", "NodeLoad"]], "compas_cem.loads.NodeLoad": [[359, 2, 1, "", "ToString"], [360, 2, 1, "", "copy"], [361, 2, 1, "", "from_data"], [362, 2, 1, "", "from_json"], [363, 2, 1, "", "from_jsonstring"], [364, 2, 1, "", "from_point_and_vector"], [365, 2, 1, "", "sha256"], [366, 2, 1, "", "to_data"], [367, 2, 1, "", "to_json"], [368, 2, 1, "", "to_jsonstring"], [369, 2, 1, "", "validate_data"], [370, 2, 1, "", "validate_json"]], "compas_cem.optimization": [[371, 1, 1, "", "DeviationEdgeLengthConstraint"], [387, 1, 1, "", "DeviationEdgeParameter"], [404, 1, 1, "", "LineConstraint"], [420, 1, 1, "", "NodeLoadXParameter"], [437, 1, 1, "", "NodeLoadYParameter"], [454, 1, 1, "", "NodeLoadZParameter"], [471, 1, 1, "", "Optimizer"], [495, 1, 1, "", "OriginNodeXParameter"], [512, 1, 1, "", "OriginNodeYParameter"], [529, 1, 1, "", "OriginNodeZParameter"], [546, 1, 1, "", "PlaneConstraint"], [562, 1, 1, "", "PointConstraint"], [578, 1, 1, "", "ReactionForceConstraint"], [594, 1, 1, "", "TrailEdgeForceConstraint"], [610, 1, 1, "", "TrailEdgeParameter"], [627, 3, 1, "", "solve_proxy"]], "compas_cem.optimization.DeviationEdgeLengthConstraint": [[372, 2, 1, "", "ToString"], [373, 2, 1, "", "copy"], [374, 2, 1, "", "from_data"], [375, 2, 1, "", "from_json"], [376, 2, 1, "", "from_jsonstring"], [377, 2, 1, "", "key"], [378, 2, 1, "", "penalty"], [379, 2, 1, "", "reference"], [380, 2, 1, "", "sha256"], [381, 2, 1, "", "target"], [382, 2, 1, "", "to_data"], [383, 2, 1, "", "to_json"], [384, 2, 1, "", "to_jsonstring"], [385, 2, 1, "", "validate_data"], [386, 2, 1, "", "validate_json"]], "compas_cem.optimization.DeviationEdgeParameter": [[388, 2, 1, "", "ToString"], [389, 2, 1, "", "attr_name"], [390, 2, 1, "", "bound_low"], [391, 2, 1, "", "bound_up"], [392, 2, 1, "", "copy"], [393, 2, 1, "", "from_data"], [394, 2, 1, "", "from_json"], [395, 2, 1, "", "from_jsonstring"], [396, 2, 1, "", "key"], [397, 2, 1, "", "sha256"], [398, 2, 1, "", "start_value"], [399, 2, 1, "", "to_data"], [400, 2, 1, "", "to_json"], [401, 2, 1, "", "to_jsonstring"], [402, 2, 1, "", "validate_data"], [403, 2, 1, "", "validate_json"]], "compas_cem.optimization.LineConstraint": [[405, 2, 1, "", "ToString"], [406, 2, 1, "", "copy"], [407, 2, 1, "", "from_data"], [408, 2, 1, "", "from_json"], [409, 2, 1, "", "from_jsonstring"], [410, 2, 1, "", "key"], [411, 2, 1, "", "penalty"], [412, 2, 1, "", "reference"], [413, 2, 1, "", "sha256"], [414, 2, 1, "", "target"], [415, 2, 1, "", "to_data"], [416, 2, 1, "", "to_json"], [417, 2, 1, "", "to_jsonstring"], [418, 2, 1, "", "validate_data"], [419, 2, 1, "", "validate_json"]], "compas_cem.optimization.NodeLoadXParameter": [[421, 2, 1, "", "ToString"], [422, 2, 1, "", "attr_name"], [423, 2, 1, "", "bound_low"], [424, 2, 1, "", "bound_up"], [425, 2, 1, "", "copy"], [426, 2, 1, "", "from_data"], [427, 2, 1, "", "from_json"], [428, 2, 1, "", "from_jsonstring"], [429, 2, 1, "", "key"], [430, 2, 1, "", "sha256"], [431, 2, 1, "", "start_value"], [432, 2, 1, "", "to_data"], [433, 2, 1, "", "to_json"], [434, 2, 1, "", "to_jsonstring"], [435, 2, 1, "", "validate_data"], [436, 2, 1, "", "validate_json"]], "compas_cem.optimization.NodeLoadYParameter": [[438, 2, 1, "", "ToString"], [439, 2, 1, "", "attr_name"], [440, 2, 1, "", "bound_low"], [441, 2, 1, "", "bound_up"], [442, 2, 1, "", "copy"], [443, 2, 1, "", "from_data"], [444, 2, 1, "", "from_json"], [445, 2, 1, "", "from_jsonstring"], [446, 2, 1, "", "key"], [447, 2, 1, "", "sha256"], [448, 2, 1, "", "start_value"], [449, 2, 1, "", "to_data"], [450, 2, 1, "", "to_json"], [451, 2, 1, "", "to_jsonstring"], [452, 2, 1, "", "validate_data"], [453, 2, 1, "", "validate_json"]], "compas_cem.optimization.NodeLoadZParameter": [[455, 2, 1, "", "ToString"], [456, 2, 1, "", "attr_name"], [457, 2, 1, "", "bound_low"], [458, 2, 1, "", "bound_up"], [459, 2, 1, "", "copy"], [460, 2, 1, "", "from_data"], [461, 2, 1, "", "from_json"], [462, 2, 1, "", "from_jsonstring"], [463, 2, 1, "", "key"], [464, 2, 1, "", "sha256"], [465, 2, 1, "", "start_value"], [466, 2, 1, "", "to_data"], [467, 2, 1, "", "to_json"], [468, 2, 1, "", "to_jsonstring"], [469, 2, 1, "", "validate_data"], [470, 2, 1, "", "validate_json"]], "compas_cem.optimization.Optimizer": [[472, 2, 1, "", "ToString"], [473, 2, 1, "", "add_constraint"], [474, 2, 1, "", "add_parameter"], [475, 2, 1, "", "check_optimization_sanity"], [476, 2, 1, "", "copy"], [477, 2, 1, "", "from_data"], [478, 2, 1, "", "from_json"], [479, 2, 1, "", "from_jsonstring"], [480, 2, 1, "", "gradient_func"], [481, 2, 1, "", "number_of_constraints"], [482, 2, 1, "", "number_of_parameters"], [483, 2, 1, "", "objective_func"], [484, 2, 1, "", "optimization_bounds"], [485, 2, 1, "", "optimization_parameters"], [486, 2, 1, "", "remove_constraint"], [487, 2, 1, "", "remove_parameter"], [488, 2, 1, "", "sha256"], [489, 2, 1, "", "solve"], [490, 2, 1, "", "to_data"], [491, 2, 1, "", "to_json"], [492, 2, 1, "", "to_jsonstring"], [493, 2, 1, "", "validate_data"], [494, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeXParameter": [[496, 2, 1, "", "ToString"], [497, 2, 1, "", "attr_name"], [498, 2, 1, "", "bound_low"], [499, 2, 1, "", "bound_up"], [500, 2, 1, "", "copy"], [501, 2, 1, "", "from_data"], [502, 2, 1, "", "from_json"], [503, 2, 1, "", "from_jsonstring"], [504, 2, 1, "", "key"], [505, 2, 1, "", "sha256"], [506, 2, 1, "", "start_value"], [507, 2, 1, "", "to_data"], [508, 2, 1, "", "to_json"], [509, 2, 1, "", "to_jsonstring"], [510, 2, 1, "", "validate_data"], [511, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeYParameter": [[513, 2, 1, "", "ToString"], [514, 2, 1, "", "attr_name"], [515, 2, 1, "", "bound_low"], [516, 2, 1, "", "bound_up"], [517, 2, 1, "", "copy"], [518, 2, 1, "", "from_data"], [519, 2, 1, "", "from_json"], [520, 2, 1, "", "from_jsonstring"], [521, 2, 1, "", "key"], [522, 2, 1, "", "sha256"], [523, 2, 1, "", "start_value"], [524, 2, 1, "", "to_data"], [525, 2, 1, "", "to_json"], [526, 2, 1, "", "to_jsonstring"], [527, 2, 1, "", "validate_data"], [528, 2, 1, "", "validate_json"]], "compas_cem.optimization.OriginNodeZParameter": [[530, 2, 1, "", "ToString"], [531, 2, 1, "", "attr_name"], [532, 2, 1, "", "bound_low"], [533, 2, 1, "", "bound_up"], [534, 2, 1, "", "copy"], [535, 2, 1, "", "from_data"], [536, 2, 1, "", "from_json"], [537, 2, 1, "", "from_jsonstring"], [538, 2, 1, "", "key"], [539, 2, 1, "", "sha256"], [540, 2, 1, "", "start_value"], [541, 2, 1, "", "to_data"], [542, 2, 1, "", "to_json"], [543, 2, 1, "", "to_jsonstring"], [544, 2, 1, "", "validate_data"], [545, 2, 1, "", "validate_json"]], "compas_cem.optimization.PlaneConstraint": [[547, 2, 1, "", "ToString"], [548, 2, 1, "", "copy"], [549, 2, 1, "", "from_data"], [550, 2, 1, "", "from_json"], [551, 2, 1, "", "from_jsonstring"], [552, 2, 1, "", "key"], [553, 2, 1, "", "penalty"], [554, 2, 1, "", "reference"], [555, 2, 1, "", "sha256"], [556, 2, 1, "", "target"], [557, 2, 1, "", "to_data"], [558, 2, 1, "", "to_json"], [559, 2, 1, "", "to_jsonstring"], [560, 2, 1, "", "validate_data"], [561, 2, 1, "", "validate_json"]], "compas_cem.optimization.PointConstraint": [[563, 2, 1, "", "ToString"], [564, 2, 1, "", "copy"], [565, 2, 1, "", "from_data"], [566, 2, 1, "", "from_json"], [567, 2, 1, "", "from_jsonstring"], [568, 2, 1, "", "key"], [569, 2, 1, "", "penalty"], [570, 2, 1, "", "reference"], [571, 2, 1, "", "sha256"], [572, 2, 1, "", "target"], [573, 2, 1, "", "to_data"], [574, 2, 1, "", "to_json"], [575, 2, 1, "", "to_jsonstring"], [576, 2, 1, "", "validate_data"], [577, 2, 1, "", "validate_json"]], "compas_cem.optimization.ReactionForceConstraint": [[579, 2, 1, "", "ToString"], [580, 2, 1, "", "copy"], [581, 2, 1, "", "from_data"], [582, 2, 1, "", "from_json"], [583, 2, 1, "", "from_jsonstring"], [584, 2, 1, "", "key"], [585, 2, 1, "", "penalty"], [586, 2, 1, "", "reference"], [587, 2, 1, "", "sha256"], [588, 2, 1, "", "target"], [589, 2, 1, "", "to_data"], [590, 2, 1, "", "to_json"], [591, 2, 1, "", "to_jsonstring"], [592, 2, 1, "", "validate_data"], [593, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeForceConstraint": [[595, 2, 1, "", "ToString"], [596, 2, 1, "", "copy"], [597, 2, 1, "", "from_data"], [598, 2, 1, "", "from_json"], [599, 2, 1, "", "from_jsonstring"], [600, 2, 1, "", "key"], [601, 2, 1, "", "penalty"], [602, 2, 1, "", "reference"], [603, 2, 1, "", "sha256"], [604, 2, 1, "", "target"], [605, 2, 1, "", "to_data"], [606, 2, 1, "", "to_json"], [607, 2, 1, "", "to_jsonstring"], [608, 2, 1, "", "validate_data"], [609, 2, 1, "", "validate_json"]], "compas_cem.optimization.TrailEdgeParameter": [[611, 2, 1, "", "ToString"], [612, 2, 1, "", "attr_name"], [613, 2, 1, "", "bound_low"], [614, 2, 1, "", "bound_up"], [615, 2, 1, "", "copy"], [616, 2, 1, "", "from_data"], [617, 2, 1, "", "from_json"], [618, 2, 1, "", "from_jsonstring"], [619, 2, 1, "", "key"], [620, 2, 1, "", "sha256"], [621, 2, 1, "", "start_value"], [622, 2, 1, "", "to_data"], [623, 2, 1, "", "to_json"], [624, 2, 1, "", "to_jsonstring"], [625, 2, 1, "", "validate_data"], [626, 2, 1, "", "validate_json"]], "compas_cem.plotters": [[628, 1, 1, "", "FormArtist"], [646, 1, 1, "", "Plotter"], [658, 1, 1, "", "TopologyArtist"]], "compas_cem.plotters.FormArtist": [[629, 2, 1, "", "build"], [630, 2, 1, "", "build_as"], [631, 2, 1, "", "clear"], [632, 2, 1, "", "clear_edges"], [633, 2, 1, "", "clear_nodes"], [634, 2, 1, "", "draw"], [635, 2, 1, "", "draw_collection"], [636, 2, 1, "", "draw_edgelabels"], [637, 2, 1, "", "draw_edges"], [638, 2, 1, "", "draw_loads"], [639, 2, 1, "", "draw_nodelabels"], [640, 2, 1, "", "draw_nodes"], [641, 2, 1, "", "draw_reactions"], [642, 2, 1, "", "redraw"], [643, 2, 1, "", "register"], [644, 2, 1, "", "update_data"], [645, 2, 1, "", "viewbox"]], "compas_cem.plotters.Plotter": [[647, 2, 1, "", "add"], [648, 2, 1, "", "add_from_list"], [649, 2, 1, "", "draw"], [650, 2, 1, "", "find"], [651, 2, 1, "", "on"], [652, 2, 1, "", "pause"], [653, 2, 1, "", "redraw"], [654, 2, 1, "", "register_listener"], [655, 2, 1, "", "save"], [656, 2, 1, "", "show"], [657, 2, 1, "", "zoom_extents"]], "compas_cem.plotters.TopologyArtist": [[659, 2, 1, "", "build"], [660, 2, 1, "", "build_as"], [661, 2, 1, "", "clear"], [662, 2, 1, "", "clear_edges"], [663, 2, 1, "", "clear_nodes"], [664, 2, 1, "", "draw"], [665, 2, 1, "", "draw_collection"], [666, 2, 1, "", "draw_edgelabels"], [667, 2, 1, "", "draw_edges"], [668, 2, 1, "", "draw_loads"], [669, 2, 1, "", "draw_nodelabels"], [670, 2, 1, "", "draw_nodes"], [671, 2, 1, "", "redraw"], [672, 2, 1, "", "register"], [673, 2, 1, "", "update_data"], [674, 2, 1, "", "viewbox"]], "compas_cem.supports": [[675, 1, 1, "", "NodeSupport"]], "compas_cem.supports.NodeSupport": [[676, 2, 1, "", "ToString"], [677, 2, 1, "", "copy"], [678, 2, 1, "", "from_data"], [679, 2, 1, "", "from_json"], [680, 2, 1, "", "from_jsonstring"], [681, 2, 1, "", "from_point"], [682, 2, 1, "", "sha256"], [683, 2, 1, "", "to_data"], [684, 2, 1, "", "to_json"], [685, 2, 1, "", "to_jsonstring"], [686, 2, 1, "", "validate_data"], [687, 2, 1, "", "validate_json"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"python": 0, "01": 1, "simpl": 1, "compress": 1, "structur": [1, 4], "02": 2, "brace": 2, "tower": 2, "2d": [2, 3, 4, 7], "03": 3, "bridg": [3, 7, 8], "optim": [3, 18, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494], "04": 4, "tree": 4, "05": 5, "planar": 5, "tensegr": [5, 10], "wheel": 5, "grasshopp": [6, 692], "A": 7, "b": 8, "tubular": 8, "3d": 8, "c": 9, "circular": 9, "dome": 9, "d": 10, "jessen": 10, "e": 11, "spiral": 11, "staircas": 11, "api": 12, "refer": [12, 379, 412, 554, 570, 586, 602], "compas_cem": [13, 14, 15, 16, 17, 18, 19, 20, 21], "diagram": 14, "element": 15, "edg": [15, 51, 191], "node": [15, 116, 265, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342], "equilibrium": 16, "load": 17, "constraint": 18, "paramet": 18, "plotter": [19, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657], "artist": 19, "support": 20, "viewer": 21, "visual": 21, "object": 21, "formdiagram": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "tostr": [23, 153, 318, 331, 344, 359, 372, 388, 405, 421, 438, 455, 472, 496, 513, 530, 547, 563, 579, 595, 611, 676], "add_edg": [24, 154], "add_nod": [25, 156], "adjacency_matrix": [26, 158], "clear": [27, 162, 631, 661], "complement": [28, 163], "connected_edg": [29, 165], "connectivity_matrix": [30, 167], "copi": [31, 168, 319, 332, 345, 360, 373, 392, 406, 425, 442, 459, 476, 500, 517, 534, 548, 564, 580, 596, 615, 677], "count_cross": [32, 169], "degre": [33, 170], "degree_in": [34, 171], "degree_matrix": [35, 172], "degree_out": [36, 173], "delete_edg": [37, 174], "delete_nod": [38, 175], "edge_attribut": [39, 40, 178, 179], "edge_coordin": [41, 180], "edge_direct": [42, 181], "edge_forc": [43, 182], "edge_length": [44, 183], "edge_length_2": [45, 184], "edge_midpoint": [46, 185], "edge_plan": [47, 186], "edge_point": [48, 187], "edge_sampl": [49, 188], "edge_vector": [50, 190], "edges_attribut": [52, 53, 192, 193], "edges_wher": [54, 194], "edges_where_pred": [55, 195], "embed_in_plan": [56, 196], "find_cross": [57, 197], "find_cycl": [58, 198], "from_data": [59, 199, 320, 333, 346, 361, 374, 393, 407, 426, 443, 460, 477, 501, 518, 535, 549, 565, 581, 597, 616, 678], "from_edg": [60, 201], "from_json": [61, 202, 321, 334, 347, 362, 375, 394, 408, 427, 444, 461, 478, 502, 519, 536, 550, 566, 582, 598, 617, 679], "from_jsonstr": [62, 203, 322, 335, 348, 363, 376, 395, 409, 428, 445, 462, 479, 503, 520, 537, 551, 567, 583, 599, 618, 680], "from_lin": [63, 204, 323, 349], "from_networkx": [64, 205], "from_nodes_and_edg": [65, 206], "from_obj": [66, 207], "from_pointcloud": [67, 208], "from_topology_diagram": 68, "get_any_edg": [69, 70, 209, 210], "get_any_nod": [71, 72, 211, 212], "gkei": [73, 213], "gkey_kei": [74, 214], "has_edg": [75, 215], "has_nod": [76, 216], "index_kei": [77, 218], "index_uv": [78, 219], "is_connect": [79, 222], "is_cross": [80, 223], "is_edge_support": [81, 226], "is_leaf": [82, 228], "is_node_connect": [83, 229], "is_node_load": [84, 230], "is_node_support": [85, 232], "is_planar": [86, 233], "is_planar_embed": [87, 234], "is_xi": [88, 236], "key_gkei": [89, 237], "key_index": [90, 238], "laplacian_matrix": [91, 239], "leav": [92, 240], "loaded_nod": [93, 241], "neighborhood": [94, 242], "neighbor": [95, 243], "neighbors_in": [96, 244], "neighbors_out": [97, 245], "network_adjacency_matrix": [98, 246], "network_connectivity_matrix": [99, 247], "network_degree_matrix": [100, 248], "network_embed_in_plan": [101, 249], "network_is_planar": [102, 250], "network_is_planar_embed": [103, 251], "network_laplacian_matrix": [104, 252], "node_attribut": [105, 106, 253, 254], "node_coordin": [107, 255], "node_exist": [108, 256], "node_gkei": [109, 257], "node_kei": [110, 258], "node_laplacian": [111, 259], "node_load": [112, 260], "node_neighborhood_centroid": [113, 261], "node_sampl": [114, 262], "node_xyz": [115, 264], "nodes_attribut": [117, 118, 266, 267], "nodes_wher": [119, 268], "nodes_where_pred": [120, 269], "number_of_edg": [121, 273], "number_of_loaded_nod": [122, 275], "number_of_nod": [123, 276], "number_of_support_nod": [124, 278], "reaction_forc": [125, 282], "sha256": [126, 285, 324, 337, 350, 365, 380, 397, 413, 430, 447, 464, 488, 505, 522, 539, 555, 571, 587, 603, 620, 682], "shortest_path": [127, 287], "smooth": [128, 288], "split_edg": [129, 289], "summari": [130, 290], "support_nod": [131, 291], "to_data": [132, 292, 325, 338, 351, 366, 382, 399, 415, 432, 449, 466, 490, 507, 524, 541, 557, 573, 589, 605, 622, 683], "to_json": [133, 293, 326, 339, 352, 367, 383, 400, 416, 433, 450, 467, 491, 508, 525, 542, 558, 574, 590, 606, 623, 684], "to_jsonstr": [134, 294, 327, 340, 353, 368, 384, 401, 417, 434, 451, 468, 492, 509, 526, 543, 559, 575, 591, 607, 624, 685], "to_lin": [135, 295], "to_networkx": [136, 296], "to_nodes_and_edg": [137, 297], "to_obj": [138, 298], "to_point": [139, 299], "transform": [140, 141, 305, 306], "unset_edge_attribut": [142, 307], "unset_node_attribut": [143, 308], "update_dea": [144, 309], "update_default_edge_attribut": [145, 310], "update_default_node_attribut": [146, 311], "update_dna": [147, 312], "update_node_xyz": [148, 313], "uv_index": [149, 314], "validate_data": [150, 315, 328, 341, 354, 369, 385, 402, 418, 435, 452, 469, 493, 510, 527, 544, 560, 576, 592, 608, 625, 686], "validate_json": [151, 316, 329, 342, 355, 370, 386, 403, 419, 436, 453, 470, 494, 511, 528, 545, 561, 577, 593, 609, 626, 687], "topologydiagram": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "add_load": 155, "add_support": 157, "auxiliary_trail_edg": 159, "auxiliary_trail": 160, "build_trail": 161, "connected_deviation_edg": 164, "connected_trail_edg": 166, "deviation_edg": 176, "direct_deviation_edg": 177, "edge_sequ": 189, "from_dualquadmesh": 200, "input": 200, "has_trail": 217, "indirect_deviation_edg": 220, "is_auxiliary_trail_edg": 221, "is_deviation_edg": 224, "is_direct_deviation_edg": 225, "is_indirect_deviation_edg": 227, "is_node_origin": 231, "is_trail_edg": 235, "node_sequ": 263, "number_of_auxiliary_trail": 270, "number_of_deviation_edg": 271, "number_of_direct_deviation_edg": 272, "number_of_indirect_deviation_edg": 274, "number_of_sequ": 277, "number_of_trail_edg": 279, "number_of_trail": 280, "origin_nod": 281, "sequence_last": 283, "sequenc": 284, "shift_trail": 286, "trail": [300, 303], "trail_edg": 301, "trail_sequ": 302, "trails_sequ": 304, "deviationedg": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329], "from_point": [336, 681], "trailedg": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], "static_equilibrium": 356, "static_equilibrium_numpi": 357, "nodeload": [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "from_point_and_vector": 364, "deviationedgelengthconstraint": [371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "kei": [377, 396, 410, 429, 446, 463, 504, 521, 538, 552, 568, 584, 600, 619], "penalti": [378, 411, 553, 569, 585, 601], "target": [381, 414, 556, 572, 588, 604], "deviationedgeparamet": [387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "attr_nam": [389, 422, 439, 456, 497, 514, 531, 612], "bound_low": [390, 423, 440, 457, 498, 515, 532, 613], "bound_up": [391, 424, 441, 458, 499, 516, 533, 614], "start_valu": [398, 431, 448, 465, 506, 523, 540, 621], "lineconstraint": [404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419], "nodeloadxparamet": [420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436], "nodeloadyparamet": [437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453], "nodeloadzparamet": [454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470], "add_constraint": 473, "add_paramet": 474, "check_optimization_san": 475, "gradient_func": 480, "number_of_constraint": 481, "number_of_paramet": 482, "objective_func": 483, "optimization_bound": 484, "optimization_paramet": 485, "remove_constraint": 486, "remove_paramet": 487, "solv": 489, "originnodexparamet": [495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511], "originnodeyparamet": [512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528], "originnodezparamet": [529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545], "planeconstraint": [546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561], "pointconstraint": [562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577], "reactionforceconstraint": [578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593], "trailedgeforceconstraint": [594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609], "trailedgeparamet": [610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626], "solve_proxi": 627, "formartist": [628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645], "build": [629, 659], "build_a": [630, 660], "clear_edg": [632, 662], "clear_nod": [633, 663], "draw": [634, 649, 664], "draw_collect": [635, 665], "draw_edgelabel": [636, 666], "draw_edg": [637, 667], "draw_load": [638, 668], "draw_nodelabel": [639, 669], "draw_nod": [640, 670], "draw_react": 641, "redraw": [642, 653, 671], "regist": [643, 672], "update_data": [644, 673], "viewbox": [645, 674], "add": 647, "add_from_list": 648, "find": 650, "paus": 652, "register_listen": 654, "save": 655, "show": 656, "zoom_ext": 657, "topologyartist": [658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674], "nodesupport": [675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687], "changelog": 688, "0": 688, "8": 688, "3": [688, 692], "2": [688, 692], "1": [688, 692], "7": 688, "6": 688, "5": 688, "4": [688, 692], "15": 688, "14": 688, "13": 688, "12": 688, "11": 688, "9": 688, "cite": 689, "author": 689, "exampl": 690, "compa": [691, 692], "cem": [691, 692], "main": 691, "featur": 691, "credit": 691, "tabl": 691, "content": 691, "instal": 692, "creat": 692, "virtual": 692, "environ": 692, "activ": 692, "via": 692, "conda": 692, "pip": 692, "plugin": 692, "remov": 692, "ani": 692, "leftov": 692, "link": 692, "check": 692, "your": 692, "updat": 692, "licens": 693}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 58}, "alltitles": {"Python": [[0, "python"]], "01. Simple Compression Structure": [[1, "simple-compression-structure"]], "02. Braced Tower in 2D": [[2, "braced-tower-in-2d"]], "03. Bridge Optimization in 2D": [[3, "bridge-optimization-in-2d"]], "04. Tree Structure in 2D": [[4, "tree-structure-in-2d"]], "05. Planar Tensegrity Wheel": [[5, "planar-tensegrity-wheel"]], "Grasshopper": [[6, "grasshopper"]], "A. Bridge in 2D": [[7, "a-bridge-in-2d"]], "B. Tubular Bridge in 3D": [[8, "b-tubular-bridge-in-3d"]], "C. Circular Dome": [[9, "c-circular-dome"]], "D. Jessen Tensegrity": [[10, "d-jessen-tensegrity"]], "E. Spiral Staircase": [[11, "e-spiral-staircase"]], "API Reference": [[12, "api-reference"]], "compas_cem": [[13, "compas-cem"]], "compas_cem.diagrams": [[14, "compas-cem-diagrams"]], "Diagrams": [[14, "diagrams"]], "compas_cem.elements": [[15, "compas-cem-elements"]], "Edges": [[15, "edges"]], "Node": [[15, "node"], [330, "node"]], "compas_cem.equilibrium": [[16, "compas-cem-equilibrium"]], "Equilibrium": [[16, "equilibrium"]], "compas_cem.loads": [[17, "compas-cem-loads"]], "Loads": [[17, "loads"]], "compas_cem.optimization": [[18, "compas-cem-optimization"]], "Optimizers": [[18, "optimizers"]], "Optimization Constraints": [[18, "optimization-constraints"]], "Optimization Parameters": [[18, "optimization-parameters"]], "compas_cem.plotters": [[19, "compas-cem-plotters"]], "Artists": [[19, "artists"]], "Plotters": [[19, "plotters"]], "compas_cem.supports": [[20, "compas-cem-supports"]], "Supports": [[20, "supports"]], "compas_cem.viewers": [[21, "compas-cem-viewers"]], "Visualization objects": [[21, "visualization-objects"]], "Viewers": [[21, "viewers"]], "FormDiagram": [[22, "formdiagram"]], "FormDiagram.ToString": [[23, "formdiagram-tostring"]], "FormDiagram.add_edge": [[24, "formdiagram-add-edge"]], "FormDiagram.add_node": [[25, "formdiagram-add-node"]], "FormDiagram.adjacency_matrix": [[26, "formdiagram-adjacency-matrix"]], "FormDiagram.clear": [[27, "formdiagram-clear"]], "FormDiagram.complement": [[28, "formdiagram-complement"]], "FormDiagram.connected_edges": [[29, "formdiagram-connected-edges"]], "FormDiagram.connectivity_matrix": [[30, "formdiagram-connectivity-matrix"]], "FormDiagram.copy": [[31, "formdiagram-copy"]], "FormDiagram.count_crossings": [[32, "formdiagram-count-crossings"]], "FormDiagram.degree": [[33, "formdiagram-degree"]], "FormDiagram.degree_in": [[34, "formdiagram-degree-in"]], "FormDiagram.degree_matrix": [[35, "formdiagram-degree-matrix"]], "FormDiagram.degree_out": [[36, "formdiagram-degree-out"]], "FormDiagram.delete_edge": [[37, "formdiagram-delete-edge"]], "FormDiagram.delete_node": [[38, "formdiagram-delete-node"]], "FormDiagram.edge_attribute": [[39, "formdiagram-edge-attribute"]], "FormDiagram.edge_attributes": [[40, "formdiagram-edge-attributes"]], "FormDiagram.edge_coordinates": [[41, "formdiagram-edge-coordinates"]], "FormDiagram.edge_direction": [[42, "formdiagram-edge-direction"]], "FormDiagram.edge_force": [[43, "formdiagram-edge-force"]], "FormDiagram.edge_length": [[44, "formdiagram-edge-length"]], "FormDiagram.edge_length_2": [[45, "formdiagram-edge-length-2"]], "FormDiagram.edge_midpoint": [[46, "formdiagram-edge-midpoint"]], "FormDiagram.edge_plane": [[47, "formdiagram-edge-plane"]], "FormDiagram.edge_point": [[48, "formdiagram-edge-point"]], "FormDiagram.edge_sample": [[49, "formdiagram-edge-sample"]], "FormDiagram.edge_vector": [[50, "formdiagram-edge-vector"]], "FormDiagram.edges": [[51, "formdiagram-edges"]], "FormDiagram.edges_attribute": [[52, "formdiagram-edges-attribute"]], "FormDiagram.edges_attributes": [[53, "formdiagram-edges-attributes"]], "FormDiagram.edges_where": [[54, "formdiagram-edges-where"]], "FormDiagram.edges_where_predicate": [[55, "formdiagram-edges-where-predicate"]], "FormDiagram.embed_in_plane": [[56, "formdiagram-embed-in-plane"]], "FormDiagram.find_crossings": [[57, "formdiagram-find-crossings"]], "FormDiagram.find_cycles": [[58, "formdiagram-find-cycles"]], "FormDiagram.from_data": [[59, "formdiagram-from-data"]], "FormDiagram.from_edges": [[60, "formdiagram-from-edges"]], "FormDiagram.from_json": [[61, "formdiagram-from-json"]], "FormDiagram.from_jsonstring": [[62, "formdiagram-from-jsonstring"]], "FormDiagram.from_lines": [[63, "formdiagram-from-lines"]], "FormDiagram.from_networkx": [[64, "formdiagram-from-networkx"]], "FormDiagram.from_nodes_and_edges": [[65, "formdiagram-from-nodes-and-edges"]], "FormDiagram.from_obj": [[66, "formdiagram-from-obj"]], "FormDiagram.from_pointcloud": [[67, "formdiagram-from-pointcloud"]], "FormDiagram.from_topology_diagram": [[68, "formdiagram-from-topology-diagram"]], "FormDiagram.get_any_edge": [[69, "formdiagram-get-any-edge"]], "FormDiagram.get_any_edges": [[70, "formdiagram-get-any-edges"]], "FormDiagram.get_any_node": [[71, "formdiagram-get-any-node"]], "FormDiagram.get_any_nodes": [[72, "formdiagram-get-any-nodes"]], "FormDiagram.gkey": [[73, "formdiagram-gkey"]], "FormDiagram.gkey_key": [[74, "formdiagram-gkey-key"]], "FormDiagram.has_edge": [[75, "formdiagram-has-edge"]], "FormDiagram.has_node": [[76, "formdiagram-has-node"]], "FormDiagram.index_key": [[77, "formdiagram-index-key"]], "FormDiagram.index_uv": [[78, "formdiagram-index-uv"]], "FormDiagram.is_connected": [[79, "formdiagram-is-connected"]], "FormDiagram.is_crossed": [[80, "formdiagram-is-crossed"]], "FormDiagram.is_edge_supported": [[81, "formdiagram-is-edge-supported"]], "FormDiagram.is_leaf": [[82, "formdiagram-is-leaf"]], "FormDiagram.is_node_connected": [[83, "formdiagram-is-node-connected"]], "FormDiagram.is_node_loaded": [[84, "formdiagram-is-node-loaded"]], "FormDiagram.is_node_support": [[85, "formdiagram-is-node-support"]], "FormDiagram.is_planar": [[86, "formdiagram-is-planar"]], "FormDiagram.is_planar_embedding": [[87, "formdiagram-is-planar-embedding"]], "FormDiagram.is_xy": [[88, "formdiagram-is-xy"]], "FormDiagram.key_gkey": [[89, "formdiagram-key-gkey"]], "FormDiagram.key_index": [[90, "formdiagram-key-index"]], "FormDiagram.laplacian_matrix": [[91, "formdiagram-laplacian-matrix"]], "FormDiagram.leaves": [[92, "formdiagram-leaves"]], "FormDiagram.loaded_nodes": [[93, "formdiagram-loaded-nodes"]], "FormDiagram.neighborhood": [[94, "formdiagram-neighborhood"]], "FormDiagram.neighbors": [[95, "formdiagram-neighbors"]], "FormDiagram.neighbors_in": [[96, "formdiagram-neighbors-in"]], "FormDiagram.neighbors_out": [[97, "formdiagram-neighbors-out"]], "FormDiagram.network_adjacency_matrix": [[98, "formdiagram-network-adjacency-matrix"]], "FormDiagram.network_connectivity_matrix": [[99, "formdiagram-network-connectivity-matrix"]], "FormDiagram.network_degree_matrix": [[100, "formdiagram-network-degree-matrix"]], "FormDiagram.network_embed_in_plane": [[101, "formdiagram-network-embed-in-plane"]], "FormDiagram.network_is_planar": [[102, "formdiagram-network-is-planar"]], "FormDiagram.network_is_planar_embedding": [[103, "formdiagram-network-is-planar-embedding"]], "FormDiagram.network_laplacian_matrix": [[104, "formdiagram-network-laplacian-matrix"]], "FormDiagram.node_attribute": [[105, "formdiagram-node-attribute"]], "FormDiagram.node_attributes": [[106, "formdiagram-node-attributes"]], "FormDiagram.node_coordinates": [[107, "formdiagram-node-coordinates"]], "FormDiagram.node_exists": [[108, "formdiagram-node-exists"]], "FormDiagram.node_gkey": [[109, "formdiagram-node-gkey"]], "FormDiagram.node_key": [[110, "formdiagram-node-key"]], "FormDiagram.node_laplacian": [[111, "formdiagram-node-laplacian"]], "FormDiagram.node_load": [[112, "formdiagram-node-load"]], "FormDiagram.node_neighborhood_centroid": [[113, "formdiagram-node-neighborhood-centroid"]], "FormDiagram.node_sample": [[114, "formdiagram-node-sample"]], "FormDiagram.node_xyz": [[115, "formdiagram-node-xyz"]], "FormDiagram.nodes": [[116, "formdiagram-nodes"]], "FormDiagram.nodes_attribute": [[117, "formdiagram-nodes-attribute"]], "FormDiagram.nodes_attributes": [[118, "formdiagram-nodes-attributes"]], "FormDiagram.nodes_where": [[119, "formdiagram-nodes-where"]], "FormDiagram.nodes_where_predicate": [[120, "formdiagram-nodes-where-predicate"]], "FormDiagram.number_of_edges": [[121, "formdiagram-number-of-edges"]], "FormDiagram.number_of_loaded_nodes": [[122, "formdiagram-number-of-loaded-nodes"]], "FormDiagram.number_of_nodes": [[123, "formdiagram-number-of-nodes"]], "FormDiagram.number_of_support_nodes": [[124, "formdiagram-number-of-support-nodes"]], "FormDiagram.reaction_force": [[125, "formdiagram-reaction-force"]], "FormDiagram.sha256": [[126, "formdiagram-sha256"]], "FormDiagram.shortest_path": [[127, "formdiagram-shortest-path"]], "FormDiagram.smooth": [[128, "formdiagram-smooth"]], "FormDiagram.split_edge": [[129, "formdiagram-split-edge"]], "FormDiagram.summary": [[130, "formdiagram-summary"]], "FormDiagram.support_nodes": [[131, "formdiagram-support-nodes"]], "FormDiagram.to_data": [[132, "formdiagram-to-data"]], "FormDiagram.to_json": [[133, "formdiagram-to-json"]], "FormDiagram.to_jsonstring": [[134, "formdiagram-to-jsonstring"]], "FormDiagram.to_lines": [[135, "formdiagram-to-lines"]], "FormDiagram.to_networkx": [[136, "formdiagram-to-networkx"]], "FormDiagram.to_nodes_and_edges": [[137, "formdiagram-to-nodes-and-edges"]], "FormDiagram.to_obj": [[138, "formdiagram-to-obj"]], "FormDiagram.to_points": [[139, "formdiagram-to-points"]], "FormDiagram.transform": [[140, "formdiagram-transform"]], "FormDiagram.transformed": [[141, "formdiagram-transformed"]], "FormDiagram.unset_edge_attribute": [[142, "formdiagram-unset-edge-attribute"]], "FormDiagram.unset_node_attribute": [[143, "formdiagram-unset-node-attribute"]], "FormDiagram.update_dea": [[144, "formdiagram-update-dea"]], "FormDiagram.update_default_edge_attributes": [[145, "formdiagram-update-default-edge-attributes"]], "FormDiagram.update_default_node_attributes": [[146, "formdiagram-update-default-node-attributes"]], "FormDiagram.update_dna": [[147, "formdiagram-update-dna"]], "FormDiagram.update_node_xyz": [[148, "formdiagram-update-node-xyz"]], "FormDiagram.uv_index": [[149, "formdiagram-uv-index"]], "FormDiagram.validate_data": [[150, "formdiagram-validate-data"]], "FormDiagram.validate_json": [[151, "formdiagram-validate-json"]], "TopologyDiagram": [[152, "topologydiagram"]], "TopologyDiagram.ToString": [[153, "topologydiagram-tostring"]], "TopologyDiagram.add_edge": [[154, "topologydiagram-add-edge"]], "TopologyDiagram.add_load": [[155, "topologydiagram-add-load"]], "TopologyDiagram.add_node": [[156, "topologydiagram-add-node"]], "TopologyDiagram.add_support": [[157, "topologydiagram-add-support"]], "TopologyDiagram.adjacency_matrix": [[158, "topologydiagram-adjacency-matrix"]], "TopologyDiagram.auxiliary_trail_edges": [[159, "topologydiagram-auxiliary-trail-edges"]], "TopologyDiagram.auxiliary_trails": [[160, "topologydiagram-auxiliary-trails"]], "TopologyDiagram.build_trails": [[161, "topologydiagram-build-trails"]], "TopologyDiagram.clear": [[162, "topologydiagram-clear"]], "TopologyDiagram.complement": [[163, "topologydiagram-complement"]], "TopologyDiagram.connected_deviation_edges": [[164, "topologydiagram-connected-deviation-edges"]], "TopologyDiagram.connected_edges": [[165, "topologydiagram-connected-edges"]], "TopologyDiagram.connected_trail_edges": [[166, "topologydiagram-connected-trail-edges"]], "TopologyDiagram.connectivity_matrix": [[167, "topologydiagram-connectivity-matrix"]], "TopologyDiagram.copy": [[168, "topologydiagram-copy"]], "TopologyDiagram.count_crossings": [[169, "topologydiagram-count-crossings"]], "TopologyDiagram.degree": [[170, "topologydiagram-degree"]], "TopologyDiagram.degree_in": [[171, "topologydiagram-degree-in"]], "TopologyDiagram.degree_matrix": [[172, "topologydiagram-degree-matrix"]], "TopologyDiagram.degree_out": [[173, "topologydiagram-degree-out"]], "TopologyDiagram.delete_edge": [[174, "topologydiagram-delete-edge"]], "TopologyDiagram.delete_node": [[175, "topologydiagram-delete-node"]], "TopologyDiagram.deviation_edges": [[176, "topologydiagram-deviation-edges"]], "TopologyDiagram.direct_deviation_edges": [[177, "topologydiagram-direct-deviation-edges"]], "TopologyDiagram.edge_attribute": [[178, "topologydiagram-edge-attribute"]], "TopologyDiagram.edge_attributes": [[179, "topologydiagram-edge-attributes"]], "TopologyDiagram.edge_coordinates": [[180, "topologydiagram-edge-coordinates"]], "TopologyDiagram.edge_direction": [[181, "topologydiagram-edge-direction"]], "TopologyDiagram.edge_force": [[182, "topologydiagram-edge-force"]], "TopologyDiagram.edge_length": [[183, "topologydiagram-edge-length"]], "TopologyDiagram.edge_length_2": [[184, "topologydiagram-edge-length-2"]], "TopologyDiagram.edge_midpoint": [[185, "topologydiagram-edge-midpoint"]], "TopologyDiagram.edge_plane": [[186, "topologydiagram-edge-plane"]], "TopologyDiagram.edge_point": [[187, "topologydiagram-edge-point"]], "TopologyDiagram.edge_sample": [[188, "topologydiagram-edge-sample"]], "TopologyDiagram.edge_sequence": [[189, "topologydiagram-edge-sequence"]], "TopologyDiagram.edge_vector": [[190, "topologydiagram-edge-vector"]], "TopologyDiagram.edges": [[191, "topologydiagram-edges"]], "TopologyDiagram.edges_attribute": [[192, "topologydiagram-edges-attribute"]], "TopologyDiagram.edges_attributes": [[193, "topologydiagram-edges-attributes"]], "TopologyDiagram.edges_where": [[194, "topologydiagram-edges-where"]], "TopologyDiagram.edges_where_predicate": [[195, "topologydiagram-edges-where-predicate"]], "TopologyDiagram.embed_in_plane": [[196, "topologydiagram-embed-in-plane"]], "TopologyDiagram.find_crossings": [[197, "topologydiagram-find-crossings"]], "TopologyDiagram.find_cycles": [[198, "topologydiagram-find-cycles"]], "TopologyDiagram.from_data": [[199, "topologydiagram-from-data"]], "TopologyDiagram.from_dualquadmesh": [[200, "topologydiagram-from-dualquadmesh"]], "Inputs": [[200, "inputs"]], "TopologyDiagram.from_edges": [[201, "topologydiagram-from-edges"]], "TopologyDiagram.from_json": [[202, "topologydiagram-from-json"]], "TopologyDiagram.from_jsonstring": [[203, "topologydiagram-from-jsonstring"]], "TopologyDiagram.from_lines": [[204, "topologydiagram-from-lines"]], "TopologyDiagram.from_networkx": [[205, "topologydiagram-from-networkx"]], "TopologyDiagram.from_nodes_and_edges": [[206, "topologydiagram-from-nodes-and-edges"]], "TopologyDiagram.from_obj": [[207, "topologydiagram-from-obj"]], "TopologyDiagram.from_pointcloud": [[208, "topologydiagram-from-pointcloud"]], "TopologyDiagram.get_any_edge": [[209, "topologydiagram-get-any-edge"]], "TopologyDiagram.get_any_edges": [[210, "topologydiagram-get-any-edges"]], "TopologyDiagram.get_any_node": [[211, "topologydiagram-get-any-node"]], "TopologyDiagram.get_any_nodes": [[212, "topologydiagram-get-any-nodes"]], "TopologyDiagram.gkey": [[213, "topologydiagram-gkey"]], "TopologyDiagram.gkey_key": [[214, "topologydiagram-gkey-key"]], "TopologyDiagram.has_edge": [[215, "topologydiagram-has-edge"]], "TopologyDiagram.has_node": [[216, "topologydiagram-has-node"]], "TopologyDiagram.has_trails": [[217, "topologydiagram-has-trails"]], "TopologyDiagram.index_key": [[218, "topologydiagram-index-key"]], "TopologyDiagram.index_uv": [[219, "topologydiagram-index-uv"]], "TopologyDiagram.indirect_deviation_edges": [[220, "topologydiagram-indirect-deviation-edges"]], "TopologyDiagram.is_auxiliary_trail_edge": [[221, "topologydiagram-is-auxiliary-trail-edge"]], "TopologyDiagram.is_connected": [[222, "topologydiagram-is-connected"]], "TopologyDiagram.is_crossed": [[223, "topologydiagram-is-crossed"]], "TopologyDiagram.is_deviation_edge": [[224, "topologydiagram-is-deviation-edge"]], "TopologyDiagram.is_direct_deviation_edge": [[225, "topologydiagram-is-direct-deviation-edge"]], "TopologyDiagram.is_edge_supported": [[226, "topologydiagram-is-edge-supported"]], "TopologyDiagram.is_indirect_deviation_edge": [[227, "topologydiagram-is-indirect-deviation-edge"]], "TopologyDiagram.is_leaf": [[228, "topologydiagram-is-leaf"]], "TopologyDiagram.is_node_connected": [[229, "topologydiagram-is-node-connected"]], "TopologyDiagram.is_node_loaded": [[230, "topologydiagram-is-node-loaded"]], "TopologyDiagram.is_node_origin": [[231, "topologydiagram-is-node-origin"]], "TopologyDiagram.is_node_support": [[232, "topologydiagram-is-node-support"]], "TopologyDiagram.is_planar": [[233, "topologydiagram-is-planar"]], "TopologyDiagram.is_planar_embedding": [[234, "topologydiagram-is-planar-embedding"]], "TopologyDiagram.is_trail_edge": [[235, "topologydiagram-is-trail-edge"]], "TopologyDiagram.is_xy": [[236, "topologydiagram-is-xy"]], "TopologyDiagram.key_gkey": [[237, "topologydiagram-key-gkey"]], "TopologyDiagram.key_index": [[238, "topologydiagram-key-index"]], "TopologyDiagram.laplacian_matrix": [[239, "topologydiagram-laplacian-matrix"]], "TopologyDiagram.leaves": [[240, "topologydiagram-leaves"]], "TopologyDiagram.loaded_nodes": [[241, "topologydiagram-loaded-nodes"]], "TopologyDiagram.neighborhood": [[242, "topologydiagram-neighborhood"]], "TopologyDiagram.neighbors": [[243, "topologydiagram-neighbors"]], "TopologyDiagram.neighbors_in": [[244, "topologydiagram-neighbors-in"]], "TopologyDiagram.neighbors_out": [[245, "topologydiagram-neighbors-out"]], "TopologyDiagram.network_adjacency_matrix": [[246, "topologydiagram-network-adjacency-matrix"]], "TopologyDiagram.network_connectivity_matrix": [[247, "topologydiagram-network-connectivity-matrix"]], "TopologyDiagram.network_degree_matrix": [[248, "topologydiagram-network-degree-matrix"]], "TopologyDiagram.network_embed_in_plane": [[249, "topologydiagram-network-embed-in-plane"]], "TopologyDiagram.network_is_planar": [[250, "topologydiagram-network-is-planar"]], "TopologyDiagram.network_is_planar_embedding": [[251, "topologydiagram-network-is-planar-embedding"]], "TopologyDiagram.network_laplacian_matrix": [[252, "topologydiagram-network-laplacian-matrix"]], "TopologyDiagram.node_attribute": [[253, "topologydiagram-node-attribute"]], "TopologyDiagram.node_attributes": [[254, "topologydiagram-node-attributes"]], "TopologyDiagram.node_coordinates": [[255, "topologydiagram-node-coordinates"]], "TopologyDiagram.node_exists": [[256, "topologydiagram-node-exists"]], "TopologyDiagram.node_gkey": [[257, "topologydiagram-node-gkey"]], "TopologyDiagram.node_key": [[258, "topologydiagram-node-key"]], "TopologyDiagram.node_laplacian": [[259, "topologydiagram-node-laplacian"]], "TopologyDiagram.node_load": [[260, "topologydiagram-node-load"]], "TopologyDiagram.node_neighborhood_centroid": [[261, "topologydiagram-node-neighborhood-centroid"]], "TopologyDiagram.node_sample": [[262, "topologydiagram-node-sample"]], "TopologyDiagram.node_sequence": [[263, "topologydiagram-node-sequence"]], "TopologyDiagram.node_xyz": [[264, "topologydiagram-node-xyz"]], "TopologyDiagram.nodes": [[265, "topologydiagram-nodes"]], "TopologyDiagram.nodes_attribute": [[266, "topologydiagram-nodes-attribute"]], "TopologyDiagram.nodes_attributes": [[267, "topologydiagram-nodes-attributes"]], "TopologyDiagram.nodes_where": [[268, "topologydiagram-nodes-where"]], "TopologyDiagram.nodes_where_predicate": [[269, "topologydiagram-nodes-where-predicate"]], "TopologyDiagram.number_of_auxiliary_trails": [[270, "topologydiagram-number-of-auxiliary-trails"]], "TopologyDiagram.number_of_deviation_edges": [[271, "topologydiagram-number-of-deviation-edges"]], "TopologyDiagram.number_of_direct_deviation_edges": [[272, "topologydiagram-number-of-direct-deviation-edges"]], "TopologyDiagram.number_of_edges": [[273, "topologydiagram-number-of-edges"]], "TopologyDiagram.number_of_indirect_deviation_edges": [[274, "topologydiagram-number-of-indirect-deviation-edges"]], "TopologyDiagram.number_of_loaded_nodes": [[275, "topologydiagram-number-of-loaded-nodes"]], "TopologyDiagram.number_of_nodes": [[276, "topologydiagram-number-of-nodes"]], "TopologyDiagram.number_of_sequences": [[277, "topologydiagram-number-of-sequences"]], "TopologyDiagram.number_of_support_nodes": [[278, "topologydiagram-number-of-support-nodes"]], "TopologyDiagram.number_of_trail_edges": [[279, "topologydiagram-number-of-trail-edges"]], "TopologyDiagram.number_of_trails": [[280, "topologydiagram-number-of-trails"]], "TopologyDiagram.origin_nodes": [[281, "topologydiagram-origin-nodes"]], "TopologyDiagram.reaction_force": [[282, "topologydiagram-reaction-force"]], "TopologyDiagram.sequence_last": [[283, "topologydiagram-sequence-last"]], "TopologyDiagram.sequences": [[284, "topologydiagram-sequences"]], "TopologyDiagram.sha256": [[285, "topologydiagram-sha256"]], "TopologyDiagram.shift_trail": [[286, "topologydiagram-shift-trail"]], "TopologyDiagram.shortest_path": [[287, "topologydiagram-shortest-path"]], "TopologyDiagram.smooth": [[288, "topologydiagram-smooth"]], "TopologyDiagram.split_edge": [[289, "topologydiagram-split-edge"]], "TopologyDiagram.summary": [[290, "topologydiagram-summary"]], "TopologyDiagram.support_nodes": [[291, "topologydiagram-support-nodes"]], "TopologyDiagram.to_data": [[292, "topologydiagram-to-data"]], "TopologyDiagram.to_json": [[293, "topologydiagram-to-json"]], "TopologyDiagram.to_jsonstring": [[294, "topologydiagram-to-jsonstring"]], "TopologyDiagram.to_lines": [[295, "topologydiagram-to-lines"]], "TopologyDiagram.to_networkx": [[296, "topologydiagram-to-networkx"]], "TopologyDiagram.to_nodes_and_edges": [[297, "topologydiagram-to-nodes-and-edges"]], "TopologyDiagram.to_obj": [[298, "topologydiagram-to-obj"]], "TopologyDiagram.to_points": [[299, "topologydiagram-to-points"]], "TopologyDiagram.trail": [[300, "topologydiagram-trail"]], "TopologyDiagram.trail_edges": [[301, "topologydiagram-trail-edges"]], "TopologyDiagram.trail_sequences": [[302, "topologydiagram-trail-sequences"]], "TopologyDiagram.trails": [[303, "topologydiagram-trails"]], "TopologyDiagram.trails_sequences": [[304, "topologydiagram-trails-sequences"]], "TopologyDiagram.transform": [[305, "topologydiagram-transform"]], "TopologyDiagram.transformed": [[306, "topologydiagram-transformed"]], "TopologyDiagram.unset_edge_attribute": [[307, "topologydiagram-unset-edge-attribute"]], "TopologyDiagram.unset_node_attribute": [[308, "topologydiagram-unset-node-attribute"]], "TopologyDiagram.update_dea": [[309, "topologydiagram-update-dea"]], "TopologyDiagram.update_default_edge_attributes": [[310, "topologydiagram-update-default-edge-attributes"]], "TopologyDiagram.update_default_node_attributes": [[311, "topologydiagram-update-default-node-attributes"]], "TopologyDiagram.update_dna": [[312, "topologydiagram-update-dna"]], "TopologyDiagram.update_node_xyz": [[313, "topologydiagram-update-node-xyz"]], "TopologyDiagram.uv_index": [[314, "topologydiagram-uv-index"]], "TopologyDiagram.validate_data": [[315, "topologydiagram-validate-data"]], "TopologyDiagram.validate_json": [[316, "topologydiagram-validate-json"]], "DeviationEdge": [[317, "deviationedge"]], "DeviationEdge.ToString": [[318, "deviationedge-tostring"]], "DeviationEdge.copy": [[319, "deviationedge-copy"]], "DeviationEdge.from_data": [[320, "deviationedge-from-data"]], "DeviationEdge.from_json": [[321, "deviationedge-from-json"]], "DeviationEdge.from_jsonstring": [[322, "deviationedge-from-jsonstring"]], "DeviationEdge.from_line": [[323, "deviationedge-from-line"]], "DeviationEdge.sha256": [[324, "deviationedge-sha256"]], "DeviationEdge.to_data": [[325, "deviationedge-to-data"]], "DeviationEdge.to_json": [[326, "deviationedge-to-json"]], "DeviationEdge.to_jsonstring": [[327, "deviationedge-to-jsonstring"]], "DeviationEdge.validate_data": [[328, "deviationedge-validate-data"]], "DeviationEdge.validate_json": [[329, "deviationedge-validate-json"]], "Node.ToString": [[331, "node-tostring"]], "Node.copy": [[332, "node-copy"]], "Node.from_data": [[333, "node-from-data"]], "Node.from_json": [[334, "node-from-json"]], "Node.from_jsonstring": [[335, "node-from-jsonstring"]], "Node.from_point": [[336, "node-from-point"]], "Node.sha256": [[337, "node-sha256"]], "Node.to_data": [[338, "node-to-data"]], "Node.to_json": [[339, "node-to-json"]], "Node.to_jsonstring": [[340, "node-to-jsonstring"]], "Node.validate_data": [[341, "node-validate-data"]], "Node.validate_json": [[342, "node-validate-json"]], "TrailEdge": [[343, "trailedge"]], "TrailEdge.ToString": [[344, "trailedge-tostring"]], "TrailEdge.copy": [[345, "trailedge-copy"]], "TrailEdge.from_data": [[346, "trailedge-from-data"]], "TrailEdge.from_json": [[347, "trailedge-from-json"]], "TrailEdge.from_jsonstring": [[348, "trailedge-from-jsonstring"]], "TrailEdge.from_line": [[349, "trailedge-from-line"]], "TrailEdge.sha256": [[350, "trailedge-sha256"]], "TrailEdge.to_data": [[351, "trailedge-to-data"]], "TrailEdge.to_json": [[352, "trailedge-to-json"]], "TrailEdge.to_jsonstring": [[353, "trailedge-to-jsonstring"]], "TrailEdge.validate_data": [[354, "trailedge-validate-data"]], "TrailEdge.validate_json": [[355, "trailedge-validate-json"]], "static_equilibrium": [[356, "static-equilibrium"]], "static_equilibrium_numpy": [[357, "static-equilibrium-numpy"]], "NodeLoad": [[358, "nodeload"]], "NodeLoad.ToString": [[359, "nodeload-tostring"]], "NodeLoad.copy": [[360, "nodeload-copy"]], "NodeLoad.from_data": [[361, "nodeload-from-data"]], "NodeLoad.from_json": [[362, "nodeload-from-json"]], "NodeLoad.from_jsonstring": [[363, "nodeload-from-jsonstring"]], "NodeLoad.from_point_and_vector": [[364, "nodeload-from-point-and-vector"]], "NodeLoad.sha256": [[365, "nodeload-sha256"]], "NodeLoad.to_data": [[366, "nodeload-to-data"]], "NodeLoad.to_json": [[367, "nodeload-to-json"]], "NodeLoad.to_jsonstring": [[368, "nodeload-to-jsonstring"]], "NodeLoad.validate_data": [[369, "nodeload-validate-data"]], "NodeLoad.validate_json": [[370, "nodeload-validate-json"]], "DeviationEdgeLengthConstraint": [[371, "deviationedgelengthconstraint"]], "DeviationEdgeLengthConstraint.ToString": [[372, "deviationedgelengthconstraint-tostring"]], "DeviationEdgeLengthConstraint.copy": [[373, "deviationedgelengthconstraint-copy"]], "DeviationEdgeLengthConstraint.from_data": [[374, "deviationedgelengthconstraint-from-data"]], "DeviationEdgeLengthConstraint.from_json": [[375, "deviationedgelengthconstraint-from-json"]], "DeviationEdgeLengthConstraint.from_jsonstring": [[376, "deviationedgelengthconstraint-from-jsonstring"]], "DeviationEdgeLengthConstraint.key": [[377, "deviationedgelengthconstraint-key"]], "DeviationEdgeLengthConstraint.penalty": [[378, "deviationedgelengthconstraint-penalty"]], "DeviationEdgeLengthConstraint.reference": [[379, "deviationedgelengthconstraint-reference"]], "DeviationEdgeLengthConstraint.sha256": [[380, "deviationedgelengthconstraint-sha256"]], "DeviationEdgeLengthConstraint.target": [[381, "deviationedgelengthconstraint-target"]], "DeviationEdgeLengthConstraint.to_data": [[382, "deviationedgelengthconstraint-to-data"]], "DeviationEdgeLengthConstraint.to_json": [[383, "deviationedgelengthconstraint-to-json"]], "DeviationEdgeLengthConstraint.to_jsonstring": [[384, "deviationedgelengthconstraint-to-jsonstring"]], "DeviationEdgeLengthConstraint.validate_data": [[385, "deviationedgelengthconstraint-validate-data"]], "DeviationEdgeLengthConstraint.validate_json": [[386, "deviationedgelengthconstraint-validate-json"]], "DeviationEdgeParameter": [[387, "deviationedgeparameter"]], "DeviationEdgeParameter.ToString": [[388, "deviationedgeparameter-tostring"]], "DeviationEdgeParameter.attr_name": [[389, "deviationedgeparameter-attr-name"]], "DeviationEdgeParameter.bound_low": [[390, "deviationedgeparameter-bound-low"]], "DeviationEdgeParameter.bound_up": [[391, "deviationedgeparameter-bound-up"]], "DeviationEdgeParameter.copy": [[392, "deviationedgeparameter-copy"]], "DeviationEdgeParameter.from_data": [[393, "deviationedgeparameter-from-data"]], "DeviationEdgeParameter.from_json": [[394, "deviationedgeparameter-from-json"]], "DeviationEdgeParameter.from_jsonstring": [[395, "deviationedgeparameter-from-jsonstring"]], "DeviationEdgeParameter.key": [[396, "deviationedgeparameter-key"]], "DeviationEdgeParameter.sha256": [[397, "deviationedgeparameter-sha256"]], "DeviationEdgeParameter.start_value": [[398, "deviationedgeparameter-start-value"]], "DeviationEdgeParameter.to_data": [[399, "deviationedgeparameter-to-data"]], "DeviationEdgeParameter.to_json": [[400, "deviationedgeparameter-to-json"]], "DeviationEdgeParameter.to_jsonstring": [[401, "deviationedgeparameter-to-jsonstring"]], "DeviationEdgeParameter.validate_data": [[402, "deviationedgeparameter-validate-data"]], "DeviationEdgeParameter.validate_json": [[403, "deviationedgeparameter-validate-json"]], "LineConstraint": [[404, "lineconstraint"]], "LineConstraint.ToString": [[405, "lineconstraint-tostring"]], "LineConstraint.copy": [[406, "lineconstraint-copy"]], "LineConstraint.from_data": [[407, "lineconstraint-from-data"]], "LineConstraint.from_json": [[408, "lineconstraint-from-json"]], "LineConstraint.from_jsonstring": [[409, "lineconstraint-from-jsonstring"]], "LineConstraint.key": [[410, "lineconstraint-key"]], "LineConstraint.penalty": [[411, "lineconstraint-penalty"]], "LineConstraint.reference": [[412, "lineconstraint-reference"]], "LineConstraint.sha256": [[413, "lineconstraint-sha256"]], "LineConstraint.target": [[414, "lineconstraint-target"]], "LineConstraint.to_data": [[415, "lineconstraint-to-data"]], "LineConstraint.to_json": [[416, "lineconstraint-to-json"]], "LineConstraint.to_jsonstring": [[417, "lineconstraint-to-jsonstring"]], "LineConstraint.validate_data": [[418, "lineconstraint-validate-data"]], "LineConstraint.validate_json": [[419, "lineconstraint-validate-json"]], "NodeLoadXParameter": [[420, "nodeloadxparameter"]], "NodeLoadXParameter.ToString": [[421, "nodeloadxparameter-tostring"]], "NodeLoadXParameter.attr_name": [[422, "nodeloadxparameter-attr-name"]], "NodeLoadXParameter.bound_low": [[423, "nodeloadxparameter-bound-low"]], "NodeLoadXParameter.bound_up": [[424, "nodeloadxparameter-bound-up"]], "NodeLoadXParameter.copy": [[425, "nodeloadxparameter-copy"]], "NodeLoadXParameter.from_data": [[426, "nodeloadxparameter-from-data"]], "NodeLoadXParameter.from_json": [[427, "nodeloadxparameter-from-json"]], "NodeLoadXParameter.from_jsonstring": [[428, "nodeloadxparameter-from-jsonstring"]], "NodeLoadXParameter.key": [[429, "nodeloadxparameter-key"]], "NodeLoadXParameter.sha256": [[430, "nodeloadxparameter-sha256"]], "NodeLoadXParameter.start_value": [[431, "nodeloadxparameter-start-value"]], "NodeLoadXParameter.to_data": [[432, "nodeloadxparameter-to-data"]], "NodeLoadXParameter.to_json": [[433, "nodeloadxparameter-to-json"]], "NodeLoadXParameter.to_jsonstring": [[434, "nodeloadxparameter-to-jsonstring"]], "NodeLoadXParameter.validate_data": [[435, "nodeloadxparameter-validate-data"]], "NodeLoadXParameter.validate_json": [[436, "nodeloadxparameter-validate-json"]], "NodeLoadYParameter": [[437, "nodeloadyparameter"]], "NodeLoadYParameter.ToString": [[438, "nodeloadyparameter-tostring"]], "NodeLoadYParameter.attr_name": [[439, "nodeloadyparameter-attr-name"]], "NodeLoadYParameter.bound_low": [[440, "nodeloadyparameter-bound-low"]], "NodeLoadYParameter.bound_up": [[441, "nodeloadyparameter-bound-up"]], "NodeLoadYParameter.copy": [[442, "nodeloadyparameter-copy"]], "NodeLoadYParameter.from_data": [[443, "nodeloadyparameter-from-data"]], "NodeLoadYParameter.from_json": [[444, "nodeloadyparameter-from-json"]], "NodeLoadYParameter.from_jsonstring": [[445, "nodeloadyparameter-from-jsonstring"]], "NodeLoadYParameter.key": [[446, "nodeloadyparameter-key"]], "NodeLoadYParameter.sha256": [[447, "nodeloadyparameter-sha256"]], "NodeLoadYParameter.start_value": [[448, "nodeloadyparameter-start-value"]], "NodeLoadYParameter.to_data": [[449, "nodeloadyparameter-to-data"]], "NodeLoadYParameter.to_json": [[450, "nodeloadyparameter-to-json"]], "NodeLoadYParameter.to_jsonstring": [[451, "nodeloadyparameter-to-jsonstring"]], "NodeLoadYParameter.validate_data": [[452, "nodeloadyparameter-validate-data"]], "NodeLoadYParameter.validate_json": [[453, "nodeloadyparameter-validate-json"]], "NodeLoadZParameter": [[454, "nodeloadzparameter"]], "NodeLoadZParameter.ToString": [[455, "nodeloadzparameter-tostring"]], "NodeLoadZParameter.attr_name": [[456, "nodeloadzparameter-attr-name"]], "NodeLoadZParameter.bound_low": [[457, "nodeloadzparameter-bound-low"]], "NodeLoadZParameter.bound_up": [[458, "nodeloadzparameter-bound-up"]], "NodeLoadZParameter.copy": [[459, "nodeloadzparameter-copy"]], "NodeLoadZParameter.from_data": [[460, "nodeloadzparameter-from-data"]], "NodeLoadZParameter.from_json": [[461, "nodeloadzparameter-from-json"]], "NodeLoadZParameter.from_jsonstring": [[462, "nodeloadzparameter-from-jsonstring"]], "NodeLoadZParameter.key": [[463, "nodeloadzparameter-key"]], "NodeLoadZParameter.sha256": [[464, "nodeloadzparameter-sha256"]], "NodeLoadZParameter.start_value": [[465, "nodeloadzparameter-start-value"]], "NodeLoadZParameter.to_data": [[466, "nodeloadzparameter-to-data"]], "NodeLoadZParameter.to_json": [[467, "nodeloadzparameter-to-json"]], "NodeLoadZParameter.to_jsonstring": [[468, "nodeloadzparameter-to-jsonstring"]], "NodeLoadZParameter.validate_data": [[469, "nodeloadzparameter-validate-data"]], "NodeLoadZParameter.validate_json": [[470, "nodeloadzparameter-validate-json"]], "Optimizer": [[471, "optimizer"]], "Optimizer.ToString": [[472, "optimizer-tostring"]], "Optimizer.add_constraint": [[473, "optimizer-add-constraint"]], "Optimizer.add_parameter": [[474, "optimizer-add-parameter"]], "Optimizer.check_optimization_sanity": [[475, "optimizer-check-optimization-sanity"]], "Optimizer.copy": [[476, "optimizer-copy"]], "Optimizer.from_data": [[477, "optimizer-from-data"]], "Optimizer.from_json": [[478, "optimizer-from-json"]], "Optimizer.from_jsonstring": [[479, "optimizer-from-jsonstring"]], "Optimizer.gradient_func": [[480, "optimizer-gradient-func"]], "Optimizer.number_of_constraints": [[481, "optimizer-number-of-constraints"]], "Optimizer.number_of_parameters": [[482, "optimizer-number-of-parameters"]], "Optimizer.objective_func": [[483, "optimizer-objective-func"]], "Optimizer.optimization_bounds": [[484, "optimizer-optimization-bounds"]], "Optimizer.optimization_parameters": [[485, "optimizer-optimization-parameters"]], "Optimizer.remove_constraint": [[486, "optimizer-remove-constraint"]], "Optimizer.remove_parameter": [[487, "optimizer-remove-parameter"]], "Optimizer.sha256": [[488, "optimizer-sha256"]], "Optimizer.solve": [[489, "optimizer-solve"]], "Optimizer.to_data": [[490, "optimizer-to-data"]], "Optimizer.to_json": [[491, "optimizer-to-json"]], "Optimizer.to_jsonstring": [[492, "optimizer-to-jsonstring"]], "Optimizer.validate_data": [[493, "optimizer-validate-data"]], "Optimizer.validate_json": [[494, "optimizer-validate-json"]], "OriginNodeXParameter": [[495, "originnodexparameter"]], "OriginNodeXParameter.ToString": [[496, "originnodexparameter-tostring"]], "OriginNodeXParameter.attr_name": [[497, "originnodexparameter-attr-name"]], "OriginNodeXParameter.bound_low": [[498, "originnodexparameter-bound-low"]], "OriginNodeXParameter.bound_up": [[499, "originnodexparameter-bound-up"]], "OriginNodeXParameter.copy": [[500, "originnodexparameter-copy"]], "OriginNodeXParameter.from_data": [[501, "originnodexparameter-from-data"]], "OriginNodeXParameter.from_json": [[502, "originnodexparameter-from-json"]], "OriginNodeXParameter.from_jsonstring": [[503, "originnodexparameter-from-jsonstring"]], "OriginNodeXParameter.key": [[504, "originnodexparameter-key"]], "OriginNodeXParameter.sha256": [[505, "originnodexparameter-sha256"]], "OriginNodeXParameter.start_value": [[506, "originnodexparameter-start-value"]], "OriginNodeXParameter.to_data": [[507, "originnodexparameter-to-data"]], "OriginNodeXParameter.to_json": [[508, "originnodexparameter-to-json"]], "OriginNodeXParameter.to_jsonstring": [[509, "originnodexparameter-to-jsonstring"]], "OriginNodeXParameter.validate_data": [[510, "originnodexparameter-validate-data"]], "OriginNodeXParameter.validate_json": [[511, "originnodexparameter-validate-json"]], "OriginNodeYParameter": [[512, "originnodeyparameter"]], "OriginNodeYParameter.ToString": [[513, "originnodeyparameter-tostring"]], "OriginNodeYParameter.attr_name": [[514, "originnodeyparameter-attr-name"]], "OriginNodeYParameter.bound_low": [[515, "originnodeyparameter-bound-low"]], "OriginNodeYParameter.bound_up": [[516, "originnodeyparameter-bound-up"]], "OriginNodeYParameter.copy": [[517, "originnodeyparameter-copy"]], "OriginNodeYParameter.from_data": [[518, "originnodeyparameter-from-data"]], "OriginNodeYParameter.from_json": [[519, "originnodeyparameter-from-json"]], "OriginNodeYParameter.from_jsonstring": [[520, "originnodeyparameter-from-jsonstring"]], "OriginNodeYParameter.key": [[521, "originnodeyparameter-key"]], "OriginNodeYParameter.sha256": [[522, "originnodeyparameter-sha256"]], "OriginNodeYParameter.start_value": [[523, "originnodeyparameter-start-value"]], "OriginNodeYParameter.to_data": [[524, "originnodeyparameter-to-data"]], "OriginNodeYParameter.to_json": [[525, "originnodeyparameter-to-json"]], "OriginNodeYParameter.to_jsonstring": [[526, "originnodeyparameter-to-jsonstring"]], "OriginNodeYParameter.validate_data": [[527, "originnodeyparameter-validate-data"]], "OriginNodeYParameter.validate_json": [[528, "originnodeyparameter-validate-json"]], "OriginNodeZParameter": [[529, "originnodezparameter"]], "OriginNodeZParameter.ToString": [[530, "originnodezparameter-tostring"]], "OriginNodeZParameter.attr_name": [[531, "originnodezparameter-attr-name"]], "OriginNodeZParameter.bound_low": [[532, "originnodezparameter-bound-low"]], "OriginNodeZParameter.bound_up": [[533, "originnodezparameter-bound-up"]], "OriginNodeZParameter.copy": [[534, "originnodezparameter-copy"]], "OriginNodeZParameter.from_data": [[535, "originnodezparameter-from-data"]], "OriginNodeZParameter.from_json": [[536, "originnodezparameter-from-json"]], "OriginNodeZParameter.from_jsonstring": [[537, "originnodezparameter-from-jsonstring"]], "OriginNodeZParameter.key": [[538, "originnodezparameter-key"]], "OriginNodeZParameter.sha256": [[539, "originnodezparameter-sha256"]], "OriginNodeZParameter.start_value": [[540, "originnodezparameter-start-value"]], "OriginNodeZParameter.to_data": [[541, "originnodezparameter-to-data"]], "OriginNodeZParameter.to_json": [[542, "originnodezparameter-to-json"]], "OriginNodeZParameter.to_jsonstring": [[543, "originnodezparameter-to-jsonstring"]], "OriginNodeZParameter.validate_data": [[544, "originnodezparameter-validate-data"]], "OriginNodeZParameter.validate_json": [[545, "originnodezparameter-validate-json"]], "PlaneConstraint": [[546, "planeconstraint"]], "PlaneConstraint.ToString": [[547, "planeconstraint-tostring"]], "PlaneConstraint.copy": [[548, "planeconstraint-copy"]], "PlaneConstraint.from_data": [[549, "planeconstraint-from-data"]], "PlaneConstraint.from_json": [[550, "planeconstraint-from-json"]], "PlaneConstraint.from_jsonstring": [[551, "planeconstraint-from-jsonstring"]], "PlaneConstraint.key": [[552, "planeconstraint-key"]], "PlaneConstraint.penalty": [[553, "planeconstraint-penalty"]], "PlaneConstraint.reference": [[554, "planeconstraint-reference"]], "PlaneConstraint.sha256": [[555, "planeconstraint-sha256"]], "PlaneConstraint.target": [[556, "planeconstraint-target"]], "PlaneConstraint.to_data": [[557, "planeconstraint-to-data"]], "PlaneConstraint.to_json": [[558, "planeconstraint-to-json"]], "PlaneConstraint.to_jsonstring": [[559, "planeconstraint-to-jsonstring"]], "PlaneConstraint.validate_data": [[560, "planeconstraint-validate-data"]], "PlaneConstraint.validate_json": [[561, "planeconstraint-validate-json"]], "PointConstraint": [[562, "pointconstraint"]], "PointConstraint.ToString": [[563, "pointconstraint-tostring"]], "PointConstraint.copy": [[564, "pointconstraint-copy"]], "PointConstraint.from_data": [[565, "pointconstraint-from-data"]], "PointConstraint.from_json": [[566, "pointconstraint-from-json"]], "PointConstraint.from_jsonstring": [[567, "pointconstraint-from-jsonstring"]], "PointConstraint.key": [[568, "pointconstraint-key"]], "PointConstraint.penalty": [[569, "pointconstraint-penalty"]], "PointConstraint.reference": [[570, "pointconstraint-reference"]], "PointConstraint.sha256": [[571, "pointconstraint-sha256"]], "PointConstraint.target": [[572, "pointconstraint-target"]], "PointConstraint.to_data": [[573, "pointconstraint-to-data"]], "PointConstraint.to_json": [[574, "pointconstraint-to-json"]], "PointConstraint.to_jsonstring": [[575, "pointconstraint-to-jsonstring"]], "PointConstraint.validate_data": [[576, "pointconstraint-validate-data"]], "PointConstraint.validate_json": [[577, "pointconstraint-validate-json"]], "ReactionForceConstraint": [[578, "reactionforceconstraint"]], "ReactionForceConstraint.ToString": [[579, "reactionforceconstraint-tostring"]], "ReactionForceConstraint.copy": [[580, "reactionforceconstraint-copy"]], "ReactionForceConstraint.from_data": [[581, "reactionforceconstraint-from-data"]], "ReactionForceConstraint.from_json": [[582, "reactionforceconstraint-from-json"]], "ReactionForceConstraint.from_jsonstring": [[583, "reactionforceconstraint-from-jsonstring"]], "ReactionForceConstraint.key": [[584, "reactionforceconstraint-key"]], "ReactionForceConstraint.penalty": [[585, "reactionforceconstraint-penalty"]], "ReactionForceConstraint.reference": [[586, "reactionforceconstraint-reference"]], "ReactionForceConstraint.sha256": [[587, "reactionforceconstraint-sha256"]], "ReactionForceConstraint.target": [[588, "reactionforceconstraint-target"]], "ReactionForceConstraint.to_data": [[589, "reactionforceconstraint-to-data"]], "ReactionForceConstraint.to_json": [[590, "reactionforceconstraint-to-json"]], "ReactionForceConstraint.to_jsonstring": [[591, "reactionforceconstraint-to-jsonstring"]], "ReactionForceConstraint.validate_data": [[592, "reactionforceconstraint-validate-data"]], "ReactionForceConstraint.validate_json": [[593, "reactionforceconstraint-validate-json"]], "TrailEdgeForceConstraint": [[594, "trailedgeforceconstraint"]], "TrailEdgeForceConstraint.ToString": [[595, "trailedgeforceconstraint-tostring"]], "TrailEdgeForceConstraint.copy": [[596, "trailedgeforceconstraint-copy"]], "TrailEdgeForceConstraint.from_data": [[597, "trailedgeforceconstraint-from-data"]], "TrailEdgeForceConstraint.from_json": [[598, "trailedgeforceconstraint-from-json"]], "TrailEdgeForceConstraint.from_jsonstring": [[599, "trailedgeforceconstraint-from-jsonstring"]], "TrailEdgeForceConstraint.key": [[600, "trailedgeforceconstraint-key"]], "TrailEdgeForceConstraint.penalty": [[601, "trailedgeforceconstraint-penalty"]], "TrailEdgeForceConstraint.reference": [[602, "trailedgeforceconstraint-reference"]], "TrailEdgeForceConstraint.sha256": [[603, "trailedgeforceconstraint-sha256"]], "TrailEdgeForceConstraint.target": [[604, "trailedgeforceconstraint-target"]], "TrailEdgeForceConstraint.to_data": [[605, "trailedgeforceconstraint-to-data"]], "TrailEdgeForceConstraint.to_json": [[606, "trailedgeforceconstraint-to-json"]], "TrailEdgeForceConstraint.to_jsonstring": [[607, "trailedgeforceconstraint-to-jsonstring"]], "TrailEdgeForceConstraint.validate_data": [[608, "trailedgeforceconstraint-validate-data"]], "TrailEdgeForceConstraint.validate_json": [[609, "trailedgeforceconstraint-validate-json"]], "TrailEdgeParameter": [[610, "trailedgeparameter"]], "TrailEdgeParameter.ToString": [[611, "trailedgeparameter-tostring"]], "TrailEdgeParameter.attr_name": [[612, "trailedgeparameter-attr-name"]], "TrailEdgeParameter.bound_low": [[613, "trailedgeparameter-bound-low"]], "TrailEdgeParameter.bound_up": [[614, "trailedgeparameter-bound-up"]], "TrailEdgeParameter.copy": [[615, "trailedgeparameter-copy"]], "TrailEdgeParameter.from_data": [[616, "trailedgeparameter-from-data"]], "TrailEdgeParameter.from_json": [[617, "trailedgeparameter-from-json"]], "TrailEdgeParameter.from_jsonstring": [[618, "trailedgeparameter-from-jsonstring"]], "TrailEdgeParameter.key": [[619, "trailedgeparameter-key"]], "TrailEdgeParameter.sha256": [[620, "trailedgeparameter-sha256"]], "TrailEdgeParameter.start_value": [[621, "trailedgeparameter-start-value"]], "TrailEdgeParameter.to_data": [[622, "trailedgeparameter-to-data"]], "TrailEdgeParameter.to_json": [[623, "trailedgeparameter-to-json"]], "TrailEdgeParameter.to_jsonstring": [[624, "trailedgeparameter-to-jsonstring"]], "TrailEdgeParameter.validate_data": [[625, "trailedgeparameter-validate-data"]], "TrailEdgeParameter.validate_json": [[626, "trailedgeparameter-validate-json"]], "solve_proxy": [[627, "solve-proxy"]], "FormArtist": [[628, "formartist"]], "FormArtist.build": [[629, "formartist-build"]], "FormArtist.build_as": [[630, "formartist-build-as"]], "FormArtist.clear": [[631, "formartist-clear"]], "FormArtist.clear_edges": [[632, "formartist-clear-edges"]], "FormArtist.clear_nodes": [[633, "formartist-clear-nodes"]], "FormArtist.draw": [[634, "formartist-draw"]], "FormArtist.draw_collection": [[635, "formartist-draw-collection"]], "FormArtist.draw_edgelabels": [[636, "formartist-draw-edgelabels"]], "FormArtist.draw_edges": [[637, "formartist-draw-edges"]], "FormArtist.draw_loads": [[638, "formartist-draw-loads"]], "FormArtist.draw_nodelabels": [[639, "formartist-draw-nodelabels"]], "FormArtist.draw_nodes": [[640, "formartist-draw-nodes"]], "FormArtist.draw_reactions": [[641, "formartist-draw-reactions"]], "FormArtist.redraw": [[642, "formartist-redraw"]], "FormArtist.register": [[643, "formartist-register"]], "FormArtist.update_data": [[644, "formartist-update-data"]], "FormArtist.viewbox": [[645, "formartist-viewbox"]], "Plotter": [[646, "plotter"]], "Plotter.add": [[647, "plotter-add"]], "Plotter.add_from_list": [[648, "plotter-add-from-list"]], "Plotter.draw": [[649, "plotter-draw"]], "Plotter.find": [[650, "plotter-find"]], "Plotter.on": [[651, "plotter-on"]], "Plotter.pause": [[652, "plotter-pause"]], "Plotter.redraw": [[653, "plotter-redraw"]], "Plotter.register_listener": [[654, "plotter-register-listener"]], "Plotter.save": [[655, "plotter-save"]], "Plotter.show": [[656, "plotter-show"]], "Plotter.zoom_extents": [[657, "plotter-zoom-extents"]], "TopologyArtist": [[658, "topologyartist"]], "TopologyArtist.build": [[659, "topologyartist-build"]], "TopologyArtist.build_as": [[660, "topologyartist-build-as"]], "TopologyArtist.clear": [[661, "topologyartist-clear"]], "TopologyArtist.clear_edges": [[662, "topologyartist-clear-edges"]], "TopologyArtist.clear_nodes": [[663, "topologyartist-clear-nodes"]], "TopologyArtist.draw": [[664, "topologyartist-draw"]], "TopologyArtist.draw_collection": [[665, "topologyartist-draw-collection"]], "TopologyArtist.draw_edgelabels": [[666, "topologyartist-draw-edgelabels"]], "TopologyArtist.draw_edges": [[667, "topologyartist-draw-edges"]], "TopologyArtist.draw_loads": [[668, "topologyartist-draw-loads"]], "TopologyArtist.draw_nodelabels": [[669, "topologyartist-draw-nodelabels"]], "TopologyArtist.draw_nodes": [[670, "topologyartist-draw-nodes"]], "TopologyArtist.redraw": [[671, "topologyartist-redraw"]], "TopologyArtist.register": [[672, "topologyartist-register"]], "TopologyArtist.update_data": [[673, "topologyartist-update-data"]], "TopologyArtist.viewbox": [[674, "topologyartist-viewbox"]], "NodeSupport": [[675, "nodesupport"]], "NodeSupport.ToString": [[676, "nodesupport-tostring"]], "NodeSupport.copy": [[677, "nodesupport-copy"]], "NodeSupport.from_data": [[678, "nodesupport-from-data"]], "NodeSupport.from_json": [[679, "nodesupport-from-json"]], "NodeSupport.from_jsonstring": [[680, "nodesupport-from-jsonstring"]], "NodeSupport.from_point": [[681, "nodesupport-from-point"]], "NodeSupport.sha256": [[682, "nodesupport-sha256"]], "NodeSupport.to_data": [[683, "nodesupport-to-data"]], "NodeSupport.to_json": [[684, "nodesupport-to-json"]], "NodeSupport.to_jsonstring": [[685, "nodesupport-to-jsonstring"]], "NodeSupport.validate_data": [[686, "nodesupport-validate-data"]], "NodeSupport.validate_json": [[687, "nodesupport-validate-json"]], "Changelog": [[688, "changelog"]], "0.8.3": [[688, "id1"]], "0.8.2": [[688, "id2"]], "0.8.1": [[688, "id3"]], "0.8.0": [[688, "id4"]], "0.7.0": [[688, "id5"]], "0.6.1": [[688, "id6"]], "0.6.0": [[688, "id7"]], "0.5.0": [[688, "id8"]], "0.4.1": [[688, "id9"]], "0.4.0": [[688, "id10"]], "0.2.2": [[688, "id11"]], "0.2.1": [[688, "id12"]], "0.1.15": [[688, "id13"]], "0.1.14": [[688, "id14"]], "0.1.13": [[688, "id15"]], "0.1.12": [[688, "id16"]], "0.1.11": [[688, "id17"]], "0.1.9": [[688, "id18"]], "0.1.6": [[688, "id19"]], "0.1.4": [[688, "id20"]], "0.1.3": [[688, "id21"]], "Citing": [[689, "citing"]], "Authors": [[689, "authors"]], "Examples": [[690, "examples"]], "COMPAS CEM": [[691, "compas-cem"]], "Main features": [[691, "main-features"]], "Credits": [[691, "credits"]], "Table of Contents": [[691, "table-of-contents"]], "Installation": [[692, "installation"]], "Install COMPAS CEM": [[692, "install-compas-cem"]], "1. Create a virtual environment": [[692, "create-a-virtual-environment"]], "2. Activate the virtual environment": [[692, "activate-the-virtual-environment"]], "3. Install COMPAS via conda": [[692, "install-compas-via-conda"]], "4. Install COMPAS CEM via pip": [[692, "install-compas-cem-via-pip"]], "Install the Grasshopper Plugin": [[692, "install-the-grasshopper-plugin"]], "1. Remove any leftovers": [[692, "remove-any-leftovers"]], "2. Link COMPAS CEM": [[692, "link-compas-cem"]], "3. Check your Grasshopper installation": [[692, "check-your-grasshopper-installation"]], "Update COMPAS CEM": [[692, "update-compas-cem"]], "License": [[693, "license"]]}, "indexentries": {"compas_cem": [[13, "module-compas_cem"]], "module": [[13, "module-compas_cem"], [14, "module-compas_cem.diagrams"], [15, "module-compas_cem.elements"], [16, "module-compas_cem.equilibrium"], [17, "module-compas_cem.loads"], [18, "module-compas_cem.optimization"], [19, "module-compas_cem.plotters"], [20, "module-compas_cem.supports"], [21, "module-compas_cem.viewers"]], "compas_cem.diagrams": [[14, "module-compas_cem.diagrams"]], "compas_cem.elements": [[15, "module-compas_cem.elements"]], "compas_cem.equilibrium": [[16, "module-compas_cem.equilibrium"]], "compas_cem.loads": [[17, "module-compas_cem.loads"]], "compas_cem.optimization": [[18, "module-compas_cem.optimization"]], "compas_cem.plotters": [[19, "module-compas_cem.plotters"]], "compas_cem.supports": [[20, "module-compas_cem.supports"]], "compas_cem.viewers": [[21, "module-compas_cem.viewers"]], "formdiagram (class in compas_cem.diagrams)": [[22, "compas_cem.diagrams.FormDiagram"]], "tostring() (compas_cem.diagrams.formdiagram method)": [[23, "compas_cem.diagrams.FormDiagram.ToString"]], "add_edge() (compas_cem.diagrams.formdiagram method)": [[24, "compas_cem.diagrams.FormDiagram.add_edge"]], "add_node() (compas_cem.diagrams.formdiagram method)": [[25, "compas_cem.diagrams.FormDiagram.add_node"]], "adjacency_matrix() (compas_cem.diagrams.formdiagram method)": [[26, "compas_cem.diagrams.FormDiagram.adjacency_matrix"]], "clear() (compas_cem.diagrams.formdiagram method)": [[27, "compas_cem.diagrams.FormDiagram.clear"]], "complement() (compas_cem.diagrams.formdiagram method)": [[28, "compas_cem.diagrams.FormDiagram.complement"]], "connected_edges() (compas_cem.diagrams.formdiagram method)": [[29, "compas_cem.diagrams.FormDiagram.connected_edges"]], "connectivity_matrix() (compas_cem.diagrams.formdiagram method)": [[30, "compas_cem.diagrams.FormDiagram.connectivity_matrix"]], "copy() (compas_cem.diagrams.formdiagram method)": [[31, "compas_cem.diagrams.FormDiagram.copy"]], "count_crossings() (compas_cem.diagrams.formdiagram method)": [[32, "compas_cem.diagrams.FormDiagram.count_crossings"]], "degree() (compas_cem.diagrams.formdiagram method)": [[33, "compas_cem.diagrams.FormDiagram.degree"]], "degree_in() (compas_cem.diagrams.formdiagram method)": [[34, "compas_cem.diagrams.FormDiagram.degree_in"]], "degree_matrix() (compas_cem.diagrams.formdiagram method)": [[35, "compas_cem.diagrams.FormDiagram.degree_matrix"]], "degree_out() (compas_cem.diagrams.formdiagram method)": [[36, "compas_cem.diagrams.FormDiagram.degree_out"]], "delete_edge() (compas_cem.diagrams.formdiagram method)": [[37, "compas_cem.diagrams.FormDiagram.delete_edge"]], "delete_node() (compas_cem.diagrams.formdiagram method)": [[38, "compas_cem.diagrams.FormDiagram.delete_node"]], "edge_attribute() (compas_cem.diagrams.formdiagram method)": [[39, "compas_cem.diagrams.FormDiagram.edge_attribute"]], "edge_attributes() (compas_cem.diagrams.formdiagram method)": [[40, "compas_cem.diagrams.FormDiagram.edge_attributes"]], "edge_coordinates() (compas_cem.diagrams.formdiagram method)": [[41, "compas_cem.diagrams.FormDiagram.edge_coordinates"]], "edge_direction() (compas_cem.diagrams.formdiagram method)": [[42, "compas_cem.diagrams.FormDiagram.edge_direction"]], "edge_force() (compas_cem.diagrams.formdiagram method)": [[43, "compas_cem.diagrams.FormDiagram.edge_force"]], "edge_length() (compas_cem.diagrams.formdiagram method)": [[44, "compas_cem.diagrams.FormDiagram.edge_length"]], "edge_length_2() (compas_cem.diagrams.formdiagram method)": [[45, "compas_cem.diagrams.FormDiagram.edge_length_2"]], "edge_midpoint() (compas_cem.diagrams.formdiagram method)": [[46, "compas_cem.diagrams.FormDiagram.edge_midpoint"]], "edge_plane() (compas_cem.diagrams.formdiagram method)": [[47, "compas_cem.diagrams.FormDiagram.edge_plane"]], "edge_point() (compas_cem.diagrams.formdiagram method)": [[48, "compas_cem.diagrams.FormDiagram.edge_point"]], "edge_sample() (compas_cem.diagrams.formdiagram method)": [[49, "compas_cem.diagrams.FormDiagram.edge_sample"]], "edge_vector() (compas_cem.diagrams.formdiagram method)": [[50, "compas_cem.diagrams.FormDiagram.edge_vector"]], "edges() (compas_cem.diagrams.formdiagram method)": [[51, "compas_cem.diagrams.FormDiagram.edges"]], "edges_attribute() (compas_cem.diagrams.formdiagram method)": [[52, "compas_cem.diagrams.FormDiagram.edges_attribute"]], "edges_attributes() (compas_cem.diagrams.formdiagram method)": [[53, "compas_cem.diagrams.FormDiagram.edges_attributes"]], "edges_where() (compas_cem.diagrams.formdiagram method)": [[54, "compas_cem.diagrams.FormDiagram.edges_where"]], "edges_where_predicate() (compas_cem.diagrams.formdiagram method)": [[55, "compas_cem.diagrams.FormDiagram.edges_where_predicate"]], "embed_in_plane() (compas_cem.diagrams.formdiagram method)": [[56, "compas_cem.diagrams.FormDiagram.embed_in_plane"]], "find_crossings() (compas_cem.diagrams.formdiagram method)": [[57, "compas_cem.diagrams.FormDiagram.find_crossings"]], "find_cycles() (compas_cem.diagrams.formdiagram method)": [[58, "compas_cem.diagrams.FormDiagram.find_cycles"]], "from_data() (compas_cem.diagrams.formdiagram class method)": [[59, "compas_cem.diagrams.FormDiagram.from_data"]], "from_edges() (compas_cem.diagrams.formdiagram class method)": [[60, "compas_cem.diagrams.FormDiagram.from_edges"]], "from_json() (compas_cem.diagrams.formdiagram class method)": [[61, "compas_cem.diagrams.FormDiagram.from_json"]], "from_jsonstring() (compas_cem.diagrams.formdiagram class method)": [[62, "compas_cem.diagrams.FormDiagram.from_jsonstring"]], "from_lines() (compas_cem.diagrams.formdiagram class method)": [[63, "compas_cem.diagrams.FormDiagram.from_lines"]], "from_networkx() (compas_cem.diagrams.formdiagram class method)": [[64, "compas_cem.diagrams.FormDiagram.from_networkx"]], "from_nodes_and_edges() (compas_cem.diagrams.formdiagram class method)": [[65, "compas_cem.diagrams.FormDiagram.from_nodes_and_edges"]], "from_obj() (compas_cem.diagrams.formdiagram class method)": [[66, "compas_cem.diagrams.FormDiagram.from_obj"]], "from_pointcloud() (compas_cem.diagrams.formdiagram class method)": [[67, "compas_cem.diagrams.FormDiagram.from_pointcloud"]], "from_topology_diagram() (compas_cem.diagrams.formdiagram class method)": [[68, "compas_cem.diagrams.FormDiagram.from_topology_diagram"]], "get_any_edge() (compas_cem.diagrams.formdiagram method)": [[69, "compas_cem.diagrams.FormDiagram.get_any_edge"]], "get_any_edges() (compas_cem.diagrams.formdiagram method)": [[70, "compas_cem.diagrams.FormDiagram.get_any_edges"]], "get_any_node() (compas_cem.diagrams.formdiagram method)": [[71, "compas_cem.diagrams.FormDiagram.get_any_node"]], "get_any_nodes() (compas_cem.diagrams.formdiagram method)": [[72, "compas_cem.diagrams.FormDiagram.get_any_nodes"]], "gkey() (compas_cem.diagrams.formdiagram method)": [[73, "compas_cem.diagrams.FormDiagram.gkey"]], "gkey_key() (compas_cem.diagrams.formdiagram method)": [[74, "compas_cem.diagrams.FormDiagram.gkey_key"]], "has_edge() (compas_cem.diagrams.formdiagram method)": [[75, "compas_cem.diagrams.FormDiagram.has_edge"]], "has_node() (compas_cem.diagrams.formdiagram method)": [[76, "compas_cem.diagrams.FormDiagram.has_node"]], "index_key() (compas_cem.diagrams.formdiagram method)": [[77, "compas_cem.diagrams.FormDiagram.index_key"]], "index_uv() (compas_cem.diagrams.formdiagram method)": [[78, "compas_cem.diagrams.FormDiagram.index_uv"]], "is_connected() (compas_cem.diagrams.formdiagram method)": [[79, "compas_cem.diagrams.FormDiagram.is_connected"]], "is_crossed() (compas_cem.diagrams.formdiagram method)": [[80, "compas_cem.diagrams.FormDiagram.is_crossed"]], "is_edge_supported() (compas_cem.diagrams.formdiagram method)": [[81, "compas_cem.diagrams.FormDiagram.is_edge_supported"]], "is_leaf() (compas_cem.diagrams.formdiagram method)": [[82, "compas_cem.diagrams.FormDiagram.is_leaf"]], "is_node_connected() (compas_cem.diagrams.formdiagram method)": [[83, "compas_cem.diagrams.FormDiagram.is_node_connected"]], "is_node_loaded() (compas_cem.diagrams.formdiagram method)": [[84, "compas_cem.diagrams.FormDiagram.is_node_loaded"]], "is_node_support() (compas_cem.diagrams.formdiagram method)": [[85, "compas_cem.diagrams.FormDiagram.is_node_support"]], "is_planar() (compas_cem.diagrams.formdiagram method)": [[86, "compas_cem.diagrams.FormDiagram.is_planar"]], "is_planar_embedding() (compas_cem.diagrams.formdiagram method)": [[87, "compas_cem.diagrams.FormDiagram.is_planar_embedding"]], "is_xy() (compas_cem.diagrams.formdiagram method)": [[88, "compas_cem.diagrams.FormDiagram.is_xy"]], "key_gkey() (compas_cem.diagrams.formdiagram method)": [[89, "compas_cem.diagrams.FormDiagram.key_gkey"]], "key_index() (compas_cem.diagrams.formdiagram method)": [[90, "compas_cem.diagrams.FormDiagram.key_index"]], "laplacian_matrix() (compas_cem.diagrams.formdiagram method)": [[91, "compas_cem.diagrams.FormDiagram.laplacian_matrix"]], "leaves() (compas_cem.diagrams.formdiagram method)": [[92, "compas_cem.diagrams.FormDiagram.leaves"]], "loaded_nodes() (compas_cem.diagrams.formdiagram method)": [[93, "compas_cem.diagrams.FormDiagram.loaded_nodes"]], "neighborhood() (compas_cem.diagrams.formdiagram method)": [[94, "compas_cem.diagrams.FormDiagram.neighborhood"]], "neighbors() (compas_cem.diagrams.formdiagram method)": [[95, "compas_cem.diagrams.FormDiagram.neighbors"]], "neighbors_in() (compas_cem.diagrams.formdiagram method)": [[96, "compas_cem.diagrams.FormDiagram.neighbors_in"]], "neighbors_out() (compas_cem.diagrams.formdiagram method)": [[97, "compas_cem.diagrams.FormDiagram.neighbors_out"]], "network_adjacency_matrix() (compas_cem.diagrams.formdiagram method)": [[98, "compas_cem.diagrams.FormDiagram.network_adjacency_matrix"]], "network_connectivity_matrix() (compas_cem.diagrams.formdiagram method)": [[99, "compas_cem.diagrams.FormDiagram.network_connectivity_matrix"]], "network_degree_matrix() (compas_cem.diagrams.formdiagram method)": [[100, "compas_cem.diagrams.FormDiagram.network_degree_matrix"]], "network_embed_in_plane() (compas_cem.diagrams.formdiagram method)": [[101, "compas_cem.diagrams.FormDiagram.network_embed_in_plane"]], "network_is_planar() (compas_cem.diagrams.formdiagram method)": [[102, "compas_cem.diagrams.FormDiagram.network_is_planar"]], "network_is_planar_embedding() (compas_cem.diagrams.formdiagram method)": [[103, "compas_cem.diagrams.FormDiagram.network_is_planar_embedding"]], "network_laplacian_matrix() (compas_cem.diagrams.formdiagram method)": [[104, "compas_cem.diagrams.FormDiagram.network_laplacian_matrix"]], "node_attribute() (compas_cem.diagrams.formdiagram method)": [[105, "compas_cem.diagrams.FormDiagram.node_attribute"]], "node_attributes() (compas_cem.diagrams.formdiagram method)": [[106, "compas_cem.diagrams.FormDiagram.node_attributes"]], "node_coordinates() (compas_cem.diagrams.formdiagram method)": [[107, "compas_cem.diagrams.FormDiagram.node_coordinates"]], "node_exists() (compas_cem.diagrams.formdiagram method)": [[108, "compas_cem.diagrams.FormDiagram.node_exists"]], "node_gkey() (compas_cem.diagrams.formdiagram method)": [[109, "compas_cem.diagrams.FormDiagram.node_gkey"]], "node_key() (compas_cem.diagrams.formdiagram method)": [[110, "compas_cem.diagrams.FormDiagram.node_key"]], "node_laplacian() (compas_cem.diagrams.formdiagram method)": [[111, "compas_cem.diagrams.FormDiagram.node_laplacian"]], "node_load() (compas_cem.diagrams.formdiagram method)": [[112, "compas_cem.diagrams.FormDiagram.node_load"]], "node_neighborhood_centroid() (compas_cem.diagrams.formdiagram method)": [[113, "compas_cem.diagrams.FormDiagram.node_neighborhood_centroid"]], "node_sample() (compas_cem.diagrams.formdiagram method)": [[114, "compas_cem.diagrams.FormDiagram.node_sample"]], "node_xyz() (compas_cem.diagrams.formdiagram method)": [[115, "compas_cem.diagrams.FormDiagram.node_xyz"]], "nodes() (compas_cem.diagrams.formdiagram method)": [[116, "compas_cem.diagrams.FormDiagram.nodes"]], "nodes_attribute() (compas_cem.diagrams.formdiagram method)": [[117, "compas_cem.diagrams.FormDiagram.nodes_attribute"]], "nodes_attributes() (compas_cem.diagrams.formdiagram method)": [[118, "compas_cem.diagrams.FormDiagram.nodes_attributes"]], "nodes_where() (compas_cem.diagrams.formdiagram method)": [[119, "compas_cem.diagrams.FormDiagram.nodes_where"]], "nodes_where_predicate() (compas_cem.diagrams.formdiagram method)": [[120, "compas_cem.diagrams.FormDiagram.nodes_where_predicate"]], "number_of_edges() (compas_cem.diagrams.formdiagram method)": [[121, "compas_cem.diagrams.FormDiagram.number_of_edges"]], "number_of_loaded_nodes() (compas_cem.diagrams.formdiagram method)": [[122, "compas_cem.diagrams.FormDiagram.number_of_loaded_nodes"]], "number_of_nodes() (compas_cem.diagrams.formdiagram method)": [[123, "compas_cem.diagrams.FormDiagram.number_of_nodes"]], "number_of_support_nodes() (compas_cem.diagrams.formdiagram method)": [[124, "compas_cem.diagrams.FormDiagram.number_of_support_nodes"]], "reaction_force() (compas_cem.diagrams.formdiagram method)": [[125, "compas_cem.diagrams.FormDiagram.reaction_force"]], "sha256() (compas_cem.diagrams.formdiagram method)": [[126, "compas_cem.diagrams.FormDiagram.sha256"]], "shortest_path() (compas_cem.diagrams.formdiagram method)": [[127, "compas_cem.diagrams.FormDiagram.shortest_path"]], "smooth() (compas_cem.diagrams.formdiagram method)": [[128, "compas_cem.diagrams.FormDiagram.smooth"]], "split_edge() (compas_cem.diagrams.formdiagram method)": [[129, "compas_cem.diagrams.FormDiagram.split_edge"]], "summary() (compas_cem.diagrams.formdiagram method)": [[130, "compas_cem.diagrams.FormDiagram.summary"]], "support_nodes() (compas_cem.diagrams.formdiagram method)": [[131, "compas_cem.diagrams.FormDiagram.support_nodes"]], "to_data() (compas_cem.diagrams.formdiagram method)": [[132, "compas_cem.diagrams.FormDiagram.to_data"]], "to_json() (compas_cem.diagrams.formdiagram method)": [[133, "compas_cem.diagrams.FormDiagram.to_json"]], "to_jsonstring() (compas_cem.diagrams.formdiagram method)": [[134, "compas_cem.diagrams.FormDiagram.to_jsonstring"]], "to_lines() (compas_cem.diagrams.formdiagram method)": [[135, "compas_cem.diagrams.FormDiagram.to_lines"]], "to_networkx() (compas_cem.diagrams.formdiagram method)": [[136, "compas_cem.diagrams.FormDiagram.to_networkx"]], "to_nodes_and_edges() (compas_cem.diagrams.formdiagram method)": [[137, "compas_cem.diagrams.FormDiagram.to_nodes_and_edges"]], "to_obj() (compas_cem.diagrams.formdiagram method)": [[138, "compas_cem.diagrams.FormDiagram.to_obj"]], "to_points() (compas_cem.diagrams.formdiagram method)": [[139, "compas_cem.diagrams.FormDiagram.to_points"]], "transform() (compas_cem.diagrams.formdiagram method)": [[140, "compas_cem.diagrams.FormDiagram.transform"]], "transformed() (compas_cem.diagrams.formdiagram method)": [[141, "compas_cem.diagrams.FormDiagram.transformed"]], "unset_edge_attribute() (compas_cem.diagrams.formdiagram method)": [[142, "compas_cem.diagrams.FormDiagram.unset_edge_attribute"]], "unset_node_attribute() (compas_cem.diagrams.formdiagram method)": [[143, "compas_cem.diagrams.FormDiagram.unset_node_attribute"]], "update_dea() (compas_cem.diagrams.formdiagram method)": [[144, "compas_cem.diagrams.FormDiagram.update_dea"]], "update_default_edge_attributes() (compas_cem.diagrams.formdiagram method)": [[145, "compas_cem.diagrams.FormDiagram.update_default_edge_attributes"]], "update_default_node_attributes() (compas_cem.diagrams.formdiagram method)": [[146, "compas_cem.diagrams.FormDiagram.update_default_node_attributes"]], "update_dna() (compas_cem.diagrams.formdiagram method)": [[147, "compas_cem.diagrams.FormDiagram.update_dna"]], "update_node_xyz() (compas_cem.diagrams.formdiagram method)": [[148, "compas_cem.diagrams.FormDiagram.update_node_xyz"]], "uv_index() (compas_cem.diagrams.formdiagram method)": [[149, "compas_cem.diagrams.FormDiagram.uv_index"]], "validate_data() (compas_cem.diagrams.formdiagram method)": [[150, "compas_cem.diagrams.FormDiagram.validate_data"]], "validate_json() (compas_cem.diagrams.formdiagram method)": [[151, "compas_cem.diagrams.FormDiagram.validate_json"]], "topologydiagram (class in compas_cem.diagrams)": [[152, "compas_cem.diagrams.TopologyDiagram"]], "tostring() (compas_cem.diagrams.topologydiagram method)": [[153, "compas_cem.diagrams.TopologyDiagram.ToString"]], "add_edge() (compas_cem.diagrams.topologydiagram method)": [[154, "compas_cem.diagrams.TopologyDiagram.add_edge"]], "add_load() (compas_cem.diagrams.topologydiagram method)": [[155, "compas_cem.diagrams.TopologyDiagram.add_load"]], "add_node() (compas_cem.diagrams.topologydiagram method)": [[156, "compas_cem.diagrams.TopologyDiagram.add_node"]], "add_support() (compas_cem.diagrams.topologydiagram method)": [[157, "compas_cem.diagrams.TopologyDiagram.add_support"]], "adjacency_matrix() (compas_cem.diagrams.topologydiagram method)": [[158, "compas_cem.diagrams.TopologyDiagram.adjacency_matrix"]], "auxiliary_trail_edges() (compas_cem.diagrams.topologydiagram method)": [[159, "compas_cem.diagrams.TopologyDiagram.auxiliary_trail_edges"]], "auxiliary_trails() (compas_cem.diagrams.topologydiagram method)": [[160, "compas_cem.diagrams.TopologyDiagram.auxiliary_trails"]], "build_trails() (compas_cem.diagrams.topologydiagram method)": [[161, "compas_cem.diagrams.TopologyDiagram.build_trails"]], "clear() (compas_cem.diagrams.topologydiagram method)": [[162, "compas_cem.diagrams.TopologyDiagram.clear"]], "complement() (compas_cem.diagrams.topologydiagram method)": [[163, "compas_cem.diagrams.TopologyDiagram.complement"]], "connected_deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[164, "compas_cem.diagrams.TopologyDiagram.connected_deviation_edges"]], "connected_edges() (compas_cem.diagrams.topologydiagram method)": [[165, "compas_cem.diagrams.TopologyDiagram.connected_edges"]], "connected_trail_edges() (compas_cem.diagrams.topologydiagram method)": [[166, "compas_cem.diagrams.TopologyDiagram.connected_trail_edges"]], "connectivity_matrix() (compas_cem.diagrams.topologydiagram method)": [[167, "compas_cem.diagrams.TopologyDiagram.connectivity_matrix"]], "copy() (compas_cem.diagrams.topologydiagram method)": [[168, "compas_cem.diagrams.TopologyDiagram.copy"]], "count_crossings() (compas_cem.diagrams.topologydiagram method)": [[169, "compas_cem.diagrams.TopologyDiagram.count_crossings"]], "degree() (compas_cem.diagrams.topologydiagram method)": [[170, "compas_cem.diagrams.TopologyDiagram.degree"]], "degree_in() (compas_cem.diagrams.topologydiagram method)": [[171, "compas_cem.diagrams.TopologyDiagram.degree_in"]], "degree_matrix() (compas_cem.diagrams.topologydiagram method)": [[172, "compas_cem.diagrams.TopologyDiagram.degree_matrix"]], "degree_out() (compas_cem.diagrams.topologydiagram method)": [[173, "compas_cem.diagrams.TopologyDiagram.degree_out"]], "delete_edge() (compas_cem.diagrams.topologydiagram method)": [[174, "compas_cem.diagrams.TopologyDiagram.delete_edge"]], "delete_node() (compas_cem.diagrams.topologydiagram method)": [[175, "compas_cem.diagrams.TopologyDiagram.delete_node"]], "deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[176, "compas_cem.diagrams.TopologyDiagram.deviation_edges"]], "direct_deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[177, "compas_cem.diagrams.TopologyDiagram.direct_deviation_edges"]], "edge_attribute() (compas_cem.diagrams.topologydiagram method)": [[178, "compas_cem.diagrams.TopologyDiagram.edge_attribute"]], "edge_attributes() (compas_cem.diagrams.topologydiagram method)": [[179, "compas_cem.diagrams.TopologyDiagram.edge_attributes"]], "edge_coordinates() (compas_cem.diagrams.topologydiagram method)": [[180, "compas_cem.diagrams.TopologyDiagram.edge_coordinates"]], "edge_direction() (compas_cem.diagrams.topologydiagram method)": [[181, "compas_cem.diagrams.TopologyDiagram.edge_direction"]], "edge_force() (compas_cem.diagrams.topologydiagram method)": [[182, "compas_cem.diagrams.TopologyDiagram.edge_force"]], "edge_length() (compas_cem.diagrams.topologydiagram method)": [[183, "compas_cem.diagrams.TopologyDiagram.edge_length"]], "edge_length_2() (compas_cem.diagrams.topologydiagram method)": [[184, "compas_cem.diagrams.TopologyDiagram.edge_length_2"]], "edge_midpoint() (compas_cem.diagrams.topologydiagram method)": [[185, "compas_cem.diagrams.TopologyDiagram.edge_midpoint"]], "edge_plane() (compas_cem.diagrams.topologydiagram method)": [[186, "compas_cem.diagrams.TopologyDiagram.edge_plane"]], "edge_point() (compas_cem.diagrams.topologydiagram method)": [[187, "compas_cem.diagrams.TopologyDiagram.edge_point"]], "edge_sample() (compas_cem.diagrams.topologydiagram method)": [[188, "compas_cem.diagrams.TopologyDiagram.edge_sample"]], "edge_sequence() (compas_cem.diagrams.topologydiagram method)": [[189, "compas_cem.diagrams.TopologyDiagram.edge_sequence"]], "edge_vector() (compas_cem.diagrams.topologydiagram method)": [[190, "compas_cem.diagrams.TopologyDiagram.edge_vector"]], "edges() (compas_cem.diagrams.topologydiagram method)": [[191, "compas_cem.diagrams.TopologyDiagram.edges"]], "edges_attribute() (compas_cem.diagrams.topologydiagram method)": [[192, "compas_cem.diagrams.TopologyDiagram.edges_attribute"]], "edges_attributes() (compas_cem.diagrams.topologydiagram method)": [[193, "compas_cem.diagrams.TopologyDiagram.edges_attributes"]], "edges_where() (compas_cem.diagrams.topologydiagram method)": [[194, "compas_cem.diagrams.TopologyDiagram.edges_where"]], "edges_where_predicate() (compas_cem.diagrams.topologydiagram method)": [[195, "compas_cem.diagrams.TopologyDiagram.edges_where_predicate"]], "embed_in_plane() (compas_cem.diagrams.topologydiagram method)": [[196, "compas_cem.diagrams.TopologyDiagram.embed_in_plane"]], "find_crossings() (compas_cem.diagrams.topologydiagram method)": [[197, "compas_cem.diagrams.TopologyDiagram.find_crossings"]], "find_cycles() (compas_cem.diagrams.topologydiagram method)": [[198, "compas_cem.diagrams.TopologyDiagram.find_cycles"]], "from_data() (compas_cem.diagrams.topologydiagram class method)": [[199, "compas_cem.diagrams.TopologyDiagram.from_data"]], "from_dualquadmesh() (compas_cem.diagrams.topologydiagram class method)": [[200, "compas_cem.diagrams.TopologyDiagram.from_dualquadmesh"]], "from_edges() (compas_cem.diagrams.topologydiagram class method)": [[201, "compas_cem.diagrams.TopologyDiagram.from_edges"]], "from_json() (compas_cem.diagrams.topologydiagram class method)": [[202, "compas_cem.diagrams.TopologyDiagram.from_json"]], "from_jsonstring() (compas_cem.diagrams.topologydiagram class method)": [[203, "compas_cem.diagrams.TopologyDiagram.from_jsonstring"]], "from_lines() (compas_cem.diagrams.topologydiagram class method)": [[204, "compas_cem.diagrams.TopologyDiagram.from_lines"]], "from_networkx() (compas_cem.diagrams.topologydiagram class method)": [[205, "compas_cem.diagrams.TopologyDiagram.from_networkx"]], "from_nodes_and_edges() (compas_cem.diagrams.topologydiagram class method)": [[206, "compas_cem.diagrams.TopologyDiagram.from_nodes_and_edges"]], "from_obj() (compas_cem.diagrams.topologydiagram class method)": [[207, "compas_cem.diagrams.TopologyDiagram.from_obj"]], "from_pointcloud() (compas_cem.diagrams.topologydiagram class method)": [[208, "compas_cem.diagrams.TopologyDiagram.from_pointcloud"]], "get_any_edge() (compas_cem.diagrams.topologydiagram method)": [[209, "compas_cem.diagrams.TopologyDiagram.get_any_edge"]], "get_any_edges() (compas_cem.diagrams.topologydiagram method)": [[210, "compas_cem.diagrams.TopologyDiagram.get_any_edges"]], "get_any_node() (compas_cem.diagrams.topologydiagram method)": [[211, "compas_cem.diagrams.TopologyDiagram.get_any_node"]], "get_any_nodes() (compas_cem.diagrams.topologydiagram method)": [[212, "compas_cem.diagrams.TopologyDiagram.get_any_nodes"]], "gkey() (compas_cem.diagrams.topologydiagram method)": [[213, "compas_cem.diagrams.TopologyDiagram.gkey"]], "gkey_key() (compas_cem.diagrams.topologydiagram method)": [[214, "compas_cem.diagrams.TopologyDiagram.gkey_key"]], "has_edge() (compas_cem.diagrams.topologydiagram method)": [[215, "compas_cem.diagrams.TopologyDiagram.has_edge"]], "has_node() (compas_cem.diagrams.topologydiagram method)": [[216, "compas_cem.diagrams.TopologyDiagram.has_node"]], "has_trails() (compas_cem.diagrams.topologydiagram method)": [[217, "compas_cem.diagrams.TopologyDiagram.has_trails"]], "index_key() (compas_cem.diagrams.topologydiagram method)": [[218, "compas_cem.diagrams.TopologyDiagram.index_key"]], "index_uv() (compas_cem.diagrams.topologydiagram method)": [[219, "compas_cem.diagrams.TopologyDiagram.index_uv"]], "indirect_deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[220, "compas_cem.diagrams.TopologyDiagram.indirect_deviation_edges"]], "is_auxiliary_trail_edge() (compas_cem.diagrams.topologydiagram method)": [[221, "compas_cem.diagrams.TopologyDiagram.is_auxiliary_trail_edge"]], "is_connected() (compas_cem.diagrams.topologydiagram method)": [[222, "compas_cem.diagrams.TopologyDiagram.is_connected"]], "is_crossed() (compas_cem.diagrams.topologydiagram method)": [[223, "compas_cem.diagrams.TopologyDiagram.is_crossed"]], "is_deviation_edge() (compas_cem.diagrams.topologydiagram method)": [[224, "compas_cem.diagrams.TopologyDiagram.is_deviation_edge"]], "is_direct_deviation_edge() (compas_cem.diagrams.topologydiagram method)": [[225, "compas_cem.diagrams.TopologyDiagram.is_direct_deviation_edge"]], "is_edge_supported() (compas_cem.diagrams.topologydiagram method)": [[226, "compas_cem.diagrams.TopologyDiagram.is_edge_supported"]], "is_indirect_deviation_edge() (compas_cem.diagrams.topologydiagram method)": [[227, "compas_cem.diagrams.TopologyDiagram.is_indirect_deviation_edge"]], "is_leaf() (compas_cem.diagrams.topologydiagram method)": [[228, "compas_cem.diagrams.TopologyDiagram.is_leaf"]], "is_node_connected() (compas_cem.diagrams.topologydiagram method)": [[229, "compas_cem.diagrams.TopologyDiagram.is_node_connected"]], "is_node_loaded() (compas_cem.diagrams.topologydiagram method)": [[230, "compas_cem.diagrams.TopologyDiagram.is_node_loaded"]], "is_node_origin() (compas_cem.diagrams.topologydiagram method)": [[231, "compas_cem.diagrams.TopologyDiagram.is_node_origin"]], "is_node_support() (compas_cem.diagrams.topologydiagram method)": [[232, "compas_cem.diagrams.TopologyDiagram.is_node_support"]], "is_planar() (compas_cem.diagrams.topologydiagram method)": [[233, "compas_cem.diagrams.TopologyDiagram.is_planar"]], "is_planar_embedding() (compas_cem.diagrams.topologydiagram method)": [[234, "compas_cem.diagrams.TopologyDiagram.is_planar_embedding"]], "is_trail_edge() (compas_cem.diagrams.topologydiagram method)": [[235, "compas_cem.diagrams.TopologyDiagram.is_trail_edge"]], "is_xy() (compas_cem.diagrams.topologydiagram method)": [[236, "compas_cem.diagrams.TopologyDiagram.is_xy"]], "key_gkey() (compas_cem.diagrams.topologydiagram method)": [[237, "compas_cem.diagrams.TopologyDiagram.key_gkey"]], "key_index() (compas_cem.diagrams.topologydiagram method)": [[238, "compas_cem.diagrams.TopologyDiagram.key_index"]], "laplacian_matrix() (compas_cem.diagrams.topologydiagram method)": [[239, "compas_cem.diagrams.TopologyDiagram.laplacian_matrix"]], "leaves() (compas_cem.diagrams.topologydiagram method)": [[240, "compas_cem.diagrams.TopologyDiagram.leaves"]], "loaded_nodes() (compas_cem.diagrams.topologydiagram method)": [[241, "compas_cem.diagrams.TopologyDiagram.loaded_nodes"]], "neighborhood() (compas_cem.diagrams.topologydiagram method)": [[242, "compas_cem.diagrams.TopologyDiagram.neighborhood"]], "neighbors() (compas_cem.diagrams.topologydiagram method)": [[243, "compas_cem.diagrams.TopologyDiagram.neighbors"]], "neighbors_in() (compas_cem.diagrams.topologydiagram method)": [[244, "compas_cem.diagrams.TopologyDiagram.neighbors_in"]], "neighbors_out() (compas_cem.diagrams.topologydiagram method)": [[245, "compas_cem.diagrams.TopologyDiagram.neighbors_out"]], "network_adjacency_matrix() (compas_cem.diagrams.topologydiagram method)": [[246, "compas_cem.diagrams.TopologyDiagram.network_adjacency_matrix"]], "network_connectivity_matrix() (compas_cem.diagrams.topologydiagram method)": [[247, "compas_cem.diagrams.TopologyDiagram.network_connectivity_matrix"]], "network_degree_matrix() (compas_cem.diagrams.topologydiagram method)": [[248, "compas_cem.diagrams.TopologyDiagram.network_degree_matrix"]], "network_embed_in_plane() (compas_cem.diagrams.topologydiagram method)": [[249, "compas_cem.diagrams.TopologyDiagram.network_embed_in_plane"]], "network_is_planar() (compas_cem.diagrams.topologydiagram method)": [[250, "compas_cem.diagrams.TopologyDiagram.network_is_planar"]], "network_is_planar_embedding() (compas_cem.diagrams.topologydiagram method)": [[251, "compas_cem.diagrams.TopologyDiagram.network_is_planar_embedding"]], "network_laplacian_matrix() (compas_cem.diagrams.topologydiagram method)": [[252, "compas_cem.diagrams.TopologyDiagram.network_laplacian_matrix"]], "node_attribute() (compas_cem.diagrams.topologydiagram method)": [[253, "compas_cem.diagrams.TopologyDiagram.node_attribute"]], "node_attributes() (compas_cem.diagrams.topologydiagram method)": [[254, "compas_cem.diagrams.TopologyDiagram.node_attributes"]], "node_coordinates() (compas_cem.diagrams.topologydiagram method)": [[255, "compas_cem.diagrams.TopologyDiagram.node_coordinates"]], "node_exists() (compas_cem.diagrams.topologydiagram method)": [[256, "compas_cem.diagrams.TopologyDiagram.node_exists"]], "node_gkey() (compas_cem.diagrams.topologydiagram method)": [[257, "compas_cem.diagrams.TopologyDiagram.node_gkey"]], "node_key() (compas_cem.diagrams.topologydiagram method)": [[258, "compas_cem.diagrams.TopologyDiagram.node_key"]], "node_laplacian() (compas_cem.diagrams.topologydiagram method)": [[259, "compas_cem.diagrams.TopologyDiagram.node_laplacian"]], "node_load() (compas_cem.diagrams.topologydiagram method)": [[260, "compas_cem.diagrams.TopologyDiagram.node_load"]], "node_neighborhood_centroid() (compas_cem.diagrams.topologydiagram method)": [[261, "compas_cem.diagrams.TopologyDiagram.node_neighborhood_centroid"]], "node_sample() (compas_cem.diagrams.topologydiagram method)": [[262, "compas_cem.diagrams.TopologyDiagram.node_sample"]], "node_sequence() (compas_cem.diagrams.topologydiagram method)": [[263, "compas_cem.diagrams.TopologyDiagram.node_sequence"]], "node_xyz() (compas_cem.diagrams.topologydiagram method)": [[264, "compas_cem.diagrams.TopologyDiagram.node_xyz"]], "nodes() (compas_cem.diagrams.topologydiagram method)": [[265, "compas_cem.diagrams.TopologyDiagram.nodes"]], "nodes_attribute() (compas_cem.diagrams.topologydiagram method)": [[266, "compas_cem.diagrams.TopologyDiagram.nodes_attribute"]], "nodes_attributes() (compas_cem.diagrams.topologydiagram method)": [[267, "compas_cem.diagrams.TopologyDiagram.nodes_attributes"]], "nodes_where() (compas_cem.diagrams.topologydiagram method)": [[268, "compas_cem.diagrams.TopologyDiagram.nodes_where"]], "nodes_where_predicate() (compas_cem.diagrams.topologydiagram method)": [[269, "compas_cem.diagrams.TopologyDiagram.nodes_where_predicate"]], "number_of_auxiliary_trails() (compas_cem.diagrams.topologydiagram method)": [[270, "compas_cem.diagrams.TopologyDiagram.number_of_auxiliary_trails"]], "number_of_deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[271, "compas_cem.diagrams.TopologyDiagram.number_of_deviation_edges"]], "number_of_direct_deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[272, "compas_cem.diagrams.TopologyDiagram.number_of_direct_deviation_edges"]], "number_of_edges() (compas_cem.diagrams.topologydiagram method)": [[273, "compas_cem.diagrams.TopologyDiagram.number_of_edges"]], "number_of_indirect_deviation_edges() (compas_cem.diagrams.topologydiagram method)": [[274, "compas_cem.diagrams.TopologyDiagram.number_of_indirect_deviation_edges"]], "number_of_loaded_nodes() (compas_cem.diagrams.topologydiagram method)": [[275, "compas_cem.diagrams.TopologyDiagram.number_of_loaded_nodes"]], "number_of_nodes() (compas_cem.diagrams.topologydiagram method)": [[276, "compas_cem.diagrams.TopologyDiagram.number_of_nodes"]], "number_of_sequences() (compas_cem.diagrams.topologydiagram method)": [[277, "compas_cem.diagrams.TopologyDiagram.number_of_sequences"]], "number_of_support_nodes() (compas_cem.diagrams.topologydiagram method)": [[278, "compas_cem.diagrams.TopologyDiagram.number_of_support_nodes"]], "number_of_trail_edges() (compas_cem.diagrams.topologydiagram method)": [[279, "compas_cem.diagrams.TopologyDiagram.number_of_trail_edges"]], "number_of_trails() (compas_cem.diagrams.topologydiagram method)": [[280, "compas_cem.diagrams.TopologyDiagram.number_of_trails"]], "origin_nodes() (compas_cem.diagrams.topologydiagram method)": [[281, "compas_cem.diagrams.TopologyDiagram.origin_nodes"]], "reaction_force() (compas_cem.diagrams.topologydiagram method)": [[282, "compas_cem.diagrams.TopologyDiagram.reaction_force"]], "sequence_last() (compas_cem.diagrams.topologydiagram method)": [[283, "compas_cem.diagrams.TopologyDiagram.sequence_last"]], "sequences() (compas_cem.diagrams.topologydiagram method)": [[284, "compas_cem.diagrams.TopologyDiagram.sequences"]], "sha256() (compas_cem.diagrams.topologydiagram method)": [[285, "compas_cem.diagrams.TopologyDiagram.sha256"]], "shift_trail() (compas_cem.diagrams.topologydiagram method)": [[286, "compas_cem.diagrams.TopologyDiagram.shift_trail"]], "shortest_path() (compas_cem.diagrams.topologydiagram method)": [[287, "compas_cem.diagrams.TopologyDiagram.shortest_path"]], "smooth() (compas_cem.diagrams.topologydiagram method)": [[288, "compas_cem.diagrams.TopologyDiagram.smooth"]], "split_edge() (compas_cem.diagrams.topologydiagram method)": [[289, "compas_cem.diagrams.TopologyDiagram.split_edge"]], "summary() (compas_cem.diagrams.topologydiagram method)": [[290, "compas_cem.diagrams.TopologyDiagram.summary"]], "support_nodes() (compas_cem.diagrams.topologydiagram method)": [[291, "compas_cem.diagrams.TopologyDiagram.support_nodes"]], "to_data() (compas_cem.diagrams.topologydiagram method)": [[292, "compas_cem.diagrams.TopologyDiagram.to_data"]], "to_json() (compas_cem.diagrams.topologydiagram method)": [[293, "compas_cem.diagrams.TopologyDiagram.to_json"]], "to_jsonstring() (compas_cem.diagrams.topologydiagram method)": [[294, "compas_cem.diagrams.TopologyDiagram.to_jsonstring"]], "to_lines() (compas_cem.diagrams.topologydiagram method)": [[295, "compas_cem.diagrams.TopologyDiagram.to_lines"]], "to_networkx() (compas_cem.diagrams.topologydiagram method)": [[296, "compas_cem.diagrams.TopologyDiagram.to_networkx"]], "to_nodes_and_edges() (compas_cem.diagrams.topologydiagram method)": [[297, "compas_cem.diagrams.TopologyDiagram.to_nodes_and_edges"]], "to_obj() (compas_cem.diagrams.topologydiagram method)": [[298, "compas_cem.diagrams.TopologyDiagram.to_obj"]], "to_points() (compas_cem.diagrams.topologydiagram method)": [[299, "compas_cem.diagrams.TopologyDiagram.to_points"]], "trail() (compas_cem.diagrams.topologydiagram method)": [[300, "compas_cem.diagrams.TopologyDiagram.trail"]], "trail_edges() (compas_cem.diagrams.topologydiagram method)": [[301, "compas_cem.diagrams.TopologyDiagram.trail_edges"]], "trail_sequences() (compas_cem.diagrams.topologydiagram method)": [[302, "compas_cem.diagrams.TopologyDiagram.trail_sequences"]], "trails() (compas_cem.diagrams.topologydiagram method)": [[303, "compas_cem.diagrams.TopologyDiagram.trails"]], "trails_sequences() (compas_cem.diagrams.topologydiagram method)": [[304, "compas_cem.diagrams.TopologyDiagram.trails_sequences"]], "transform() (compas_cem.diagrams.topologydiagram method)": [[305, "compas_cem.diagrams.TopologyDiagram.transform"]], "transformed() (compas_cem.diagrams.topologydiagram method)": [[306, "compas_cem.diagrams.TopologyDiagram.transformed"]], "unset_edge_attribute() (compas_cem.diagrams.topologydiagram method)": [[307, "compas_cem.diagrams.TopologyDiagram.unset_edge_attribute"]], "unset_node_attribute() (compas_cem.diagrams.topologydiagram method)": [[308, "compas_cem.diagrams.TopologyDiagram.unset_node_attribute"]], "update_dea() (compas_cem.diagrams.topologydiagram method)": [[309, "compas_cem.diagrams.TopologyDiagram.update_dea"]], "update_default_edge_attributes() (compas_cem.diagrams.topologydiagram method)": [[310, "compas_cem.diagrams.TopologyDiagram.update_default_edge_attributes"]], "update_default_node_attributes() (compas_cem.diagrams.topologydiagram method)": [[311, "compas_cem.diagrams.TopologyDiagram.update_default_node_attributes"]], "update_dna() (compas_cem.diagrams.topologydiagram method)": [[312, "compas_cem.diagrams.TopologyDiagram.update_dna"]], "update_node_xyz() (compas_cem.diagrams.topologydiagram method)": [[313, "compas_cem.diagrams.TopologyDiagram.update_node_xyz"]], "uv_index() (compas_cem.diagrams.topologydiagram method)": [[314, "compas_cem.diagrams.TopologyDiagram.uv_index"]], "validate_data() (compas_cem.diagrams.topologydiagram method)": [[315, "compas_cem.diagrams.TopologyDiagram.validate_data"]], "validate_json() (compas_cem.diagrams.topologydiagram method)": [[316, "compas_cem.diagrams.TopologyDiagram.validate_json"]], "deviationedge (class in compas_cem.elements)": [[317, "compas_cem.elements.DeviationEdge"]], "tostring() (compas_cem.elements.deviationedge method)": [[318, "compas_cem.elements.DeviationEdge.ToString"]], "copy() (compas_cem.elements.deviationedge method)": [[319, "compas_cem.elements.DeviationEdge.copy"]], "from_data() (compas_cem.elements.deviationedge class method)": [[320, "compas_cem.elements.DeviationEdge.from_data"]], "from_json() (compas_cem.elements.deviationedge class method)": [[321, "compas_cem.elements.DeviationEdge.from_json"]], "from_jsonstring() (compas_cem.elements.deviationedge class method)": [[322, "compas_cem.elements.DeviationEdge.from_jsonstring"]], "from_line() (compas_cem.elements.deviationedge class method)": [[323, "compas_cem.elements.DeviationEdge.from_line"]], "sha256() (compas_cem.elements.deviationedge method)": [[324, "compas_cem.elements.DeviationEdge.sha256"]], "to_data() (compas_cem.elements.deviationedge method)": [[325, "compas_cem.elements.DeviationEdge.to_data"]], "to_json() (compas_cem.elements.deviationedge method)": [[326, "compas_cem.elements.DeviationEdge.to_json"]], "to_jsonstring() (compas_cem.elements.deviationedge method)": [[327, "compas_cem.elements.DeviationEdge.to_jsonstring"]], "validate_data() (compas_cem.elements.deviationedge method)": [[328, "compas_cem.elements.DeviationEdge.validate_data"]], "validate_json() (compas_cem.elements.deviationedge method)": [[329, "compas_cem.elements.DeviationEdge.validate_json"]], "node (class in compas_cem.elements)": [[330, "compas_cem.elements.Node"]], "tostring() (compas_cem.elements.node method)": [[331, "compas_cem.elements.Node.ToString"]], "copy() (compas_cem.elements.node method)": [[332, "compas_cem.elements.Node.copy"]], "from_data() (compas_cem.elements.node class method)": [[333, "compas_cem.elements.Node.from_data"]], "from_json() (compas_cem.elements.node class method)": [[334, "compas_cem.elements.Node.from_json"]], "from_jsonstring() (compas_cem.elements.node class method)": [[335, "compas_cem.elements.Node.from_jsonstring"]], "from_point() (compas_cem.elements.node class method)": [[336, "compas_cem.elements.Node.from_point"]], "sha256() (compas_cem.elements.node method)": [[337, "compas_cem.elements.Node.sha256"]], "to_data() (compas_cem.elements.node method)": [[338, "compas_cem.elements.Node.to_data"]], "to_json() (compas_cem.elements.node method)": [[339, "compas_cem.elements.Node.to_json"]], "to_jsonstring() (compas_cem.elements.node method)": [[340, "compas_cem.elements.Node.to_jsonstring"]], "validate_data() (compas_cem.elements.node method)": [[341, "compas_cem.elements.Node.validate_data"]], "validate_json() (compas_cem.elements.node method)": [[342, "compas_cem.elements.Node.validate_json"]], "trailedge (class in compas_cem.elements)": [[343, "compas_cem.elements.TrailEdge"]], "tostring() (compas_cem.elements.trailedge method)": [[344, "compas_cem.elements.TrailEdge.ToString"]], "copy() (compas_cem.elements.trailedge method)": [[345, "compas_cem.elements.TrailEdge.copy"]], "from_data() (compas_cem.elements.trailedge class method)": [[346, "compas_cem.elements.TrailEdge.from_data"]], "from_json() (compas_cem.elements.trailedge class method)": [[347, "compas_cem.elements.TrailEdge.from_json"]], "from_jsonstring() (compas_cem.elements.trailedge class method)": [[348, "compas_cem.elements.TrailEdge.from_jsonstring"]], "from_line() (compas_cem.elements.trailedge class method)": [[349, "compas_cem.elements.TrailEdge.from_line"]], "sha256() (compas_cem.elements.trailedge method)": [[350, "compas_cem.elements.TrailEdge.sha256"]], "to_data() (compas_cem.elements.trailedge method)": [[351, "compas_cem.elements.TrailEdge.to_data"]], "to_json() (compas_cem.elements.trailedge method)": [[352, "compas_cem.elements.TrailEdge.to_json"]], "to_jsonstring() (compas_cem.elements.trailedge method)": [[353, "compas_cem.elements.TrailEdge.to_jsonstring"]], "validate_data() (compas_cem.elements.trailedge method)": [[354, "compas_cem.elements.TrailEdge.validate_data"]], "validate_json() (compas_cem.elements.trailedge method)": [[355, "compas_cem.elements.TrailEdge.validate_json"]], "static_equilibrium() (in module compas_cem.equilibrium)": [[356, "compas_cem.equilibrium.static_equilibrium"]], "static_equilibrium_numpy() (in module compas_cem.equilibrium)": [[357, "compas_cem.equilibrium.static_equilibrium_numpy"]], "nodeload (class in compas_cem.loads)": [[358, "compas_cem.loads.NodeLoad"]], "tostring() (compas_cem.loads.nodeload method)": [[359, "compas_cem.loads.NodeLoad.ToString"]], "copy() (compas_cem.loads.nodeload method)": [[360, "compas_cem.loads.NodeLoad.copy"]], "from_data() (compas_cem.loads.nodeload class method)": [[361, "compas_cem.loads.NodeLoad.from_data"]], "from_json() (compas_cem.loads.nodeload class method)": [[362, "compas_cem.loads.NodeLoad.from_json"]], "from_jsonstring() (compas_cem.loads.nodeload class method)": [[363, "compas_cem.loads.NodeLoad.from_jsonstring"]], "from_point_and_vector() (compas_cem.loads.nodeload class method)": [[364, "compas_cem.loads.NodeLoad.from_point_and_vector"]], "sha256() (compas_cem.loads.nodeload method)": [[365, "compas_cem.loads.NodeLoad.sha256"]], "to_data() (compas_cem.loads.nodeload method)": [[366, "compas_cem.loads.NodeLoad.to_data"]], "to_json() (compas_cem.loads.nodeload method)": [[367, "compas_cem.loads.NodeLoad.to_json"]], "to_jsonstring() (compas_cem.loads.nodeload method)": [[368, "compas_cem.loads.NodeLoad.to_jsonstring"]], "validate_data() (compas_cem.loads.nodeload method)": [[369, "compas_cem.loads.NodeLoad.validate_data"]], "validate_json() (compas_cem.loads.nodeload method)": [[370, "compas_cem.loads.NodeLoad.validate_json"]], "deviationedgelengthconstraint (class in compas_cem.optimization)": [[371, "compas_cem.optimization.DeviationEdgeLengthConstraint"]], "tostring() (compas_cem.optimization.deviationedgelengthconstraint method)": [[372, "compas_cem.optimization.DeviationEdgeLengthConstraint.ToString"]], "copy() (compas_cem.optimization.deviationedgelengthconstraint method)": [[373, "compas_cem.optimization.DeviationEdgeLengthConstraint.copy"]], "from_data() (compas_cem.optimization.deviationedgelengthconstraint class method)": [[374, "compas_cem.optimization.DeviationEdgeLengthConstraint.from_data"]], "from_json() (compas_cem.optimization.deviationedgelengthconstraint class method)": [[375, "compas_cem.optimization.DeviationEdgeLengthConstraint.from_json"]], "from_jsonstring() (compas_cem.optimization.deviationedgelengthconstraint class method)": [[376, "compas_cem.optimization.DeviationEdgeLengthConstraint.from_jsonstring"]], "key() (compas_cem.optimization.deviationedgelengthconstraint method)": [[377, "compas_cem.optimization.DeviationEdgeLengthConstraint.key"]], "penalty() (compas_cem.optimization.deviationedgelengthconstraint method)": [[378, "compas_cem.optimization.DeviationEdgeLengthConstraint.penalty"]], "reference() (compas_cem.optimization.deviationedgelengthconstraint method)": [[379, "compas_cem.optimization.DeviationEdgeLengthConstraint.reference"]], "sha256() (compas_cem.optimization.deviationedgelengthconstraint method)": [[380, "compas_cem.optimization.DeviationEdgeLengthConstraint.sha256"]], "target() (compas_cem.optimization.deviationedgelengthconstraint method)": [[381, "compas_cem.optimization.DeviationEdgeLengthConstraint.target"]], "to_data() (compas_cem.optimization.deviationedgelengthconstraint method)": [[382, "compas_cem.optimization.DeviationEdgeLengthConstraint.to_data"]], "to_json() (compas_cem.optimization.deviationedgelengthconstraint method)": [[383, "compas_cem.optimization.DeviationEdgeLengthConstraint.to_json"]], "to_jsonstring() (compas_cem.optimization.deviationedgelengthconstraint method)": [[384, "compas_cem.optimization.DeviationEdgeLengthConstraint.to_jsonstring"]], "validate_data() (compas_cem.optimization.deviationedgelengthconstraint method)": [[385, "compas_cem.optimization.DeviationEdgeLengthConstraint.validate_data"]], "validate_json() (compas_cem.optimization.deviationedgelengthconstraint method)": [[386, "compas_cem.optimization.DeviationEdgeLengthConstraint.validate_json"]], "deviationedgeparameter (class in compas_cem.optimization)": [[387, "compas_cem.optimization.DeviationEdgeParameter"]], "tostring() (compas_cem.optimization.deviationedgeparameter method)": [[388, "compas_cem.optimization.DeviationEdgeParameter.ToString"]], "attr_name() (compas_cem.optimization.deviationedgeparameter method)": [[389, "compas_cem.optimization.DeviationEdgeParameter.attr_name"]], "bound_low() (compas_cem.optimization.deviationedgeparameter method)": [[390, "compas_cem.optimization.DeviationEdgeParameter.bound_low"]], "bound_up() (compas_cem.optimization.deviationedgeparameter method)": [[391, "compas_cem.optimization.DeviationEdgeParameter.bound_up"]], "copy() (compas_cem.optimization.deviationedgeparameter method)": [[392, "compas_cem.optimization.DeviationEdgeParameter.copy"]], "from_data() (compas_cem.optimization.deviationedgeparameter class method)": [[393, "compas_cem.optimization.DeviationEdgeParameter.from_data"]], "from_json() (compas_cem.optimization.deviationedgeparameter class method)": [[394, "compas_cem.optimization.DeviationEdgeParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.deviationedgeparameter class method)": [[395, "compas_cem.optimization.DeviationEdgeParameter.from_jsonstring"]], "key() (compas_cem.optimization.deviationedgeparameter method)": [[396, "compas_cem.optimization.DeviationEdgeParameter.key"]], "sha256() (compas_cem.optimization.deviationedgeparameter method)": [[397, "compas_cem.optimization.DeviationEdgeParameter.sha256"]], "start_value() (compas_cem.optimization.deviationedgeparameter method)": [[398, "compas_cem.optimization.DeviationEdgeParameter.start_value"]], "to_data() (compas_cem.optimization.deviationedgeparameter method)": [[399, "compas_cem.optimization.DeviationEdgeParameter.to_data"]], "to_json() (compas_cem.optimization.deviationedgeparameter method)": [[400, "compas_cem.optimization.DeviationEdgeParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.deviationedgeparameter method)": [[401, "compas_cem.optimization.DeviationEdgeParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.deviationedgeparameter method)": [[402, "compas_cem.optimization.DeviationEdgeParameter.validate_data"]], "validate_json() (compas_cem.optimization.deviationedgeparameter method)": [[403, "compas_cem.optimization.DeviationEdgeParameter.validate_json"]], "lineconstraint (class in compas_cem.optimization)": [[404, "compas_cem.optimization.LineConstraint"]], "tostring() (compas_cem.optimization.lineconstraint method)": [[405, "compas_cem.optimization.LineConstraint.ToString"]], "copy() (compas_cem.optimization.lineconstraint method)": [[406, "compas_cem.optimization.LineConstraint.copy"]], "from_data() (compas_cem.optimization.lineconstraint class method)": [[407, "compas_cem.optimization.LineConstraint.from_data"]], "from_json() (compas_cem.optimization.lineconstraint class method)": [[408, "compas_cem.optimization.LineConstraint.from_json"]], "from_jsonstring() (compas_cem.optimization.lineconstraint class method)": [[409, "compas_cem.optimization.LineConstraint.from_jsonstring"]], "key() (compas_cem.optimization.lineconstraint method)": [[410, "compas_cem.optimization.LineConstraint.key"]], "penalty() (compas_cem.optimization.lineconstraint method)": [[411, "compas_cem.optimization.LineConstraint.penalty"]], "reference() (compas_cem.optimization.lineconstraint method)": [[412, "compas_cem.optimization.LineConstraint.reference"]], "sha256() (compas_cem.optimization.lineconstraint method)": [[413, "compas_cem.optimization.LineConstraint.sha256"]], "target() (compas_cem.optimization.lineconstraint method)": [[414, "compas_cem.optimization.LineConstraint.target"]], "to_data() (compas_cem.optimization.lineconstraint method)": [[415, "compas_cem.optimization.LineConstraint.to_data"]], "to_json() (compas_cem.optimization.lineconstraint method)": [[416, "compas_cem.optimization.LineConstraint.to_json"]], "to_jsonstring() (compas_cem.optimization.lineconstraint method)": [[417, "compas_cem.optimization.LineConstraint.to_jsonstring"]], "validate_data() (compas_cem.optimization.lineconstraint method)": [[418, "compas_cem.optimization.LineConstraint.validate_data"]], "validate_json() (compas_cem.optimization.lineconstraint method)": [[419, "compas_cem.optimization.LineConstraint.validate_json"]], "nodeloadxparameter (class in compas_cem.optimization)": [[420, "compas_cem.optimization.NodeLoadXParameter"]], "tostring() (compas_cem.optimization.nodeloadxparameter method)": [[421, "compas_cem.optimization.NodeLoadXParameter.ToString"]], "attr_name() (compas_cem.optimization.nodeloadxparameter method)": [[422, "compas_cem.optimization.NodeLoadXParameter.attr_name"]], "bound_low() (compas_cem.optimization.nodeloadxparameter method)": [[423, "compas_cem.optimization.NodeLoadXParameter.bound_low"]], "bound_up() (compas_cem.optimization.nodeloadxparameter method)": [[424, "compas_cem.optimization.NodeLoadXParameter.bound_up"]], "copy() (compas_cem.optimization.nodeloadxparameter method)": [[425, "compas_cem.optimization.NodeLoadXParameter.copy"]], "from_data() (compas_cem.optimization.nodeloadxparameter class method)": [[426, "compas_cem.optimization.NodeLoadXParameter.from_data"]], "from_json() (compas_cem.optimization.nodeloadxparameter class method)": [[427, "compas_cem.optimization.NodeLoadXParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.nodeloadxparameter class method)": [[428, "compas_cem.optimization.NodeLoadXParameter.from_jsonstring"]], "key() (compas_cem.optimization.nodeloadxparameter method)": [[429, "compas_cem.optimization.NodeLoadXParameter.key"]], "sha256() (compas_cem.optimization.nodeloadxparameter method)": [[430, "compas_cem.optimization.NodeLoadXParameter.sha256"]], "start_value() (compas_cem.optimization.nodeloadxparameter method)": [[431, "compas_cem.optimization.NodeLoadXParameter.start_value"]], "to_data() (compas_cem.optimization.nodeloadxparameter method)": [[432, "compas_cem.optimization.NodeLoadXParameter.to_data"]], "to_json() (compas_cem.optimization.nodeloadxparameter method)": [[433, "compas_cem.optimization.NodeLoadXParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.nodeloadxparameter method)": [[434, "compas_cem.optimization.NodeLoadXParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.nodeloadxparameter method)": [[435, "compas_cem.optimization.NodeLoadXParameter.validate_data"]], "validate_json() (compas_cem.optimization.nodeloadxparameter method)": [[436, "compas_cem.optimization.NodeLoadXParameter.validate_json"]], "nodeloadyparameter (class in compas_cem.optimization)": [[437, "compas_cem.optimization.NodeLoadYParameter"]], "tostring() (compas_cem.optimization.nodeloadyparameter method)": [[438, "compas_cem.optimization.NodeLoadYParameter.ToString"]], "attr_name() (compas_cem.optimization.nodeloadyparameter method)": [[439, "compas_cem.optimization.NodeLoadYParameter.attr_name"]], "bound_low() (compas_cem.optimization.nodeloadyparameter method)": [[440, "compas_cem.optimization.NodeLoadYParameter.bound_low"]], "bound_up() (compas_cem.optimization.nodeloadyparameter method)": [[441, "compas_cem.optimization.NodeLoadYParameter.bound_up"]], "copy() (compas_cem.optimization.nodeloadyparameter method)": [[442, "compas_cem.optimization.NodeLoadYParameter.copy"]], "from_data() (compas_cem.optimization.nodeloadyparameter class method)": [[443, "compas_cem.optimization.NodeLoadYParameter.from_data"]], "from_json() (compas_cem.optimization.nodeloadyparameter class method)": [[444, "compas_cem.optimization.NodeLoadYParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.nodeloadyparameter class method)": [[445, "compas_cem.optimization.NodeLoadYParameter.from_jsonstring"]], "key() (compas_cem.optimization.nodeloadyparameter method)": [[446, "compas_cem.optimization.NodeLoadYParameter.key"]], "sha256() (compas_cem.optimization.nodeloadyparameter method)": [[447, "compas_cem.optimization.NodeLoadYParameter.sha256"]], "start_value() (compas_cem.optimization.nodeloadyparameter method)": [[448, "compas_cem.optimization.NodeLoadYParameter.start_value"]], "to_data() (compas_cem.optimization.nodeloadyparameter method)": [[449, "compas_cem.optimization.NodeLoadYParameter.to_data"]], "to_json() (compas_cem.optimization.nodeloadyparameter method)": [[450, "compas_cem.optimization.NodeLoadYParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.nodeloadyparameter method)": [[451, "compas_cem.optimization.NodeLoadYParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.nodeloadyparameter method)": [[452, "compas_cem.optimization.NodeLoadYParameter.validate_data"]], "validate_json() (compas_cem.optimization.nodeloadyparameter method)": [[453, "compas_cem.optimization.NodeLoadYParameter.validate_json"]], "nodeloadzparameter (class in compas_cem.optimization)": [[454, "compas_cem.optimization.NodeLoadZParameter"]], "tostring() (compas_cem.optimization.nodeloadzparameter method)": [[455, "compas_cem.optimization.NodeLoadZParameter.ToString"]], "attr_name() (compas_cem.optimization.nodeloadzparameter method)": [[456, "compas_cem.optimization.NodeLoadZParameter.attr_name"]], "bound_low() (compas_cem.optimization.nodeloadzparameter method)": [[457, "compas_cem.optimization.NodeLoadZParameter.bound_low"]], "bound_up() (compas_cem.optimization.nodeloadzparameter method)": [[458, "compas_cem.optimization.NodeLoadZParameter.bound_up"]], "copy() (compas_cem.optimization.nodeloadzparameter method)": [[459, "compas_cem.optimization.NodeLoadZParameter.copy"]], "from_data() (compas_cem.optimization.nodeloadzparameter class method)": [[460, "compas_cem.optimization.NodeLoadZParameter.from_data"]], "from_json() (compas_cem.optimization.nodeloadzparameter class method)": [[461, "compas_cem.optimization.NodeLoadZParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.nodeloadzparameter class method)": [[462, "compas_cem.optimization.NodeLoadZParameter.from_jsonstring"]], "key() (compas_cem.optimization.nodeloadzparameter method)": [[463, "compas_cem.optimization.NodeLoadZParameter.key"]], "sha256() (compas_cem.optimization.nodeloadzparameter method)": [[464, "compas_cem.optimization.NodeLoadZParameter.sha256"]], "start_value() (compas_cem.optimization.nodeloadzparameter method)": [[465, "compas_cem.optimization.NodeLoadZParameter.start_value"]], "to_data() (compas_cem.optimization.nodeloadzparameter method)": [[466, "compas_cem.optimization.NodeLoadZParameter.to_data"]], "to_json() (compas_cem.optimization.nodeloadzparameter method)": [[467, "compas_cem.optimization.NodeLoadZParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.nodeloadzparameter method)": [[468, "compas_cem.optimization.NodeLoadZParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.nodeloadzparameter method)": [[469, "compas_cem.optimization.NodeLoadZParameter.validate_data"]], "validate_json() (compas_cem.optimization.nodeloadzparameter method)": [[470, "compas_cem.optimization.NodeLoadZParameter.validate_json"]], "optimizer (class in compas_cem.optimization)": [[471, "compas_cem.optimization.Optimizer"]], "tostring() (compas_cem.optimization.optimizer method)": [[472, "compas_cem.optimization.Optimizer.ToString"]], "add_constraint() (compas_cem.optimization.optimizer method)": [[473, "compas_cem.optimization.Optimizer.add_constraint"]], "add_parameter() (compas_cem.optimization.optimizer method)": [[474, "compas_cem.optimization.Optimizer.add_parameter"]], "check_optimization_sanity() (compas_cem.optimization.optimizer method)": [[475, "compas_cem.optimization.Optimizer.check_optimization_sanity"]], "copy() (compas_cem.optimization.optimizer method)": [[476, "compas_cem.optimization.Optimizer.copy"]], "from_data() (compas_cem.optimization.optimizer class method)": [[477, "compas_cem.optimization.Optimizer.from_data"]], "from_json() (compas_cem.optimization.optimizer class method)": [[478, "compas_cem.optimization.Optimizer.from_json"]], "from_jsonstring() (compas_cem.optimization.optimizer class method)": [[479, "compas_cem.optimization.Optimizer.from_jsonstring"]], "gradient_func() (compas_cem.optimization.optimizer method)": [[480, "compas_cem.optimization.Optimizer.gradient_func"]], "number_of_constraints() (compas_cem.optimization.optimizer method)": [[481, "compas_cem.optimization.Optimizer.number_of_constraints"]], "number_of_parameters() (compas_cem.optimization.optimizer method)": [[482, "compas_cem.optimization.Optimizer.number_of_parameters"]], "objective_func() (compas_cem.optimization.optimizer method)": [[483, "compas_cem.optimization.Optimizer.objective_func"]], "optimization_bounds() (compas_cem.optimization.optimizer method)": [[484, "compas_cem.optimization.Optimizer.optimization_bounds"]], "optimization_parameters() (compas_cem.optimization.optimizer method)": [[485, "compas_cem.optimization.Optimizer.optimization_parameters"]], "remove_constraint() (compas_cem.optimization.optimizer method)": [[486, "compas_cem.optimization.Optimizer.remove_constraint"]], "remove_parameter() (compas_cem.optimization.optimizer method)": [[487, "compas_cem.optimization.Optimizer.remove_parameter"]], "sha256() (compas_cem.optimization.optimizer method)": [[488, "compas_cem.optimization.Optimizer.sha256"]], "solve() (compas_cem.optimization.optimizer method)": [[489, "compas_cem.optimization.Optimizer.solve"]], "to_data() (compas_cem.optimization.optimizer method)": [[490, "compas_cem.optimization.Optimizer.to_data"]], "to_json() (compas_cem.optimization.optimizer method)": [[491, "compas_cem.optimization.Optimizer.to_json"]], "to_jsonstring() (compas_cem.optimization.optimizer method)": [[492, "compas_cem.optimization.Optimizer.to_jsonstring"]], "validate_data() (compas_cem.optimization.optimizer method)": [[493, "compas_cem.optimization.Optimizer.validate_data"]], "validate_json() (compas_cem.optimization.optimizer method)": [[494, "compas_cem.optimization.Optimizer.validate_json"]], "originnodexparameter (class in compas_cem.optimization)": [[495, "compas_cem.optimization.OriginNodeXParameter"]], "tostring() (compas_cem.optimization.originnodexparameter method)": [[496, "compas_cem.optimization.OriginNodeXParameter.ToString"]], "attr_name() (compas_cem.optimization.originnodexparameter method)": [[497, "compas_cem.optimization.OriginNodeXParameter.attr_name"]], "bound_low() (compas_cem.optimization.originnodexparameter method)": [[498, "compas_cem.optimization.OriginNodeXParameter.bound_low"]], "bound_up() (compas_cem.optimization.originnodexparameter method)": [[499, "compas_cem.optimization.OriginNodeXParameter.bound_up"]], "copy() (compas_cem.optimization.originnodexparameter method)": [[500, "compas_cem.optimization.OriginNodeXParameter.copy"]], "from_data() (compas_cem.optimization.originnodexparameter class method)": [[501, "compas_cem.optimization.OriginNodeXParameter.from_data"]], "from_json() (compas_cem.optimization.originnodexparameter class method)": [[502, "compas_cem.optimization.OriginNodeXParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.originnodexparameter class method)": [[503, "compas_cem.optimization.OriginNodeXParameter.from_jsonstring"]], "key() (compas_cem.optimization.originnodexparameter method)": [[504, "compas_cem.optimization.OriginNodeXParameter.key"]], "sha256() (compas_cem.optimization.originnodexparameter method)": [[505, "compas_cem.optimization.OriginNodeXParameter.sha256"]], "start_value() (compas_cem.optimization.originnodexparameter method)": [[506, "compas_cem.optimization.OriginNodeXParameter.start_value"]], "to_data() (compas_cem.optimization.originnodexparameter method)": [[507, "compas_cem.optimization.OriginNodeXParameter.to_data"]], "to_json() (compas_cem.optimization.originnodexparameter method)": [[508, "compas_cem.optimization.OriginNodeXParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.originnodexparameter method)": [[509, "compas_cem.optimization.OriginNodeXParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.originnodexparameter method)": [[510, "compas_cem.optimization.OriginNodeXParameter.validate_data"]], "validate_json() (compas_cem.optimization.originnodexparameter method)": [[511, "compas_cem.optimization.OriginNodeXParameter.validate_json"]], "originnodeyparameter (class in compas_cem.optimization)": [[512, "compas_cem.optimization.OriginNodeYParameter"]], "tostring() (compas_cem.optimization.originnodeyparameter method)": [[513, "compas_cem.optimization.OriginNodeYParameter.ToString"]], "attr_name() (compas_cem.optimization.originnodeyparameter method)": [[514, "compas_cem.optimization.OriginNodeYParameter.attr_name"]], "bound_low() (compas_cem.optimization.originnodeyparameter method)": [[515, "compas_cem.optimization.OriginNodeYParameter.bound_low"]], "bound_up() (compas_cem.optimization.originnodeyparameter method)": [[516, "compas_cem.optimization.OriginNodeYParameter.bound_up"]], "copy() (compas_cem.optimization.originnodeyparameter method)": [[517, "compas_cem.optimization.OriginNodeYParameter.copy"]], "from_data() (compas_cem.optimization.originnodeyparameter class method)": [[518, "compas_cem.optimization.OriginNodeYParameter.from_data"]], "from_json() (compas_cem.optimization.originnodeyparameter class method)": [[519, "compas_cem.optimization.OriginNodeYParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.originnodeyparameter class method)": [[520, "compas_cem.optimization.OriginNodeYParameter.from_jsonstring"]], "key() (compas_cem.optimization.originnodeyparameter method)": [[521, "compas_cem.optimization.OriginNodeYParameter.key"]], "sha256() (compas_cem.optimization.originnodeyparameter method)": [[522, "compas_cem.optimization.OriginNodeYParameter.sha256"]], "start_value() (compas_cem.optimization.originnodeyparameter method)": [[523, "compas_cem.optimization.OriginNodeYParameter.start_value"]], "to_data() (compas_cem.optimization.originnodeyparameter method)": [[524, "compas_cem.optimization.OriginNodeYParameter.to_data"]], "to_json() (compas_cem.optimization.originnodeyparameter method)": [[525, "compas_cem.optimization.OriginNodeYParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.originnodeyparameter method)": [[526, "compas_cem.optimization.OriginNodeYParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.originnodeyparameter method)": [[527, "compas_cem.optimization.OriginNodeYParameter.validate_data"]], "validate_json() (compas_cem.optimization.originnodeyparameter method)": [[528, "compas_cem.optimization.OriginNodeYParameter.validate_json"]], "originnodezparameter (class in compas_cem.optimization)": [[529, "compas_cem.optimization.OriginNodeZParameter"]], "tostring() (compas_cem.optimization.originnodezparameter method)": [[530, "compas_cem.optimization.OriginNodeZParameter.ToString"]], "attr_name() (compas_cem.optimization.originnodezparameter method)": [[531, "compas_cem.optimization.OriginNodeZParameter.attr_name"]], "bound_low() (compas_cem.optimization.originnodezparameter method)": [[532, "compas_cem.optimization.OriginNodeZParameter.bound_low"]], "bound_up() (compas_cem.optimization.originnodezparameter method)": [[533, "compas_cem.optimization.OriginNodeZParameter.bound_up"]], "copy() (compas_cem.optimization.originnodezparameter method)": [[534, "compas_cem.optimization.OriginNodeZParameter.copy"]], "from_data() (compas_cem.optimization.originnodezparameter class method)": [[535, "compas_cem.optimization.OriginNodeZParameter.from_data"]], "from_json() (compas_cem.optimization.originnodezparameter class method)": [[536, "compas_cem.optimization.OriginNodeZParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.originnodezparameter class method)": [[537, "compas_cem.optimization.OriginNodeZParameter.from_jsonstring"]], "key() (compas_cem.optimization.originnodezparameter method)": [[538, "compas_cem.optimization.OriginNodeZParameter.key"]], "sha256() (compas_cem.optimization.originnodezparameter method)": [[539, "compas_cem.optimization.OriginNodeZParameter.sha256"]], "start_value() (compas_cem.optimization.originnodezparameter method)": [[540, "compas_cem.optimization.OriginNodeZParameter.start_value"]], "to_data() (compas_cem.optimization.originnodezparameter method)": [[541, "compas_cem.optimization.OriginNodeZParameter.to_data"]], "to_json() (compas_cem.optimization.originnodezparameter method)": [[542, "compas_cem.optimization.OriginNodeZParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.originnodezparameter method)": [[543, "compas_cem.optimization.OriginNodeZParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.originnodezparameter method)": [[544, "compas_cem.optimization.OriginNodeZParameter.validate_data"]], "validate_json() (compas_cem.optimization.originnodezparameter method)": [[545, "compas_cem.optimization.OriginNodeZParameter.validate_json"]], "planeconstraint (class in compas_cem.optimization)": [[546, "compas_cem.optimization.PlaneConstraint"]], "tostring() (compas_cem.optimization.planeconstraint method)": [[547, "compas_cem.optimization.PlaneConstraint.ToString"]], "copy() (compas_cem.optimization.planeconstraint method)": [[548, "compas_cem.optimization.PlaneConstraint.copy"]], "from_data() (compas_cem.optimization.planeconstraint class method)": [[549, "compas_cem.optimization.PlaneConstraint.from_data"]], "from_json() (compas_cem.optimization.planeconstraint class method)": [[550, "compas_cem.optimization.PlaneConstraint.from_json"]], "from_jsonstring() (compas_cem.optimization.planeconstraint class method)": [[551, "compas_cem.optimization.PlaneConstraint.from_jsonstring"]], "key() (compas_cem.optimization.planeconstraint method)": [[552, "compas_cem.optimization.PlaneConstraint.key"]], "penalty() (compas_cem.optimization.planeconstraint method)": [[553, "compas_cem.optimization.PlaneConstraint.penalty"]], "reference() (compas_cem.optimization.planeconstraint method)": [[554, "compas_cem.optimization.PlaneConstraint.reference"]], "sha256() (compas_cem.optimization.planeconstraint method)": [[555, "compas_cem.optimization.PlaneConstraint.sha256"]], "target() (compas_cem.optimization.planeconstraint method)": [[556, "compas_cem.optimization.PlaneConstraint.target"]], "to_data() (compas_cem.optimization.planeconstraint method)": [[557, "compas_cem.optimization.PlaneConstraint.to_data"]], "to_json() (compas_cem.optimization.planeconstraint method)": [[558, "compas_cem.optimization.PlaneConstraint.to_json"]], "to_jsonstring() (compas_cem.optimization.planeconstraint method)": [[559, "compas_cem.optimization.PlaneConstraint.to_jsonstring"]], "validate_data() (compas_cem.optimization.planeconstraint method)": [[560, "compas_cem.optimization.PlaneConstraint.validate_data"]], "validate_json() (compas_cem.optimization.planeconstraint method)": [[561, "compas_cem.optimization.PlaneConstraint.validate_json"]], "pointconstraint (class in compas_cem.optimization)": [[562, "compas_cem.optimization.PointConstraint"]], "tostring() (compas_cem.optimization.pointconstraint method)": [[563, "compas_cem.optimization.PointConstraint.ToString"]], "copy() (compas_cem.optimization.pointconstraint method)": [[564, "compas_cem.optimization.PointConstraint.copy"]], "from_data() (compas_cem.optimization.pointconstraint class method)": [[565, "compas_cem.optimization.PointConstraint.from_data"]], "from_json() (compas_cem.optimization.pointconstraint class method)": [[566, "compas_cem.optimization.PointConstraint.from_json"]], "from_jsonstring() (compas_cem.optimization.pointconstraint class method)": [[567, "compas_cem.optimization.PointConstraint.from_jsonstring"]], "key() (compas_cem.optimization.pointconstraint method)": [[568, "compas_cem.optimization.PointConstraint.key"]], "penalty() (compas_cem.optimization.pointconstraint method)": [[569, "compas_cem.optimization.PointConstraint.penalty"]], "reference() (compas_cem.optimization.pointconstraint method)": [[570, "compas_cem.optimization.PointConstraint.reference"]], "sha256() (compas_cem.optimization.pointconstraint method)": [[571, "compas_cem.optimization.PointConstraint.sha256"]], "target() (compas_cem.optimization.pointconstraint method)": [[572, "compas_cem.optimization.PointConstraint.target"]], "to_data() (compas_cem.optimization.pointconstraint method)": [[573, "compas_cem.optimization.PointConstraint.to_data"]], "to_json() (compas_cem.optimization.pointconstraint method)": [[574, "compas_cem.optimization.PointConstraint.to_json"]], "to_jsonstring() (compas_cem.optimization.pointconstraint method)": [[575, "compas_cem.optimization.PointConstraint.to_jsonstring"]], "validate_data() (compas_cem.optimization.pointconstraint method)": [[576, "compas_cem.optimization.PointConstraint.validate_data"]], "validate_json() (compas_cem.optimization.pointconstraint method)": [[577, "compas_cem.optimization.PointConstraint.validate_json"]], "reactionforceconstraint (class in compas_cem.optimization)": [[578, "compas_cem.optimization.ReactionForceConstraint"]], "tostring() (compas_cem.optimization.reactionforceconstraint method)": [[579, "compas_cem.optimization.ReactionForceConstraint.ToString"]], "copy() (compas_cem.optimization.reactionforceconstraint method)": [[580, "compas_cem.optimization.ReactionForceConstraint.copy"]], "from_data() (compas_cem.optimization.reactionforceconstraint class method)": [[581, "compas_cem.optimization.ReactionForceConstraint.from_data"]], "from_json() (compas_cem.optimization.reactionforceconstraint class method)": [[582, "compas_cem.optimization.ReactionForceConstraint.from_json"]], "from_jsonstring() (compas_cem.optimization.reactionforceconstraint class method)": [[583, "compas_cem.optimization.ReactionForceConstraint.from_jsonstring"]], "key() (compas_cem.optimization.reactionforceconstraint method)": [[584, "compas_cem.optimization.ReactionForceConstraint.key"]], "penalty() (compas_cem.optimization.reactionforceconstraint method)": [[585, "compas_cem.optimization.ReactionForceConstraint.penalty"]], "reference() (compas_cem.optimization.reactionforceconstraint method)": [[586, "compas_cem.optimization.ReactionForceConstraint.reference"]], "sha256() (compas_cem.optimization.reactionforceconstraint method)": [[587, "compas_cem.optimization.ReactionForceConstraint.sha256"]], "target() (compas_cem.optimization.reactionforceconstraint method)": [[588, "compas_cem.optimization.ReactionForceConstraint.target"]], "to_data() (compas_cem.optimization.reactionforceconstraint method)": [[589, "compas_cem.optimization.ReactionForceConstraint.to_data"]], "to_json() (compas_cem.optimization.reactionforceconstraint method)": [[590, "compas_cem.optimization.ReactionForceConstraint.to_json"]], "to_jsonstring() (compas_cem.optimization.reactionforceconstraint method)": [[591, "compas_cem.optimization.ReactionForceConstraint.to_jsonstring"]], "validate_data() (compas_cem.optimization.reactionforceconstraint method)": [[592, "compas_cem.optimization.ReactionForceConstraint.validate_data"]], "validate_json() (compas_cem.optimization.reactionforceconstraint method)": [[593, "compas_cem.optimization.ReactionForceConstraint.validate_json"]], "trailedgeforceconstraint (class in compas_cem.optimization)": [[594, "compas_cem.optimization.TrailEdgeForceConstraint"]], "tostring() (compas_cem.optimization.trailedgeforceconstraint method)": [[595, "compas_cem.optimization.TrailEdgeForceConstraint.ToString"]], "copy() (compas_cem.optimization.trailedgeforceconstraint method)": [[596, "compas_cem.optimization.TrailEdgeForceConstraint.copy"]], "from_data() (compas_cem.optimization.trailedgeforceconstraint class method)": [[597, "compas_cem.optimization.TrailEdgeForceConstraint.from_data"]], "from_json() (compas_cem.optimization.trailedgeforceconstraint class method)": [[598, "compas_cem.optimization.TrailEdgeForceConstraint.from_json"]], "from_jsonstring() (compas_cem.optimization.trailedgeforceconstraint class method)": [[599, "compas_cem.optimization.TrailEdgeForceConstraint.from_jsonstring"]], "key() (compas_cem.optimization.trailedgeforceconstraint method)": [[600, "compas_cem.optimization.TrailEdgeForceConstraint.key"]], "penalty() (compas_cem.optimization.trailedgeforceconstraint method)": [[601, "compas_cem.optimization.TrailEdgeForceConstraint.penalty"]], "reference() (compas_cem.optimization.trailedgeforceconstraint method)": [[602, "compas_cem.optimization.TrailEdgeForceConstraint.reference"]], "sha256() (compas_cem.optimization.trailedgeforceconstraint method)": [[603, "compas_cem.optimization.TrailEdgeForceConstraint.sha256"]], "target() (compas_cem.optimization.trailedgeforceconstraint method)": [[604, "compas_cem.optimization.TrailEdgeForceConstraint.target"]], "to_data() (compas_cem.optimization.trailedgeforceconstraint method)": [[605, "compas_cem.optimization.TrailEdgeForceConstraint.to_data"]], "to_json() (compas_cem.optimization.trailedgeforceconstraint method)": [[606, "compas_cem.optimization.TrailEdgeForceConstraint.to_json"]], "to_jsonstring() (compas_cem.optimization.trailedgeforceconstraint method)": [[607, "compas_cem.optimization.TrailEdgeForceConstraint.to_jsonstring"]], "validate_data() (compas_cem.optimization.trailedgeforceconstraint method)": [[608, "compas_cem.optimization.TrailEdgeForceConstraint.validate_data"]], "validate_json() (compas_cem.optimization.trailedgeforceconstraint method)": [[609, "compas_cem.optimization.TrailEdgeForceConstraint.validate_json"]], "trailedgeparameter (class in compas_cem.optimization)": [[610, "compas_cem.optimization.TrailEdgeParameter"]], "tostring() (compas_cem.optimization.trailedgeparameter method)": [[611, "compas_cem.optimization.TrailEdgeParameter.ToString"]], "attr_name() (compas_cem.optimization.trailedgeparameter method)": [[612, "compas_cem.optimization.TrailEdgeParameter.attr_name"]], "bound_low() (compas_cem.optimization.trailedgeparameter method)": [[613, "compas_cem.optimization.TrailEdgeParameter.bound_low"]], "bound_up() (compas_cem.optimization.trailedgeparameter method)": [[614, "compas_cem.optimization.TrailEdgeParameter.bound_up"]], "copy() (compas_cem.optimization.trailedgeparameter method)": [[615, "compas_cem.optimization.TrailEdgeParameter.copy"]], "from_data() (compas_cem.optimization.trailedgeparameter class method)": [[616, "compas_cem.optimization.TrailEdgeParameter.from_data"]], "from_json() (compas_cem.optimization.trailedgeparameter class method)": [[617, "compas_cem.optimization.TrailEdgeParameter.from_json"]], "from_jsonstring() (compas_cem.optimization.trailedgeparameter class method)": [[618, "compas_cem.optimization.TrailEdgeParameter.from_jsonstring"]], "key() (compas_cem.optimization.trailedgeparameter method)": [[619, "compas_cem.optimization.TrailEdgeParameter.key"]], "sha256() (compas_cem.optimization.trailedgeparameter method)": [[620, "compas_cem.optimization.TrailEdgeParameter.sha256"]], "start_value() (compas_cem.optimization.trailedgeparameter method)": [[621, "compas_cem.optimization.TrailEdgeParameter.start_value"]], "to_data() (compas_cem.optimization.trailedgeparameter method)": [[622, "compas_cem.optimization.TrailEdgeParameter.to_data"]], "to_json() (compas_cem.optimization.trailedgeparameter method)": [[623, "compas_cem.optimization.TrailEdgeParameter.to_json"]], "to_jsonstring() (compas_cem.optimization.trailedgeparameter method)": [[624, "compas_cem.optimization.TrailEdgeParameter.to_jsonstring"]], "validate_data() (compas_cem.optimization.trailedgeparameter method)": [[625, "compas_cem.optimization.TrailEdgeParameter.validate_data"]], "validate_json() (compas_cem.optimization.trailedgeparameter method)": [[626, "compas_cem.optimization.TrailEdgeParameter.validate_json"]], "solve_proxy() (in module compas_cem.optimization)": [[627, "compas_cem.optimization.solve_proxy"]], "formartist (class in compas_cem.plotters)": [[628, "compas_cem.plotters.FormArtist"]], "build() (compas_cem.plotters.formartist static method)": [[629, "compas_cem.plotters.FormArtist.build"]], "build_as() (compas_cem.plotters.formartist static method)": [[630, "compas_cem.plotters.FormArtist.build_as"]], "clear() (compas_cem.plotters.formartist method)": [[631, "compas_cem.plotters.FormArtist.clear"]], "clear_edges() (compas_cem.plotters.formartist method)": [[632, "compas_cem.plotters.FormArtist.clear_edges"]], "clear_nodes() (compas_cem.plotters.formartist method)": [[633, "compas_cem.plotters.FormArtist.clear_nodes"]], "draw() (compas_cem.plotters.formartist method)": [[634, "compas_cem.plotters.FormArtist.draw"]], "draw_collection() (compas_cem.plotters.formartist static method)": [[635, "compas_cem.plotters.FormArtist.draw_collection"]], "draw_edgelabels() (compas_cem.plotters.formartist method)": [[636, "compas_cem.plotters.FormArtist.draw_edgelabels"]], "draw_edges() (compas_cem.plotters.formartist method)": [[637, "compas_cem.plotters.FormArtist.draw_edges"]], "draw_loads() (compas_cem.plotters.formartist method)": [[638, "compas_cem.plotters.FormArtist.draw_loads"]], "draw_nodelabels() (compas_cem.plotters.formartist method)": [[639, "compas_cem.plotters.FormArtist.draw_nodelabels"]], "draw_nodes() (compas_cem.plotters.formartist method)": [[640, "compas_cem.plotters.FormArtist.draw_nodes"]], "draw_reactions() (compas_cem.plotters.formartist method)": [[641, "compas_cem.plotters.FormArtist.draw_reactions"]], "redraw() (compas_cem.plotters.formartist static method)": [[642, "compas_cem.plotters.FormArtist.redraw"]], "register() (compas_cem.plotters.formartist static method)": [[643, "compas_cem.plotters.FormArtist.register"]], "update_data() (compas_cem.plotters.formartist method)": [[644, "compas_cem.plotters.FormArtist.update_data"]], "viewbox() (compas_cem.plotters.formartist method)": [[645, "compas_cem.plotters.FormArtist.viewbox"]], "plotter (class in compas_cem.plotters)": [[646, "compas_cem.plotters.Plotter"]], "add() (compas_cem.plotters.plotter method)": [[647, "compas_cem.plotters.Plotter.add"]], "add_from_list() (compas_cem.plotters.plotter method)": [[648, "compas_cem.plotters.Plotter.add_from_list"]], "draw() (compas_cem.plotters.plotter method)": [[649, "compas_cem.plotters.Plotter.draw"]], "find() (compas_cem.plotters.plotter method)": [[650, "compas_cem.plotters.Plotter.find"]], "on() (compas_cem.plotters.plotter method)": [[651, "compas_cem.plotters.Plotter.on"]], "pause() (compas_cem.plotters.plotter method)": [[652, "compas_cem.plotters.Plotter.pause"]], "redraw() (compas_cem.plotters.plotter method)": [[653, "compas_cem.plotters.Plotter.redraw"]], "register_listener() (compas_cem.plotters.plotter method)": [[654, "compas_cem.plotters.Plotter.register_listener"]], "save() (compas_cem.plotters.plotter method)": [[655, "compas_cem.plotters.Plotter.save"]], "show() (compas_cem.plotters.plotter method)": [[656, "compas_cem.plotters.Plotter.show"]], "zoom_extents() (compas_cem.plotters.plotter method)": [[657, "compas_cem.plotters.Plotter.zoom_extents"]], "topologyartist (class in compas_cem.plotters)": [[658, "compas_cem.plotters.TopologyArtist"]], "build() (compas_cem.plotters.topologyartist static method)": [[659, "compas_cem.plotters.TopologyArtist.build"]], "build_as() (compas_cem.plotters.topologyartist static method)": [[660, "compas_cem.plotters.TopologyArtist.build_as"]], "clear() (compas_cem.plotters.topologyartist method)": [[661, "compas_cem.plotters.TopologyArtist.clear"]], "clear_edges() (compas_cem.plotters.topologyartist method)": [[662, "compas_cem.plotters.TopologyArtist.clear_edges"]], "clear_nodes() (compas_cem.plotters.topologyartist method)": [[663, "compas_cem.plotters.TopologyArtist.clear_nodes"]], "draw() (compas_cem.plotters.topologyartist method)": [[664, "compas_cem.plotters.TopologyArtist.draw"]], "draw_collection() (compas_cem.plotters.topologyartist static method)": [[665, "compas_cem.plotters.TopologyArtist.draw_collection"]], "draw_edgelabels() (compas_cem.plotters.topologyartist method)": [[666, "compas_cem.plotters.TopologyArtist.draw_edgelabels"]], "draw_edges() (compas_cem.plotters.topologyartist method)": [[667, "compas_cem.plotters.TopologyArtist.draw_edges"]], "draw_loads() (compas_cem.plotters.topologyartist method)": [[668, "compas_cem.plotters.TopologyArtist.draw_loads"]], "draw_nodelabels() (compas_cem.plotters.topologyartist method)": [[669, "compas_cem.plotters.TopologyArtist.draw_nodelabels"]], "draw_nodes() (compas_cem.plotters.topologyartist method)": [[670, "compas_cem.plotters.TopologyArtist.draw_nodes"]], "redraw() (compas_cem.plotters.topologyartist static method)": [[671, "compas_cem.plotters.TopologyArtist.redraw"]], "register() (compas_cem.plotters.topologyartist static method)": [[672, "compas_cem.plotters.TopologyArtist.register"]], "update_data() (compas_cem.plotters.topologyartist method)": [[673, "compas_cem.plotters.TopologyArtist.update_data"]], "viewbox() (compas_cem.plotters.topologyartist method)": [[674, "compas_cem.plotters.TopologyArtist.viewbox"]], "nodesupport (class in compas_cem.supports)": [[675, "compas_cem.supports.NodeSupport"]], "tostring() (compas_cem.supports.nodesupport method)": [[676, "compas_cem.supports.NodeSupport.ToString"]], "copy() (compas_cem.supports.nodesupport method)": [[677, "compas_cem.supports.NodeSupport.copy"]], "from_data() (compas_cem.supports.nodesupport class method)": [[678, "compas_cem.supports.NodeSupport.from_data"]], "from_json() (compas_cem.supports.nodesupport class method)": [[679, "compas_cem.supports.NodeSupport.from_json"]], "from_jsonstring() (compas_cem.supports.nodesupport class method)": [[680, "compas_cem.supports.NodeSupport.from_jsonstring"]], "from_point() (compas_cem.supports.nodesupport class method)": [[681, "compas_cem.supports.NodeSupport.from_point"]], "sha256() (compas_cem.supports.nodesupport method)": [[682, "compas_cem.supports.NodeSupport.sha256"]], "to_data() (compas_cem.supports.nodesupport method)": [[683, "compas_cem.supports.NodeSupport.to_data"]], "to_json() (compas_cem.supports.nodesupport method)": [[684, "compas_cem.supports.NodeSupport.to_json"]], "to_jsonstring() (compas_cem.supports.nodesupport method)": [[685, "compas_cem.supports.NodeSupport.to_jsonstring"]], "validate_data() (compas_cem.supports.nodesupport method)": [[686, "compas_cem.supports.NodeSupport.validate_data"]], "validate_json() (compas_cem.supports.nodesupport method)": [[687, "compas_cem.supports.NodeSupport.validate_json"]]}})